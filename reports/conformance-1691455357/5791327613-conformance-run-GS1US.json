{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c6dc1e5a-b453-4171-8764-e686052816c0",
        "name": "Clear Cache",
        "item": [
          {
            "id": "679258e0-5d1c-44ab-b0e0-f3c013c1534d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c7bbea7f-7450-4b7a-bc29-a8e94a65a500",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1e74eed2-d880-49d4-b280-6cc3230bd599"
                }
              }
            ]
          },
          {
            "id": "28a9db2b-dc55-4883-b834-5f8dba389737",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d9e1d4a6-4b72-42cd-b3fd-7a172c3950c8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4e5730ad-0074-484e-8602-e61a1819d4ad"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "41d6ed46-9204-4019-8360-19880f0740a5",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "01133e6c-b093-4a96-bfc9-6a09b2795beb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0feb88c2-5e51-4555-b569-7c897f48dc62",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc7658d2-87ad-46ef-aeda-12c4cf3c7578",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6e146333-5497-4c66-a824-95a3e952c812"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4ffe3477-acf8-4d3f-9011-0b44c62b7a0e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9de8586e-64c8-46dc-b168-a548515390b2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cd5708b0-fd51-48e2-8bd4-90a5d978949e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "da5d091b-dcf1-4338-aa06-8237508d0e08"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c2807f29-3371-42c4-8dc8-74f4b9f8501e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "dd7f8b91-4184-4cb0-aba0-cd5ab4fdf281"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "95bc0075-7310-4921-a686-ec25758e0d58",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "827e0bd0-ef7c-44b2-a4c6-989df22df632"
            }
          }
        ]
      },
      {
        "id": "6b1e6c3c-18b5-4726-ac48-2af1e1a9addd",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "4f4f6a2e-0080-4ded-b148-28513991f46c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "386d1980-33be-46d4-bdbc-48ece79bcfe9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "79664d04-9d6d-4d51-9ff9-58a562694d85",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "759eeeca-9d60-42ad-ab0a-134506ba80e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "22eb2ca5-e377-4405-b4c1-7dba329e2785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff7f16ac-9ea2-40ae-8253-53e7230af4bf",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4755ca0-516a-4268-a391-b3da369a8aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9738e6af-08ae-47df-9ed7-772d792d7824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de6d6b1-ea4b-468b-b603-ceafd7c08c14",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf8d9bd0-757d-4137-8ec7-84d52e4690b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6939d19c-6ef3-4e88-8469-a45d4756ac89"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5830e06d-fa79-477a-8bfa-153c0c76af3c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e332c0e1-0727-42f0-8905-31cbc1209679",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f6e131-c5bd-4e95-9ff0-fcdefc6d3c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "61eb7d98-d354-4e5e-a8d1-1346db1125a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e35572f-953d-49de-b6a9-7b6dd8126421",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f149f69a-25de-43f6-9b16-f7fb1b5a3f2a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "40b5bd40-d4b6-4dcb-9b82-8fe9309671f1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "04f1de49-cc42-489d-801e-02b4abcd9a5a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dadbe623-9427-4aaa-8c96-1a47c5706a72",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "32441083-d0a1-4944-a5dd-d9fece1e9205"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "35ea4105-4d07-4202-be37-fbda6d22124e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "a4ba85fe-bd74-4058-8854-2631aaad78f9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "708fb55c-92c4-4d45-bbc3-16e7ffaa1739",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dfeaa29b-d4e1-498e-b802-7cbfad9fc0f2"
            }
          }
        ]
      },
      {
        "id": "6a56d70a-dd6a-4d97-9b37-d29ffdc3d90f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "ad2da757-955e-4b30-a2a9-502e5b5563ad",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d3b7c729-d85d-41d8-abdf-976e768fd187",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ac9167c6-b1fa-4340-83a1-87b82f26c5b8",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0ebf0b-98bd-464e-880f-bae7bbed5082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "395d26d0-fa87-4e0c-9f70-842cbf9b113b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "609186c0-07cf-4645-a722-a1b402b507b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd05b1a0-7c20-4221-8aae-94111d7cfc85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e131506-5c8b-4462-9702-e1260fa4f1e4",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e394a36-aaf5-4004-ac4d-c61d4fc77589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30051929-f94b-4952-bfa0-0ee37277b5a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22b7af14-2d9f-4445-a39c-c1abd1a4066f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e657f4fa-11e4-4e0b-93e5-0ea4fcde21c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b45f0ca6-5f74-40de-85b2-ee53c4fa31d9",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "743d33da-84ae-4293-91ed-d4d1f76d267f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c63a8ff3-8067-406e-ae12-797446d5f97f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42218cd0-57cd-420f-9b47-a15bdeca9de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c10b81d6-8178-45cc-bf66-9974bb21bd2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "015a7560-0f5e-43b8-a26b-c51307c230f6",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff6f6ed-f161-4f16-bae6-f9ad1c13a969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb482c9f-f50c-4af3-9ca3-a991fc9a993b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558eaf65-e3ff-4be9-8ba3-0f4510c9a43f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31aafa6b-1fa2-4d31-8fd7-3d7ae9438486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2983094-98d0-40bb-b324-6b2712dd08cc",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c0d1f1e-f6e4-489d-bbb5-c9f724c0a519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cefd391e-9be4-4cc4-bd42-524e50d905c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab74078f-1d49-49f6-988d-0a18e03ccdf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac65d214-2779-4da8-a52e-f5f9f435e5dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f35047a-7c45-4a16-8e1f-db5dafb6517f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dfb8a65-6cf6-47cc-b357-0d723b3ec1c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb4f226d-6ef0-49a0-bb3a-52bbcac2023c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e82a49-0d13-48cc-82de-b4c29e857777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f96af5a5-8924-4da0-95f7-36a7eab1b7e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e88f79-decd-43ef-b95e-268704995f29",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bff7426-591f-49ec-81ad-ea92f31e33a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "638589d0-99d6-4537-9296-4a20b75eaede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c8a440c-c024-4a0d-86fd-75c00597e962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0dae9c13-0105-4efd-85f1-df42631f6d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a48254e-b0f9-4432-a50c-0eb37d1dc959",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4d0943c-74d2-4e80-92d3-5881684125e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0793b7a-9944-4aca-b824-2b7aa07f394f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f165f5ea-e541-4a9d-91bd-3b5c4a07e05b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28ee29fd-d01f-4a81-8a27-ae9284e5b7c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bdf9417-063c-4d0a-8824-6a2e6015ddaa",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be840ca-da0d-4c22-82ef-2d668e392d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4663fe73-d477-4ccb-b4f8-1b248d9a3e81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d8f37c3-3e56-4c29-ad58-d8ae06ee9bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e1b8263-06ae-4ad7-b059-eda4f9f121e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef9c42ca-368a-4c11-96e4-fb76ce2a29ef",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4cb3d4b-38d0-4ee2-aa9f-b9d3ff9f5a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aafe98b-374d-4bca-b4b0-6f9bc24d5ef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "661e863f-ca39-4d08-9920-a743fe66ea37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b0a24d7-69b4-46e4-bbe0-a63184ff20b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39dc1d67-4b4e-4cb0-9b5f-81d345797b14",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baf05924-79b4-4f0e-a1a0-cf54f7997eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebfab486-6b01-4727-b33a-7bd645e71288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc8991f-10ea-427e-a16e-c84841f3395f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c6b7570d-984d-47bf-a39a-d46c4991050f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff377b4a-3d04-489f-b8df-d7eaf68fb7ed",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28060f98-1f75-4483-89ff-6fef8457b7a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9fa86c1-37a5-4065-a335-a48c8f7e504e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10922eba-9923-4d8e-89cb-16b48009996d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb76cb11-64d4-453f-8d3b-e09fd193f5f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d23534-b6f8-431b-9bb6-2acf43e662c4",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "012a2581-a4a9-4cba-88c1-2dd912197de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14433270-6715-4daa-b067-acd6f3608079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c887351-e47d-43bf-832d-cc9d2d143a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ab83b97-9384-4a1c-853d-4599bc6bfc2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c14019-c1ef-4d45-8682-b4b0066064b7",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f84503d-818c-43d3-9a40-9a4c2c08c033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb612c67-c6ea-4104-b4f1-839d17f15289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "212cd546-8a49-4885-a8ea-4d7cbb711aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4d1d64a-e99e-44fd-ad1b-3088dba6dc13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aedb3eb-9043-4b80-94d9-35b6bacec032",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba271039-0556-4dc3-a210-8997ea0a1577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70d446a4-bcf3-409f-b01d-c54370ea2176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdb2dd3b-491a-49bf-972d-1bc596f6c6dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b89cd1c-3030-472b-b7d9-6d54d2d36aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a5a03f5-ef09-4978-9c7f-48d2cf2a4093",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d380aab2-dc06-4d37-bed8-ea7437b0b85f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca17f6db-5045-4e99-9ffc-6214d24629fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceeedfbd-7529-4f4c-9417-b023add239c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d70f806-ce07-47ec-92a6-03fd549ed36a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a10340-6993-4bfc-aa17-4952769d7b14",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dbd4be5-7362-4eec-83ac-8c0a7ca7890a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c64b77eb-e200-4476-94fb-a8978e8b9b66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51536303-e4ac-47b7-8795-93c9378e3589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb497ddc-0a4b-4751-977b-de91637fe81e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7caba9ee-72ff-46e2-98ac-25b7ba612cea",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a2bbdc2-49f1-4e3d-91ec-c4d9e0d79207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00ea9058-0ecd-40d3-9be2-e95d77bb37a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d9c16a-4cdd-4980-ad2f-3955e11f4c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0528174e-68fe-4938-8841-353b12f068e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a7aca79-533d-4c94-b370-bdbbf29d61fc",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c33f103-8bb1-4cc3-a98e-76b4459952e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b89ec56b-785f-4879-8103-c961f6d255d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c503a197-6c12-4fd5-9487-186850bec18e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "37dc2089-9d38-4da6-a626-ca7dcd7b6e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9fbdc91-819e-47aa-972e-592804b41d77",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad67c955-9bb1-4f3e-b48a-c060b72fc41b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d50a6f9-21bc-49e1-9f84-f29e23c4eb1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1000b8b1-e3bf-4d8d-a03b-f5596dc5bea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b131b063-7a7f-432c-a1ae-260e0a0f379b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5077d378-7ed8-4bc0-90cb-d4d275209253",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf299d4-fb3e-4ca2-83f6-d6d75ea72690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82d46956-7b47-4b4f-835d-f1fc862babdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f81ec465-a53c-45d1-942a-836844761cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6ff4f02-2428-4d7d-9dc8-c3dac97e786c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1fa6eed-129b-44a0-957b-f22839254acc",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf61681-2534-49c6-a7ec-40fff246b4dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd15e500-7092-400f-a742-3ab32c26d77a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "942f7d96-16f9-4665-a460-7b15515e68ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "87a01820-49d2-4f1a-a401-90882c8a4862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e582f8-d678-4d41-93d8-b6066e9c111c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "086d0b3a-e1bb-4a6e-8de1-e671e44a3f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd5f21f5-e553-4d5f-b5d6-2ed3336a784f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82409654-e93d-4aa1-aec2-563506fcf739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b374c925-d080-46a6-a0e2-c85cc87bf507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b13108ec-b207-441f-a462-b803ade899e3",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75609666-a75f-4cb3-93df-603c530af880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "600024e5-4ba1-4e59-bb49-92bdfb4eb9b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0bf01a-d119-409d-8957-622e8cea57ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c3903ba-8302-486b-a2f5-f0940a4d258b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c035675-d947-45e9-bad2-b36b1dc060dd",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ff6e66-b3c4-452f-a73d-05a73f9a8faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2ac793a-ac92-463d-96a1-8749b72a2eb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f281c69-f800-4d1b-8b32-8e0120bf4d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2eba052-a772-4fda-8090-b91b4b1e5f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4387fc75-a197-4b80-8a1f-9446ad849388",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3512c10b-d258-481d-b93b-5e2bc1863377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ed935fb-7989-4aec-bf4b-aeca3ed6d027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f77786f-0039-4e45-8f1a-f8f1c76c85b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f5a830e-f31b-428f-b291-5dedd03d70ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a12fe579-2ff6-4f50-bffc-a035e7bdc66f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b00e321-ae8c-4db9-9f6c-4eea80d4bb2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38c4098a-dcc1-4011-b441-beaad20ee5c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "350fd12c-8819-4880-8136-4b542ddae852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5c4b650-cfa2-4d1c-9ba6-d139b27a4000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44dc8fb6-5720-4e88-a6ba-c093bba5f523",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ada9345-ea3c-4682-9a12-733186ce9c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "548b386b-0ddf-4d72-b341-333c6196f575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "749b4d4e-819c-42cd-bd06-9c2ef006a887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1aca30b-5178-46f6-9351-0d97090f4da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c07db9-4692-4334-a4d4-92b52a11419f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06dfc73c-b087-4de8-a5cc-9646d394e22f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4c71911-f55d-4be7-824b-939c748fad41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d66f01b4-b84a-43bd-a6d3-d8b26c566521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d47e365-3a07-47ce-96c3-7a8eb80dc27b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2763ba72-a877-4f8c-9bd1-b1d605394fa8",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09afb5d4-633a-43be-bcb0-64a2d2213e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "087140eb-d1ca-4c20-b752-d82c2e31a22b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75163b91-989e-4942-9db8-8a013dc5aefd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "bca07916-26b9-4983-95e8-cd1765e16590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c1bc58b-4e39-4425-b332-e960a5cf8022",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc15014e-e02b-4cf4-ab5b-fba296e8fec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40305012-3641-4850-8523-83688d915de7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14fd8639-0e5d-4358-8f23-8157e41d1d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae09b29f-c6fd-4bc5-af33-d4997d80051e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de6a0cd5-1319-4d4e-95dc-f77d1bb959e0",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4429765d-6c28-4c6a-96d1-be3046ab06e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9465bda0-9dd3-4867-91bd-16941db6a737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a43a38db-65b6-41c9-a1f7-8c7b0fefc1f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb89fc29-19db-423a-ba2d-b0eff17be55f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65ede07a-3cb0-4557-b975-5767d18c01e3",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e8bc34-e7c3-488a-a40e-78e6abe5ac6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ab1dc6f-6c2b-4c52-b441-5fd59a1edaf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a70add5c-6d46-428c-af69-9f4e9dd1282c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "53a43d38-e82c-47ff-971c-254030c54656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99449eaa-fb25-403d-8373-7bf392dde90d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f321d7-d4b5-41a8-b8fe-cfed469a8ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebdd6fa1-dfc6-4b82-84f3-dba4a847f3c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2f1a714-78db-4e9e-939f-ad95330f71ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4058986b-607b-4edf-842b-436f20e7912e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ea62d8-bfd1-4c08-8aed-4fbb863f9856",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a269f3f3-7e49-416a-b107-0730189481d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bd2c1d6-b728-4fd6-9e1a-bde696e807fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d332cc09-a89c-48fd-b57e-9b1fa8d5181e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "bb30e011-b842-4864-b388-91d895d4db4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e76e6235-8eb6-42b6-898b-b8d203e6ceaf",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c96ee97-e8f0-4348-adc7-28139b7d6e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1af05dcf-bed8-47e3-91e1-5928758adb56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc0f57a-096a-489b-9b4f-17c036a94a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fb4218f8-818d-493f-957e-b10d7c88c5e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8caf7a-65df-4e43-a8ac-c4422d1d9e0a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c954d44-2a2a-4308-9775-043fea83138d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e22e6522-4537-4cb5-9901-593e37b52f63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faedd353-1d06-4d23-ae47-0e143a76da8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6de2f645-924e-4746-a034-944b976b0bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "786de2b0-c7cb-4206-b7c8-6e6d15426d64",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "496d4d31-5b3a-4f9f-bcc0-8ed762f0fe0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e13c500e-c8db-450d-ab7c-f7e01e4c330a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c85f8e-3260-4f86-ad66-2fa6aaca0cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "554fc8b8-ca90-40fa-9ab7-530e92a0bc21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fe99931-505f-43eb-9184-ad76cbf84180",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e5317f2-8b61-4038-b3b1-774eb37b7430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cbcaed4-d9d3-4b41-a635-d60f9fff43dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22234636-7ac3-443a-b237-51f040f74e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "07064d07-50bf-4004-b8b9-a0a6e26ba157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10879d0f-fa82-4dea-aa28-2129e86268b9",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2c4657-2f13-4bb5-8d6d-f41172f0e0e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39bbefb0-11f1-4dc9-a80e-d025445cbc65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "393e1b11-cd15-4128-b35b-99e1a02b9b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "16a40c36-8d0b-4746-a9ea-4cb72e36d729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd9234a5-a4fb-475b-a0a5-06a8ce69ef5d",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee6c43e-b6ab-4ba2-aa1e-bd7973210dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60f19fe7-e03c-46b2-baed-ff462908495d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24a82861-b222-4492-8f8c-9b79afdff764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8bf764ea-6e68-4b7b-9b2a-ea4e3bfbd410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e58364a-9609-42ab-b806-063379836e3c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "463a63fb-ccc8-4302-9c6d-d0a0c7c2a3a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b30824f-3f67-4e5a-b51c-d4f650955a30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "594e006a-4297-41ac-bdde-8d9f770b4fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c6be79b9-232b-4c64-bb51-41fe8a7cca8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e255e051-758d-4cce-8609-e20427336c0d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d947a15c-6494-40be-bfa1-23e21c7509aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb89a58e-0a09-40a7-b344-268b832ee977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "793a30d5-03df-4965-867f-7b5c5c0545c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "cde39377-0d6b-4d15-a87c-5b7d5feb37fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b22fd2-ed79-40dc-b3fb-608565806421",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6964654-e88b-40d2-8c61-0b0cf2bc6ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f353cf25-044e-4ced-a41d-10da5925b1de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65d9c1a-190a-46ad-b852-ddf3192c942d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "3df2a4b9-dff0-48ee-a5e2-8a297e88ceaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f8b89f-f6b3-466f-a281-c4d6218a347e",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1934476-b5b0-4f2f-b737-5b5471e36918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f53431be-bcaa-4131-abe8-c955e26cee9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f5d7a37-c2af-4d1c-896d-d6ec554a3411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f99b0f97-cce5-4c52-ab6d-46a468a6f047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "023ba039-ff2d-4194-aa65-4729cf9a2a85",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de02fa65-e865-4e9b-baba-dadf2d9e9bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3670193b-1d3c-4f1a-ab4a-ece80d4b336d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53bd7223-cd30-43d2-ba3b-58c7e78cd2d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "70ed3cdf-1168-43fc-ac84-69f9746cac8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f11f9b-1317-443d-bb15-08a5351a129a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11406a34-db2b-4d3e-92dc-eaea80e1d802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33f9fa1c-59ea-43c3-957d-919f4fff3d1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c4402bf-0831-41a2-919f-9f3c60831356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea343e70-18ca-4eaf-b515-7f9bc1ca4225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09723473-a9fd-48fd-b2c9-bb15907dde28",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db578a33-6632-475e-87e9-721440de5ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e2ad8e2-2faa-4227-a183-8b71c9bb46ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b64ec58e-b405-4bab-94c0-f8b107330d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3511b3ed-9049-4252-9b3b-353d797e25d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f800eb-a0bc-48a3-aea7-4183cff370ce",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93fd4b16-0838-4de9-8e8a-59db19e209e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "799339ab-f770-4fc4-9e1d-53f1dd3afec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74bb7228-6148-4ae0-9ed7-77fd53f881da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e14ac90c-b96a-464a-970f-db119a93406b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e473d468-948c-4e41-aa9e-97ac36ee8515",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e97ee666-9756-40ea-b734-de488b8d0b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a9a724a-1796-4436-b30f-aa6916964375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c48798-7148-458a-98d1-d0df65b6913e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eb5efdb2-9752-4a9f-b9e2-755efb46b92f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97be5949-1bea-4c62-8d58-ad6e7876973d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14225aa5-6f1a-4c29-b92d-bc7174689d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73774d36-48e4-42ab-9d0d-46a816d03c0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6de62f56-1292-42be-922e-5d29e370e34c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "985ab733-15e4-49a2-9ef9-66563977d8bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "097cf982-e11a-47b9-ad6c-ef41359597fb",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a120d6f1-02dc-4d20-a0ab-bed832f7edd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8a89427-fb4b-4ab7-a275-ba8290439a02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67885941-af10-4c9c-8e13-0e7739ab5b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d6a4856-9d22-44fd-816d-e8e64f8e5b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd3d6c3-1e67-4936-81b9-858f718a8e18",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "836ea7f8-0725-4b79-a40b-27f2bfcd4611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "006a2beb-547c-47b2-9cd9-1e160167e28d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b3279c-1573-4ec3-89fc-5fc40c036ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f4e109b-d55b-4da1-abba-b55c29cb276e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b9ff9b8-6fa6-41a4-88e4-1373808ccb08",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff4a345-3e22-4bea-ad77-a259cfba6bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc4b9a4a-b711-403b-a70d-27560d9dc2c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "284551fb-9806-4c78-8c63-731e622c4ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7126f1a0-35b9-480d-8375-ba07d4005aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "686572ad-579e-4ca5-b972-37e5b6f3db66",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71595664-8988-473d-bb38-6d53a843e646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0af2ff5-c03f-421f-ab19-6a106a4611b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9305ef4b-e371-4ee0-b34f-4427f84614a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1aecc897-6a97-4059-838c-410aac070b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6326c755-a2ec-4fae-ac77-b799aebc65e9",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4036f4f-4af5-442b-8847-bd9715b674cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "999a4e88-2da2-4f6a-acae-7d0814c86ae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58acf352-ae61-415d-b70b-a7a1f992ab47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "c6c0c818-dc6d-4e1a-9cbb-857da0a4935c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c45ef053-a466-443b-8143-d8614ce4d53a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00cf782d-f3bc-4866-9858-608377e3d525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67481dcd-75c1-472c-ad28-182b43e6afb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1564724a-a122-413b-8511-b91d5c7aa734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "476f07d4-0d63-45a0-b15f-294d3aa5289a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8691f869-16bf-4481-9f28-4463ccebdd7d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9277e80f-d3c5-4044-8ac5-249b159af304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4ab0015-d413-450d-9d8a-f55d398bce0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb6dc1d-3b03-4fa3-9675-75a862fec566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc6fd214-7153-4960-8922-e23308050c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41d7812-4937-43eb-96b4-f3145de4a60b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3459fa9-ff32-46ac-9e11-f792726dc1c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2b5177a-6ff2-4987-9dca-15da7628b565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2122687-d14e-4537-9d43-71ba04590aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b481fdc-ccec-4cef-ba25-6a2aa6c5cfaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef65a5a6-2328-4177-af58-a00f2bb2624d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ec167b-0800-4274-bf04-e6b1205319e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9053cb75-820a-4a42-8682-57753f5ca388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "125a1dee-d3c8-44b0-8c60-c07368a05d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f59c3249-2636-4de1-bf03-6e2e25a7ae5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "323b15f1-22c4-47bf-afab-3497e6d99e51",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32ebb834-1576-45ab-b3d2-1139bcdf30f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6e407f4-2bc4-49ce-9ac4-c7bedfa0b3ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a2616c1-d661-4437-818d-7586ba95268f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "634b226d-ba99-4eee-a99c-333b522f2d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df69749f-ebca-486b-beb4-e5ec774551e8",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66509ed9-c656-4830-8a13-08a9d422d480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e24dce6-e234-4c4c-acc6-088f892053c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "446254ec-24ae-4444-9760-00da733f7ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7aafd1e4-9297-4e18-adb6-aa20ee73f00b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64cdf14e-b9f8-4411-8948-73dae27dd8e2",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ec189e2-1180-41f6-88e5-0543689149be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfa1023a-d594-4853-ab38-be9d80cafae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb4b9eb8-b0d9-4d76-9c9e-e533279c2088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "718c1710-34e1-4086-beb5-ef8d798c6bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52186fe3-0acc-461b-80e3-7614b9183e09",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b6321f-3147-4e8f-97ca-86c40aaf8bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eef1ef5-6ecc-4c03-91ae-b88789732cc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6ad351-b919-4838-b2cb-3b59ad765a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e17edf74-186a-45da-9e8a-487cff8f7a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1048165b-6617-4e29-b72a-70e9c2e34f73",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cfb2d00-79fb-46e7-928a-8ca7fee26992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bafb65fa-e2a0-4ca9-84dc-6000f3847e39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a9eb82-a41f-4120-914d-87e0da3d1e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2ba56ad-6593-4dc6-8f8c-05aa8ccff2d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "372eca8f-c232-4b7b-965d-4e06ec932d0a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80aec78f-e5be-42c9-a063-4aae8a998bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2dcd2c9-22bb-4c95-a343-35b704a32771"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e107a3-64a3-464a-8f71-1931124ad756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "58f5f396-d4d6-457f-bd85-1024534536bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35ea1bf6-f5ea-4f57-b330-ef8ab69b7cbf",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73b610a0-8841-4c72-8ff1-ae7c6708e6bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "024837e3-401f-45a9-8ea7-f1a8e5953328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77af7987-e5db-498d-be68-dc61593446aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d73de82b-3f34-4776-a76d-6ac325e87743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "963298bf-bba4-4db4-8d6a-96f6b6ae9dd1",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e43c397-d3c7-4dad-b8b1-aca61b4d9d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9986023-6063-4f6d-92f0-a65762703816"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d869c9-abec-46f5-bd0a-75dedad21a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c75413f7-8fd3-49f3-8a79-a7001b6ad79b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7072603f-e152-4f87-97da-f2d5012ec6ff",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51c8202-cee8-4d46-aaea-53b4bfbc08ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "243f3e47-a192-4e3d-8568-7b5be78d80ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "151246b7-736d-4479-9425-c37aa723556e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f077ded4-e5e5-4b86-be14-30a7fa275592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a414d6-0771-49d1-9b94-e63a1f02c7ea",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b63e338-0bea-4e54-bfbc-886590e656b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef1956f5-43ea-4d0f-9543-c34042281f8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef4143b-256d-43d3-b118-28248738c413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d7eb993-d329-4426-9c38-c03606dc2c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a358fdcd-9817-4958-9ef2-55f467eeafbb",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a0361e2-ca4c-4aee-be87-afc19b7541a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0b6068e-d1a3-4702-b788-f523d35f2b0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12d40092-f53a-42be-bc4c-0303a964bc7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f226436-6cbb-470f-b92c-c711b46b895a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "726f859b-e821-43dd-b6fc-59a9701405bc",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49842784-1469-493a-b512-09b391f26173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0be042c8-a21d-422c-8aed-5a3d89e89579"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae9e4402-cb6c-4492-95d0-8da30b08a3d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba34b2a5-c8b2-4adf-9198-62dfd4769e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449ce243-734d-459d-b197-fc293ca3bbd9",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2628b0e-90a0-49c1-987a-140c2ca936b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc4681eb-4021-4e0f-9cb9-9b7d706b3fe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d341db19-7770-4717-8735-1f3e872a8c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "58bc705c-1d1f-43ac-83ac-41219788e8cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e4584b1-138d-4461-a7be-716d20ff9a1a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51c05fd-b1a6-49fd-9df0-2f70b26b8db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b0ba334-436b-437d-990f-e62e987fa10f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50882c8e-3984-4ddd-944b-1c844ceab17c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1d87f61c-e5f3-432f-b85b-06c142dd4ca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a541cc3-b670-4ad4-ad39-9a5ee92ebddd",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53cc0a45-b1ce-4085-a42c-b2ec591a4376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f9fc0c8-4f55-4c49-8641-82258027e948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f0b995-4da2-4332-a6a7-1f6feb3cafd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "137dc82d-555d-47f5-9ee4-6d0dac07e8b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d0a3b5-9e9e-4e83-aaa1-1f20a2f4df02",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ef3244-76de-45b1-a835-f84075f09313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05426f14-c353-4eaf-a24a-cc3474ca0071"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2960dd3b-a7c5-4e45-96d5-996d0b299743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "68df2ccb-9661-4835-a81f-9d2fdff70233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6cad5f0-137a-4922-8880-3b13880caa0f",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "943d68af-0ecd-48b9-97b4-4950cc965d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a424663d-823b-4fd9-91e1-a940595cd39b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed56a0e4-0eb0-4060-b248-a6becc4b179d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "baa32dc8-54a4-43a6-908c-cbea703f018f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d682dd93-3882-4b36-9d52-6ad595f3552a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f27a7b-0534-460c-8901-cad7af700461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10b454cd-3f08-436a-9c85-9cd73bd5cff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a4f715f-9abd-4bf1-8d59-766e866b1e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8fdd3ed-e7ef-47d6-9743-ac4e7ac76cb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e94829ba-ccc0-4533-bc22-d73c5c8302d7",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "013c8271-4ac6-4452-a1ae-7724dd89512b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e61a344-2707-4d29-9cc2-677704d96e2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aecbc333-0f6f-4327-bc7a-bbeccfe60bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1dfb664d-efe3-4619-90da-39d0658fd4aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec1d3a2-7fdb-45e4-8f39-915ea2bf5c3d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a44784e7-8f89-4e3c-b404-9f39559f7539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07c382a9-5688-4980-ac77-8f4e18048185"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ed9c8c-7a90-496e-8083-307c2f567ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a3970e20-4ae1-4ee0-94c6-6aeee964b374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4968ae39-16ca-4e2c-b0c9-bbce323b282d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b32b49c-223b-42e8-bc26-815f44e11cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c89afee9-f535-4c2a-ac33-7953a075d4eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a66dad1-e81d-40d4-8eb3-e3130f5b9f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4582bf82-c2f3-41f7-8cd5-c61b7d533e8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d100a198-9bf6-4272-9a40-6cacf054d602",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "632affc6-c1ce-4bc3-a429-792b490b5545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "433e636b-c17a-4a54-a246-79cbeae5170d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12639165-ce91-44eb-80ac-cb61e18185ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3130e165-173f-4275-9492-c97ec6dc5ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f79aed-cdbd-42bd-abfa-ecfe54bcfdd4",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c574c6-e926-4080-814e-f47ab8a622f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dcf8548-7a65-4148-be67-b7853aa64700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2155e21d-956c-43dd-aa2d-42b75412fb4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "607ee2b8-cda8-473d-aa5a-f6fda049fdc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "879a8f7d-b250-44ac-afb2-85f977511412",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7e11907-c224-48a7-acf5-2895f636d9f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee709861-74d3-4bb7-8484-5eac19e3f886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9726cbd5-38d5-4854-8089-251adccfc0c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e343948-dc33-4c61-af2c-a31013593b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ef453f-9c30-4aba-9523-907c68aae296",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83452f56-088f-4e09-a607-699ef8dfa9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3ff893d-61db-4afb-9033-7c67183d5456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4070d11d-279e-4080-8e0c-87f741fa4791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "842e80f3-e620-4e7a-857a-42b68b1f1042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea0666b-01be-4a59-ab18-8632908173d6",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b993e1b9-0318-40be-90a3-3bb36a532063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0102de3-0c7c-45b3-9303-cfccb9313ea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "560fafcd-bd50-4fcd-a236-4a6b1ba5d58b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8902525c-4ca8-4fa1-be65-8519c8966cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7f916c-f3d0-4b44-9002-3fdba23c9feb",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8449b132-9745-43ec-aa40-ecfb6c8c21b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "708c98aa-c6f0-4ec3-aba2-bacb7815233e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1645183-3617-4e5d-9a11-01dc03cf434b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "593ea7f7-842e-4e01-bc99-5c98db0d309d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d42a493d-0c10-4bb9-b22c-09f425697687",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "107f8483-577b-4d23-af4b-7107947a5e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f931202-ea9d-44ba-91b9-8ea8bc5d6ba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d6e4e4-51f5-4a5f-b192-4b479fff1736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "33de7294-2a82-483f-9ebd-9e1dc86501e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1d5dfe-950b-4f1d-b707-1a3d13db10f2",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddda6f1c-8164-4e33-857c-d565b27a4f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d517e491-f057-4d9d-b07c-48a80706401c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "392b1589-4c34-4a42-b684-533f67cf1ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0792463f-f945-4c17-85b2-5147704fbad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3928d7fc-1146-4177-bb3d-abe48f6c9d66",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a68ca92b-06e6-493e-a3c4-64c2983a1f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d8c1caf-b8f0-420e-ae5b-c66b1a13e1dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fe74ec7-24a3-4bf8-84aa-1917e34df3a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9bd88f0-c3d0-45b6-abf5-e10a3c8da111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee830b0a-4cd5-4def-8c8d-453f21276477",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e0f12aa-4cd8-448c-9210-49dcfe456ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a73ebab1-a67f-488d-9599-3cfea43634c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b58dd7e7-1fe3-4fbd-ade9-3d45a72d062d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9ec09fd-a229-4c26-8ffd-13c1ee5c72a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4abba82d-1e00-4acb-9332-5ec31c082f8f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c45142b3-2b8f-420c-87c4-ce0ffc758c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2c2e0e05-bd1a-4061-9f4a-234eb929ba88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b5d53d-2355-4bd5-a2c8-20c900f1635c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e7a3735-e440-413d-8d36-596a417d0553"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "531e45f8-bfcd-47e5-be5a-7808b0168d73",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "558ba863-9d44-47d6-9162-feda2027b364",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2478ca37-d3cf-4993-b585-386b6ad1126f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d1f57657-4ad2-4a2c-8e6a-81f396e67a96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9db6541-16fe-4965-ba09-b40d1c82c0dd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba60e6dd-aa5f-42d3-bb02-d67ca272860f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f64ee9d6-8811-44d3-8175-4b8ed044100e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "82c0adac-4653-41ff-959c-c6059dfeab6a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "57a5b4fd-363e-4767-ba08-7de75eba65d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "259d682b-c4f6-4d5a-b67c-9e695b770d3a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0c1cfa75-ece9-4686-8733-51c3636d327e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e031aa31-16f1-4fb7-8e7e-0683ee34180c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "77494ba8-f9a4-4804-afa0-f8e3b6e13d5a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b8f842f0-6fa4-4a20-9ee3-bf30f17ddb73"
                }
              }
            ]
          },
          {
            "id": "4d600176-5f45-408d-9b95-1dbe2c01d0a9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7c105562-f476-428f-aa88-fe86fd82b366",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e12e287-9b59-49e1-a6e5-7807c7c97c4c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dc6b598d-68de-4ef8-ad0f-a9ac1cc355cc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e646296-2e20-48e5-95c7-932771e77d18",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "767cee8b-b31f-4554-a2cf-86451aa6e708"
                    }
                  }
                ]
              },
              {
                "id": "579e96cf-9b32-41fc-a8d6-721891e9c571",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "45af3728-1b75-4a41-93e3-4f7e6e02bdb5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ad6ea849-fccd-4297-b2e4-39782e367e3e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b6f898be-0b00-4d25-a0c7-ee1342a4090b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "722b03f0-6ba2-4f8d-ac27-25ee6ff1f488"
                    }
                  }
                ]
              },
              {
                "id": "a7179d62-a436-4b64-9d2e-eba5b09904a1",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0037747-c2be-4edc-b3fa-9b44c22a66ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5983ee64-dd64-448b-bf64-5de728a1534b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "52926159-06bc-4fb7-876f-0458606da0b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6ab55b72-1b7f-49f2-9c2a-3b9e0e920cac"
                    }
                  }
                ]
              },
              {
                "id": "6c615ea1-02fa-431e-9e4f-39eda29b468f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "43884453-d1da-4804-aae2-0d4560920142",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "341c777d-16f2-4cc5-af9a-4599a30ea651"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eae1c702-eda5-428f-a600-ac75262a1941",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "99de0862-1f6e-4bd6-b71e-72a7e0114dea"
                    }
                  }
                ]
              },
              {
                "id": "63b81beb-abc9-4cde-abdb-4c6b12f42cf7",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c22ac797-0377-4aea-8e92-d88d06338456",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "91a7520c-246e-4156-8f88-ffa90bc219a8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0780fbb0-cd4e-432f-bc66-c9d15b4537ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e4c9821d-a688-48e8-a2d6-3597e3718f12"
                    }
                  }
                ]
              },
              {
                "id": "71c71f91-099a-4198-b135-3f1e01c3b280",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ac9ab70-755b-4521-a6af-1d21f23151a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "413e563c-0405-4788-91fb-6d732e51d4c3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a04976a9-dc0c-4054-855b-f0110412f2eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f8356b72-b6b6-44b8-8904-eca18e9d1641"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a42831e5-6b85-4f18-aed7-66dec29f85fe",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a3c0246b-c696-4849-9433-0c07b6037b71"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "673243bf-b954-4e04-997c-017affff8864",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9880d3a2-b1b7-4cbf-9c54-98addd6b14ba"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "14d4b362-f90e-4d49-bbf5-9dd171faa48a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "648462c2-6bea-46c4-a962-f63d8b7c8bc9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ba0dbcb2-d764-47e3-9083-8c2d5d919c13",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d1cf1d33-6721-459a-a5f0-3dd7b9e31b33"
            }
          }
        ]
      },
      {
        "id": "16a5fb93-d5d4-491b-ab14-dbad2f37410d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "06399e65-a683-43c2-875c-1e7da93603e6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "96d8a0e4-9ef3-46fb-9850-b4e21c39e850",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "46638c7c-e172-465e-9353-041ddb37b8f3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc05e1a4-a40c-498d-922d-d806bc1f1964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e340b8c-323a-4687-ac58-c4e4fdfeaa80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c571e98-4afc-404c-be7c-26c671f7c858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e35c731d-0c9a-4703-97e0-05d2ecceb4ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14dd9502-8816-4915-95cf-de4ff79ca0a5",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8f0082-8f7c-486e-94d0-ff81f6f2b8b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21132551-9f5a-455c-bee8-4609dec2f70c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2eeafce-048b-4377-890d-3e177a49abf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7fa2b6c-97ed-4948-912f-c3c55f4ff5a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775cd9e6-9b1f-4b0a-b77b-ff94e2c74f8e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d522ac76-434a-47de-baa8-e7561602388e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39b7ddb1-5968-4647-832c-29194bf736ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dd646bc-39bf-4b8d-8336-b606284b17ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "838b065e-0c31-4c74-83be-802354974e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87f93677-8b95-4230-80ca-7a2e470ade0c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e20b4e-1a6e-477e-8f39-00e8927e8507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c156e13e-6e3b-4cae-893c-042d80e258c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d14cc09-7890-485b-982b-7c0f46ccaf0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fce47e89-5168-44bf-b736-a6561e701755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef9f07c6-f072-4865-8dc8-4ce21d74d427",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5638082a-c3e0-4625-ae64-ff98959341a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aa463f1-bb80-44fd-8105-a40935a6f423"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5097fdc5-ab18-48db-84ca-de1d123a3007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f120d66-a13e-4c55-967c-767c12439202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6380131a-dbaf-4cf7-91b1-66bf7c47d0d6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e0be449-32b3-48ab-b89c-6c1bc926701c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0894e876-2608-448f-aa12-12cf531880be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a2cbcd-39d1-47ce-bdf5-3ceae77295d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "75a814f3-f871-4028-b6a1-46b092e753da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4deeb0bb-5b86-4fe0-9d42-68bbb47a1d07",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac666263-76e8-4176-94ad-ea9a471803a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff0aed4a-6a48-4ff6-8f7a-f46ee83fb840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e33cc391-5604-48c6-abf0-a7e3489d1166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe536859-8358-4260-aab9-39489dfc68a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef105e24-ea59-4b0c-a161-4927de438271",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50531793-bc28-4dd4-9d69-7b93e2aca977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa531520-b47e-4b73-b9d8-8c477cf5f26e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9a69bb4-bd51-464f-8f94-2c03ada33ff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e19bd0fa-5367-4d65-8f0e-ac00f0e5e56d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea92ba2-074d-4ef6-8618-265b907bc9ec",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f195480d-63cb-438f-ae67-0aae1437f9f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b188b580-2040-4e7a-91c9-3c0154228116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a68b65bb-2dff-47dc-8f89-c6e8839e248e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "061d9f29-f4f2-4cee-ab34-d4eee8080623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff3a442-cd63-4dc5-80f5-d209b19fc67d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c71e2262-95f4-4d7b-a1b4-6385852603f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9b4aa3c-85c3-4055-8940-4bf8ee05aafd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb49fb6-7d1c-473d-85d8-0a0b3475570b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0d8603c-aa30-41d4-849f-8b2a58d52c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14847bed-25a7-4d78-81f8-63096d334e5b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc9a3c0a-0521-4b44-a059-dcfd76b27c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "577a1048-87d2-4355-9099-3e75b1eaf420"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b791ec6-f098-4e98-af63-2ae91d8daa0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "db76e364-9c1e-47a8-b0be-e5b0feb3bfff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f3438d4-4e68-4ea4-9faf-29db64288f52",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccabf1a1-0eaf-4bb1-80e2-3215ee8d7e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be07a0f2-26e4-4652-983f-0568c0938449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62fb8239-5dd6-446b-9d67-7b2f9fbbbe78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e49d49f5-03d1-4855-8a20-83968e0e933c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09adb624-f055-4ad5-b3f5-3ad0b9993731",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9123354-1a91-42a4-944f-84df13716e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73d91f78-0414-4d3d-8a80-b10f9533c063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b432385-1418-4636-bdcb-a2cb64be7bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e230f7a-9655-4c78-b288-4094a9a2725b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "305479f9-aea0-42ed-9388-1bc444465cd7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e34400cd-a65b-4497-b9d1-4475b5345a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e8dd666-37f3-4ab7-9a8f-a15a0276a844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789cb8b5-3b6f-42d0-8c7d-fb0123df069e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "90cd5a6d-13c6-480a-8e04-a5ce8b3d45d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e18e8e6-e3a5-4330-8154-cf5ddb3d338c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45defca0-c71b-4bf7-aa49-89d088ee94a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "913f57af-a409-46dc-93cd-0f4991ba2226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "830291cd-53e0-43dd-8e14-d0b22a8d926f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5e449d8-5a14-46b0-91bc-a79a349095aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93fa67ba-e336-4e57-acf9-249798c7e0fe",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fda750a1-54a7-4fdb-b170-79b7d0a8c60e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15f13075-d567-4fae-8466-05008dd499e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bcad67b-53d9-46bf-a9d7-f242c451d309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "596c4965-a948-4dee-8abd-733738a97b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b940f7c-5146-4557-93cd-b7396dc6a594",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd0beb9e-3b35-4730-b1ba-0c2aa7a2e5ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75663193-7dbf-49bf-a549-8da3786b3504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "478c06fd-7aa8-4a43-b0a8-d6b157da96c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4499f626-18f1-498d-b950-bcfb8e4e7513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaabc6ff-00ae-4e12-816b-0ae1c527dd12",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0db4afc-7848-4dc7-92cc-0f1780bd6a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3706b7cf-0b4e-4845-9ba5-1a6fbc6cce01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a6e3f9-ede6-401b-8431-9e3125d3386d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ea9f321-7bfa-492f-8be6-84b06d70d841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eba6ebe-2a5d-422d-8b45-d99923dbd74b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e73f6eaf-7f97-4940-be78-4d4fce93d9c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef9742ad-8a0b-4f03-949b-d980e682c20f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a29d95-d0d7-48d8-b89f-1f3afd6fb564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f871f9ae-f75a-4b69-a41a-d72ef8057675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c2974e9-b422-46d7-82b2-d6d6e71c1208",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1c61a1-0f54-409e-a69f-223d79ef11d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba9dab2d-5e49-4b4e-9c3e-c1946c70bd4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5091fbf2-dcb1-474d-90ab-7a392a9a8fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d65b8620-f353-4e30-a407-6eca55ec50ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752629a4-d30e-4f8f-8b1a-d5736c00dc20",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "280a0d1b-b7bc-4d4d-92c0-8d15f03db347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aefc542f-6e8a-4435-affc-02febde2e1e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "340c4c76-0cae-4c31-8922-abc57b81cbdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61f89164-4714-49a6-a396-45d1e98905fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5315356a-f613-43d9-841e-963c25cba641",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c94f8d-f6da-4b03-bd98-e874e68fb7a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c94368a-cea7-4eba-962c-182b555a9ca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ce20ab-d0aa-4f3f-a149-deb7933cdb0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfb9b665-deb2-4c48-ac3c-803a4763d152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c0db091-08a0-4725-ab9c-6405ff90caad",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d43adda-aee0-4c12-b5a4-154f8731af22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18fd5c71-eca5-44ac-a566-9a2ff0b968c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "410c7dc2-1309-4a30-902a-cf99e03febd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9632474-5372-4185-838c-66fd48128f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7093460-7dd4-452e-931d-791bf115523a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "337c42c9-84c2-4b83-be37-eba9f1b0897f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30a02324-764d-4063-b30d-0a7493c09c52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b329f5f9-d4d7-42cb-8963-8d6ac8a21381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98d92c00-b394-46a4-be5e-4a12731e6e3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b164e1e2-2dcf-40b1-a30e-17953a64f47a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b557fc-9189-4d1d-9cec-717c52c39f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2992b548-3784-48cb-abe0-f81a02532380"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af0f946-99a9-4e19-98bc-b19ec7e56f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b157f23b-1166-4b1b-80e3-a20b544de25c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "954465e9-c3cb-44dd-8f9d-16d8f2b5ff1a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fde3d8c-190f-47b9-bc66-f95b5765cd46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5cab5a1-807a-4863-8e52-8ff7d84bef67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d1c299-f3ef-4aa6-a23f-b48662f4ce24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e96eb1c-687f-4d0f-9a85-4dd059690c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e5cd26-55c0-432c-b0b1-3f4fbc072af8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a817e1-b39b-4aad-b503-f8da1e1814cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b92f929f-718d-4ae6-9884-ccbf69e5909a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3e3349a-b65c-4531-a7d7-2c5f7d49ce4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08d15f52-4e0d-433c-93c8-5af7f9781a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55a22ccf-039f-491c-824c-966719a55963",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da013f53-f5fa-48c7-8004-aabd5fd8cfab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1369c360-969e-4c6c-8023-246152b1b935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dde730d3-7bf0-4d98-a459-815f99f7b486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4c8730c-372e-470f-b751-32a2c67092b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f502e96-c041-4ed6-aca4-a4409d00a9ce",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "673e7050-a5cd-4aa3-9889-1a53cb553710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "becdc436-6e6a-415b-8a67-349077b231ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e34c840c-ffbc-42c7-8183-57965500d3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "159e3e23-0d59-4afe-a673-5e4cfefd91ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc8f0c3-68a4-4198-929a-ac26954d5f37",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "683a0de8-6b19-4c7e-b93f-0894aa3d6b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bbf7653-66d6-4864-8cf5-19765b355b53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "849c4011-16cb-4564-b608-d14553cd1394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8649b70-4af8-41e5-8dea-f412ad2ab26e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b46d052f-9229-463f-8f40-f7ea33dd818f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bfe1f73-739b-4d20-8723-ee72b4b093b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8d078d6-594b-4b5a-bb20-9215f5473f1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bda7042-ad20-4618-ad80-d28b2c7a5f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e8cbd49-5763-47f5-9673-3066930bebba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe23219-1ac2-4901-b7b4-8ad91484fe3c",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d983e4-2017-4c6c-a346-7ae2541b859c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e73848b-b4bf-49ff-93d0-a406e1e0af49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "693dd900-0e1f-4b76-89c1-832cd0e7d88a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1547428-5a55-4e80-996a-814741f3398f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2406fb02-4415-49ab-b76b-496249121197",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b5b6b145-5aec-478d-8cca-870a9d71841f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e11dff-9925-41a0-a257-49dde7bf4031",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "95ae1598-27d2-4d5a-a28e-102936353ba8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14cb1c25-aa40-49c9-8c76-699c5106b784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "18651add-6668-47ce-8380-2b400cd8651e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa8a2bdd-8436-4b75-becd-dda914715798",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e78eb6d-bda8-43ef-bbd5-4a73bd01d884"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7c1a705-63d6-4609-b16b-ded6f403330c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e03374a3-4a43-4f4f-a223-34da6e4ad71d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0523a53e-1737-40ff-a6b3-198702b50dee",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b23f9cae-1aac-4c36-88c5-6bf5cc4383ee"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "36e75e14-3716-4bad-a4b3-7dfc3bf6e548",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ce91c214-91d2-42a3-8d7a-2e904a48df8a"
            }
          }
        ]
      },
      {
        "id": "729f58d7-f2c1-4534-b18f-4d6f8839ab3e",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "f070bab8-1cc5-4be2-9580-81dcf4d481da",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bc3abcd5-0a30-412f-94dc-f48c87c9c110",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c80e1e28-3d5e-4c0a-861b-2b8bd1bb707e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1601ca88-2f04-4258-8635-7fdb77fffe23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6663fdd1-cb2c-420b-875e-07f6c3da547e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a30cce5-e0cc-4084-9417-830ce244b3a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b79ba40-c819-4c14-bacf-d49d5041dca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "998b5cae-0bb6-4ee6-954e-5159316c6598",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c4ca2b1-8910-4ff1-a647-bb7da6de8638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "709a67d9-c904-441a-b08e-060366f0cf84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1402bd04-18ec-4445-9905-b8f03a2073f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a48a92a-acf7-42ef-94ac-6ea4c4491ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "566d8af4-ae6b-47f1-9c16-6ccfa2238954",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4251ef6-ddbd-48a5-a6c8-fefcef328616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c41f8541-683c-4348-9b55-19c4c5d09f03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6851d4c-003b-4b6f-9b47-4fe523114707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "158df772-16ce-468f-ac12-1ea85f129647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26871fc2-572a-4d80-9050-bd563aa67d00",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c7444cd-8e25-4e92-a5e9-73b5d1e444ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60d8d4da-1525-42eb-a391-ad2a71218795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c8aae0-909f-4fdb-b2c0-c29b116dfb8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8e36be5-eec9-44b6-9c04-6c55de36f5d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77001147-4400-4294-90d5-3a95d36d5bf7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef49082b-6ae8-407f-8d78-1b7f5e531fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0d85ee9-676c-4d33-84d2-ce2fbb299a20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74aa7c6a-10f5-46a8-b4fe-93fa0b0988ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8dbce264-81ef-490f-8ac1-8f471086145a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a976a210-b431-4a45-a637-92cf4d020e14",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ffffcdc-45eb-4ceb-9853-317dd0da1e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b47b9ac2-775a-4236-acfe-92eaa9b9ee55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff7c48a7-0e9f-411b-85ac-2aaab5621cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "66b43592-a783-4c66-8575-aea43b818974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "306e8600-2a42-4a29-989a-2a562d70cc40",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "901fdd63-8b0f-4559-a75b-3093a2641a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea2f7be0-1bb9-4ea5-a1b7-198d6af2f12b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf8d52a1-65c1-4cac-bf58-d4fb18b37034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a962d6b5-4caa-44e3-a997-77f335b2b4d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7358b350-2653-4f8f-b865-bcc7c8fb1eca",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e20c7eeb-0103-40b0-ad87-b4a04bbdf1b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64b4271a-dd52-4b7d-b6ff-6a34e39006f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5480681-8142-47c7-babd-7a63dd65a9c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f71af8ca-2f64-42c8-b80a-bce1970d9596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eaaad12-e40d-4383-880b-ef9ffd94375d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3483ca10-9275-4af1-9851-d2a55f51508a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4e270d9-61e6-42d7-90df-7b5b273b82b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a15e64-0fa9-42aa-8b83-6084d322f4e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bf6c5e7-7feb-459a-8af4-67d47053d8f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c6562b-f7b4-471d-95e0-091ad97ef61f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb02798-2f28-4b1c-b9d6-8ece06b689e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bad459b-71a7-4cfe-9431-85d2958f5f83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5899ee9-3421-4158-b75f-d06c2e9fc9cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd4f8066-5ef8-4917-820e-bbd8c84afeff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71216727-f311-4fbe-b038-a614423e2394",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cef622b-a1b3-4c5f-bcdf-0d1316efac82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "178fbd27-8191-4c61-b081-f3125a5d824b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4efd550-10cf-4a86-b294-564adeb7f774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8f922cab-82eb-404e-b94f-c89104e672c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4930c837-e510-49a7-bb24-47b86bc9771c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c6afb2d-f14a-46b8-b764-67260f0e2f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c49c30d5-a6c8-448b-8016-3b6d135327f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a0db15-0eda-4e30-bf26-362210d025c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "27477d6f-9c0f-4219-9a7e-1a522e75c4ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1dea47b-93bf-4a71-aea7-143fadf05c31",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b594be5-1fad-45bf-9d7d-ae0c3edc5575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f8c1a11-d350-4b86-b99f-df2927bfa687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fee7e9c-abd7-4368-840e-b960d6aed610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "64bf348e-99cf-4c76-a02c-4094367c37f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d8e21ee-2284-4776-b5aa-80434467874f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd704235-97b1-4341-b86c-31d2d719f7a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f612ba8f-4df5-4393-937f-18f6392f02d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96f60476-71ff-4fd3-ad50-77475d5b5826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "42a9377c-f744-42ae-8763-0776a689b620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b09e4c15-c354-4094-9543-ef3661c0c7b2",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94e991f-56e2-4b54-b33e-0edc980b26a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c130597f-f260-427a-b3b3-298e331a258e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdb4fc3a-7641-4e5b-9061-77c04853f63b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "99642f51-f9ae-4a6c-9d69-d1611cfba459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "089ab623-3bf6-4abb-b23c-183a207930ca",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "566afd8b-add6-4a0e-b8ad-35ddb7e5d55d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf89c456-6e2e-4800-bb24-0f12d32ac8ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c089b8c2-f6ae-4632-aaa3-d3e4a3f13934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e805e660-6787-4bf1-8fa2-b2d0437817d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "071d6eeb-421c-4975-95a0-7d4b94aab2af",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad777d49-31d9-41d7-8dd4-5a12a47354a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9748c9f0-db54-4b5b-aebe-e0d7ba143759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb1294ba-6a52-4ff3-9d19-1cbf13b2aa91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3c8b365-9a2c-452a-b54d-fd76c760e33b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8156331b-0287-4382-a1d9-0ad37b50327e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74236fc2-7517-454a-b329-e01014373187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8bbaa4f-0d9f-428c-86d0-011407371ffb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc73315-5c11-45dc-a4be-dc8a7c4b3afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a43f770-3485-415e-a4b0-353ea1f0b0d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39824589-2929-4b75-ae33-72cf2e5222d9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb8af49-89db-4923-8194-e9c1a9b49b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "634eed51-73bd-4772-9858-2641ad9e7a3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1155f75-89e5-448f-95ef-e7477a09b09d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ed23f0b-d409-4361-aae1-7dd48e9a33c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e724cb3-7fe7-4f04-b40b-049c91588d03",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d5d76a-ed71-4713-8ddb-a90fe4f58333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "718887eb-e53a-463b-b64c-92a001a86087"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ed700ee-1c74-4e74-a664-dbfee84f1221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "851080c1-8bd9-4ad3-a9c4-e4c31cfea2f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a101995f-443e-40eb-9e51-647c230502a1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e328aada-0fad-462a-968c-6b672a77f10d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "540c9418-ad1b-4bd3-9675-7a1b8ed83933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a63487e-5feb-4adc-82c7-5aa880f436eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9317d5b9-96c0-47ae-ba1d-ce8ee9d4dc8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07ddbbc-7eac-4ecd-b304-baeae09fbead",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34398add-d08e-4f6c-8c42-9defe52b5e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce8ba63c-0ac1-44e8-b193-51cdf56cd4bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66714a94-37b3-4d93-84af-e8c0cb157fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e23d2350-ee6e-4238-8f7a-33b5a51b4b8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49e35022-4c30-4b3a-bc8f-f4ab58422f74",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f91aa02-e8f0-4401-95b0-228e37201d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f39200f-506b-400e-979b-2ad1dad7beb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a43caf72-f1fd-4e2b-8760-62ff8bf6da32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f64a622-3c07-482d-b718-ec5fdb233b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b38a3671-ead8-431c-ac47-d454e576f168",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd49fe6-d6e0-4ade-a745-376184f09729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68f6d806-d195-4c7a-8e26-82a13e731b51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4751a041-3eda-4396-8b0d-6604cc9099e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04a4f228-6ace-47a7-b771-c4e401ad39d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2065f0ce-2d5d-4cc7-9006-d05aac57dfaa",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39fa0177-1086-40e3-bacd-732d9c943a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df5cc328-e392-471d-a4c5-649b7786643b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f970c32-e50f-407c-857b-2a92d42c10d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84750220-9688-45f5-9cd0-9fdb64bf90d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0725ec78-2852-443a-9e09-10c50a39a5ea",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0d93f5-8426-472d-b76b-29f070b75480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f24ded72-b19b-4bb1-864e-9e675818b1c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39986618-2f5b-4fa5-954c-907c79e45049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81b5a728-70c4-4106-bc6d-c2a5f0dc1be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec02aba9-a781-4295-91bf-706ca74257ad",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f65f4db8-3187-4a5f-a9c9-3680796d4b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37da7564-4782-4842-a8ec-b3af807932e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57937201-80a5-46bb-b071-46d9733b73ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c83d72d-6b1f-471c-9776-d390b8d53718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "952a853f-6254-4f11-a74f-87c06c763e59",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c968285c-c876-4ae4-8cea-992c096dce46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44262eb4-9365-4b0c-b8f7-310cf2ab2e8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7464fdb3-ca00-4b1b-a7bd-4daee377a8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "531926ed-47cb-49a0-bdf0-fd2cdd3aace4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a692bc39-93c1-482b-8af2-98d4586f905b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6697fc7-e0cb-41a4-a01e-b31164d823b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5ae410c-4777-4901-a19d-6ff6c01f826f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "691661df-78c4-44a1-8c7c-ecd0c677a072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4862505f-4fd2-421d-9074-9ec51946e2d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "548b7b59-3dbf-4149-83a7-f3bb7dca729d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be5ad348-dc6b-4c85-9f32-9007771374a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc2eceab-b1a8-43d7-9e0e-749588f29f94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e07d92fe-4fbb-4e3d-becc-d7c3d665dc2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9163611-4de5-4967-bc00-b69313144cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f3f764-777c-4f57-a2da-5f3244203df6",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "629a97a9-79ba-4d26-909d-73ef79c0771c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88037af6-481d-49d2-b7c9-ce3af04e1cfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c2044f-9b05-44ad-9105-bd1676157814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a7c7fc6-7ad0-4d00-99c6-99fc43819344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ae96c14-0170-45f2-8876-449f5d4f00ec",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "716125ce-8ccd-4496-945d-ad9fbe2bc811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e479561c-c1f8-4752-b99e-d1959576d0a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "415af47d-8ba1-44ec-b285-4ca3406513c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d16bda7f-3d61-4ccc-9c54-833c66971fa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b169ca-8c8b-48e7-94fa-37e41deb346e",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd4ff75d-f2f0-415e-85fe-4e5df24f8eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ba221c1-e2a2-49c9-9c7f-2a4b13d34091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab6f1b2a-769a-455f-8195-5da4d4b0f5c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "833d1a3a-c0e8-42e9-87dd-d4c4d36b21db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a03616d7-3bb4-41d8-be88-7f3c52666cf2",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28de680f-359d-49da-aa6c-440bea8bdf0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "815b9f31-96c6-4f12-b706-644884fc67fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b147476b-34cc-406c-9cf3-e5db6da40772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0dde962-678b-4500-9e7e-5e3c0626bb8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eb6057f-4be0-4304-9906-494fbaec4235",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c55b7a-26b0-4006-8755-28cd606bd439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d6730d8-3a68-4949-8caf-af2cc53eab44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8fc5216-bc77-408e-a111-19a8ef5fa757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4b1ed0b-9852-41ba-9933-7278a783813f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf15605c-ccfd-4a23-bdbe-a0c6c327af5e",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "920c754d-6762-4b69-a9b6-20ec4294bf02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e00d5f19-2ecf-4aae-9b22-3b0433c16319"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45aa8d46-b3ed-4abb-ab43-e171c74754a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3ccc733-702a-47aa-ac94-2852e58ae5c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a89abe-10a8-4693-a3b1-f5febb4b0295",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29bf159f-5d5b-4580-bf6c-f8a517773c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af1c8171-a7ee-4456-af03-6b2c9f263bb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "489a4cba-ad8d-46a2-bbd1-95573cb34ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c3d2360-2fc6-49b4-9b6f-1396ff126fb9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "12314d60-642f-449e-9c84-8dac33a6c05c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5ee48c54-922d-4993-ad46-914ef2bde34d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e5f67e2-c247-45c2-902c-329be5ccebf9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a523f049-a62e-49af-9ba9-21db814e5f59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a0aa2cc-821f-469b-9e88-9407573f5eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "45c04aaa-bf25-4008-bbe8-54f73d5afc6a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6218f1e8-3d4c-4f28-adc2-afc046c5dd3a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ba4e421-d3ec-4d6e-849c-a3b06b6020df"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "572ce5e1-40de-42b4-b39a-3652303444fe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ada5f60-cf32-4334-930f-bdbb91e58b27"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "04620791-2326-49b9-975a-280de1405be7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1d060a55-4b66-4740-af88-ddf483b3158f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "194d7dc8-5473-428c-a4a5-b05f27c39d16",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d2909607-a2b6-4a24-ab5d-dfbf6cc04e07"
            }
          }
        ]
      },
      {
        "id": "1fa0cafb-e9b6-4784-8d49-36fb36cf6458",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ee72634a-0742-49be-b8cb-d15a00f2247e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9ab37fd0-afa0-4aa9-978e-dfc86539b98f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "52a98115-7d5f-43ab-b351-1a65ef411e66",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9738567-8c69-4f74-b3be-59597e646d2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c71c462-fe28-44ac-bb89-1a41d0f124e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe04c3d-7f29-450e-9d6b-aa5dced83380",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "475cb979-3a9c-4dd7-a490-9bf0d507f505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1009c01b-9262-4d04-a511-09d2f24b20a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65ed7d96-1f54-4f0c-ae6f-4b702de9789d",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92fbc854-9d07-4ff7-987d-49493ee0a974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7db5e25-ec10-4ad1-b2c2-d54ddb71d9ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5627c04c-fa28-4f44-acc9-524b0e68f970",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a6866b-42d9-4e3a-8824-28f4d7410da3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7b8a6da-11ad-4116-9195-9cd491db80ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c86cce9-c883-4ffc-b91c-fc87143589a7",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9303b1c8-8eb2-4590-90b7-b851e45d4567",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e3fdbef-4b6d-44ee-b1d0-308e10ca7160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a1d97b9-1c61-4b37-904e-7d17c6440be0",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73fc083-bef1-4711-a5e1-56e4ac09d578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43e83ef0-ebb6-4ad5-9028-c9719d5659af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e25c8a81-6fcc-4d09-b289-13a15db9febb",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ee88fe-d33c-4a8f-a3b4-22e3791e2ebb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8313da8-2b1a-43a1-9eac-8666f51bc174"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b434a5-8062-467f-8efe-3d3a813afdac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e19f1d79-32e8-4b3d-8f07-3e37eb37979b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d90fef5e-3cce-4e7f-8f05-a937198a0874",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce91714-64e9-493f-893b-f62ba59d402c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2210e43e-4b91-4381-b569-96f9aab27226"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3050f6a7-3518-416b-bfdf-b732e1738cb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb2b8439-8873-4551-b848-417b9cea6b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c9f1920-05bc-400b-b5e6-ef0463c455c6",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a729e905-2a82-4c50-a4b5-c2637ed983e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2f9d03d-d671-4f04-ace4-cc8f63ad7434"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c05b9d8c-1067-480c-97a3-c9375df822ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f80ff6ce-623a-49b7-93ae-588dbc7574af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99bbef50-55f8-4ba0-b22a-a815c84923fa",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c6f9e7-b59f-451d-b649-b487714da8b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f0239bb-e136-4aad-b6d9-455d18d130f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5192d3e6-02c8-4a1f-8457-515c8932ccde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "899e50e1-9871-4ce4-983a-f913f1ca907d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f0c9fe9-d5aa-4b19-9661-ac3fd68c9324",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1504764-bc11-4454-b1a4-033c685e9867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "347a5b95-848c-4e75-a110-32f457fc36ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f576a7-998c-44f8-8165-004d4934f024",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab613911-3141-474c-8dd7-e42399ebb13a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a725d0-4b66-431e-b6c5-98cde1331245",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a325e96-6801-4c1c-abed-f690b592a1e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "076be12a-4f29-46a1-9e76-8d8d8f1d8e86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48bddaa0-285e-4f57-a0d1-fec8ba12b6b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8249c11-b83b-4b2a-b434-57db7041b652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c80b08a-cbb9-405c-96ed-422f0ada5c0f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32dcdda1-b283-4a7c-8682-9b930a061843",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34a92146-2cfc-4424-8ae9-6154dcdb8f37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0cd10cb-1df4-400b-a683-3c43a5b8e724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8ad49d8-9039-4563-9b69-996877921a61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e68e92c-3849-46d3-aca5-aad5369ae16d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e8cbbf4-ade7-48fe-87b9-2a42c517dc6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf5a26d4-f4fc-4d8c-99c7-49298cb3217a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cddf4887-6d97-496a-bed2-47a513e761fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ab04788-6951-4ac3-aadb-9c38015c1bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd10e2cf-ea02-44f2-80ac-cbff6d1f3604",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac2a1466-6c38-43f6-9e41-e2df31d078f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "799d2852-0897-49b9-a632-694980617f1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c13c9b2-ad6e-442f-8ad8-5ce698668b5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c137799-a9ee-45c8-a4a0-cf6a2460bbaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d325fe-09cd-46d2-ae14-ebcbadfe838c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab236b2-afd9-4f7d-b1a2-a7295baf0ce8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3507aaa8-5af3-47d0-9c81-fe557c6cb08e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a67af5a7-30eb-42ea-bfc3-fd3628013879",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da671d10-dd8c-4d90-81fb-248d5ae29b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d08ca9b1-32c7-4398-9c4a-a50c92da67be",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de608f9-9850-4159-8556-28750e194bed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83806f1d-b8f8-4f57-a60f-3533f9f23aa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b22f699b-7b79-48c7-bf84-3353763a1ed1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c86d18c-1601-4393-ac1d-c07a2c032edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "869b4f80-a6b7-49e0-9af9-83a59da21c09",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec5820fe-edb9-4ba9-85c5-9b29753891d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4555e28-8c9e-45a4-8189-3429fc38a9cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "565efb0f-3e73-4481-8518-c71191321905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e464917b-f2c3-4f0a-bf58-6813c2c75513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "339edcbd-cab8-412d-a982-964a740f9652",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98eff6fa-926a-4476-a79b-6a524d3a2f1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70aa5db1-3ffd-4691-ab1c-5f0dadffc89a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f22dc88-03fb-47c4-9830-c209df1dd389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d728533d-daf5-4f59-848b-477e0c9eab90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d589d0b3-fdb9-4d3f-99d6-6113621524d9",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f8662ed-94ab-4cc0-bfb8-b07a81e94c11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aedfb9e0-3a3f-4852-a4c9-75a495b637ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6206b756-318b-48ff-b811-6c925d869ab1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a79b868-b01f-489a-a8b4-908a5fa14605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc6ad37a-2d6e-46d3-8509-820461c9566f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "134d7a57-3229-46ab-8a78-5b17e1ef6fd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d42554a3-3ce0-4c89-8b4e-856aa4ed5f6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c9cce3-9fd4-4b59-b4f5-94610e469048",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "998f9385-6e5b-4d9c-b89d-585cb5e00926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "076dc9ac-220e-409e-a8cc-952fe1ec5b0a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3f5df39-65ff-4ed0-9b3e-eb9b299b7f3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bafcf8b-5e6a-4fc4-814d-c9020c5a8e7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "939abd8c-ee2d-4dcb-9ee0-5a010232659c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c111da4c-2b4c-43a8-9fda-c25c9e88b88d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d3bfa08-cc44-4270-b503-a3b269027b3f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a48e40-b18f-44d4-95ba-f3a2ceb48b70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34cc3627-f386-4f85-84d6-aa70bb068ff3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06299963-3ee5-48e6-8a5e-5503657b30e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2958723-41d1-4b22-bc38-0138b0be95ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5d4e7d-d955-4b73-aba1-d4ebb824a00d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20076242-fda6-4707-880d-2df52b8a0cb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96afb0e6-600c-4c06-9654-2db8d16c3808"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e0bfd4-a249-4644-ad4e-9d841df2a4da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89ac63d4-f24e-4ce6-b388-e5ab02077bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9903575d-e265-4fd9-84dc-712666ead19e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4571540b-5cb1-4e46-87e7-b03a9b2c2e52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5ca8e43-4448-41e0-97c2-1b9b6c4c6c57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "954b2ce8-1175-4194-9c9c-05bdd1d1aa17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "add106ca-6990-4e99-a6cb-90bb2473488e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e686df88-db14-4984-9f99-ba7f4afaa9bb",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f9a035b-0a3d-4780-8a0a-aae29b3c2f84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a25ea0c-88b5-46d7-a780-0c44c5439622"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8760243a-d8d5-4522-9bb6-7232198d1f9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40392d43-8bdc-492f-a0b6-0093f82e0c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "160fb28b-c94c-45ef-9f81-ea6ff0366b14",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e866aaf2-0e74-47ad-9325-b4983a6026e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b338f44-8a92-4496-b857-a81673a27f94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d1b8a9-7015-48ec-b8c0-9caf65c37685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08ac846a-a756-4bc1-b8dc-24634bdc6908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f69b39-3c11-4b5e-9790-c5de537a88c1",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0049b3b6-03a3-4304-8f52-287f9d0b93e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42745314-6468-4af7-8e4b-7748d259d72b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3acfd63-4612-481d-9e86-c640bce04ff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57b5c8b3-d082-42b6-9c8e-bbd3394dadd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5e3d152-77d2-4c80-9f7b-07e1849029ac",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "770f5cf7-5e56-4b65-b6b2-b1bfed9878a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0aab28d-f1da-4179-8675-c7a808ac4ae7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8311974-88f9-4c13-8931-f5530f31a443",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f50527b0-6dc3-4652-8f04-2d635d9e9d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02192e0d-3480-466a-8254-a404a69d4d03",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af47972-d7a3-412e-8e43-528b2d942637",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d64ae02-8e73-4dd8-950c-49272c2d50a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89025591-b93d-48cc-896c-b8630e38fd78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1247e065-817c-4f52-91a2-97984625c39e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b897149-ad2d-4ff1-90b3-fa9550e8633a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ef746b-8f11-4400-9d35-8b970cae5ab5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7bc3948-aa23-46dd-90d5-b996d68c8a9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d22b0eb-8720-4811-823d-4cb9c5a68192",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2432577-bf32-4f3f-8d61-ec6e5c388b8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0077eed7-5461-4476-b043-68919f88ae31",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c961a31-9e64-461b-8570-f5f156ee5bc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "224faa65-becc-46f9-a311-41aac28847db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4812d2de-5fab-457f-8e95-e044c72d5c71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bc6b671-b84c-4eb4-8b74-6b48b58ea438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "277f95ff-7e38-4dcb-8675-80db17daa155",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c7e6b06-2dec-4ee0-b0bb-148484514ecb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7146fc8-e09a-4175-a8b8-d95498d92018"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f0a6ad1-7b3f-4b1f-8d57-066467128478",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee2b2d79-9499-492f-87f3-ed7ea2bfa782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3b3e87a-6f09-4fa1-8513-c888c7ca4f22",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b185f5a8-6b9b-4847-a513-a8fd95125d71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e11e35db-3638-4834-af59-c1df08e7e703"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01df0757-5719-4abc-8f65-3714f754a903",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9852eebe-b4c1-4a84-841f-ba65ca78bff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00caae4e-4e51-4722-88a1-2eb146f01f03",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8314af-6d49-4923-86eb-eca5a8f11793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72a1fd23-b9dd-4cb0-a6fe-6254b5ed75ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6bcba89-da3b-46c7-98a1-96ab7c5c64bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2524381b-74ba-4a29-823e-120f5a32e2b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bbee040-d453-4214-b258-dec2b7d5cfab",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e01e7c65-63d7-425d-9b2d-07ff6567a68f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e025d1c6-65f8-47ad-9dcb-71b4ddf61277"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc769266-a6ad-4614-a7cc-dafc8dfb6f81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0bd1129-ad47-4d79-baa8-5e8950a23c66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71fae777-ba41-4927-bd21-42e6c0b41065",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6063f350-9775-434a-bd69-cbbe099016b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62bae4ed-a918-4b81-8d65-65b56e482562"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8090fd10-b384-4368-a6a0-e441d4c3409e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c558ee89-881d-4671-8208-8c1f5b3a731c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ffed82f-ff7a-42e8-ac4b-41609120469b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f7cce22-ea6e-4ccf-a49f-eb85095c9e83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99a2e4d0-1302-4fb1-881b-166638e42df5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a330413-ac34-43f2-9b88-649031ba8492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0533f97f-d16e-4a8b-9279-2f7bda1e0959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c84bc6-2bc0-4940-b0ee-e3664edd8d77",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7283074-3846-467f-8d3a-26958ddfffe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b55c447c-2b61-4685-bf10-644020afda01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff21985-8143-4575-94fc-8ad263e7acfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6547f39e-fc9b-4ad8-9b82-a098ca591e8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46af995a-6fa7-40dd-9084-da81d7b224f5",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf573df-4de8-46f8-bad1-3bdbd6b1220c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0626d9fe-3027-4576-a963-cf27fc5ee701"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3fb35f7-7b84-4615-8e0e-5a4ca18fcf9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88e8ab88-6797-47e3-953a-3e8fefc6d564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0509a2d-6eef-4019-8922-370d14a885d3",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2380bae0-dd5a-4a61-859c-e9a35ec7dc6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4721721-486f-4982-a19e-904f8c2a2b94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "885b4791-047c-47e9-bdcf-655cafb9bceb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce72e733-798f-4683-8c91-abe23882f67f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "796b1169-c7c9-49e9-8272-f7a8fed9ffc4",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62548ae8-ed1c-4c01-83c7-c5bd5baca9da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9295fd42-65f1-4394-b3ce-c7197e50aa21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6010a8a-3548-4195-8fd6-132eb59bb44b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1348b82d-3827-4ef9-ab5c-8bc0ed2c9ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d56b325-2bca-426c-b7ae-bf30fdfe42ad",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59fb57f3-faa1-45fb-b799-f0b2aee8d8c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "092a2c27-9b3e-4e4c-9775-af13e22300d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24e3156c-05c6-4c4e-9bc5-b123880ca077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6a5d27e-7fcf-488b-bd49-6022d0734b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c16569-f07c-4d26-997d-bd9612b62ea4",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "818dacc0-73d9-46d3-9894-473eb4c449b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c72a538b-6073-453c-93a7-4252f7586e48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68dc36fa-87ae-4e63-8f4f-a240dacdcd3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c22904d-51b0-4310-a5e7-2d18ba3027c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd83e26b-d4e2-4723-a0be-b669baec38e9",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "820bb914-6e98-4af3-af5a-92e293357869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e04be729-7ebb-447c-933f-82611b77d50b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7619e9-c3c9-48ea-8987-9cec4bef7431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6e6710b-8de1-4e8a-bcd7-cd579a4e8506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4782f4f4-8981-45e4-b38e-2e349d1a593b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38da23a5-cafd-40df-a03b-6ab066d23b6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d754e842-9b05-4d14-b630-4c2c7c48e650"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc34e90-04c2-48b7-bc7e-c1b5b0da7b79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a485ea7-6e43-449e-a294-9902c1bec2d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b20324fb-9a4f-4598-bcbc-b45faf5bb893",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba328cab-b27c-4e58-b66a-12a410d79b27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab0b5020-7528-435c-801f-f8df9dc084af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed1ee8e-8796-48fc-8f6f-31f83081e6de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c0ffdf9-9879-4084-96de-e07f76883fcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "810595eb-7c56-4b69-97aa-c4ef7269ee74",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccedbfc6-bb81-4beb-abff-c46e74889e45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e66bc69-3d25-436d-aad1-d5812311dea0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be52447-ecae-4956-9645-3f74c288b5c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e96058b-6f8f-475e-ad1f-1e570e7556d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dcb9aa0-610b-4370-87b2-721906516ca2",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893ff51a-fd5b-4bcb-b372-817cbed7cb42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2ab9bbe-1f1c-4d53-baa8-12c29bcde770"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d22aa4-9ade-450b-81c4-44d45b13f911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7417a63b-d4df-4218-be66-520a6fbd73ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "707db157-d17f-4674-8ed4-f2ddc5460034",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0b8eb78-829a-4820-a0ab-08107fbfcd15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23bf114f-e9db-43c9-a3f4-9b3f309d7a64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde8d082-933f-4e1f-8dc2-8b7d7ca203ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e119c99-00f2-4519-80de-9d6cb1a1e411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d36372-a8d5-4276-8326-d1a965bba03b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a651321-9bd7-4de2-852a-6edd53aedceb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8268964a-6545-46ff-8818-e62eb0f08e07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d8d77fb-9626-44cb-a3e1-c98dd74c01be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5762d998-f11b-4703-b8a8-0f5ce93b04c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f7c3e5a-a83b-4767-85a6-f8fc1e2de0d6",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4eff243-5a36-436a-b7e7-e1bd38f1e99e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27b6aa47-8f2a-4bb5-821c-a4bbefa8f2aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf746bed-e6d1-4ccc-935d-bf77e47a2a5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce602830-0d99-4e84-a7c5-a050bb7f562c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "334dfd89-a3cc-4ae9-819e-d15674c7bbff",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8adadd14-c3fc-45a9-911e-604fccbf0485",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5df5a729-b480-4691-96d0-e22e81f45375"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c33d0359-66e6-40e7-9909-15deefa75f4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed05fc57-b9dd-4d29-a5b6-86bb684f5a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f364f3-b919-42ca-9535-4065fb033788",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6aa666a-a069-4e7c-88a2-3a3f1ca956e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3436ffcd-850f-4f85-aaa6-c6b752764a59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c94156b-c1a5-407b-b69a-c417532bedb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2fa6ebc-ce19-4031-8748-09566be20c36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42fbff79-5789-4cf8-b043-1136b8d78303",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "815f9086-a2ac-4b5f-8522-b4c67e534f34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69edba70-d930-4325-ac62-04b8e34add8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9aa6852-1c92-4f8d-8613-5086bd86b51e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a08cca83-0058-4e2a-b8be-942cf7460416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "394b1211-28bc-46fd-b8d6-3e76aa4c877c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca2b7bfa-7b72-405f-8633-0a002ec580ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5aaa368-ed4f-4c81-b86c-27c612f3992a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de39e0e9-2b39-464c-b0c8-3215ed8b9406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dc445b6-8aba-4b02-bc23-cfb0ef563da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567dd384-ae58-4d02-8b04-80ec10ad0ae9",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3249a7a-d500-44b7-9704-a1fb39a46dec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62655b01-87e1-41bd-a301-581c2514411d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9296561-e204-4158-b4f6-dc6f425c1031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51457a46-e578-4068-8bfb-065fe4099123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f484cf-b30d-4cc6-bdd3-f568f7b21556",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e9741e-35ee-4d81-95d2-0d734fdf8e7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c283df2-880d-4a20-91a2-2015f94c7181"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3befae5f-2be6-4544-b0bf-fe4adbdcd5e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9dd8094-1607-4f8a-8486-4395c92f41ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b4e4a56-c58d-47e1-9bc4-30910e1e8803",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b304ec7-a139-42ee-ba09-243acb8683c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe2078e7-577f-4206-94a4-9b9c4d7a9079"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc1e3d2-bdbd-438b-b757-5bee8bccaecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a746a409-ac37-40f3-8dfb-49f6b2e11669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c225f2d-ea4e-428b-8aa7-b94b89c89f47",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418eb149-22ef-42e2-9f99-9384ec3c952d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a797cb7-d7a6-4d6f-b6ea-ef4dfb71e2d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9657f2f9-0173-4384-88d3-471d14074073",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03bf6d25-64f4-4354-acf2-21855f8e2a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276912bb-b05e-4a5e-a285-0f363663de89",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a31008f3-8fad-4f19-9f54-b30cec362f64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09d2bce7-f1f7-4982-b156-bce6c4e9c48f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e066ef39-3090-47e0-8474-8e4b979aaddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc0546fe-673d-41c1-968e-ea8804c4d9a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1935d5c-846e-430a-803e-e74be952e23b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1fef7cb-1fe1-4573-99ed-e190f47984d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d505084-3361-4144-b38b-991ff304c7b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa8e3cc4-eea5-4582-b824-a0a5b3754321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e86249f1-cf8b-4e9e-89dd-4d8edf085893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "418470a2-ad2b-4625-9f57-c372255bd2e3",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b20270-53f1-47b1-97dc-2e2e334641f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9ff5765-7809-4257-bebc-18ee97ef594e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3bafd28-0ed4-4526-bbad-f62ae7dec56a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5732fc8d-c5e4-4681-8062-712f21ec86df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c03d066b-f507-4046-99be-970bf2e104d5",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e99b70-711a-4a90-adbd-2a9a5a12a4bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bea5a6c9-ad76-4aea-8049-93a2d0a5e069"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1128ec4-8e79-4446-82d9-aad693373466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a52c13b2-d42f-4413-915f-83e2a27eebf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "249ba273-3004-4755-a579-fd36e60fcc11",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e528ab99-6949-44e6-997f-bcb66d3cfea2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4dfcdaa-bfc3-43a0-98d9-96c9dbb2d3cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adbe4104-35b9-491a-a4ef-aaaa7c01d052",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b63f125b-41d1-44ff-ac05-3abc08848589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d366bf3-10c7-4e02-af5d-f59210d4dda3",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "240a7e96-7e23-408a-b54a-282aabdae6f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf3b7a0b-982c-44bf-84d4-132ef7e8d061"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b3ace9a-9920-48ea-9ace-92bc956bd2e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30a17f9e-53a3-4cfc-8efa-033e875e2602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1fce3c0-f0cf-4037-b498-76d0f101d7b4",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e45131-d839-424a-805e-ddb58d3bb858",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6facf53-3ff0-43c8-93fe-6fd41c4472b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d04ae97-4792-4451-9e3b-2faca32d5e8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e882a666-e402-4a27-9aff-dd37093bb07a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf1ec32-298b-4e4b-ae01-264deca1d75e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fcc8a41-659d-445a-a300-93523cbb2d21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d431d82-0676-49ab-a046-e0b95856ab15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54438f32-3c06-4cbd-aa4f-3c9a65891607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0675fed-d7c2-49fc-b3be-035cf4be907b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "165f26bb-42ad-40b4-964b-046036e5d2ae",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b526280-691d-4082-a1db-29933096abde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09415982-f5a2-481a-9766-c7f411d2a716"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1eb2ec5-68f1-40fc-9f99-d404369f98dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6473bd56-546b-4ab1-9932-66c5ef26b9d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ded8af7-c14f-42c1-bed2-0409fb1f4a99",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c0d288-f79f-4e16-8a40-a51af78462f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b796d43b-b3d3-4c4c-9c2b-a90bfd0629eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec72a5c5-baaa-4f3c-94ef-60855620513b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3964d2e8-9952-43a4-9bbd-559771dbee6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c1aca2-fa1a-4a80-bf09-a352b9ab907f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2836f24b-88db-4933-af2a-c5d4738353e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c47c5804-742a-4268-b7de-b3f750153fe2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a883eb-e982-4c4d-bf5c-bbc025eec2ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae8be6a9-99ef-4980-a2bd-773f47824a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20eb0561-170d-46d4-97d0-f0edb8074f86",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93823b5b-8d37-4118-a9d1-92e31177366c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa70d6af-fac5-447f-b7da-254a05efe443"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f3e0d81-4bf7-4786-bfb5-ca72a12d79d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "574f6951-e629-4605-a90e-f08024440ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92aea031-05d0-4f83-8def-08847177a949",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee1556d-6a43-43e7-99d8-881d7c529528",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d10c41b7-cfc4-411e-b7d9-74ac9306c617"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78bf5cf7-c2bd-47a8-a652-24c78112646b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f6c234e-91fb-4262-8e54-7dd25daddfd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fa4a4a3-101e-4cf7-9969-e2300f25491c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db5459ce-3f15-400a-865b-a7c52ad4567b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1cf4d86-fb86-4f3a-b1b3-7681180a5b12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "498b05e0-b72f-4ea0-9deb-076617104a71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb1907f6-b374-4311-8161-6251a5c4dcf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ecbd760-6851-4894-85eb-939151ed4eff",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a5cee1-c3c2-410c-84c3-2e7a8424d838",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0c5cc1c-8542-4dfe-967f-2dae4bdd4433"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd85736d-f199-441a-b44a-5de93890eea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e39a39e-a4c3-4315-a572-16af097941b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a387ae5d-349d-44dc-8986-b9d18de27acb",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "703073af-feb6-4430-a901-412435082ece",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "366e3f53-81fd-476a-890c-1deab356b119"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6766638d-c37b-4050-9e0b-f8bfc9012f04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bcda60d-421a-4578-adb5-e50ed352da6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a5342e-4288-478b-805f-7f7022486e5b",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d485fe-1f57-4636-9dd2-b1eca27eac5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c3db545-a3a8-4ef9-95ff-a47fce7793f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc8b0f3-5b12-4217-a55a-68da57c3745e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bfd14d3-94a3-4511-8438-f05b4bd989c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f26742f-98e9-46b2-9058-48bac37ea9d1",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e584044-de7e-4416-8f7d-ab907fe877a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e0ba698-f5da-4575-9de4-26d7ebad7eba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2711e260-2a8f-4010-a63b-6ca72df3b21a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8be0e561-8ebe-4991-949d-60d3b45aa7ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a854b0-d4e4-4007-b0ba-8b9ad329446d",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b10a2d-8b1d-45d5-b49b-1afa10686c06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2703742f-8960-4011-aada-469a684405ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04fb7d4e-5d7d-4b05-972b-543e2f6e56b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f3262b6-4d1f-493d-89ae-d4234fb71955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25cfa63c-5a87-40c9-b90e-b8785e932539",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b77fa2-72b6-4b8a-9923-5cee1bb4bf29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "491c9255-4128-4922-99a3-dc1d45b3b992"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e84ea6-8cfb-4d3d-899f-7bd73caeb4e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "604cc6de-e36f-4eaa-8650-8aeb6bd0cac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81add123-617a-4db0-b748-2ce24b4da399",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfac55e1-910b-4503-9195-da56b93bd11d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b8deef8-095f-4ecd-afe9-53726eae0d99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ee47f7-cda7-44df-83cb-63f16472f60e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90d7edd6-f19a-49f3-bd89-4618dd937247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71103e89-55a9-44e8-9575-a2dbf52e3830",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c862d25a-7f1d-453a-bd77-2c04383e3d97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0c5d262-427b-43bc-b141-83f48d58f6a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08259368-daa7-467e-9150-dfc12daa75ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06a9cfa4-54a6-4975-8b10-0f60eb9ffaa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31dc9a01-ca4c-442a-b42c-29dca4903c50",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba85c559-34ba-4484-9c28-9b1c5aacb726",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52be271e-2073-446d-aced-d961559f6acc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb7f3ca-0304-4187-aaf6-c2108a20be8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0684071-204a-4373-b380-a1906a2f7528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b8fe490-7fa5-4f41-9346-cf1680fe3fdd",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "997fb67b-c960-45f3-a2d8-d51b416db188",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d832135a-a80f-4071-bcac-6b9de0101587"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf688065-4f32-475a-be80-a3c0fa6c69d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f34a744d-6966-4872-848d-94cf7e57c391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fbd1822-b371-48c6-8f92-8679925d719e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b04fab6e-23f3-45cd-b547-756d99b761e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5785a4c-50c5-4f6f-9678-2c14a46440fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11673853-b545-49f1-ab96-1cfa3e7a6c5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b57b2729-0218-4ab4-a482-395e674c0d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f6e5a9d-c658-4d83-b292-a728a02abb4a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a702953-ac7c-4cbf-aa30-31ac906c9624",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33ac8ada-1514-41e5-93e3-41726159d324"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f95a52c-de9b-4693-a8bb-fa2d09aa97d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75ee75e5-19ce-4c4b-abcf-11f717087a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a2dbb2-ad2f-4f56-9288-7f0278d262a5",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b400f80-c17e-4163-8429-1ba6e44bad8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16ca9522-506c-497f-b9e4-ee26014fecf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84dd961d-5206-44a3-ae00-bce67b3cb425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89b93e92-7ae7-474a-acbe-4590a18c1fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01da67c4-1fc7-4683-89e5-c2844959a1cb",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f5e4ee1-ccf5-450e-87cd-3d19a492f48f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a43ddc72-86bd-421b-b1f2-b628a6b1dbc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b11857b-bb5c-443d-86d9-acded94a4891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdbee990-376e-4c70-b103-336d170969a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4daab57e-63d4-4eba-b698-da35263726d3",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eddc30c-625c-461d-b942-6dde4f52e31a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d25812ef-b747-41f5-98fc-4743343afa3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "657eb2f8-a58f-401b-a18a-c47ff7008a0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfb535cc-9569-4417-8c7d-32b503db8af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b52e13-18a1-4812-aecd-599b81ee1522",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a3dda0-f946-474d-be63-5a0163d93199",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85d5138f-ea08-4bde-9de5-797a4f8c40fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "478eced3-d397-4b04-aa28-5ac14c1cadfe",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "228226c4-0f65-4c24-b063-0d95e8286a4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b2dadbc-6ee8-4063-9fa9-de9687bc2e47",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb68ea6-10f2-49b0-8fb3-977efa9de17d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba17e511-8ae2-49a8-b81b-1dacee4295fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6470514d-cf2f-4e8f-9e0f-5fd7a83144fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbd44d1e-3646-42eb-922b-663abb9a6eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f069877a-8f75-4be1-aedc-83e1c6497d4e",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d1d3aa-9637-447c-9331-4c81629d78c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2fb7e15-7d27-4eff-ad76-583c86f86603"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "324d3356-f2a8-4a95-b175-97b814bea96d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3ca89df-1e83-44da-87c2-b3cb145da79e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "711c8853-839c-4eb2-9c0f-c89320216dc3",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "115829f1-14a9-449b-a6c8-bcc5bb5a0e7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c142afa8-5e60-4a71-995c-a920a39a8a5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10138533-2789-48e4-8e24-3453f0a520b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e10f039-1b13-40e8-81e2-9c9f20993c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1023863-c386-4eea-b217-b0b4742c3466",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b955b3-1fbc-43d4-8def-e11c46f26566",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d29f30f0-f3f0-4c72-bbd8-a10934cd70cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "377ede32-b95e-47f0-9dfb-0c36be6056df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3635f77f-b828-4fb4-9e4b-c0797c745584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "721c28fd-6f76-479b-8b51-ed86530c437c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9b85b8a-68f4-4b89-a268-15a9c6b3a30c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c137118-cbb5-4c58-8841-e79b1846f8ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b311732b-35c4-4ada-8110-743fcd28447c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "701ad08d-75e7-4b7c-b2aa-063e3222d343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "192c4a28-6dcb-4894-8e00-feddf311f727",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fffdc512-e5ba-4d58-ad48-c43bb50978a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f36c4b63-7db6-4c9b-b446-30b7099a44aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4406a05-7b93-4993-b61c-f92c48aade36",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b6a7613-ebbd-42e4-8ce7-ebcebf415c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca0fc48d-0d68-4e99-9893-928f58a46c3f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaf3ee6c-cbf6-49df-9fc5-01eab309979c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60e363b4-4df0-4955-b282-63b6f8e9856d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "497f7e77-7d4c-4477-a675-4203ea341bc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e93fbceb-3f86-43a5-a08c-8475ef085bfe"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "506f2f6e-c257-49fb-9867-12cdd366a47c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7afd2be-9e32-4baf-b547-4777bf7a2a03"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "64479d6e-eb1d-4a73-bd00-61dc8979155f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "64358300-8f90-474f-ac76-68a20bd5e1be"
                    }
                  }
                ]
              },
              {
                "id": "10a46a30-bc16-42d3-a569-eb8193875182",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4905285c-34c3-42d8-aa30-8f13c4680552",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f9b08e-96cf-44ce-b40d-d1e56fb33897",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "df4b39d1-3182-4951-aebe-e423160ebf80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e04a3c57-2a74-484a-9801-88ea74a10643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c4b62974-522b-4c25-a797-6592d498dbb8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e039caee-79c4-4e2f-916a-9e775e7299bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7778f204-4a91-4da1-ac46-c752b3f1c094"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "976cb197-57b7-43ea-948a-617a5a1aa8bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3fb8aaaa-c587-4524-85ad-ee9e8050e06b"
                    }
                  }
                ]
              },
              {
                "id": "9bed8acb-9ff2-44f4-a448-caaf1c258a58",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "41d449bd-0420-4880-9d2a-7ded2ac5ba45",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb9e5d8-461e-4e5d-acc4-330fe958021b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "96bd0c90-1028-4d52-9ba8-103dae420825"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df750adf-e228-4baf-9b8a-ae2153b863d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a60d7b85-1502-438c-a58b-dc591f241b8c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3230c258-4274-4bba-91f1-88ef63c5586d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c1099e31-89ac-4983-a98b-bbb712e71da9",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e10024d3-8ffe-4a1c-918f-556dbe022079",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "af3d6bfb-b976-423c-bffb-a34de2408f9a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab23100b-ca94-459d-9131-096ef16324b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa1506bc-fe9d-4870-9938-28a11cf7cfc7"
                    }
                  }
                ]
              },
              {
                "id": "9dc5fc8e-5a85-40a2-980c-0628c9e8512f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4935bdfc-ed8b-4d69-aab5-884fee4e1e6a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d17ff974-cab4-4de4-8c66-aa921e88e41d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a34df18f-655b-4844-91a8-93c7e98790c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a866438a-e522-4c8f-8a5f-d127dd401a37"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b881a413-da8c-473f-b899-e8da6bffa887",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "77ddb2f8-f12f-4d52-abee-bcd02dceb0c3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a45ca86f-357f-4985-9e50-8439a2a19bf7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e595657d-81c7-41b7-ba82-50a6f530ae92"
            }
          }
        ]
      },
      {
        "id": "0b33674b-c306-489f-942e-06466f20460a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "c2047f6c-641d-40a8-89ca-2a63ceb2265d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ffbe6a17-8e5f-469d-8be7-9c5b5da756af",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d40674e1-08b1-4948-95ff-45ed8076b1db",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40e2ca53-b2b2-4f10-a3a5-067ea0809bae",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "fb1d5e97-598d-4298-b7c4-c860b80806db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5330812f-b2bd-4f73-86d7-c2ef75377c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f4110341-3332-4570-9d4b-5ce7b9e09fa6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40e0e635-80e3-4289-b8e8-c928498612a6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "02786156-4c40-44c0-abf9-5e6124c812ee"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "12dbe04a-cd9b-4ef5-8271-68abb1633fd0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ab08c34-78f1-4b56-b7f5-8404c1bc278c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1c6cec29-0006-452f-861f-08d1611be105",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "317731ba-b506-4ef0-b562-189954d37e18"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "488a826a-81b1-42c3-8931-cd6f8da7369e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2496da9d-7de7-448d-833f-29d186e2b464"
            }
          }
        ]
      },
      {
        "id": "a67abbff-27a9-4989-84af-b65116dc61ee",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "95ccde47-5d8b-47fc-84bd-332b2092cf2b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "52bb561f-3b90-486f-95bf-8b5c1812eca8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1a95d22c-ca1c-42be-bbed-e03e53654a19",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3966ab8-c021-4ebd-b0fa-0831d94e0af9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8fa6b43-44f9-4305-9cfd-fbca0569f2e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30648e3b-5b81-45b3-abd5-72ed9358cdc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5120b669-75e5-4036-82a0-782324de3c08"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bfef3f63-02c9-46de-96e5-aed935c37bd5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d3b00c5-fc05-4d02-935b-7cc99bffc4e4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4caf87d-035e-4451-9f7e-8786775007eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fbd8347c-f0dd-4e9d-b72f-b7794d2138be"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a8b969eb-975b-41b6-b49e-171e55340d62",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f21ea19d-a54a-4681-a470-bda12fe0a520"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c55010b7-4406-43d1-b4a9-662fc6705d91",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aa5277d5-a750-4804-9dcf-6e8e4541213b"
            }
          }
        ]
      },
      {
        "id": "5db03a83-6a6d-44c9-8f6b-e424bcf6bb80",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "3798885d-1da2-4fac-bd1e-3ecf6f63564f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2708ac56-6c4d-4b31-a9cb-abf6ae56631a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eaec8151-084c-42cd-9ba1-8884154eeb88",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc7c7e6-313a-4d4c-8c00-eae9bf687dc7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4445a1c4-96cd-411b-a42c-0517924371ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdfa1af9-f478-4b52-9073-6a7d9866e43d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0e6a32f9-bdbe-4f78-a4e0-2b95ec01b6e7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b4a0fec-baee-4c9b-919c-9778560ff781",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a5f0770-cd67-43e7-b5ec-ca21349b1718"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d4bf7a5-0f68-4df9-ac21-76500ba0ff28",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9201072b-68de-4a3f-84af-2b7f1ddc655e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b985098-c453-427b-8b0e-c245c98efbbe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0fe9e542-2545-4ae5-a8ac-d67349044913"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0c547f8a-4b49-4554-93dd-e307d4b307ea",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "866f1c56-df1d-46a5-a045-cbdf82154222"
            }
          }
        ]
      },
      {
        "id": "7eaa8844-4c2f-46d4-aed4-30c99b717acd",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "933c4665-c3dd-4d24-8a80-63cc2193cd66",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4b567e62-6f93-4e97-9159-772e69d9e6cf",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "df072ae1-dea8-4372-97ea-2d8b31c5ac8a",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "50da7258-cb2a-42cd-8124-2b29581327b9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "88132e53-a33b-44cf-bee3-d892b400e300",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 239.23239436619698,
      "responseMin": 7,
      "responseMax": 6805,
      "responseSd": 699.2227744048248,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1691455093052,
      "completed": 1691455174689
    },
    "executions": [
      {
        "id": "679258e0-5d1c-44ab-b0e0-f3c013c1534d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "10a2059e-6bb6-4a8a-9b30-6a4b6083d866",
          "httpRequestId": "5884f1b9-c9dd-48a6-80fe-cf3d628cc842"
        },
        "item": {
          "id": "679258e0-5d1c-44ab-b0e0-f3c013c1534d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "355fb6f9-0c5d-44fb-b22e-685d163caafa",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 0
        }
      },
      {
        "id": "28a9db2b-dc55-4883-b834-5f8dba389737",
        "cursor": {
          "ref": "ab36c19e-59c2-473b-96fb-8302ecbe6bfb",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f55b6589-e89c-4db6-92e6-c7003e07ad4d"
        },
        "item": {
          "id": "28a9db2b-dc55-4883-b834-5f8dba389737",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e14cf7ed-45e1-44dd-80e0-b8311a533549",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "0feb88c2-5e51-4555-b569-7c897f48dc62",
        "cursor": {
          "ref": "2c62e9fd-8945-4150-b456-a4a0c60a10f5",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "0ff70334-294b-4df8-b9b7-cff18b11836c"
        },
        "item": {
          "id": "0feb88c2-5e51-4555-b569-7c897f48dc62",
          "name": "did_json"
        },
        "response": {
          "id": "9f6866e7-9dfc-4285-b958-88ed714f75f9",
          "status": "OK",
          "code": 200,
          "responseTime": 518,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79664d04-9d6d-4d51-9ff9-58a562694d85",
        "cursor": {
          "ref": "7b63609a-a4c7-4a2e-85f0-88d85a081ccd",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "690fd4bf-5309-40d7-9680-6a70233dd3a0"
        },
        "item": {
          "id": "79664d04-9d6d-4d51-9ff9-58a562694d85",
          "name": "did:invalid"
        },
        "response": {
          "id": "34a8bc21-3f07-42eb-9eaa-d88da09a5609",
          "status": "Not Found",
          "code": 404,
          "responseTime": 950,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79664d04-9d6d-4d51-9ff9-58a562694d85",
        "cursor": {
          "ref": "7b63609a-a4c7-4a2e-85f0-88d85a081ccd",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "690fd4bf-5309-40d7-9680-6a70233dd3a0"
        },
        "item": {
          "id": "79664d04-9d6d-4d51-9ff9-58a562694d85",
          "name": "did:invalid"
        },
        "response": {
          "id": "34a8bc21-3f07-42eb-9eaa-d88da09a5609",
          "status": "Not Found",
          "code": 404,
          "responseTime": 950,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff7f16ac-9ea2-40ae-8253-53e7230af4bf",
        "cursor": {
          "ref": "09bdd933-6fb5-48ea-81bd-783f210970b6",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e6d6af71-93c9-4d79-a20f-83b623419448"
        },
        "item": {
          "id": "ff7f16ac-9ea2-40ae-8253-53e7230af4bf",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ec9522d2-8e5a-4815-9637-2aba13f02cc8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 66,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de6d6b1-ea4b-468b-b603-ceafd7c08c14",
        "cursor": {
          "ref": "c7727a1a-44da-42a7-a6a2-8422724ecc87",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0cd01c43-a50e-458f-83ad-ebdc9faddef7"
        },
        "item": {
          "id": "4de6d6b1-ea4b-468b-b603-ceafd7c08c14",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "bbd202ba-eb4f-47b0-800f-7b63fd9d5ca1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 83,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e332c0e1-0727-42f0-8905-31cbc1209679",
        "cursor": {
          "ref": "19587d2b-b881-435d-8ad0-402aa2ef8064",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "0cf6f105-e7c4-4f84-bfe0-f3b56c33cff4"
        },
        "item": {
          "id": "e332c0e1-0727-42f0-8905-31cbc1209679",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "629d2de6-0608-4f4b-97be-05c7d5145572",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f1de49-cc42-489d-801e-02b4abcd9a5a",
        "cursor": {
          "ref": "32addac4-9faf-43cd-8127-602b466ef67f",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "6e064cb1-b6c3-42af-a0fa-bec939f8e6e6"
        },
        "item": {
          "id": "04f1de49-cc42-489d-801e-02b4abcd9a5a",
          "name": "identifiers"
        },
        "response": {
          "id": "744bf152-cba5-4229-beb2-fb236f558dad",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac9167c6-b1fa-4340-83a1-87b82f26c5b8",
        "cursor": {
          "ref": "ba781856-c99d-43c5-b3c0-6aa7af2412d0",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f08d7f0d-6813-4e92-b4e7-b76c2da6675b"
        },
        "item": {
          "id": "ac9167c6-b1fa-4340-83a1-87b82f26c5b8",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0a31f3f5-e657-434f-bea0-9b41134e6dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 149,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e131506-5c8b-4462-9702-e1260fa4f1e4",
        "cursor": {
          "ref": "7b3f9f2c-b58d-4ffd-96e5-65705c736f5a",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "30441af1-18fd-4857-8587-894e6c36b09b"
        },
        "item": {
          "id": "2e131506-5c8b-4462-9702-e1260fa4f1e4",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "dc3d062b-f6f6-462c-93cf-4e836021384f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b45f0ca6-5f74-40de-85b2-ee53c4fa31d9",
        "cursor": {
          "ref": "ced31675-a0ea-45e4-99cc-4bfb13823ccf",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c4d33682-9c9a-4515-83a5-8b7eb71f5553"
        },
        "item": {
          "id": "b45f0ca6-5f74-40de-85b2-ee53c4fa31d9",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "6680966c-4775-490d-a672-a836a164ad80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "015a7560-0f5e-43b8-a26b-c51307c230f6",
        "cursor": {
          "ref": "222749d1-008c-44fa-899b-0e936c21db7a",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4fbd9b1d-c546-4c33-9d7e-e0c52e904f8a"
        },
        "item": {
          "id": "015a7560-0f5e-43b8-a26b-c51307c230f6",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "97094ea8-a17f-4617-b3a1-5604dc06a4d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2983094-98d0-40bb-b324-6b2712dd08cc",
        "cursor": {
          "ref": "02dd1616-2bf9-4638-aa01-98a0d465a86a",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9b4761ff-b577-4391-b675-13b687d10089"
        },
        "item": {
          "id": "e2983094-98d0-40bb-b324-6b2712dd08cc",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "dfda9634-867a-4188-94f9-67a6d19febc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f35047a-7c45-4a16-8e1f-db5dafb6517f",
        "cursor": {
          "ref": "ba63deeb-8eb1-40a6-b10c-6b050f21bf65",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "222c0ef2-f0fa-4fcd-869a-7f4b51253e65"
        },
        "item": {
          "id": "9f35047a-7c45-4a16-8e1f-db5dafb6517f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "238e5a1b-d9d0-4027-b9b6-387d2a94d24f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e88f79-decd-43ef-b95e-268704995f29",
        "cursor": {
          "ref": "69b4951b-e91e-429e-a1a4-b296a3adc9db",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "617ea89d-0bd5-411b-ad2c-0f4f279fcf87"
        },
        "item": {
          "id": "b1e88f79-decd-43ef-b95e-268704995f29",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d98ad360-ccae-492e-91ac-bd42c85bcd18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a48254e-b0f9-4432-a50c-0eb37d1dc959",
        "cursor": {
          "ref": "116e595d-6ea1-496d-b398-ae3ca4aa81ee",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f8fdcc1e-b403-442c-b3c5-6429691726d4"
        },
        "item": {
          "id": "1a48254e-b0f9-4432-a50c-0eb37d1dc959",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "eab758f1-2bdc-4e64-8ae8-4b031faea65f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bdf9417-063c-4d0a-8824-6a2e6015ddaa",
        "cursor": {
          "ref": "2d700670-bd8b-40fc-a4dc-388689ccb85d",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "28693d2a-2176-4ad4-bfa4-ce4a88c542a5"
        },
        "item": {
          "id": "4bdf9417-063c-4d0a-8824-6a2e6015ddaa",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c3b44727-01ce-46c1-a914-627d33fd02a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef9c42ca-368a-4c11-96e4-fb76ce2a29ef",
        "cursor": {
          "ref": "028aa809-2b5b-4064-a0e2-49f682955b34",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "02b1d539-1490-4ee7-8e3e-be7f77c2ae47"
        },
        "item": {
          "id": "ef9c42ca-368a-4c11-96e4-fb76ce2a29ef",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "001be807-d43f-4e33-86b9-b031f4ba733f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39dc1d67-4b4e-4cb0-9b5f-81d345797b14",
        "cursor": {
          "ref": "2a7a5426-0e0e-49ba-b862-cd3ac87afc49",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f49e32eb-f558-41dd-9c91-c0e19cb18f12"
        },
        "item": {
          "id": "39dc1d67-4b4e-4cb0-9b5f-81d345797b14",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "da4cdc29-4883-474c-a8d9-f9f03599ae77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff377b4a-3d04-489f-b8df-d7eaf68fb7ed",
        "cursor": {
          "ref": "f7ce0eeb-5ce2-451f-b44d-65a3963a1bfd",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "fcb1dbf1-445a-4222-adcf-f773c6f0428b"
        },
        "item": {
          "id": "ff377b4a-3d04-489f-b8df-d7eaf68fb7ed",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c25e4da1-9617-48f4-bf6b-17035df566a3",
          "status": "Created",
          "code": 201,
          "responseTime": 1139,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:20)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:20)"
            }
          }
        ]
      },
      {
        "id": "f5d23534-b6f8-431b-9bb6-2acf43e662c4",
        "cursor": {
          "ref": "478ed916-69c5-4e77-a14a-b16821d64e7a",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "0591d36a-dbac-4faf-8a36-bf8039b7dc46"
        },
        "item": {
          "id": "f5d23534-b6f8-431b-9bb6-2acf43e662c4",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "6874f218-2ee2-486d-98a6-489a26ac67dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 148,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c14019-c1ef-4d45-8682-b4b0066064b7",
        "cursor": {
          "ref": "f2eaaf1b-2c5b-4d51-868a-0b8fabbd4250",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "942459ec-b2e5-4a8b-a609-720ad157beab"
        },
        "item": {
          "id": "e0c14019-c1ef-4d45-8682-b4b0066064b7",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "9574d50d-cc6a-43af-b43a-aaa3a0b23aff",
          "status": "Created",
          "code": 201,
          "responseTime": 6805,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:22)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:22)"
            }
          }
        ]
      },
      {
        "id": "4aedb3eb-9043-4b80-94d9-35b6bacec032",
        "cursor": {
          "ref": "081618d2-c778-41df-a586-c095e99df001",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ab23925d-0bdd-4b68-92c4-fde9424aee14"
        },
        "item": {
          "id": "4aedb3eb-9043-4b80-94d9-35b6bacec032",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "1194feb0-ac5f-4b4b-b191-912ff63dd288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a5a03f5-ef09-4978-9c7f-48d2cf2a4093",
        "cursor": {
          "ref": "2a342aef-5a3e-4357-9bf8-b854972d8302",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "96e98ada-1931-40b5-90d2-f2e71aeb2bf4"
        },
        "item": {
          "id": "6a5a03f5-ef09-4978-9c7f-48d2cf2a4093",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "07b3fdd2-81e4-4826-9f66-9e877a2d4751",
          "status": "Created",
          "code": 201,
          "responseTime": 3796,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:24)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:24)"
            }
          }
        ]
      },
      {
        "id": "92a10340-6993-4bfc-aa17-4952769d7b14",
        "cursor": {
          "ref": "5e67bc65-ed05-4eb2-84ef-0363662b7468",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ced112f0-201f-421d-8b23-f0fadf55f271"
        },
        "item": {
          "id": "92a10340-6993-4bfc-aa17-4952769d7b14",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "95f20457-4076-4a39-81a7-d864c6c6cd2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7caba9ee-72ff-46e2-98ac-25b7ba612cea",
        "cursor": {
          "ref": "030be2db-f3cc-47cc-8f64-8d3109b9451b",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "3966d73a-d5d3-4f42-8017-23948058bf79"
        },
        "item": {
          "id": "7caba9ee-72ff-46e2-98ac-25b7ba612cea",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b2153561-80dd-42ec-bd1a-8785f9ded086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7aca79-533d-4c94-b370-bdbbf29d61fc",
        "cursor": {
          "ref": "d179d609-ed77-42b2-9b7a-15203b3684ea",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "fd093a8a-a27a-44e4-a09c-d7c696b3c2f7"
        },
        "item": {
          "id": "6a7aca79-533d-4c94-b370-bdbbf29d61fc",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8d851329-d341-4a9e-bd79-0e30148fdb26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9fbdc91-819e-47aa-972e-592804b41d77",
        "cursor": {
          "ref": "59bc3672-b3d0-4025-b83f-8a598c69a55d",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "fd2e667f-b668-4d05-92d2-d6dbbb11637a"
        },
        "item": {
          "id": "f9fbdc91-819e-47aa-972e-592804b41d77",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e3a6bb3d-9306-4701-8e5b-dc7ee542dee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5077d378-7ed8-4bc0-90cb-d4d275209253",
        "cursor": {
          "ref": "13f93338-aa02-446b-bffc-924aeab4f996",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d32b2671-5a06-41bf-ac51-c2de76b202d7"
        },
        "item": {
          "id": "5077d378-7ed8-4bc0-90cb-d4d275209253",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "951e1831-0a3b-43cd-95d2-bc9b205908ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1fa6eed-129b-44a0-957b-f22839254acc",
        "cursor": {
          "ref": "cd868ecf-7a8c-4541-a208-b8ccbbdf2fc8",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5f9ef371-637e-4506-87c3-40b09f344f34"
        },
        "item": {
          "id": "a1fa6eed-129b-44a0-957b-f22839254acc",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "7c735a55-4792-4043-acf0-2fcafe19426b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e582f8-d678-4d41-93d8-b6066e9c111c",
        "cursor": {
          "ref": "afc8df2a-8757-4c04-bfb0-944500f5fe32",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c0d7ff10-d3b6-4215-bc10-3119ff5ac432"
        },
        "item": {
          "id": "b3e582f8-d678-4d41-93d8-b6066e9c111c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a20c0867-9381-4d90-a4ff-9738e590c555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b13108ec-b207-441f-a462-b803ade899e3",
        "cursor": {
          "ref": "e0da61d2-96a8-47fc-a7a7-6f03e5b8b7e4",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "523cf263-da36-4cc4-8d76-176a8b6d1e83"
        },
        "item": {
          "id": "b13108ec-b207-441f-a462-b803ade899e3",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "8dc16ed6-ebb5-4e26-8dd6-626acf980861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c035675-d947-45e9-bad2-b36b1dc060dd",
        "cursor": {
          "ref": "f14a8d1c-4220-41c9-b101-816636d3b235",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "5dc53da3-96d2-4427-a9ed-39e0a2006881"
        },
        "item": {
          "id": "2c035675-d947-45e9-bad2-b36b1dc060dd",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a79f9f6f-e768-4677-887c-083dde07dfbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4387fc75-a197-4b80-8a1f-9446ad849388",
        "cursor": {
          "ref": "08a32669-9177-4a73-a332-2f8ea362f6a6",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "53fed634-ec28-4ef7-aaa5-400ce272a43d"
        },
        "item": {
          "id": "4387fc75-a197-4b80-8a1f-9446ad849388",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "6edc96b5-286a-411a-a148-12215ab08155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a12fe579-2ff6-4f50-bffc-a035e7bdc66f",
        "cursor": {
          "ref": "2ff7047a-c77a-4254-80a5-8a8bc93b19e0",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "9bee0000-1152-40fa-a38c-0aebd1c018b8"
        },
        "item": {
          "id": "a12fe579-2ff6-4f50-bffc-a035e7bdc66f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "359bc335-9213-45cc-8be1-f10eb27f11cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44dc8fb6-5720-4e88-a6ba-c093bba5f523",
        "cursor": {
          "ref": "886f2d55-cd51-424c-824c-f6e5a0063b7d",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "e1ac9a3f-3d85-4829-9ebe-f5c396443060"
        },
        "item": {
          "id": "44dc8fb6-5720-4e88-a6ba-c093bba5f523",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "12809c1a-942f-456c-8dde-a7479c50f0e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c07db9-4692-4334-a4d4-92b52a11419f",
        "cursor": {
          "ref": "310df24f-123d-488f-b8d8-0936d70577c0",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "58c48fe0-9ff9-4e86-96f4-f7b5cab909d1"
        },
        "item": {
          "id": "50c07db9-4692-4334-a4d4-92b52a11419f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "657a6c35-ddb1-4abb-980d-d313f00f8fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2763ba72-a877-4f8c-9bd1-b1d605394fa8",
        "cursor": {
          "ref": "a35d73b0-8a13-4d55-b701-46613ea28a5d",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "cc6cd720-8ef7-4fb5-ba9c-7dc2816eed2c"
        },
        "item": {
          "id": "2763ba72-a877-4f8c-9bd1-b1d605394fa8",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "843d0830-28c6-49be-a4de-ceed7bd6b25a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c1bc58b-4e39-4425-b332-e960a5cf8022",
        "cursor": {
          "ref": "ff65bd0d-e78d-407d-b448-22d0cc33311a",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "630dc318-981e-4862-a1f2-fdb4b924312d"
        },
        "item": {
          "id": "3c1bc58b-4e39-4425-b332-e960a5cf8022",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "efe10dfb-b060-4faa-ad22-102b7205f8de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6a0cd5-1319-4d4e-95dc-f77d1bb959e0",
        "cursor": {
          "ref": "eeb69f54-d7d4-4df0-a130-e2ec4e37aa1b",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "9e9b8952-4406-4ca0-a7f1-3ee9a1faa101"
        },
        "item": {
          "id": "de6a0cd5-1319-4d4e-95dc-f77d1bb959e0",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4099131d-f6c8-4d70-95f9-65fca3ecf8d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65ede07a-3cb0-4557-b975-5767d18c01e3",
        "cursor": {
          "ref": "b12add44-5e02-4207-aaec-25b45ad55216",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a87cf019-481d-466d-be88-3653e3a82f89"
        },
        "item": {
          "id": "65ede07a-3cb0-4557-b975-5767d18c01e3",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "c6bf1902-01fa-426d-921f-0b99f26a6b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99449eaa-fb25-403d-8373-7bf392dde90d",
        "cursor": {
          "ref": "57d1d452-9b9a-48d7-9ee6-c89f45171673",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "0e498659-93ec-4326-a812-3dff58527801"
        },
        "item": {
          "id": "99449eaa-fb25-403d-8373-7bf392dde90d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "1583342a-65a0-489a-85d2-dcc969938475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ea62d8-bfd1-4c08-8aed-4fbb863f9856",
        "cursor": {
          "ref": "2f8715c0-6db0-4a07-8eac-f2f5d9e378a3",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d5afe6b0-212f-4ec6-b635-f9322763bc22"
        },
        "item": {
          "id": "94ea62d8-bfd1-4c08-8aed-4fbb863f9856",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "5c45dae1-95f8-4edc-a8f8-6b8d3d66b468",
          "status": "Created",
          "code": 201,
          "responseTime": 2684,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:43)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:43)"
            }
          }
        ]
      },
      {
        "id": "e76e6235-8eb6-42b6-898b-b8d203e6ceaf",
        "cursor": {
          "ref": "24c09350-85d8-4312-b261-3567439ea496",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "48c2a98a-93f8-4dae-9363-b575cb667ef4"
        },
        "item": {
          "id": "e76e6235-8eb6-42b6-898b-b8d203e6ceaf",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b0b1af8f-2875-4904-b44c-591f796ca6af",
          "status": "Created",
          "code": 201,
          "responseTime": 2574,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:44)"
            }
          }
        ]
      },
      {
        "id": "0c8caf7a-65df-4e43-a8ac-c4422d1d9e0a",
        "cursor": {
          "ref": "c6aab315-fae0-4d6f-ba1e-c88bc6d1ba7c",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "668d7de2-47fe-47c2-8f05-ad851f8645eb"
        },
        "item": {
          "id": "0c8caf7a-65df-4e43-a8ac-c4422d1d9e0a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "00b1d794-4b51-49a2-b1f5-490e2d8b9cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "786de2b0-c7cb-4206-b7c8-6e6d15426d64",
        "cursor": {
          "ref": "446f9abf-b6d3-441e-8051-728b9487306a",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b42a3c10-c97d-4476-bfff-1440e5f4181e"
        },
        "item": {
          "id": "786de2b0-c7cb-4206-b7c8-6e6d15426d64",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b54b7fcf-2b69-4983-8535-c7fb890ae4d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe99931-505f-43eb-9184-ad76cbf84180",
        "cursor": {
          "ref": "19feeb73-d206-4f3b-854e-0eb24922b17a",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "7ca223b6-e682-465a-9f84-e1ff8ff80c6f"
        },
        "item": {
          "id": "9fe99931-505f-43eb-9184-ad76cbf84180",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "fc43517e-9fcd-4f74-a36c-5768b0c2edac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10879d0f-fa82-4dea-aa28-2129e86268b9",
        "cursor": {
          "ref": "29452d26-e476-4cf3-a755-b7f7b72da938",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "eb694595-111f-4020-b324-cb4db3d58924"
        },
        "item": {
          "id": "10879d0f-fa82-4dea-aa28-2129e86268b9",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "5fb4b431-59b2-4abc-b5d6-b488ac0e1c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd9234a5-a4fb-475b-a0a5-06a8ce69ef5d",
        "cursor": {
          "ref": "112a08f9-76cb-44cd-aee2-6cfc24a7c641",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "68407bdd-4113-425b-977d-ef154cfbcece"
        },
        "item": {
          "id": "dd9234a5-a4fb-475b-a0a5-06a8ce69ef5d",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "8d33a66c-4d7b-4c85-9071-95e83406a361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e58364a-9609-42ab-b806-063379836e3c",
        "cursor": {
          "ref": "7adcc0d9-f884-4176-bde0-c715bead8635",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "8fc95318-b5ce-4276-8b8b-1387560d2577"
        },
        "item": {
          "id": "8e58364a-9609-42ab-b806-063379836e3c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "8a304c8f-9492-44a1-a106-22327ad5c3b9",
          "status": "Created",
          "code": 201,
          "responseTime": 3001,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:50)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:50)"
            }
          }
        ]
      },
      {
        "id": "e255e051-758d-4cce-8609-e20427336c0d",
        "cursor": {
          "ref": "5a2eea8a-15b4-427a-9f4a-b1b197f8bf0b",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3b7ac095-0e47-4120-8160-42f65aad4bee"
        },
        "item": {
          "id": "e255e051-758d-4cce-8609-e20427336c0d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "8459d32f-f5ef-401d-8b44-d26d83fdc459",
          "status": "Created",
          "code": 201,
          "responseTime": 2912,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:51)"
            }
          }
        ]
      },
      {
        "id": "16b22fd2-ed79-40dc-b3fb-608565806421",
        "cursor": {
          "ref": "b4cc1ab0-6038-4f04-a3f3-2310d1069af2",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "6ac3b56b-f76f-417e-b40a-1beda6697dad"
        },
        "item": {
          "id": "16b22fd2-ed79-40dc-b3fb-608565806421",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "7e3396f3-d608-437f-bbcc-8ca20cff900d",
          "status": "Created",
          "code": 201,
          "responseTime": 2556,
          "responseSize": 969
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:52)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:52)"
            }
          }
        ]
      },
      {
        "id": "09f8b89f-f6b3-466f-a281-c4d6218a347e",
        "cursor": {
          "ref": "44458e29-8cbe-43da-a8d1-9ee54b09cbee",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "7dce76d7-85f1-4cf6-9d1a-119de72a04be"
        },
        "item": {
          "id": "09f8b89f-f6b3-466f-a281-c4d6218a347e",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d9d105b8-8e10-4a80-becf-5c138636b029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "023ba039-ff2d-4194-aa65-4729cf9a2a85",
        "cursor": {
          "ref": "e0bc7348-786a-496e-9807-ec1f4a4a5a89",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "08b9178a-4224-4e86-9da7-d3b839b65ea6"
        },
        "item": {
          "id": "023ba039-ff2d-4194-aa65-4729cf9a2a85",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "1054b4a0-b250-4d31-aa8a-fedd2818352f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f11f9b-1317-443d-bb15-08a5351a129a",
        "cursor": {
          "ref": "af2dc003-de7a-41a1-9d5a-c9296257491d",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "7cf997f7-1697-4fab-a3f1-38fa48ba2cca"
        },
        "item": {
          "id": "01f11f9b-1317-443d-bb15-08a5351a129a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "96612826-89e3-4b91-a305-41383c9b25a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 143,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09723473-a9fd-48fd-b2c9-bb15907dde28",
        "cursor": {
          "ref": "a78038a4-9464-45d3-b620-8222b9f5c7cf",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "cc40d5e6-a901-4acc-8633-4bfe0bd16d42"
        },
        "item": {
          "id": "09723473-a9fd-48fd-b2c9-bb15907dde28",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "41334833-7f58-498a-b18d-6705c4af65da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f800eb-a0bc-48a3-aea7-4183cff370ce",
        "cursor": {
          "ref": "0df78a59-d6f8-480f-a51f-41ad3d34bd1f",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "3827cc4f-bf0a-4600-96f9-4d3ce6f8ccb0"
        },
        "item": {
          "id": "20f800eb-a0bc-48a3-aea7-4183cff370ce",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f2d42601-25d7-4260-a983-10bec2c1f2d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e473d468-948c-4e41-aa9e-97ac36ee8515",
        "cursor": {
          "ref": "6e9bdf00-39b0-4129-818a-939f80346a81",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "5f8e510e-9515-42b3-a295-53af7a207ff1"
        },
        "item": {
          "id": "e473d468-948c-4e41-aa9e-97ac36ee8515",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "5c780b5f-f86b-49e6-bce3-d5255b808233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97be5949-1bea-4c62-8d58-ad6e7876973d",
        "cursor": {
          "ref": "a5f847c9-7f2f-4c1e-a3e2-03d1c054355d",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ae53a1e3-e6af-4cb1-aba6-1accd84575ef"
        },
        "item": {
          "id": "97be5949-1bea-4c62-8d58-ad6e7876973d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "172454b8-d03c-4565-b0a5-12f68ec6f7f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "097cf982-e11a-47b9-ad6c-ef41359597fb",
        "cursor": {
          "ref": "f35eae56-839f-4287-8106-114557b8a6f1",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "0b641f60-17a0-4117-97d0-04509d843e4d"
        },
        "item": {
          "id": "097cf982-e11a-47b9-ad6c-ef41359597fb",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "73fcfa59-2acb-47ce-86b0-bc9afd905874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd3d6c3-1e67-4936-81b9-858f718a8e18",
        "cursor": {
          "ref": "d2ce3058-28ad-43fe-8067-006b44e48b5f",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c4fff3b9-d93b-4789-a374-c14628562f3c"
        },
        "item": {
          "id": "9cd3d6c3-1e67-4936-81b9-858f718a8e18",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3c3f4c20-8d63-4cb0-b327-bf13843b784d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b9ff9b8-6fa6-41a4-88e4-1373808ccb08",
        "cursor": {
          "ref": "35d46f6d-bb39-4793-bf00-f9708a26360a",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d8382b7f-8f64-4f26-970b-910f58795593"
        },
        "item": {
          "id": "8b9ff9b8-6fa6-41a4-88e4-1373808ccb08",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f459c043-9157-4ac2-8ab3-e6c7e264ac26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "686572ad-579e-4ca5-b972-37e5b6f3db66",
        "cursor": {
          "ref": "04cceb0c-c53b-4c5f-8443-6f4f1788eae2",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e53045ce-70a1-4156-9b77-5ef5f8308bb2"
        },
        "item": {
          "id": "686572ad-579e-4ca5-b972-37e5b6f3db66",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "24b5d00f-9236-414f-8f1d-3be09adae678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6326c755-a2ec-4fae-ac77-b799aebc65e9",
        "cursor": {
          "ref": "8d4c2735-9783-4438-a33f-465d13645bd9",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "060936bc-0fe7-4d93-bb18-112799e4f30f"
        },
        "item": {
          "id": "6326c755-a2ec-4fae-ac77-b799aebc65e9",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a9dae077-704b-4405-bf2b-9e6ca1b7f0ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c45ef053-a466-443b-8143-d8614ce4d53a",
        "cursor": {
          "ref": "0c1dc064-71ac-42ba-8ce8-30681720d5db",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "123fd94d-3da2-4014-85c4-255c57dec0c4"
        },
        "item": {
          "id": "c45ef053-a466-443b-8143-d8614ce4d53a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "63908292-66c7-478f-8300-0ce4e6b99ed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8691f869-16bf-4481-9f28-4463ccebdd7d",
        "cursor": {
          "ref": "dadade18-be1d-4166-bcf8-18399fad82b7",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "17ad5800-ac34-4fc2-8278-9c58631da725"
        },
        "item": {
          "id": "8691f869-16bf-4481-9f28-4463ccebdd7d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "73127672-1fb3-4a99-b1ac-edeab553b896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41d7812-4937-43eb-96b4-f3145de4a60b",
        "cursor": {
          "ref": "bfedd7b8-7825-4a95-b8b1-9fa0552936f4",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "79ff99c8-bc2f-4557-8dd9-fa0d1a05c645"
        },
        "item": {
          "id": "f41d7812-4937-43eb-96b4-f3145de4a60b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "44651c55-9f77-4074-a35d-915dff6fff76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef65a5a6-2328-4177-af58-a00f2bb2624d",
        "cursor": {
          "ref": "5d8d03ba-f289-4b8f-afb9-3ce9ef413e3b",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "2cbb4b61-9133-4a52-ac27-6f0db5b84fb2"
        },
        "item": {
          "id": "ef65a5a6-2328-4177-af58-a00f2bb2624d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "bd49d3bf-1976-49ec-881d-12c4f93472a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "323b15f1-22c4-47bf-afab-3497e6d99e51",
        "cursor": {
          "ref": "3a7a4f0f-6d43-4514-9938-ac60958144cd",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "28c1c540-eed6-4bd7-8f87-d085b2e356bb"
        },
        "item": {
          "id": "323b15f1-22c4-47bf-afab-3497e6d99e51",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "740e17d0-ee4a-44da-83a5-b663a44eefd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df69749f-ebca-486b-beb4-e5ec774551e8",
        "cursor": {
          "ref": "edae9df4-8eff-455d-a476-d579f731de84",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "76ac8274-434e-4f79-9cd2-ccf207502bf7"
        },
        "item": {
          "id": "df69749f-ebca-486b-beb4-e5ec774551e8",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "412c2c89-a1af-4c93-9dab-ccc30456c4d2",
          "status": "Created",
          "code": 201,
          "responseTime": 2225,
          "responseSize": 978
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:70)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:70)"
            }
          }
        ]
      },
      {
        "id": "64cdf14e-b9f8-4411-8948-73dae27dd8e2",
        "cursor": {
          "ref": "f9cc83fd-ea87-414a-b589-c11b7b42777e",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ab586823-afc5-44c1-8370-79b76c1684f6"
        },
        "item": {
          "id": "64cdf14e-b9f8-4411-8948-73dae27dd8e2",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f10e1e07-6573-4e73-9c51-27683b15d42a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52186fe3-0acc-461b-80e3-7614b9183e09",
        "cursor": {
          "ref": "30bf4e3b-5875-4583-b549-30beddf83ac5",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "81445c80-29c6-4924-ad7a-eacdf7007bbc"
        },
        "item": {
          "id": "52186fe3-0acc-461b-80e3-7614b9183e09",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "52472891-621c-4c78-9fdb-090f2fcab5a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1048165b-6617-4e29-b72a-70e9c2e34f73",
        "cursor": {
          "ref": "9a7fa421-ca78-4db1-b81f-52103de5e476",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "5f8fd4ff-0390-4c18-b653-2880870fb6ed"
        },
        "item": {
          "id": "1048165b-6617-4e29-b72a-70e9c2e34f73",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b33eced2-7e01-4677-a7b1-da0daf467c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 145,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "372eca8f-c232-4b7b-965d-4e06ec932d0a",
        "cursor": {
          "ref": "c2e772c0-ef3b-4868-88f1-73934af81315",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "02a995da-d9bd-4a03-862b-e9af0ebd92a4"
        },
        "item": {
          "id": "372eca8f-c232-4b7b-965d-4e06ec932d0a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8ab48a98-8b22-4993-8bb6-24a4548e2a24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ea1bf6-f5ea-4f57-b330-ef8ab69b7cbf",
        "cursor": {
          "ref": "2ca45549-78f5-4178-9d0e-c2120b27a1a3",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "425c23f8-3ae1-40ac-aaa2-a03d651d33e9"
        },
        "item": {
          "id": "35ea1bf6-f5ea-4f57-b330-ef8ab69b7cbf",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f19b89aa-0494-48a3-831a-2b19a5d29201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "963298bf-bba4-4db4-8d6a-96f6b6ae9dd1",
        "cursor": {
          "ref": "dbe6d531-a14b-4c89-bcaf-5065debcc2ec",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d05c7cd6-46c3-4cb3-9ecb-2767e7da617a"
        },
        "item": {
          "id": "963298bf-bba4-4db4-8d6a-96f6b6ae9dd1",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d934c8af-f96a-4885-9b3e-a72c410d12a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7072603f-e152-4f87-97da-f2d5012ec6ff",
        "cursor": {
          "ref": "ace06c67-49de-47a4-9746-a6976b1b15f7",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "978eec62-c4f5-41f6-9895-5a99712930bd"
        },
        "item": {
          "id": "7072603f-e152-4f87-97da-f2d5012ec6ff",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "7e718bd8-3f0e-4b1a-a517-f5bfd9c07b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a414d6-0771-49d1-9b94-e63a1f02c7ea",
        "cursor": {
          "ref": "803d34fe-98f0-4773-815f-89041798c0e9",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ebebca85-a398-48c1-8e32-3dc1e5b1f108"
        },
        "item": {
          "id": "d3a414d6-0771-49d1-9b94-e63a1f02c7ea",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8d35a5d3-04e8-42eb-ad08-c3e17f611ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a358fdcd-9817-4958-9ef2-55f467eeafbb",
        "cursor": {
          "ref": "06ed4e2a-b1fc-4a68-8e20-25e1ce0d9651",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a76f3d7d-8f15-4594-b7f3-1abd5667a6d2"
        },
        "item": {
          "id": "a358fdcd-9817-4958-9ef2-55f467eeafbb",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "797761fb-7906-4203-ade3-68550d4445ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "726f859b-e821-43dd-b6fc-59a9701405bc",
        "cursor": {
          "ref": "1a260950-36f6-4506-9f70-4f94c325ea92",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a7581716-c9fe-49ab-9aae-0eb884fc8455"
        },
        "item": {
          "id": "726f859b-e821-43dd-b6fc-59a9701405bc",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "7ff43090-1f4a-4959-bb17-52dc50a114ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449ce243-734d-459d-b197-fc293ca3bbd9",
        "cursor": {
          "ref": "9a15f1b6-b483-4870-afa2-91023e00eab2",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d80a7a66-b6a3-4558-8de4-14c82ee2b183"
        },
        "item": {
          "id": "449ce243-734d-459d-b197-fc293ca3bbd9",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "847f6d0b-4c8a-4f6d-a1e6-ec44d21f6472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e4584b1-138d-4461-a7be-716d20ff9a1a",
        "cursor": {
          "ref": "d5e38945-897d-448f-80ff-84923fdd15a1",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "513fa27a-b6fb-4af5-be11-636c4ba02f96"
        },
        "item": {
          "id": "5e4584b1-138d-4461-a7be-716d20ff9a1a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "586f9ae3-bf13-4160-9249-cf2ff06003d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a541cc3-b670-4ad4-ad39-9a5ee92ebddd",
        "cursor": {
          "ref": "4b6c27ad-6b62-4ac7-ad21-06e6c3018520",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "aacb964f-d094-480d-928e-e888fcd7ef09"
        },
        "item": {
          "id": "6a541cc3-b670-4ad4-ad39-9a5ee92ebddd",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d96460bc-1441-4706-a187-edf9964f5284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d0a3b5-9e9e-4e83-aaa1-1f20a2f4df02",
        "cursor": {
          "ref": "3067bf96-f647-4086-8d7c-9dac49641129",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "947cddf0-a966-4e9c-b7ac-4ad8dc57069d"
        },
        "item": {
          "id": "09d0a3b5-9e9e-4e83-aaa1-1f20a2f4df02",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0959cf52-9df7-4df1-9392-8eccf888aae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6cad5f0-137a-4922-8880-3b13880caa0f",
        "cursor": {
          "ref": "398492cc-bc2b-45b9-9e94-e34d5b9a89e5",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "dc4f0718-8af9-43cc-ad05-a06328870d25"
        },
        "item": {
          "id": "f6cad5f0-137a-4922-8880-3b13880caa0f",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "7f553404-4ddc-4882-a16d-d07293f7f8c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d682dd93-3882-4b36-9d52-6ad595f3552a",
        "cursor": {
          "ref": "48f0afea-5a11-406b-980c-fa35480d7f14",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "92a82f36-92ee-47a8-bed9-2ba05b586a15"
        },
        "item": {
          "id": "d682dd93-3882-4b36-9d52-6ad595f3552a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "518f6c1d-4a75-4f54-8f9c-e7356a422d0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e94829ba-ccc0-4533-bc22-d73c5c8302d7",
        "cursor": {
          "ref": "a7328d40-2e3d-470b-ad6b-56c406bbb9c2",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "77de8f24-aa0e-4153-904a-fa590ffec185"
        },
        "item": {
          "id": "e94829ba-ccc0-4533-bc22-d73c5c8302d7",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "8c225474-a5ae-49b2-b9a1-8c3ebf2f9f53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec1d3a2-7fdb-45e4-8f39-915ea2bf5c3d",
        "cursor": {
          "ref": "c9934e0e-1cad-4e24-8c49-fc138aad55f3",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "14687e1a-bffe-4f04-b215-0278c5a8e5e3"
        },
        "item": {
          "id": "aec1d3a2-7fdb-45e4-8f39-915ea2bf5c3d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "77a1af33-3456-4fdb-902d-ba778f17b494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4968ae39-16ca-4e2c-b0c9-bbce323b282d",
        "cursor": {
          "ref": "85bc0474-9c73-48a0-958a-46a3cb48e31e",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "6afb0548-c0ff-485a-9575-a1ba2ef845eb"
        },
        "item": {
          "id": "4968ae39-16ca-4e2c-b0c9-bbce323b282d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "0cb1d0c8-2467-413f-afd1-e13c6930b0cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d100a198-9bf6-4272-9a40-6cacf054d602",
        "cursor": {
          "ref": "f52701c5-ccfd-421d-8553-bdd78de18793",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c27534c1-a5db-4d7f-a5b9-5637fcc9c9dc"
        },
        "item": {
          "id": "d100a198-9bf6-4272-9a40-6cacf054d602",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "14c2f195-1b5e-4aaa-84e1-dde8cacc3aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 134,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f79aed-cdbd-42bd-abfa-ecfe54bcfdd4",
        "cursor": {
          "ref": "04f49357-c711-473c-9e5d-fe27bec202b0",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "25ad949d-22fe-4d26-9c7d-467796ed2992"
        },
        "item": {
          "id": "56f79aed-cdbd-42bd-abfa-ecfe54bcfdd4",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "2f09b89f-ac26-4c99-9c22-32c405556248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "879a8f7d-b250-44ac-afb2-85f977511412",
        "cursor": {
          "ref": "736d76c5-1a2b-4d03-9b6f-7beade14f15a",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e7922b2f-65d5-48c6-ab46-88893a90ae5d"
        },
        "item": {
          "id": "879a8f7d-b250-44ac-afb2-85f977511412",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d29eb701-f861-4d9d-963e-94430c7a30fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ef453f-9c30-4aba-9523-907c68aae296",
        "cursor": {
          "ref": "13f22e0f-d645-4527-836d-0f56e85bc7bd",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "56f1fd65-1b0e-4a23-984d-e12391a11b57"
        },
        "item": {
          "id": "06ef453f-9c30-4aba-9523-907c68aae296",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "0d36046f-9a67-4e4e-8b67-b45aeeba5edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea0666b-01be-4a59-ab18-8632908173d6",
        "cursor": {
          "ref": "6dc2e65e-2668-48e5-b6bb-d96d250b2660",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "94f78d2d-858e-45a0-85a8-19dc0aa6e2c9"
        },
        "item": {
          "id": "aea0666b-01be-4a59-ab18-8632908173d6",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3b5264d6-749a-492d-8803-fb1473815cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7f916c-f3d0-4b44-9002-3fdba23c9feb",
        "cursor": {
          "ref": "f86ece26-ac45-44fe-bef7-6872a85a2364",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1801ca32-cee3-4302-8d4b-cb116ee5a817"
        },
        "item": {
          "id": "1b7f916c-f3d0-4b44-9002-3fdba23c9feb",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e3bcee3a-e2c8-457d-9192-6d7f05367bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d42a493d-0c10-4bb9-b22c-09f425697687",
        "cursor": {
          "ref": "1f540bf8-4164-4167-998f-5f095a7ecf23",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "9467bbfe-6ed3-4d44-bf75-8e41aff5f66b"
        },
        "item": {
          "id": "d42a493d-0c10-4bb9-b22c-09f425697687",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "5c44a49f-a161-439d-af91-ae84a07ae149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1d5dfe-950b-4f1d-b707-1a3d13db10f2",
        "cursor": {
          "ref": "fcb60282-b459-4d51-ab35-be2c146ecf5e",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "7ca6f571-847c-4ffc-ba28-c81b32ccc862"
        },
        "item": {
          "id": "db1d5dfe-950b-4f1d-b707-1a3d13db10f2",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "7993b789-897f-4002-af8e-747b706183c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3928d7fc-1146-4177-bb3d-abe48f6c9d66",
        "cursor": {
          "ref": "b75e3fd4-ca7b-4f16-8c48-b7082b126fe6",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a6322687-50be-456b-a5f0-1471ba792adb"
        },
        "item": {
          "id": "3928d7fc-1146-4177-bb3d-abe48f6c9d66",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "597a675a-1af5-4dc2-a3a0-de220fe936db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee830b0a-4cd5-4def-8c8d-453f21276477",
        "cursor": {
          "ref": "7a9077ee-8e01-46c1-b35e-bc1b94f10fb6",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4099aa6d-7fe4-4e59-9c77-7faf136ba81b"
        },
        "item": {
          "id": "ee830b0a-4cd5-4def-8c8d-453f21276477",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "fadcc497-7840-4ba5-916c-ccdf439327a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4abba82d-1e00-4acb-9332-5ec31c082f8f",
        "cursor": {
          "ref": "fbfe1ec2-7c4e-473c-b847-8fe76b4c2b1b",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a1e21fef-b597-452c-a080-6c995cdd3bca"
        },
        "item": {
          "id": "4abba82d-1e00-4acb-9332-5ec31c082f8f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "2f845ed9-2119-4a0f-afc5-99b350cdd683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "558ba863-9d44-47d6-9162-feda2027b364",
        "cursor": {
          "ref": "f8d42617-54cd-48c9-a085-410b8b7bed6a",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "425cd25d-7ed2-4378-83d0-4568bfb1eed9"
        },
        "item": {
          "id": "558ba863-9d44-47d6-9162-feda2027b364",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f21b764d-d208-4f2a-8c73-3756fd93bf15",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c105562-f476-428f-aa88-fe86fd82b366",
        "cursor": {
          "ref": "c41ff55e-55cb-4031-9103-ca5df9d99d00",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "9eaab205-0889-496c-83ee-a820bde4c31c"
        },
        "item": {
          "id": "7c105562-f476-428f-aa88-fe86fd82b366",
          "name": "credentials_issue"
        },
        "response": {
          "id": "db95f911-7813-4cdf-8e94-b3d58bff756e",
          "status": "Created",
          "code": 201,
          "responseTime": 2141,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "579e96cf-9b32-41fc-a8d6-721891e9c571",
        "cursor": {
          "ref": "6eec50e8-3cc9-4ce7-a8a8-9ccd772c66e7",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "eb4b5e13-9620-4537-ade5-8254147f0ad2"
        },
        "item": {
          "id": "579e96cf-9b32-41fc-a8d6-721891e9c571",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "3e92a7e1-a75d-45e4-b757-8ec00bf275c7",
          "status": "Created",
          "code": 201,
          "responseTime": 2775,
          "responseSize": 985
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7179d62-a436-4b64-9d2e-eba5b09904a1",
        "cursor": {
          "ref": "1ae405fc-025e-40cd-89d8-9ac976726a3c",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "580c1ceb-1bf5-45d1-9295-1ca9135704b1"
        },
        "item": {
          "id": "a7179d62-a436-4b64-9d2e-eba5b09904a1",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ff72ab20-f32b-4f9b-b7b4-2b655d0eeef8",
          "status": "Created",
          "code": 201,
          "responseTime": 2485,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c615ea1-02fa-431e-9e4f-39eda29b468f",
        "cursor": {
          "ref": "08d55d4a-4208-43a9-a95c-95755c48c7cf",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f8f5e25b-cdf1-4619-9ee1-dc7ec334f075"
        },
        "item": {
          "id": "6c615ea1-02fa-431e-9e4f-39eda29b468f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "1aeffcf8-eb7f-48cc-952c-e4e4e2978c20",
          "status": "Created",
          "code": 201,
          "responseTime": 2583,
          "responseSize": 994
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b81beb-abc9-4cde-abdb-4c6b12f42cf7",
        "cursor": {
          "ref": "7020c1ab-654f-4136-94fc-c6321dfe9a9e",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "87cd52ec-a56d-4011-991a-4efe0c984793"
        },
        "item": {
          "id": "63b81beb-abc9-4cde-abdb-4c6b12f42cf7",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ed731c40-a84b-4795-bcde-2f2d2df74276",
          "status": "Created",
          "code": 201,
          "responseTime": 2475,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2023-08-08T00:39:06Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2023-08-08T00:39:06Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "71c71f91-099a-4198-b135-3f1e01c3b280",
        "cursor": {
          "ref": "72f2db34-974a-4864-b997-8e5bb56c4d0f",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f513f61a-b7e3-46ce-8b24-f4b8a26c8b6e"
        },
        "item": {
          "id": "71c71f91-099a-4198-b135-3f1e01c3b280",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a6d3f31b-715e-438d-a628-dd7dcb4bb5ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "46638c7c-e172-465e-9353-041ddb37b8f3",
        "cursor": {
          "ref": "c69e3a32-d328-414b-91e0-98a6ea741199",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d53198b8-5a01-4ee4-8d57-a32d1c185d36"
        },
        "item": {
          "id": "46638c7c-e172-465e-9353-041ddb37b8f3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d7f68676-83bb-4c69-a6ec-0d7e82a71cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14dd9502-8816-4915-95cf-de4ff79ca0a5",
        "cursor": {
          "ref": "6ce4427d-ef45-4179-bb9c-52ca235b0aaa",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "61d96c5e-eb90-4c36-bc1a-bd066a625d45"
        },
        "item": {
          "id": "14dd9502-8816-4915-95cf-de4ff79ca0a5",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c5105b79-6a16-478b-9428-a2853d714e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775cd9e6-9b1f-4b0a-b77b-ff94e2c74f8e",
        "cursor": {
          "ref": "ff86b99b-629d-407f-aec0-080b08c0412a",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "893ac239-8ef9-45b6-8770-d664012b0c6a"
        },
        "item": {
          "id": "775cd9e6-9b1f-4b0a-b77b-ff94e2c74f8e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c1d0b20f-6407-4f03-a301-84081322fdb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87f93677-8b95-4230-80ca-7a2e470ade0c",
        "cursor": {
          "ref": "c89758af-237b-4b06-9177-6d333474a81f",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4605da63-9568-4316-af45-7de7068c6624"
        },
        "item": {
          "id": "87f93677-8b95-4230-80ca-7a2e470ade0c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "41fa1e52-521e-419b-af0f-a92e2a9b445b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef9f07c6-f072-4865-8dc8-4ce21d74d427",
        "cursor": {
          "ref": "1db6c691-2786-487f-bb58-497a0ab60a08",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "93f9cc85-96f0-453d-8188-2c8452ba07cf"
        },
        "item": {
          "id": "ef9f07c6-f072-4865-8dc8-4ce21d74d427",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5409ff0a-aded-4d19-a23e-bb5f5acc9efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6380131a-dbaf-4cf7-91b1-66bf7c47d0d6",
        "cursor": {
          "ref": "e41d8ea5-9a52-42a5-adf3-33ca4ed68cbc",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "68c7fa7e-78cf-439b-b6ec-c0aba342e5c8"
        },
        "item": {
          "id": "6380131a-dbaf-4cf7-91b1-66bf7c47d0d6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8636c384-ae5c-4bb1-91b6-6bb95869ea55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4deeb0bb-5b86-4fe0-9d42-68bbb47a1d07",
        "cursor": {
          "ref": "ae12c2ac-b884-41ce-bfe3-4846246c4cf6",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "9c6d10c8-9e8c-40ee-9f38-636c7b12e628"
        },
        "item": {
          "id": "4deeb0bb-5b86-4fe0-9d42-68bbb47a1d07",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "bd60abf2-ee77-4965-a941-3944044d61e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef105e24-ea59-4b0c-a161-4927de438271",
        "cursor": {
          "ref": "2d0aacf9-a933-4927-8174-6c4d4837db47",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "dc6dd52b-1994-45fd-9337-3386384d5ac0"
        },
        "item": {
          "id": "ef105e24-ea59-4b0c-a161-4927de438271",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e9289965-81d1-4e65-a54b-74c1b107870d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea92ba2-074d-4ef6-8618-265b907bc9ec",
        "cursor": {
          "ref": "799a5df9-3143-40c2-a150-f60b36c1344d",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "346f3f1e-d679-4c6a-99b9-274c65df0291"
        },
        "item": {
          "id": "7ea92ba2-074d-4ef6-8618-265b907bc9ec",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6b2140c3-add7-43d3-8878-cb6a53c81d76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff3a442-cd63-4dc5-80f5-d209b19fc67d",
        "cursor": {
          "ref": "4e360c42-5d34-481d-92d4-5faed134cd80",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "50cb5fe8-b2ad-487c-9b12-bef44051cd4f"
        },
        "item": {
          "id": "bff3a442-cd63-4dc5-80f5-d209b19fc67d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c1d95c87-15d5-4613-8765-0d760a3f95b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14847bed-25a7-4d78-81f8-63096d334e5b",
        "cursor": {
          "ref": "a9f22277-dc9d-4a76-abf6-586f17c4901d",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d91133d9-aa46-4132-942f-1df5f7451838"
        },
        "item": {
          "id": "14847bed-25a7-4d78-81f8-63096d334e5b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "226bac65-afda-40d1-af75-0b48a004e278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f3438d4-4e68-4ea4-9faf-29db64288f52",
        "cursor": {
          "ref": "c883954f-bbb8-4f25-971e-25206c411ecc",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "37d4a390-ec53-4e03-84d1-45255ebbbded"
        },
        "item": {
          "id": "8f3438d4-4e68-4ea4-9faf-29db64288f52",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1ac9bfd0-02a8-4f15-91cd-63441173abe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09adb624-f055-4ad5-b3f5-3ad0b9993731",
        "cursor": {
          "ref": "20286e15-0b9a-4e0c-990f-3cb585fb606b",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "94315101-b598-47f6-9e55-7c9b1a00454f"
        },
        "item": {
          "id": "09adb624-f055-4ad5-b3f5-3ad0b9993731",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "666458d1-8143-4e5b-bd72-2c0abccf683b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "305479f9-aea0-42ed-9388-1bc444465cd7",
        "cursor": {
          "ref": "9311b570-1412-4598-972a-ce013878461a",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "176fc886-83c9-4a53-8ad1-80fbfe6395da"
        },
        "item": {
          "id": "305479f9-aea0-42ed-9388-1bc444465cd7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b18fe306-9fb5-45b8-a524-98c20b7e4790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e18e8e6-e3a5-4330-8154-cf5ddb3d338c",
        "cursor": {
          "ref": "f220b57e-53bf-4c2b-b96b-854ae4b8e6f4",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "72008659-0292-459f-af28-ea0bea4a35c0"
        },
        "item": {
          "id": "8e18e8e6-e3a5-4330-8154-cf5ddb3d338c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b9e62a9f-3331-4fda-b732-3408d908e929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93fa67ba-e336-4e57-acf9-249798c7e0fe",
        "cursor": {
          "ref": "8ba57746-e3dc-4f6d-bdbb-68331be8aa42",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "20dec8fe-c476-4c2a-84c8-28aff7852a19"
        },
        "item": {
          "id": "93fa67ba-e336-4e57-acf9-249798c7e0fe",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2d09834e-0222-4fb4-a8d2-a157a4ff4f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b940f7c-5146-4557-93cd-b7396dc6a594",
        "cursor": {
          "ref": "aa11b609-1a91-4ddc-b36f-0a5077b7c516",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "8775b20d-66f5-4295-97f6-a7c238d94810"
        },
        "item": {
          "id": "9b940f7c-5146-4557-93cd-b7396dc6a594",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0b1c3c08-f78c-464f-a52b-d991d503b5fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaabc6ff-00ae-4e12-816b-0ae1c527dd12",
        "cursor": {
          "ref": "f0a18a0c-dabd-457a-b46c-24088572e233",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "5224784f-8378-4606-bf6c-873b80bb6294"
        },
        "item": {
          "id": "eaabc6ff-00ae-4e12-816b-0ae1c527dd12",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7cbc5a13-828c-4853-9b46-d95b82c24c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eba6ebe-2a5d-422d-8b45-d99923dbd74b",
        "cursor": {
          "ref": "fcd6c7d6-2314-429f-b320-06d57bea05a5",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9526614d-6520-4a7c-be0c-f4f6acf1ff2d"
        },
        "item": {
          "id": "6eba6ebe-2a5d-422d-8b45-d99923dbd74b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6557c3fd-bbca-4993-80ef-d3a26519a65f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c2974e9-b422-46d7-82b2-d6d6e71c1208",
        "cursor": {
          "ref": "259ffde8-a0b3-4df9-8cb5-878677e0bf39",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ac438d7e-0638-416f-94be-dfbcb5e3e381"
        },
        "item": {
          "id": "3c2974e9-b422-46d7-82b2-d6d6e71c1208",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "36a05dc9-cc7a-4e62-95b8-c5f5b6421d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752629a4-d30e-4f8f-8b1a-d5736c00dc20",
        "cursor": {
          "ref": "b112f1b0-e97d-4061-804b-ff6d580049b6",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "9fae7658-f55b-4945-b5ac-99f6afbae501"
        },
        "item": {
          "id": "752629a4-d30e-4f8f-8b1a-d5736c00dc20",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "73c962bf-1479-40ba-8b02-ee597f3660fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 181,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5315356a-f613-43d9-841e-963c25cba641",
        "cursor": {
          "ref": "dfd9094b-95c1-457d-99a5-1fd371375ea3",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f7230745-1cba-4b8b-8e56-63bbe5112fab"
        },
        "item": {
          "id": "5315356a-f613-43d9-841e-963c25cba641",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f89865bb-be2a-428a-ad5b-fe3f058bed8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c0db091-08a0-4725-ab9c-6405ff90caad",
        "cursor": {
          "ref": "ec5de3de-3bd3-49e3-b5a9-5ba3908d2dda",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "38d884d1-3b96-4c45-83fc-37b4a8982ff2"
        },
        "item": {
          "id": "5c0db091-08a0-4725-ab9c-6405ff90caad",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "353dd1b4-a973-47d7-957e-106423c647d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7093460-7dd4-452e-931d-791bf115523a",
        "cursor": {
          "ref": "560563d1-aade-4040-a806-8fe2b02ab386",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "01998470-ab01-4e76-83b0-debe8a43c756"
        },
        "item": {
          "id": "f7093460-7dd4-452e-931d-791bf115523a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2032b100-8a43-4b38-8442-41736d41cdbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b164e1e2-2dcf-40b1-a30e-17953a64f47a",
        "cursor": {
          "ref": "b7b493dd-68b2-4a5a-8ea8-f0c1056a4ca0",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "787ed171-0c69-434b-b79d-a31778841127"
        },
        "item": {
          "id": "b164e1e2-2dcf-40b1-a30e-17953a64f47a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "bd1fa330-5339-444b-b4d8-47bbeff12547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "954465e9-c3cb-44dd-8f9d-16d8f2b5ff1a",
        "cursor": {
          "ref": "9371abb6-d12f-442d-8e47-bc5a0a316472",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ee5243c0-9e7d-4a20-a3d9-248e8cdf6039"
        },
        "item": {
          "id": "954465e9-c3cb-44dd-8f9d-16d8f2b5ff1a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f55d726f-a950-44a3-accf-09b9d9415d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 117,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e5cd26-55c0-432c-b0b1-3f4fbc072af8",
        "cursor": {
          "ref": "8d331f39-2df8-43be-99e1-9c97e8fefa2f",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e3a5586d-477b-4a95-83aa-ddfbc80bc13d"
        },
        "item": {
          "id": "a5e5cd26-55c0-432c-b0b1-3f4fbc072af8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b1b4aa6a-2d2c-483b-bacb-955abcdf1bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a22ccf-039f-491c-824c-966719a55963",
        "cursor": {
          "ref": "d64e33dd-4318-42f3-bdb0-62ee7065f56b",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "621e98a2-89ea-4516-8680-89ace9d336fb"
        },
        "item": {
          "id": "55a22ccf-039f-491c-824c-966719a55963",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d3a6c90e-70c9-42eb-9a4e-2e04717e706c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f502e96-c041-4ed6-aca4-a4409d00a9ce",
        "cursor": {
          "ref": "1d1438a8-6830-4e15-bf17-e6a977e0ac7e",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3763678a-5edb-4680-8a42-d326cb86d0ba"
        },
        "item": {
          "id": "1f502e96-c041-4ed6-aca4-a4409d00a9ce",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "242df01e-f296-4579-91b9-087b89a62c99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc8f0c3-68a4-4198-929a-ac26954d5f37",
        "cursor": {
          "ref": "042d8208-9a55-425a-83f3-9e76774c6c96",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "281a35d6-659c-427d-b785-ce925019029c"
        },
        "item": {
          "id": "bcc8f0c3-68a4-4198-929a-ac26954d5f37",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1e123dc7-cdf5-487d-ab29-8017192311c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b46d052f-9229-463f-8f40-f7ea33dd818f",
        "cursor": {
          "ref": "4a4435b6-1078-4257-b7a5-ab7dc7e81718",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b19ffce3-faad-4120-9ffe-e015757c4a2b"
        },
        "item": {
          "id": "b46d052f-9229-463f-8f40-f7ea33dd818f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "553d2f0c-fa4c-4b75-bc3b-8dfb64d58f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe23219-1ac2-4901-b7b4-8ad91484fe3c",
        "cursor": {
          "ref": "bd99029d-b020-44ad-a86b-4a1a8e649754",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "9664765f-ed13-4f27-b6ca-5db0a7f1ef29"
        },
        "item": {
          "id": "2fe23219-1ac2-4901-b7b4-8ad91484fe3c",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "2cc2fc42-014e-45f2-bf78-c451e15f0216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5b6b145-5aec-478d-8cca-870a9d71841f",
        "cursor": {
          "ref": "7f6fe2c6-6051-4882-80dc-bbfef4615648",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "e5acec28-cd84-4e35-aa02-e10a0b7c33de"
        },
        "item": {
          "id": "b5b6b145-5aec-478d-8cca-870a9d71841f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0c73e254-58e1-4560-97b1-b96bb67c44df",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c80e1e28-3d5e-4c0a-861b-2b8bd1bb707e",
        "cursor": {
          "ref": "54408783-5e81-47f9-8660-f032b6ab88ed",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "88d0a3d8-80aa-4009-bc7e-10812382e6ad"
        },
        "item": {
          "id": "c80e1e28-3d5e-4c0a-861b-2b8bd1bb707e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "534e5c58-987b-4517-969b-0b0a919e4cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "998b5cae-0bb6-4ee6-954e-5159316c6598",
        "cursor": {
          "ref": "a6ee1102-2f3d-48db-96c1-bdd1efea69b8",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "97f76b45-e6d9-466d-ae36-6c4d42456a10"
        },
        "item": {
          "id": "998b5cae-0bb6-4ee6-954e-5159316c6598",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "51e09876-95b9-4268-8241-9271d5cd5308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "566d8af4-ae6b-47f1-9c16-6ccfa2238954",
        "cursor": {
          "ref": "d0a9722e-9e97-4e27-99a7-41e28ec03c98",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "8726c2fb-a335-4ee2-b929-b3908b638847"
        },
        "item": {
          "id": "566d8af4-ae6b-47f1-9c16-6ccfa2238954",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "83a3d02f-d226-46f3-831e-d1aaad0d031c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26871fc2-572a-4d80-9050-bd563aa67d00",
        "cursor": {
          "ref": "8f6385d8-3881-49df-9e28-8477653e3d5c",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3128d900-1219-46c5-bd06-a2cd28e9bbf2"
        },
        "item": {
          "id": "26871fc2-572a-4d80-9050-bd563aa67d00",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "bf19b5eb-ed45-453f-bc5f-afe661fba49c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 191,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77001147-4400-4294-90d5-3a95d36d5bf7",
        "cursor": {
          "ref": "54de5af9-f93c-4466-be32-9f88f1216513",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "67cd4bb8-0dab-41be-919e-5c504b3cc3a1"
        },
        "item": {
          "id": "77001147-4400-4294-90d5-3a95d36d5bf7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4f356691-1c6d-496d-8e78-a2db2aa2a4a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a976a210-b431-4a45-a637-92cf4d020e14",
        "cursor": {
          "ref": "dfe51777-785f-4761-bfa0-6610f59f524a",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "1b481fcb-fdb0-4c11-a01d-7e11fb993098"
        },
        "item": {
          "id": "a976a210-b431-4a45-a637-92cf4d020e14",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "35e5cbe3-e86b-45c8-a717-b5c99f7415ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "306e8600-2a42-4a29-989a-2a562d70cc40",
        "cursor": {
          "ref": "5c229e2d-9f41-44df-a4cd-99d32c7b53b4",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3c93e862-ee20-47cd-b63a-0d71a6ccaa19"
        },
        "item": {
          "id": "306e8600-2a42-4a29-989a-2a562d70cc40",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "56f58c6c-2cbb-4e98-b9a4-87f5cd88566e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7358b350-2653-4f8f-b865-bcc7c8fb1eca",
        "cursor": {
          "ref": "ea072c59-4761-47cb-a39c-2aa83ba90370",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "0fd6659d-fd22-4a17-9d18-00d7b7d5be0c"
        },
        "item": {
          "id": "7358b350-2653-4f8f-b865-bcc7c8fb1eca",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9f9ea76f-7ceb-49d2-b398-45ca37be37b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eaaad12-e40d-4383-880b-ef9ffd94375d",
        "cursor": {
          "ref": "c8b9a900-64f8-4c9f-ad4b-7cdc27703c1b",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "8979556c-f6f5-4f73-83e9-e727b3afab34"
        },
        "item": {
          "id": "6eaaad12-e40d-4383-880b-ef9ffd94375d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b1df4c71-9e4e-4dce-99da-933265ff31e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c6562b-f7b4-471d-95e0-091ad97ef61f",
        "cursor": {
          "ref": "4801f73d-b1d6-4e8a-88e1-377bff08b90a",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b8c577cc-51f8-4019-8b45-b20ba3960d91"
        },
        "item": {
          "id": "c8c6562b-f7b4-471d-95e0-091ad97ef61f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4b37a47f-2369-4bad-b591-5f2536964501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71216727-f311-4fbe-b038-a614423e2394",
        "cursor": {
          "ref": "e4bbfb25-aec7-499e-ad1a-dab2fc1630ed",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "4759fc53-277c-4b70-b4ff-3c320bc29454"
        },
        "item": {
          "id": "71216727-f311-4fbe-b038-a614423e2394",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "16661b3f-93f2-4de4-80ea-35f16894c5ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4930c837-e510-49a7-bb24-47b86bc9771c",
        "cursor": {
          "ref": "81184f07-d759-4ad6-a5c3-38210882b7fd",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "161869f6-49ab-4397-825c-843a7cecf53c"
        },
        "item": {
          "id": "4930c837-e510-49a7-bb24-47b86bc9771c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "35387237-bb09-4709-a4ff-bc66d4eeab67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1dea47b-93bf-4a71-aea7-143fadf05c31",
        "cursor": {
          "ref": "b690c62a-e816-452a-b2d0-2af68d1ea1e4",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "35a61ef3-4daa-4a34-83de-273cc9666690"
        },
        "item": {
          "id": "d1dea47b-93bf-4a71-aea7-143fadf05c31",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "64249979-b0f1-4dc5-a5d9-de3b2c88db68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 134,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8e21ee-2284-4776-b5aa-80434467874f",
        "cursor": {
          "ref": "70ae3d87-98c1-4ada-83ad-1d1bc3e0e2e8",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "8abbbe2d-6a8e-48e4-8246-2c1c39521ca5"
        },
        "item": {
          "id": "3d8e21ee-2284-4776-b5aa-80434467874f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b56eef94-1286-4bb5-8590-c9790b318c8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b09e4c15-c354-4094-9543-ef3661c0c7b2",
        "cursor": {
          "ref": "3b6c78a5-2c51-43ed-ab0c-555c67c0faeb",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e918fab4-b1d7-42e4-845a-9a91de8f2b15"
        },
        "item": {
          "id": "b09e4c15-c354-4094-9543-ef3661c0c7b2",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "bab80aa8-c068-49ca-b3ca-eba6c54f8d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "089ab623-3bf6-4abb-b23c-183a207930ca",
        "cursor": {
          "ref": "b8d48b85-8f1c-4bff-90bd-028f56126524",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "258dc301-4801-4492-a8b4-48889b1b3ec4"
        },
        "item": {
          "id": "089ab623-3bf6-4abb-b23c-183a207930ca",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "761c1896-3b8e-42ae-be45-1d10e11e1cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 150,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "071d6eeb-421c-4975-95a0-7d4b94aab2af",
        "cursor": {
          "ref": "6e1ba11c-95b2-4635-b4fe-99b4c079dffa",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "8448da36-c383-4f7a-8545-e7d28516d4fe"
        },
        "item": {
          "id": "071d6eeb-421c-4975-95a0-7d4b94aab2af",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "feb99234-88ab-45c9-b792-a9dfb864e721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8156331b-0287-4382-a1d9-0ad37b50327e",
        "cursor": {
          "ref": "4731b96c-396f-49e5-8626-697acc1b2b12",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "7e4dd3bb-0bd5-486b-a868-d13fb104ff80"
        },
        "item": {
          "id": "8156331b-0287-4382-a1d9-0ad37b50327e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "80c3904c-66ab-45db-8047-dd4e38456810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39824589-2929-4b75-ae33-72cf2e5222d9",
        "cursor": {
          "ref": "7cbcfc44-5dd6-4542-ac93-5c73e5cfbc1e",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "28606dc0-b3a0-4344-84c7-4f789219c799"
        },
        "item": {
          "id": "39824589-2929-4b75-ae33-72cf2e5222d9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1ae42766-a4aa-4913-98ba-f0594a8fb50a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e724cb3-7fe7-4f04-b40b-049c91588d03",
        "cursor": {
          "ref": "d442c416-9388-4d34-b7c6-26bf5da41697",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4ac8b9b4-8e23-45c5-9d68-e993a32af58b"
        },
        "item": {
          "id": "7e724cb3-7fe7-4f04-b40b-049c91588d03",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ebc5aca9-3a85-473d-8a28-51ec9e5a56fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a101995f-443e-40eb-9e51-647c230502a1",
        "cursor": {
          "ref": "bcfc0064-d5ca-4885-8197-aebef008e9ec",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "7f3e3b4c-3fd4-40f1-a24f-334fdd52388b"
        },
        "item": {
          "id": "a101995f-443e-40eb-9e51-647c230502a1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "221e8d91-db98-429d-bdb6-69bb80f91965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07ddbbc-7eac-4ecd-b304-baeae09fbead",
        "cursor": {
          "ref": "b38ab209-4f5f-4e9a-889a-6ec9db0d25be",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8a6a5aea-73e1-46ae-bb51-0cb4e3b6cc56"
        },
        "item": {
          "id": "e07ddbbc-7eac-4ecd-b304-baeae09fbead",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "cc5e47b5-c384-495a-ae85-7b180ab68c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49e35022-4c30-4b3a-bc8f-f4ab58422f74",
        "cursor": {
          "ref": "1fdfca96-6a30-4bba-b055-957317e53e31",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "20eca898-e90f-4bef-9deb-235833f25ef3"
        },
        "item": {
          "id": "49e35022-4c30-4b3a-bc8f-f4ab58422f74",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5094e930-442e-4a92-895b-ba7fa2ca617a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 153,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38a3671-ead8-431c-ac47-d454e576f168",
        "cursor": {
          "ref": "ec05c2ac-dc5b-498c-a4ed-67e66c4374e9",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "61acac59-c124-4e1d-a1c0-f876e749cd0a"
        },
        "item": {
          "id": "b38a3671-ead8-431c-ac47-d454e576f168",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1b62659c-5045-4a95-aa1c-2bdeffc561da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2065f0ce-2d5d-4cc7-9006-d05aac57dfaa",
        "cursor": {
          "ref": "6afd1456-bd08-4918-b24b-51e517d6e547",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "2f895acb-ffce-4804-a4de-6bbfde195d50"
        },
        "item": {
          "id": "2065f0ce-2d5d-4cc7-9006-d05aac57dfaa",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "fb47a72a-afd5-4151-8746-1552fc362323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0725ec78-2852-443a-9e09-10c50a39a5ea",
        "cursor": {
          "ref": "858bae98-eb22-4415-b041-26a26eff7ec8",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "10beb1f7-94cc-49a3-9712-df6e360691f4"
        },
        "item": {
          "id": "0725ec78-2852-443a-9e09-10c50a39a5ea",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "387f6af2-7e4e-4bc0-8c31-7f2c9408e0c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec02aba9-a781-4295-91bf-706ca74257ad",
        "cursor": {
          "ref": "79dde893-3ce5-47ef-a6de-8917310058d3",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4ab96433-14ea-4b4a-8932-b3518fe4b195"
        },
        "item": {
          "id": "ec02aba9-a781-4295-91bf-706ca74257ad",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7c0e0ba2-97d2-44d5-9c4f-6179d8e33380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "952a853f-6254-4f11-a74f-87c06c763e59",
        "cursor": {
          "ref": "afad92c2-f898-4ca3-9eb9-e9c293d4cdc4",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d1df7292-0736-436d-bb22-433624783e81"
        },
        "item": {
          "id": "952a853f-6254-4f11-a74f-87c06c763e59",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7efab3af-1fc7-4cf4-8a6c-506e5400b7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a692bc39-93c1-482b-8af2-98d4586f905b",
        "cursor": {
          "ref": "f0e33cdd-a2de-46f9-839e-cd7ac5a2c314",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "bd857440-2826-4819-a648-acf9767120de"
        },
        "item": {
          "id": "a692bc39-93c1-482b-8af2-98d4586f905b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4c72b540-b72b-4f1a-89d6-d6480fefa2e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "548b7b59-3dbf-4149-83a7-f3bb7dca729d",
        "cursor": {
          "ref": "f8c28b52-f051-467d-9d24-5bc13ea3ca2c",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "156c7f22-c9a7-4939-aafa-be5fd1743e0d"
        },
        "item": {
          "id": "548b7b59-3dbf-4149-83a7-f3bb7dca729d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "67c5deda-7bd9-491a-80ec-cc321852338c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f3f764-777c-4f57-a2da-5f3244203df6",
        "cursor": {
          "ref": "c676c1a7-2d58-4ec2-b5fa-0e4051d1114f",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5d36e6e4-dc2b-4f61-9ad4-f1906cb2106c"
        },
        "item": {
          "id": "99f3f764-777c-4f57-a2da-5f3244203df6",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "db3ca86d-af92-47b3-a467-ce88bebb7c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ae96c14-0170-45f2-8876-449f5d4f00ec",
        "cursor": {
          "ref": "a9cadf1f-eb3a-4d3a-9a29-44bfebc42bc3",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ce250bd2-18b9-41b8-aac6-5e61a0130d87"
        },
        "item": {
          "id": "4ae96c14-0170-45f2-8876-449f5d4f00ec",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f0e16e93-1b70-4dd1-891b-23cf7636786a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b169ca-8c8b-48e7-94fa-37e41deb346e",
        "cursor": {
          "ref": "e0ae127b-ce4d-4851-8b0d-c957020f19b6",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "5b6d7be4-268c-4b82-b749-694428b8c8a2"
        },
        "item": {
          "id": "f0b169ca-8c8b-48e7-94fa-37e41deb346e",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "8ac42c7d-a3c8-48e1-b8a7-d9309cb5daec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a03616d7-3bb4-41d8-be88-7f3c52666cf2",
        "cursor": {
          "ref": "ce1fcc43-7edd-4780-83b7-bb8404f32bff",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "9dd0d3c3-607c-4aa3-8c06-34261b5b586e"
        },
        "item": {
          "id": "a03616d7-3bb4-41d8-be88-7f3c52666cf2",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "7c38816b-0efc-41b3-ada5-946233f15bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb6057f-4be0-4304-9906-494fbaec4235",
        "cursor": {
          "ref": "a7780f7d-1a5c-441d-86d4-9365b0e37563",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "80ba708a-3d8a-41a1-b4d9-3d230a7c64a7"
        },
        "item": {
          "id": "4eb6057f-4be0-4304-9906-494fbaec4235",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "30c92f76-610b-4121-a592-05830140facd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf15605c-ccfd-4a23-bdbe-a0c6c327af5e",
        "cursor": {
          "ref": "146de942-5b45-4ca9-91d2-efc5b892e8aa",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d7b0e4de-ed15-475a-8245-7072650f05b7"
        },
        "item": {
          "id": "cf15605c-ccfd-4a23-bdbe-a0c6c327af5e",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "92b2007d-4e0c-4cfa-a512-f301eed127b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a89abe-10a8-4693-a3b1-f5febb4b0295",
        "cursor": {
          "ref": "8030be44-b49b-4471-b9e3-1b02f0b0ff98",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "cf3b1c38-35e5-43f2-869f-526a1827b76b"
        },
        "item": {
          "id": "c3a89abe-10a8-4693-a3b1-f5febb4b0295",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "816ed3e2-b570-4b67-b51c-99d71aa23440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee48c54-922d-4993-ad46-914ef2bde34d",
        "cursor": {
          "ref": "34a740c4-6cc6-43ff-ae72-f61349ec603f",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b6dbab74-4922-485d-a3f7-3239e2b429dc"
        },
        "item": {
          "id": "5ee48c54-922d-4993-ad46-914ef2bde34d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "af363f85-e075-4f09-a9f6-27d944f26d15",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a98115-7d5f-43ab-b351-1a65ef411e66",
        "cursor": {
          "ref": "ef473b13-31ba-490c-a0c4-307c62524b1b",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "c84fd798-ce07-4e22-808b-e3f411a4e48c"
        },
        "item": {
          "id": "52a98115-7d5f-43ab-b351-1a65ef411e66",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e5d609e7-b145-4c0f-9187-bd9729709dc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe04c3d-7f29-450e-9d6b-aa5dced83380",
        "cursor": {
          "ref": "43ce19be-560b-42c9-a24c-ca171abdad95",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "3fa88dff-429d-4c12-9841-0491fb7c6442"
        },
        "item": {
          "id": "4fe04c3d-7f29-450e-9d6b-aa5dced83380",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "fdcf1d73-f069-488a-9661-8575535b6c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65ed7d96-1f54-4f0c-ae6f-4b702de9789d",
        "cursor": {
          "ref": "0e826e02-245b-4b70-b73b-5f88fa1a3cf5",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "00bbf81d-1615-4116-8cf2-3c5a0c4fd456"
        },
        "item": {
          "id": "65ed7d96-1f54-4f0c-ae6f-4b702de9789d",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "8cc6485b-1f0d-47df-9c13-db6084365c6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5627c04c-fa28-4f44-acc9-524b0e68f970",
        "cursor": {
          "ref": "d05114d5-c5bd-4fe3-981e-2b03650ebb29",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8da046c8-f9fa-4985-8fde-2e91f2be4f22"
        },
        "item": {
          "id": "5627c04c-fa28-4f44-acc9-524b0e68f970",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c5a3c98c-16b9-4697-b03d-526154214d44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c86cce9-c883-4ffc-b91c-fc87143589a7",
        "cursor": {
          "ref": "6e6649ac-0d6c-49e4-983b-7f8aaf1e394a",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "06484bb1-50ba-4f28-bbe5-158ba5dda92c"
        },
        "item": {
          "id": "5c86cce9-c883-4ffc-b91c-fc87143589a7",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "56f95bc1-2bcc-4673-b401-5357e47697ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a1d97b9-1c61-4b37-904e-7d17c6440be0",
        "cursor": {
          "ref": "71e8a36d-3bb5-45c3-be15-f0214818e4e0",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "acd11788-4ec8-4357-b930-1aa008dfd3ca"
        },
        "item": {
          "id": "0a1d97b9-1c61-4b37-904e-7d17c6440be0",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c6ad7e63-c6bc-46ff-9f05-05803c78ce7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e25c8a81-6fcc-4d09-b289-13a15db9febb",
        "cursor": {
          "ref": "31636d54-b7f1-4d2f-a19d-02e54bba7fc1",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ce5452b3-3116-4452-a497-2c81022b9485"
        },
        "item": {
          "id": "e25c8a81-6fcc-4d09-b289-13a15db9febb",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "bc4eb307-ff87-4032-8728-722fd997abd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90fef5e-3cce-4e7f-8f05-a937198a0874",
        "cursor": {
          "ref": "07949cdd-1f3b-432e-880f-121ec71a9c92",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5a4ab3c9-a577-4452-ba1f-feded6a8ac4a"
        },
        "item": {
          "id": "d90fef5e-3cce-4e7f-8f05-a937198a0874",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ac24c50a-dde8-4fd0-ab82-02a9809a66ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9f1920-05bc-400b-b5e6-ef0463c455c6",
        "cursor": {
          "ref": "1d251447-00ff-4236-947d-9faca949c7f5",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e0a177c7-360b-4f54-b5f6-a2fb90c6202d"
        },
        "item": {
          "id": "3c9f1920-05bc-400b-b5e6-ef0463c455c6",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "198bc84f-6e5d-4bf4-984f-fe2b1b63ad2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99bbef50-55f8-4ba0-b22a-a815c84923fa",
        "cursor": {
          "ref": "12f6092c-8433-4166-8046-0542314eb4ec",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2bb1d113-c53c-4de6-8f7b-51fdb3d39aac"
        },
        "item": {
          "id": "99bbef50-55f8-4ba0-b22a-a815c84923fa",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "28986c51-93a6-4aae-802e-3040e28a92c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f0c9fe9-d5aa-4b19-9661-ac3fd68c9324",
        "cursor": {
          "ref": "fcdaa955-8dd5-41d3-8ab1-33545b6eb513",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "3bc59f19-710a-437f-8033-5673ced95518"
        },
        "item": {
          "id": "9f0c9fe9-d5aa-4b19-9661-ac3fd68c9324",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d60f1032-72a6-41c7-bd11-b45fa6922d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a725d0-4b66-431e-b6c5-98cde1331245",
        "cursor": {
          "ref": "a38537d6-c7a0-4b1d-8175-3144e1828ae7",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "6f115904-928e-48f3-9363-ea7967be83d1"
        },
        "item": {
          "id": "c4a725d0-4b66-431e-b6c5-98cde1331245",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "dc620c44-67a4-4a72-83ac-96fea649b08a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c80b08a-cbb9-405c-96ed-422f0ada5c0f",
        "cursor": {
          "ref": "be138e9f-6dd9-49da-992a-e6a16ecbe7d6",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "cbf2a5ae-11bc-42e2-b11a-6618ffceeeab"
        },
        "item": {
          "id": "4c80b08a-cbb9-405c-96ed-422f0ada5c0f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "84fbcf1d-f19e-45e0-8d23-cf2e94215243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e68e92c-3849-46d3-aca5-aad5369ae16d",
        "cursor": {
          "ref": "90c0cff3-cafd-4dca-9981-d1cac646b5d0",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "31e6aae7-d6fa-41ea-b56f-9716a283fb47"
        },
        "item": {
          "id": "8e68e92c-3849-46d3-aca5-aad5369ae16d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "576a62bc-f840-4fee-8c0e-6fda79ad2b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd10e2cf-ea02-44f2-80ac-cbff6d1f3604",
        "cursor": {
          "ref": "82f8a883-4940-406b-bc0b-b2e359911eda",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f5413328-ba32-493d-a8b1-af9ec6fe4e76"
        },
        "item": {
          "id": "dd10e2cf-ea02-44f2-80ac-cbff6d1f3604",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "300ee442-dabb-401a-8220-b43ecc17a0e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d325fe-09cd-46d2-ae14-ebcbadfe838c",
        "cursor": {
          "ref": "375b5c3b-b991-48b8-9720-bac270207bf8",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c5667940-aed2-4dc8-9be4-fed28c7e5296"
        },
        "item": {
          "id": "68d325fe-09cd-46d2-ae14-ebcbadfe838c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f001294f-75eb-4424-88fc-1396a91506d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d08ca9b1-32c7-4398-9c4a-a50c92da67be",
        "cursor": {
          "ref": "bbd9fb61-6495-461b-8fa3-8bdd1100fd12",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "240b188d-904b-4b04-83d9-32911c49079b"
        },
        "item": {
          "id": "d08ca9b1-32c7-4398-9c4a-a50c92da67be",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "21a6468e-b656-489d-9f1e-9d7914b248f1",
          "status": "OK",
          "code": 200,
          "responseTime": 210,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "869b4f80-a6b7-49e0-9af9-83a59da21c09",
        "cursor": {
          "ref": "63647b60-3df0-4731-8a3e-a7ed20447735",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "0cd75d96-fdd5-4929-bea3-c07c5ce7aec4"
        },
        "item": {
          "id": "869b4f80-a6b7-49e0-9af9-83a59da21c09",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "fedac02d-1af0-434a-9b75-59c2db18ff18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "339edcbd-cab8-412d-a982-964a740f9652",
        "cursor": {
          "ref": "93aad518-15bb-4614-a154-d2df953c968e",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "9267d273-30f9-494c-993d-9f405bb2d8cf"
        },
        "item": {
          "id": "339edcbd-cab8-412d-a982-964a740f9652",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "74d7e651-2d98-4fa0-b89a-25ec01d86366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d589d0b3-fdb9-4d3f-99d6-6113621524d9",
        "cursor": {
          "ref": "9707d434-fb72-45ec-b620-232c2f7aabf1",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "fd338430-55ad-4966-9746-65579c852ef7"
        },
        "item": {
          "id": "d589d0b3-fdb9-4d3f-99d6-6113621524d9",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8d9ad2f5-5cf6-4e79-b379-dd14a1e47ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc6ad37a-2d6e-46d3-8509-820461c9566f",
        "cursor": {
          "ref": "b3e6aa8b-1f60-4c53-af80-edfc039fbc6c",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "4a3b119b-0e18-492d-952c-f92dfb3d9574"
        },
        "item": {
          "id": "dc6ad37a-2d6e-46d3-8509-820461c9566f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "585937e5-2f2d-4f7a-af2b-c53e629217aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "076dc9ac-220e-409e-a8cc-952fe1ec5b0a",
        "cursor": {
          "ref": "46dd1091-86b3-4159-bcfb-b5e0232b7568",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e39b07f9-9e89-4e8b-aff8-344eb6e4e1f3"
        },
        "item": {
          "id": "076dc9ac-220e-409e-a8cc-952fe1ec5b0a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e37d5d21-ecfc-49e9-b3f1-19aae890bbf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d3bfa08-cc44-4270-b503-a3b269027b3f",
        "cursor": {
          "ref": "b7bae80a-24ad-495b-8697-c52988d948f1",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "366194c6-2ae2-4846-a20c-9b34a0c2be90"
        },
        "item": {
          "id": "2d3bfa08-cc44-4270-b503-a3b269027b3f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c6ec5d77-62a0-427f-9c6d-61525b9d109b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5d4e7d-d955-4b73-aba1-d4ebb824a00d",
        "cursor": {
          "ref": "341ed44e-ded7-4721-9b26-c9f948065f29",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "67e4a988-6505-4c6f-a2c5-d21bbb0663b8"
        },
        "item": {
          "id": "9e5d4e7d-d955-4b73-aba1-d4ebb824a00d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "dc3962f0-3a8a-469d-b626-1d6ab720a709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9903575d-e265-4fd9-84dc-712666ead19e",
        "cursor": {
          "ref": "e79cf25c-46c7-4f7a-bb5a-f41c6b149c01",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c7c77efb-9147-428d-818a-c4f9ac48cea9"
        },
        "item": {
          "id": "9903575d-e265-4fd9-84dc-712666ead19e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "120e348b-a94b-4c10-bf12-2153f6425b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e686df88-db14-4984-9f99-ba7f4afaa9bb",
        "cursor": {
          "ref": "4b2ab617-b832-4887-8231-767b84379c46",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "22a3c43b-5cd3-4134-ad7e-c4385ed6535a"
        },
        "item": {
          "id": "e686df88-db14-4984-9f99-ba7f4afaa9bb",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d4a3367f-fa73-43e0-a3a5-3786d1e90d45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "160fb28b-c94c-45ef-9f81-ea6ff0366b14",
        "cursor": {
          "ref": "32e85700-d6b1-40e8-bcf1-8b20f92f0398",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "96a6584c-2f3e-401b-92a9-d3d3cbd0f637"
        },
        "item": {
          "id": "160fb28b-c94c-45ef-9f81-ea6ff0366b14",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "81ef5d3f-7805-44e8-8567-b05786bdf378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f69b39-3c11-4b5e-9790-c5de537a88c1",
        "cursor": {
          "ref": "3b2018f3-54d7-4900-b52f-244a45f3b07f",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "66e66e01-2c43-45e6-8232-7b3923da9446"
        },
        "item": {
          "id": "04f69b39-3c11-4b5e-9790-c5de537a88c1",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e184bd55-13c7-47c6-b58b-c81388f3450f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e3d152-77d2-4c80-9f7b-07e1849029ac",
        "cursor": {
          "ref": "abd24ae8-6b80-4f41-8333-b634ff5c1916",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d1c23d8f-7c73-4034-938b-6ac763a27b11"
        },
        "item": {
          "id": "c5e3d152-77d2-4c80-9f7b-07e1849029ac",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "26680f96-aaff-46de-809f-fcc3d1948871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02192e0d-3480-466a-8254-a404a69d4d03",
        "cursor": {
          "ref": "a3b3e6d6-c34f-4115-b7ba-f881e96d5a9a",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "eecc7882-1fe1-4b1f-a3a3-e5b6c04919d8"
        },
        "item": {
          "id": "02192e0d-3480-466a-8254-a404a69d4d03",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "854ea2e7-9304-4d2b-a87a-e7d4c74ba47a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b897149-ad2d-4ff1-90b3-fa9550e8633a",
        "cursor": {
          "ref": "8ac956d4-8806-46be-b340-2ae8ff6c896c",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "8b77dbb5-6051-45ea-be63-b5f49ddfbf44"
        },
        "item": {
          "id": "7b897149-ad2d-4ff1-90b3-fa9550e8633a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "35260c7a-4132-442d-8fe2-81c9f1b96760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0077eed7-5461-4476-b043-68919f88ae31",
        "cursor": {
          "ref": "1fbec9a5-e0b0-4456-a507-452eb7cbbf53",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "8592d8bc-351d-46a5-8398-c3390fdd44be"
        },
        "item": {
          "id": "0077eed7-5461-4476-b043-68919f88ae31",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "60df7c97-d14c-4ca8-a30c-f144f08be168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "277f95ff-7e38-4dcb-8675-80db17daa155",
        "cursor": {
          "ref": "5adbdfc5-1408-40f0-bfcb-a71acbd1ab80",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "1395c5c4-0f58-4082-9618-5cb347d5195a"
        },
        "item": {
          "id": "277f95ff-7e38-4dcb-8675-80db17daa155",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "7a6f5bcf-e3f0-4eff-84dc-4734ee44e863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b3e87a-6f09-4fa1-8513-c888c7ca4f22",
        "cursor": {
          "ref": "f2417bbc-e2cb-4e3d-b790-38e50772929e",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5b2a246a-2a0c-4fec-9469-9a2ae2e82b2b"
        },
        "item": {
          "id": "c3b3e87a-6f09-4fa1-8513-c888c7ca4f22",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "57eba490-ffe5-4c7f-b7f4-3c22a4f12081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00caae4e-4e51-4722-88a1-2eb146f01f03",
        "cursor": {
          "ref": "61ebeafc-afe3-4936-9b31-dc68f99dd81f",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "db032ace-c9bd-41c2-bc83-7cf60bbb79f1"
        },
        "item": {
          "id": "00caae4e-4e51-4722-88a1-2eb146f01f03",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "90d6986b-d029-44df-a64a-f4590743cf48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bbee040-d453-4214-b258-dec2b7d5cfab",
        "cursor": {
          "ref": "3c6aa9e6-c597-4926-94c4-87fe9b98432d",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "296f34cf-9e3f-4904-b30c-c71da95710d0"
        },
        "item": {
          "id": "9bbee040-d453-4214-b258-dec2b7d5cfab",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "8f81f7fc-23a1-419f-8192-189e593799c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71fae777-ba41-4927-bd21-42e6c0b41065",
        "cursor": {
          "ref": "1d1b281c-bc79-49e2-aa83-2c443749788e",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0d8e5023-c3c4-408f-9456-bfe783483aa6"
        },
        "item": {
          "id": "71fae777-ba41-4927-bd21-42e6c0b41065",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "bd83ce3c-3137-42e3-8eb7-44dc58a6a38a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ffed82f-ff7a-42e8-ac4b-41609120469b",
        "cursor": {
          "ref": "941d1e66-ea94-4009-b065-57107ab139c2",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d6d4e1bd-3be5-47a1-87f2-2d7892de99bc"
        },
        "item": {
          "id": "1ffed82f-ff7a-42e8-ac4b-41609120469b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "5feb2b8d-7b35-4c4f-884a-0c5594ebcd50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c84bc6-2bc0-4940-b0ee-e3664edd8d77",
        "cursor": {
          "ref": "d45b63f6-bfb9-46b3-9acc-e719f546f1af",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0f0bb3ca-54fd-4bbd-ab0f-48d7d3463e96"
        },
        "item": {
          "id": "06c84bc6-2bc0-4940-b0ee-e3664edd8d77",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b037e728-ad20-4a0e-b9a6-218ed01dd15c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46af995a-6fa7-40dd-9084-da81d7b224f5",
        "cursor": {
          "ref": "e203e7d2-8186-48de-b46d-e8a60828dfb7",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e8e918d0-adad-4921-af3a-415c001fcf4d"
        },
        "item": {
          "id": "46af995a-6fa7-40dd-9084-da81d7b224f5",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c4cf9270-a748-42f5-9e7f-51e24bf6fa33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0509a2d-6eef-4019-8922-370d14a885d3",
        "cursor": {
          "ref": "e460adfd-542e-4d3a-b93e-755f0002f1ff",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "50a7c25b-905e-4a0b-be65-b3cafac466f4"
        },
        "item": {
          "id": "f0509a2d-6eef-4019-8922-370d14a885d3",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "355ace0c-f384-4701-ae80-2c7016b9423c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "796b1169-c7c9-49e9-8272-f7a8fed9ffc4",
        "cursor": {
          "ref": "e7491ae3-67e6-434e-8428-baafe42199b0",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d6d58567-a819-4f3e-9773-656f3fc72720"
        },
        "item": {
          "id": "796b1169-c7c9-49e9-8272-f7a8fed9ffc4",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "848c602c-44ab-47db-98b6-0eedba23c71b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d56b325-2bca-426c-b7ae-bf30fdfe42ad",
        "cursor": {
          "ref": "c4cf1713-e738-4a5e-9adf-27f26cbb6451",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "df848617-bb5b-4812-aeaf-a69d9b0d5ea8"
        },
        "item": {
          "id": "3d56b325-2bca-426c-b7ae-bf30fdfe42ad",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "51e5e7bc-c484-437c-9ed7-7aff318fd0f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c16569-f07c-4d26-997d-bd9612b62ea4",
        "cursor": {
          "ref": "8ec7d7ee-5273-4dbc-b07a-b1d740d0d422",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "307fdc3d-bdd5-4871-bc43-988067c38ef0"
        },
        "item": {
          "id": "78c16569-f07c-4d26-997d-bd9612b62ea4",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "8ca5b2c6-21b6-4e9d-a9f1-f6ce7bc48cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd83e26b-d4e2-4723-a0be-b669baec38e9",
        "cursor": {
          "ref": "11f35749-84e9-4f61-a0f3-a37c92452da6",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "dc3fc406-cc81-477e-9e8a-177c7b504532"
        },
        "item": {
          "id": "bd83e26b-d4e2-4723-a0be-b669baec38e9",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f79dc70c-9f63-487f-ad3a-3df85fb53aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4782f4f4-8981-45e4-b38e-2e349d1a593b",
        "cursor": {
          "ref": "e2d65b17-26bd-41a7-a47d-bc2058793083",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "af861051-ed90-41fb-ace7-a6079ef2c260"
        },
        "item": {
          "id": "4782f4f4-8981-45e4-b38e-2e349d1a593b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ab80f643-a09b-4a56-a084-6bcf5812dff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b20324fb-9a4f-4598-bcbc-b45faf5bb893",
        "cursor": {
          "ref": "9ff123ab-bec3-4a69-b3c3-6df47d758aea",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "4acee614-18c5-413b-9a83-2f0f5bd00107"
        },
        "item": {
          "id": "b20324fb-9a4f-4598-bcbc-b45faf5bb893",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "da670edb-36e5-40a3-88e6-016031feef30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "810595eb-7c56-4b69-97aa-c4ef7269ee74",
        "cursor": {
          "ref": "5b549474-550a-4cfd-8eed-0147267b8f72",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "cec6c162-30e9-4d92-b696-6a2d26bc1bec"
        },
        "item": {
          "id": "810595eb-7c56-4b69-97aa-c4ef7269ee74",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "73d74739-aaa8-4f7a-8a2d-cc0f48735f67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dcb9aa0-610b-4370-87b2-721906516ca2",
        "cursor": {
          "ref": "ef33f3f2-7c17-4356-ab25-60fa250a1080",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "3c749740-b04c-41ff-9f94-9a2c4f69e793"
        },
        "item": {
          "id": "3dcb9aa0-610b-4370-87b2-721906516ca2",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "12487399-a699-495e-98ff-ad7975d10b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "707db157-d17f-4674-8ed4-f2ddc5460034",
        "cursor": {
          "ref": "ea21eedf-be78-45a5-bf4b-c64ab2b2c161",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "fd1b5ace-82df-47fb-9452-54824a9796ab"
        },
        "item": {
          "id": "707db157-d17f-4674-8ed4-f2ddc5460034",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "1e312f11-2e2e-4ef9-947e-fa05c075ebb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d36372-a8d5-4276-8326-d1a965bba03b",
        "cursor": {
          "ref": "fdf059e3-636a-4a27-8a4b-9d0b0867abae",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a16406d3-2699-4ce0-898d-0e0f096199dc"
        },
        "item": {
          "id": "d6d36372-a8d5-4276-8326-d1a965bba03b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f852ef10-8398-460a-b9e5-7df6187cfeb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f7c3e5a-a83b-4767-85a6-f8fc1e2de0d6",
        "cursor": {
          "ref": "0a41aa39-afd0-45a6-8727-5255bf4ef6b4",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e2c4172e-ff43-43f9-ac27-beb639158273"
        },
        "item": {
          "id": "8f7c3e5a-a83b-4767-85a6-f8fc1e2de0d6",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c02048fe-389f-4f01-8e95-50cea2fc57a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "334dfd89-a3cc-4ae9-819e-d15674c7bbff",
        "cursor": {
          "ref": "689933b9-e6f0-4e7b-ac88-8371f612d35d",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ef5704cd-2650-4337-b2a9-8fc99de5f82d"
        },
        "item": {
          "id": "334dfd89-a3cc-4ae9-819e-d15674c7bbff",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4724940a-4e03-47d5-9927-061f98a967ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f364f3-b919-42ca-9535-4065fb033788",
        "cursor": {
          "ref": "788b6252-6313-4e59-922d-be2bffb1a7b6",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "eb5f6e98-d53d-493d-806c-9cb381b66738"
        },
        "item": {
          "id": "56f364f3-b919-42ca-9535-4065fb033788",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "0b442551-e395-4e46-bd4d-c7aa225908b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42fbff79-5789-4cf8-b043-1136b8d78303",
        "cursor": {
          "ref": "38c7727f-e983-4949-9f59-fe437ea617df",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "73f9ca7f-66c3-4ce6-b521-e68f787e834e"
        },
        "item": {
          "id": "42fbff79-5789-4cf8-b043-1136b8d78303",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ef55dc67-7613-4e70-b7b2-244efebb8531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "394b1211-28bc-46fd-b8d6-3e76aa4c877c",
        "cursor": {
          "ref": "fb11d4b9-650d-4b8c-bda9-3ef4cdf096d5",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "0d8dd35d-92e9-4515-84d7-6a397ff97182"
        },
        "item": {
          "id": "394b1211-28bc-46fd-b8d6-3e76aa4c877c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "024b25ab-4e12-4c26-b993-30a94ba748a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567dd384-ae58-4d02-8b04-80ec10ad0ae9",
        "cursor": {
          "ref": "84e897ed-952a-4ad8-a18e-2201699d4fb2",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8d33d41c-ad9b-4573-a301-4241c18cfb88"
        },
        "item": {
          "id": "567dd384-ae58-4d02-8b04-80ec10ad0ae9",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "014eb2d8-5296-4fd9-886b-834133580b67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f484cf-b30d-4cc6-bdd3-f568f7b21556",
        "cursor": {
          "ref": "ad826ab9-fe58-4280-8c8f-9cb7f8518da5",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "349c1cab-1158-45f7-ba17-bc5a5385e3ed"
        },
        "item": {
          "id": "53f484cf-b30d-4cc6-bdd3-f568f7b21556",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "510bb5e8-177d-4c2c-ac5b-31f4939fcd71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4e4a56-c58d-47e1-9bc4-30910e1e8803",
        "cursor": {
          "ref": "5f17a4c7-ffe0-49cf-8ce7-07875ee48e3e",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "72644112-beda-4fc7-81ae-ff29c3c83c34"
        },
        "item": {
          "id": "2b4e4a56-c58d-47e1-9bc4-30910e1e8803",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c5b5ca15-5662-4d77-8a0c-15218b6ba441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c225f2d-ea4e-428b-8aa7-b94b89c89f47",
        "cursor": {
          "ref": "466a3cf7-e289-4af6-beed-627eabf72019",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "0c67a629-b10a-41f0-97be-73c3f8c20d62"
        },
        "item": {
          "id": "4c225f2d-ea4e-428b-8aa7-b94b89c89f47",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3b7303b5-3500-4a59-874c-475a60f0897d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276912bb-b05e-4a5e-a285-0f363663de89",
        "cursor": {
          "ref": "5f3c8893-8a79-49ad-8f92-22853ec543f7",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "bb916e5e-eec0-4c12-a861-bdb823534442"
        },
        "item": {
          "id": "276912bb-b05e-4a5e-a285-0f363663de89",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d34195bb-7929-49ce-bee5-f73903e274df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1935d5c-846e-430a-803e-e74be952e23b",
        "cursor": {
          "ref": "b0ff5b9a-ea71-4558-998f-d5f8bca342de",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "1b406695-9a74-490c-b16f-9a0aaa24155c"
        },
        "item": {
          "id": "f1935d5c-846e-430a-803e-e74be952e23b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "bf7a2173-c2cd-4e14-9a7d-99f961535412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418470a2-ad2b-4625-9f57-c372255bd2e3",
        "cursor": {
          "ref": "2baa005b-ac16-4bc4-8056-6df0b2b660fb",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "b17e4d69-8410-43bd-be7a-66bcda0dc5b8"
        },
        "item": {
          "id": "418470a2-ad2b-4625-9f57-c372255bd2e3",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "6fca8dcd-dc90-4e42-8574-06f7400d88c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 127,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03d066b-f507-4046-99be-970bf2e104d5",
        "cursor": {
          "ref": "76afeee2-08ab-4717-a794-51bf937f799d",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "8ea60120-004e-4c81-bf68-216d687f235b"
        },
        "item": {
          "id": "c03d066b-f507-4046-99be-970bf2e104d5",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "331d0844-4c90-41bb-8682-3031da3efca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "249ba273-3004-4755-a579-fd36e60fcc11",
        "cursor": {
          "ref": "36833e1c-38f3-4328-ba0f-f2ca50456320",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c1e57b81-d223-4281-bb0a-a2f3f71b01c9"
        },
        "item": {
          "id": "249ba273-3004-4755-a579-fd36e60fcc11",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "df797359-953a-422b-b88d-ae34d2e1dacb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d366bf3-10c7-4e02-af5d-f59210d4dda3",
        "cursor": {
          "ref": "048c4311-869b-41b2-96d3-e84be2bfe21e",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "de7590f4-134f-44c3-b0e5-f66bf4473665"
        },
        "item": {
          "id": "6d366bf3-10c7-4e02-af5d-f59210d4dda3",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "67fcc854-af5e-40c5-96d5-303dc378c44f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1fce3c0-f0cf-4037-b498-76d0f101d7b4",
        "cursor": {
          "ref": "d9e97ad8-cb24-4380-972e-8e0c0605a67c",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "49249c29-5815-47d8-a398-03045f0e88a6"
        },
        "item": {
          "id": "a1fce3c0-f0cf-4037-b498-76d0f101d7b4",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "6719382f-f518-4ab5-9b21-7de3c6f2ac15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf1ec32-298b-4e4b-ae01-264deca1d75e",
        "cursor": {
          "ref": "f0e68330-7d6e-4857-95eb-e0c3ccfd3b58",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "cfd84548-837b-4b21-a02c-dcaf42f94731"
        },
        "item": {
          "id": "9bf1ec32-298b-4e4b-ae01-264deca1d75e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "87f60347-ef76-4b62-b9b4-704df6c6795b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "165f26bb-42ad-40b4-964b-046036e5d2ae",
        "cursor": {
          "ref": "e039ad2c-893b-406a-a293-4be65dbc300b",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e44d89fd-e455-4b00-8583-84d70175fa92"
        },
        "item": {
          "id": "165f26bb-42ad-40b4-964b-046036e5d2ae",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "06aea099-7b23-4be6-9036-afc485ac8860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ded8af7-c14f-42c1-bed2-0409fb1f4a99",
        "cursor": {
          "ref": "a1c99262-8b4a-4970-983b-ee54dacc8750",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a4d6ef41-8a8e-41c0-8cec-41d134eea7a3"
        },
        "item": {
          "id": "4ded8af7-c14f-42c1-bed2-0409fb1f4a99",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e179ba1e-8fc7-4286-ba6a-93eb8a43eccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c1aca2-fa1a-4a80-bf09-a352b9ab907f",
        "cursor": {
          "ref": "d0966741-d3a0-419c-bb56-42f62394d5ae",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "043cbef3-077d-42e3-ac35-41a5708a415c"
        },
        "item": {
          "id": "12c1aca2-fa1a-4a80-bf09-a352b9ab907f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "95f55dd1-629c-477a-b353-6afff533bae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20eb0561-170d-46d4-97d0-f0edb8074f86",
        "cursor": {
          "ref": "688e4772-b36d-4669-9898-e033dcf1dc77",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4ebe2144-de60-4e2d-b543-7da50d6d3d70"
        },
        "item": {
          "id": "20eb0561-170d-46d4-97d0-f0edb8074f86",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d3183b61-f354-4b7c-8edf-49c755427a3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92aea031-05d0-4f83-8def-08847177a949",
        "cursor": {
          "ref": "23b25bc4-3d50-4743-8f1c-08c0942e06b7",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "7bf2a648-6da5-4fcd-86de-aeab6a96ff26"
        },
        "item": {
          "id": "92aea031-05d0-4f83-8def-08847177a949",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ab22d2a1-985c-4cad-8bda-dce98f92b39f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa4a4a3-101e-4cf7-9969-e2300f25491c",
        "cursor": {
          "ref": "df0daf2a-1733-4cdc-979c-6a8859ae5f3c",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "5969d511-674a-4cd1-931e-707bd3f30738"
        },
        "item": {
          "id": "5fa4a4a3-101e-4cf7-9969-e2300f25491c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "721e75f2-d20c-4cd3-a9fd-b9702d4a0754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ecbd760-6851-4894-85eb-939151ed4eff",
        "cursor": {
          "ref": "08c8697e-8156-4056-8f99-fd3831da0a33",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "1841039b-e4fd-4bed-a2ac-eeb3bbb1f0cb"
        },
        "item": {
          "id": "3ecbd760-6851-4894-85eb-939151ed4eff",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f4b88b44-4dd8-4046-b303-6e3773b3a0ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a387ae5d-349d-44dc-8986-b9d18de27acb",
        "cursor": {
          "ref": "51c44ab7-18a8-4867-837c-f48ad51fc1e1",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "608ee0fa-14e3-4368-9e52-624ac1217b7d"
        },
        "item": {
          "id": "a387ae5d-349d-44dc-8986-b9d18de27acb",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "4875aba1-4122-404b-a921-fe600d3ee638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a5342e-4288-478b-805f-7f7022486e5b",
        "cursor": {
          "ref": "76e23b56-301e-4926-b090-d62119fa8bd5",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "2a14cc88-17b2-418a-9d80-7a2823025f23"
        },
        "item": {
          "id": "27a5342e-4288-478b-805f-7f7022486e5b",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f6fb08ad-0d34-46d0-91ee-1be6241b9ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f26742f-98e9-46b2-9058-48bac37ea9d1",
        "cursor": {
          "ref": "c032d9d6-af65-4f62-84c4-b903250f86e5",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "5e6919d2-777a-4757-9569-50859fa7411a"
        },
        "item": {
          "id": "5f26742f-98e9-46b2-9058-48bac37ea9d1",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "4e47a4a2-72d2-4d60-98c1-adbc9c75dbfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a854b0-d4e4-4007-b0ba-8b9ad329446d",
        "cursor": {
          "ref": "9cfdf12d-b249-44a3-8316-a35843054c1f",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "2ba61792-1100-4380-847f-d29419b18a94"
        },
        "item": {
          "id": "c9a854b0-d4e4-4007-b0ba-8b9ad329446d",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "044f7f3b-9c4c-48bb-ad73-6ec4db8fe81b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25cfa63c-5a87-40c9-b90e-b8785e932539",
        "cursor": {
          "ref": "ac5b0f45-af44-4568-b547-abbcc6dfd8c2",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "0524f973-a854-4d36-b92d-052f9676c171"
        },
        "item": {
          "id": "25cfa63c-5a87-40c9-b90e-b8785e932539",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8c046836-0578-4c81-af43-d60573114f30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81add123-617a-4db0-b748-2ce24b4da399",
        "cursor": {
          "ref": "514e4821-fc18-49e5-99ea-cce0abeb067a",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "a433f67c-ca06-452d-b6e2-4263d0b48ba1"
        },
        "item": {
          "id": "81add123-617a-4db0-b748-2ce24b4da399",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ffa001c3-e74e-49ab-a6f1-4034fda7f112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71103e89-55a9-44e8-9575-a2dbf52e3830",
        "cursor": {
          "ref": "621aab80-29b3-46c1-a5ba-8aa895e85d0f",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "61316ebe-0ad7-41a0-a2ea-9b21a09527e2"
        },
        "item": {
          "id": "71103e89-55a9-44e8-9575-a2dbf52e3830",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "965db5b5-5a73-4af1-81bd-8face376a3ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31dc9a01-ca4c-442a-b42c-29dca4903c50",
        "cursor": {
          "ref": "d745c322-fd66-4730-a0cc-6459b4d53dbe",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "52153099-4a4d-4b90-9820-7972013c26a3"
        },
        "item": {
          "id": "31dc9a01-ca4c-442a-b42c-29dca4903c50",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "aab9225b-f1d1-46d6-a56a-726178a59060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b8fe490-7fa5-4f41-9346-cf1680fe3fdd",
        "cursor": {
          "ref": "2deaa6f4-6bca-4273-8ab1-3bc7978350af",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "01321942-6462-49be-b501-6ba903809bb3"
        },
        "item": {
          "id": "9b8fe490-7fa5-4f41-9346-cf1680fe3fdd",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "bcd1dc96-75d1-4bb2-bfd4-542958e2c82e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fbd1822-b371-48c6-8f92-8679925d719e",
        "cursor": {
          "ref": "54b95107-fbf1-4dfa-bc7d-0274e9a49e26",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "2ae3a7cd-7d80-496d-b7a9-ce2f8466ab04"
        },
        "item": {
          "id": "2fbd1822-b371-48c6-8f92-8679925d719e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f3baa63b-541f-40ca-bf84-a70d4ee014a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f6e5a9d-c658-4d83-b292-a728a02abb4a",
        "cursor": {
          "ref": "0bb3f1d2-a1da-4121-beff-b18dda56604c",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "ada9ac1c-005b-40af-9ffb-2e11adf26023"
        },
        "item": {
          "id": "5f6e5a9d-c658-4d83-b292-a728a02abb4a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "cf1a5af5-9a70-45c4-b635-7c53621f5ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a2dbb2-ad2f-4f56-9288-7f0278d262a5",
        "cursor": {
          "ref": "5ab4bdaf-5d35-41b6-8c90-9b7a62d29e8a",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "4e020e6d-e0eb-4464-af24-e8b8c21b53b9"
        },
        "item": {
          "id": "a8a2dbb2-ad2f-4f56-9288-7f0278d262a5",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "3f6ad586-6cfb-49b0-9d75-562ff3cc80da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01da67c4-1fc7-4683-89e5-c2844959a1cb",
        "cursor": {
          "ref": "fd13c2b0-be7c-4868-94a0-9a08c63b33be",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "21949805-06ea-46c5-ac09-d92fe7bfd2f9"
        },
        "item": {
          "id": "01da67c4-1fc7-4683-89e5-c2844959a1cb",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "938fc9d4-5877-4290-a850-5a0ed260c7b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4daab57e-63d4-4eba-b698-da35263726d3",
        "cursor": {
          "ref": "8e426fc4-3d8a-417e-9e55-62721d9104b4",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "d9a51b56-74cb-4386-bacc-a05cf8f45392"
        },
        "item": {
          "id": "4daab57e-63d4-4eba-b698-da35263726d3",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "cbb1e6af-e8a0-4a28-97a0-87fa41075dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b52e13-18a1-4812-aecd-599b81ee1522",
        "cursor": {
          "ref": "8c2be613-4641-4b32-9780-c16cbff29899",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "a076f778-11f2-4142-a0d0-c91ee06ed26f"
        },
        "item": {
          "id": "59b52e13-18a1-4812-aecd-599b81ee1522",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "411510ff-53ad-4a81-9dbd-4da1b5825475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b2dadbc-6ee8-4063-9fa9-de9687bc2e47",
        "cursor": {
          "ref": "928a215d-c07d-4e0e-9b25-ac5e982c4b92",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "df896044-aafb-4109-82e1-81a651eaf004"
        },
        "item": {
          "id": "6b2dadbc-6ee8-4063-9fa9-de9687bc2e47",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "63bcc4e0-fe6d-431f-8290-3435bec7f83e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f069877a-8f75-4be1-aedc-83e1c6497d4e",
        "cursor": {
          "ref": "a566dd18-c4e4-433b-b9dd-89b338f5e2bc",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "3e629c9e-5aa6-4f7c-8397-d88817626aaf"
        },
        "item": {
          "id": "f069877a-8f75-4be1-aedc-83e1c6497d4e",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ed55a94e-920c-49fc-b8e3-51589d6a1f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711c8853-839c-4eb2-9c0f-c89320216dc3",
        "cursor": {
          "ref": "c04bd901-d0eb-457a-8dfe-7a8fa2c64645",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "5eeb1670-28c3-49c8-b989-6c00d87ed641"
        },
        "item": {
          "id": "711c8853-839c-4eb2-9c0f-c89320216dc3",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "8f79ee2c-2269-4634-a717-10c31ac51769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1023863-c386-4eea-b217-b0b4742c3466",
        "cursor": {
          "ref": "ce892e22-4193-41d6-b5c1-cda754ca9120",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "59e2a065-f846-43d5-96db-2990101996a8"
        },
        "item": {
          "id": "b1023863-c386-4eea-b217-b0b4742c3466",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "866fc09f-41e3-4096-88d1-0c1fc4d1565d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "721c28fd-6f76-479b-8b51-ed86530c437c",
        "cursor": {
          "ref": "5ee3cfd4-b2df-4f5b-a980-2003080b3200",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "5983c0d0-2a73-4042-a079-1957a46e4ba3"
        },
        "item": {
          "id": "721c28fd-6f76-479b-8b51-ed86530c437c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d7605c12-2aed-4bab-9f9d-efe3cbf5141b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "192c4a28-6dcb-4894-8e00-feddf311f727",
        "cursor": {
          "ref": "57aca53c-b70b-40e8-8435-5ca1b9cfe99b",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "9cc8901d-2dfb-4e14-8e73-2f561ceef223"
        },
        "item": {
          "id": "192c4a28-6dcb-4894-8e00-feddf311f727",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "1340a7e4-e5b2-46a1-8782-d7be1aa508fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0fc48d-0d68-4e99-9893-928f58a46c3f",
        "cursor": {
          "ref": "07bd7e8c-ec32-41c2-a84e-53181e66eb2a",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "a464de9a-3110-438c-bcd0-1129569168e5"
        },
        "item": {
          "id": "ca0fc48d-0d68-4e99-9893-928f58a46c3f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "12b4914d-46dd-4e44-b279-cd411bed1325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4905285c-34c3-42d8-aa30-8f13c4680552",
        "cursor": {
          "ref": "428a409a-4e11-469e-aeec-24b59bea38e9",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "53dc247f-17d1-4d0f-a87b-525870b48a9e"
        },
        "item": {
          "id": "4905285c-34c3-42d8-aa30-8f13c4680552",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "fe827d9a-1a14-4356-8076-c2cb5ad12eee",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41d449bd-0420-4880-9d2a-7ded2ac5ba45",
        "cursor": {
          "ref": "7d0c3fb1-da39-49c2-8a1a-2d65b4659239",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "9228a776-2f38-4688-9775-80972fe17bef"
        },
        "item": {
          "id": "41d449bd-0420-4880-9d2a-7ded2ac5ba45",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5ac1d50b-b89f-4c31-93ff-c1590c724ac8",
          "status": "OK",
          "code": 200,
          "responseTime": 127,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1099e31-89ac-4983-a98b-bbb712e71da9",
        "cursor": {
          "ref": "a2e4f0e5-5cb0-4dbe-99b9-fcb842788058",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "cd39fd70-e31d-4961-af0a-f0274a2c5c8d"
        },
        "item": {
          "id": "c1099e31-89ac-4983-a98b-bbb712e71da9",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a2473eae-3ecb-4f37-a15f-4039da7a28c5",
          "status": "OK",
          "code": 200,
          "responseTime": 2662,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc5fc8e-5a85-40a2-980c-0628c9e8512f",
        "cursor": {
          "ref": "a852300e-0aff-4143-99c9-d4a4e2ba6390",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "256a17d6-8b10-4d1d-9250-be8390c9ddd1"
        },
        "item": {
          "id": "9dc5fc8e-5a85-40a2-980c-0628c9e8512f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7caf02c2-220a-4dc4-89af-5cf04d7cd4c9",
          "status": "OK",
          "code": 200,
          "responseTime": 2335,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d40674e1-08b1-4948-95ff-45ed8076b1db",
        "cursor": {
          "ref": "c25f6e39-f441-424c-915a-8f30e76ff552",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "fd286caf-db7c-498d-a1a5-60bbacbf6ef8"
        },
        "item": {
          "id": "d40674e1-08b1-4948-95ff-45ed8076b1db",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ac0764b5-8d8a-4c00-9b8b-0592656c1bb0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d40674e1-08b1-4948-95ff-45ed8076b1db",
        "cursor": {
          "ref": "c25f6e39-f441-424c-915a-8f30e76ff552",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "fd286caf-db7c-498d-a1a5-60bbacbf6ef8"
        },
        "item": {
          "id": "d40674e1-08b1-4948-95ff-45ed8076b1db",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ac0764b5-8d8a-4c00-9b8b-0592656c1bb0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a95d22c-ca1c-42be-bbed-e03e53654a19",
        "cursor": {
          "ref": "cb67a7a8-d87e-4a86-a3d9-efb323940dfd",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "1eb3f3b6-501d-4b95-b12f-64ce50c7826a"
        },
        "item": {
          "id": "1a95d22c-ca1c-42be-bbed-e03e53654a19",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ee27e714-a133-4cca-bc23-8b0108b2a0c6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaec8151-084c-42cd-9ba1-8884154eeb88",
        "cursor": {
          "ref": "32101eba-9c4d-4682-b6d6-927593feaf1b",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "0e66d57f-ce00-4a33-b6e0-bbe6f5771d9f"
        },
        "item": {
          "id": "eaec8151-084c-42cd-9ba1-8884154eeb88",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d556e65e-02a4-4fcd-b28a-7a356f4eb066",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}