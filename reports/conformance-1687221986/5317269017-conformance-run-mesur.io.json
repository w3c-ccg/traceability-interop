{
  "collection": {
    "info": {
      "_postman_id": "e9c7f21a-ef69-4217-8f40-0424834c0fdc",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ea459b7f-ac8d-451b-92ac-39135f96338c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "5edd4532-c867-4424-93a6-7cf4aee6c68c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d6803698-b0f3-4379-a5ee-0ff25afbcf90",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "12e7daae-aa49-48e2-a584-36dff50ffb10"
                }
              }
            ]
          },
          {
            "id": "57209174-be60-4157-9b01-afe6648a7b36",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "75d68cd6-a6bc-45f5-bd09-eab8a2da0aee",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3838122a-a0dc-40a7-b55b-14386268ee0e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "bccc3243-637e-44c9-87fc-32a4b88a2316",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "3b5869b8-7b0c-4224-90ff-54fdb1308256",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f2942ec2-832f-4440-b232-18677257b905",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b451395c-110c-4b37-9629-3e3f0be0b998",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5d9ab5dd-5b1d-4074-bfd3-68d506552ad5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ce21f7f2-dbd6-4016-83c1-ca79ca762fef",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e2c95475-5afa-43d7-973e-3f8e7005e36c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "dfb708da-a565-4765-ba40-a7b937073fd4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cdff0c47-7cfa-4489-83da-9ff9e136bbbe"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e012d802-b74a-485c-80d4-ead1242ff8dc",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4d6a52bb-e5a7-40a4-bec5-6ffa16ed0688"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0c859748-3054-4920-8068-813b901f4bd2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2f3108a9-3ae4-43bc-a733-eabba1a28f39"
            }
          }
        ]
      },
      {
        "id": "f50e6985-ca49-4bbf-bc0e-bfd174b27024",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "2a628b15-03d7-4abe-ab35-41d1ae0ccb30",
            "name": "Negative Testing",
            "item": [
              {
                "id": "55157984-e7da-493c-99d2-25c16b7307d2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "35812356-1bc9-4f97-b96b-3f54b7f9f8dc",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90655e0d-c2b0-4044-8f1f-6e940ff67372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5c3f4608-8daa-4038-a1eb-ea239cc8f010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c224010-ce76-4f0b-abbc-3cc8b09003ee",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b344906-1cb5-460a-bfe5-7b7a5b1b4a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e049045f-f3ba-4400-8c15-f091c0e46989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8321dc20-854a-45f4-8fb5-b3ab75d3f515",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2e938c-6d1c-40b8-8cb2-efec62c43f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9c23d450-005a-40cc-9d03-4d9b6750055a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "569ffc52-4602-4bfe-85d0-61c88f18525e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b5ec2913-3fa4-47f6-b4bb-f9b6259d0168",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2904eed-2d02-412d-8d57-3a2f7d0a0242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "63727226-f001-48ee-9383-90ca5ab5f841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "903d7a4f-6556-4d95-94c0-083e1ae3ffdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a0d9666-debf-429f-a48d-354144de2d7e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0bc4b768-fac9-4693-95fb-4c1772192e68",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d0007095-c3bd-4ed4-8254-3fdff68e41fe",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3cfedb9c-01d2-40ea-8c90-cb882b4f196b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "2a3c0bb9-983d-4a62-a55b-747aa0676a3d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "81edef8a-81db-414a-903e-1e8df372f4ff",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "cbb9f414-ea87-4a46-9d41-0ead1a28f6bf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "68e180fa-3107-4acb-b127-a593dd2b07ea",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f33dcce8-6ee3-4679-9f49-7b459b7768d5"
            }
          }
        ]
      },
      {
        "id": "d3503cc6-f3fa-4669-b01f-deedfe6d5aa3",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3b0884b7-f082-478a-86f7-d715d7fd1f55",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1bde4cc2-f38c-4c36-ac28-2c27d14812c1",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f3381b46-f10b-4063-9d8a-22513dfcae26",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f373f218-afc2-4572-8828-89bb9ea74b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c57368ba-0057-4fd1-9f0f-d0212ae14b28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d281bde-4fba-4921-b5f3-0b1357b9f7f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc7ee839-22e6-4fae-930b-c40be7161f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fdb4b36-7b73-48df-a660-b3dd4881c213",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee022d0-e140-42f7-a71c-41e3903d13f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9df4a644-b87a-4085-9b80-033310483e4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f24a1a8f-0b95-4b68-b8b9-0e89c4ecaa15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b533f65-db5b-4c57-9895-c1104472c9ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "684b3f81-169d-4a9c-9b9e-9e0a9698b351",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8cd136f-f41c-482f-b086-5528e12fa04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f6a4c5e-7e7b-498b-839e-88b9a12e96d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248d21dc-dbd5-4f7c-9b54-b27bcc6416e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ada4c92-bfdc-4345-a6d8-6e4166a6c2cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "634c52ba-cd73-41fc-a7b5-b7203b3e740f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b214a87c-f820-4f88-ae0d-aa4873ba4b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eeadd63-d5e6-4489-861d-17f8402e2f15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a7e4713-7869-459f-93f4-d32e41ab3c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63b2af9b-5110-45b2-8e5b-bdd9cab42110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a78c28e0-15f7-4ecb-ab04-2dc8c23d3ed6",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b505574a-702f-4b7e-b193-b94be929f3cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a2fe0a5-d8b0-4f39-9098-755711c6856c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b23bf7ff-fa73-4ed6-85f1-9396209d2f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "15b5c11b-860d-4892-8eaa-6ba776d06cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794eabcc-5696-47e2-9ca4-957ae3315b52",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db7ce484-1d39-4437-a990-07adb1e8f9f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "598a842b-74de-4ac0-8b3e-c3930e91501e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b312fe75-106b-43ad-b9be-cf162a526604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a17ef7c-1ce4-41a5-8aa5-01476c5c9f67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "087560e1-31a9-40b8-89dd-0a8adf006ee4",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c5f4877-e9dd-4f09-9e7a-7c100708f992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3f89357-094c-4769-ae83-2a796fe09679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49800fc6-657f-419d-8e18-d3060e6e49ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c00b3a2-8720-4f9b-9b1a-8f80ee4b2e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d0f09f-ec72-40da-a9d1-fdd8a78257e8",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb78dfe8-bc08-43b6-bdaf-d9a6fc2a2ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93898e34-08dc-448d-959f-e1be1d93c1db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59bcbe1b-e126-421a-989b-8527d0ab2e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67448b8a-a02f-4596-bccc-302825124842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de8287c8-0433-4fb2-94ec-01987614619f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73dcc3a6-79df-4852-b2c4-45906b2f795d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8655135f-be35-42c8-a8ec-834471282982"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc08385-5687-41e8-b2f4-7285131c5538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4589e205-d9e1-4c2f-add5-8d548bf86650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a1910a3-fc58-4aa4-b88f-94290b03fc93",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a151bf76-ffd6-4a57-8bfb-fb03cd493e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4535d26b-332b-4751-bc1a-74342c66f5c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d12d1f89-39fd-413e-9cc0-97cf89254fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "173d9e0d-a7b7-4fd5-ac51-04cf19ce7c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06cc022e-83da-4b84-a224-19325fc5b523",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df70790-c1d9-4888-a51d-1f846301e8ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eff7a85b-9851-4167-8b07-829415bb3563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2990f115-5664-4679-a76d-036f7ea4a8f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b0b5b31-1c98-457b-9430-0e9ce2755660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71df38a0-3b47-40ba-ae8c-7f8e037d5b55",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b69441-0d93-47c3-8972-6c6194d41c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f2db2ae-f765-4df2-9148-15182ddaad09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88dd3478-349f-46fa-8b9a-01b103696332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "327791c3-cdff-4b22-800f-75b38c93d536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c44e9202-b191-4f3e-b8fe-319da576b421",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af90666d-2a5b-4e04-b2fa-615a1d22eaee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc6784ac-3c10-4298-bbc0-371e64307721"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d5f6e58-8c9b-4f5e-b495-58bd1c4e45af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e87c2f1-f9d6-4043-96bc-fa67d42d0ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c71c1ee5-4a65-42ff-a285-aad7d37184e3",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "defdb463-54a1-47d5-b3f1-91345467ed4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16440d00-ef1c-47b3-819a-1219e2a71b1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b98ed7cb-1091-4864-8c6a-3236af0e4fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d67bf90-bef9-4ad6-9d06-af0ad8ecb8bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e9e2192-8381-4547-9ae7-b20247bda3bd",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "879eee86-5cb7-4303-9081-0a0882b52bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3b0e3bd-4385-4646-a96b-91d6db5dff9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8840938f-799e-4b55-ad9c-9636dbe4eb30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b96dbad6-196d-4033-8c7f-187b071f00db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2464242f-e29b-4257-9b11-d18148ea69c9",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96232a3a-2437-4b1a-8834-cac3ab848793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a53ada02-fd15-41cc-a62d-96ac84a53fc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52d4cc7e-756e-4be8-bb73-8e8069d80722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf5ac537-421e-47aa-bbe4-b9473e8549cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f9f2bd5-a5be-4735-84d2-90e3e960ef81",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8856777c-065d-4cf9-8f93-b723a96e928a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ae764ff-3875-4a7a-8ae7-cf5c9df4dcc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5225f562-e90e-4b34-b3d2-8756a2a6d4ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac7f53a2-034f-4080-93d2-53cdca286a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fda91cf5-cc94-4c48-bc63-e760f449c839",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe4a493-65ee-4a2a-95f8-6cc6a91ad4b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36e1e2f3-6a54-4aa0-b8d3-17ab96c5c807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ce5c27a-60c6-49c8-8d0c-e3a7fa4911f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7de22e8-8778-4fa0-96cc-726054a894b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ef56d2-f10a-4658-94bd-c31b98fff72b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d651e886-55a7-4a54-bf69-131010c08265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2115e89e-4526-48c7-8a0f-f196a95adbd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18576481-8567-4900-a8cf-ea07e5b6f57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddb03f26-c286-4157-baa2-de75a19aeee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407a748a-6248-425e-b9cc-887bab93cfdb",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a40d5f1-333e-49c2-962f-7172c3cd954f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e484df7c-6e27-40ba-91bf-ed93456798a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c0a349-a80c-46f6-a1b6-1d077f8efe58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "32b5c615-c0f7-435f-af9c-8314ecc7b5a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4507feab-cb2a-488a-930a-0edc254bd45c",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a178ad1-a4ba-4ba9-ac62-3fb6f3a91de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cf32ecf-5af5-41e0-aedd-27ee57b3fc7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5baf3db-116e-44f5-a04c-3a9c907f3304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e83d585-705c-44a8-8f1f-ff35074c1964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8532713a-f64c-4cad-b055-117b457fc4f8",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a3c13f-5846-409c-a8f8-63d7d03af70b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a33d96a-f48a-4da4-9477-6730693a3427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06e09f1c-964a-4a27-a883-e99827d8f7ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "23db5b5a-e97a-427c-a5f0-2b6dee0fe4e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19f4a7cc-32bf-4e0f-828d-0b055b6fe029",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0419ec81-6e7f-491a-aeb9-a01e8fafcb98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3247bbfb-eb29-4924-ad91-03d5c648ab2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754741a8-da43-4ffd-a26b-7bf86fd90752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bb7efdb2-cf2d-4dd0-bf1c-60f0c8c12391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adba1c9e-65e9-45cb-b8f1-0e3fa795094e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a6c2f44-6354-41fc-a32e-108edc5f14f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42e2ae3b-2c64-46da-9763-7afb1940c398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1edad04-710a-47c4-8e8b-04493c3ea8ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6e20974-23c5-4358-890d-98c96b5795ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c3f06c-f701-44f5-ad4b-8170febff706",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e4d97c-a8b7-49bb-ae15-0f4333ad5f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6bfddde-d840-4315-bf7a-eefd98710d83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca318757-2174-4371-82fc-92a6044035e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "05f9441f-62e6-44b9-994d-c6b195e54def"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9353ad5-8207-4932-948b-a97012f69e98",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e60ebf41-414a-4359-97cb-e4118100b417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5960d96f-2309-4662-9ee9-98818733343f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df2fa62-c90f-49c0-b2a4-fcc0848c6c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "531c69a0-ccf3-4a55-bfad-468c7125e0b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0367321-625b-4857-a989-24287e8a4589",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e6bc129-cb2d-4878-8d44-b2056cf4cc3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb7f70f8-56ab-4e94-99ae-8f6a4a021402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c7f3ad-cff4-4faf-86b8-f630ae5c7ce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc4afd52-6436-448e-86ef-d459c3a74cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7965686-ad5c-4d06-a449-1f69143e0954",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f5d2576-a898-4529-83cc-993a0b77344e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b6940c5-1038-41fd-a5c3-c0508f678955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077ac9c6-10cc-4685-a644-03ae43e4aca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4edcb5f4-06c9-44c8-8ce5-aa3a55f8ffe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c06e2fa3-d542-4199-b119-7ee03c4b04af",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9901f1d7-e0a9-46e2-8b9e-e76f0113e490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b451dc1b-52aa-4a13-809b-f10683468211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd9253f-483a-4c40-a6dc-2db37fee0fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f329b903-ed8b-47ca-af3f-e39f9078ebd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0445134c-fc3e-42cd-b81a-44d5b703acf0",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d35f4d63-f140-40b4-b98c-6b894e50c579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "408585d2-1aa7-40fb-8578-3ec397e40d60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5abdacd8-5862-4a32-b3f8-9a34195eb49d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2e01d09-c968-4f42-adc7-7a1e4c9838bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06740b45-3384-4eb7-a264-2c3062578746",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1d29f6-1f8a-4c15-84a5-f5708292f70a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a082e61-109b-4b2e-b748-301711cf4b67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b99f2b-4898-4bc3-8940-974140878ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c77deb5-875a-413c-94a7-9ff97b8f9adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfab0c26-7b6a-4d66-b487-bf8b7d60c754",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44ea57b3-42de-467a-95eb-9db86c712040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6984b6f6-0df0-4dcf-afc0-8b7ecfe9ec05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04466aa2-49d7-4a94-9bc8-2d139e1102af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c67acc8-86fc-4efe-8a7c-4a4bf0256fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bcf8b1b-499d-41b8-88fd-55d472dc762a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d8ffe8-d05a-4be9-935b-35f31f7842b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86fcb685-9ef8-471b-b029-a4578cb6daa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "840c7398-aea7-48a4-a789-1f4617ba4357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "41bba790-9ab1-4042-92af-7f55e448718e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "591402e1-b62b-4d6a-9e42-aefbf68ded7a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "210daebe-b8a0-4922-97fd-f3929f8600ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5052b11d-1d04-4e85-bed0-3b345dcd0d97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "460eb04f-9f89-4be5-a125-8f2727a27712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "20928711-0101-4d0a-bcde-9156872a05d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1c7efad-a93e-4143-92d9-e5ff308b72c1",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c69eb30a-c1a9-4ef6-b37e-31518e62787c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "166fcdb6-dca8-4ccb-9b08-920bd5d8094f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a756c601-f91a-4e95-906c-10883b73f3d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "35f3698c-7b2e-4f18-8d21-f6462069bf11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd772009-88da-4ec2-9853-2f3bcb939cef",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ba1c7c-fa1f-41d4-937a-e2d3a3a5da82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "444b0f88-5919-4ec0-87a2-5647fe83264c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed08d62-fa49-4c82-b969-00a8f867cf63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d0c12a46-13b2-4a82-a532-1a7213a03cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795f697f-3ecc-469b-a5e0-aea244137682",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df7092ec-e94d-481e-aaed-087864ed4d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "434a63d3-bcab-42b9-9c57-fc17f7504e41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e00c6788-799f-4bb1-9c3a-b3dcb3acb1f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "68c6160e-502b-4673-b9c2-7aeca044670e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "724ca369-7b00-4a2e-b82b-ea9414ec9b4a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae23be3-54e1-4955-b1d8-ea41c73d7109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b68935fa-058a-4b7d-841d-5c41dcd580d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed76c15-3ba7-4ece-bcd2-5beb5118fc03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5cff5aa0-e85b-4083-b26a-1462d15740d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d1a168-a1bc-4389-93e1-b71a26c29426",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16124038-4a7f-4493-ba59-42624ead3678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9318b031-d1a5-4bab-b729-7e6893dabd09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b80e6128-34e2-4a2a-8083-b733cd1bbaf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "91d36919-7822-41f8-84b5-4ff4db3cc0ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09be1768-e1d9-46ab-a026-d1443b2edbb7",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a229d6-eeab-4ad1-8253-30c58eba4442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3515430b-b308-4d7c-8462-16d2dc534dea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b04c3b-5cb9-4650-857a-1975ac9c2fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2439872d-61bd-4f0e-9eaa-381d6f9fdde3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7e28522-f0d2-4eac-9ba6-7baa1b6ed4bd",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e5484f-4d3f-42d1-80ed-61e13a7dd8b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc5c37de-01dd-4947-ae24-b8f8ad9f2f02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "534db22a-7cba-4808-bb6f-d498ee6a49ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "25a7cf6a-9b91-46d2-a835-451d61bc4b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89641456-a737-4a9d-9172-20265061fa1e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "878f5c97-53d4-4ed1-88f6-ed284c7a52ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3db55ef2-e3a7-437f-b69b-56dc79f0b338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84056305-4b24-4e07-a480-79a84dd8ca0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "96b58255-4401-48be-b28d-01eda615a090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d1a3d87-1a3d-41ff-a0e9-bdcec758e63a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "599f0d3d-c90d-4eba-824b-720d31fdd379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f926ca8-fb41-4f07-a551-bdf9e0a76afa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f5e72ce-0058-4e2c-8bda-706e006a41d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9fac1091-2500-4c87-b8fb-575f7ef0e7cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f1d876-d5db-4aa1-b8ef-4ad59489d15b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a763b4f-0a25-42d2-a4d2-b779efdee621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b53da36-362b-4d3f-9300-e7ad5f27f1df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c03713-00c9-4946-9771-fc06fcc93f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "bec8b08b-278a-40b8-9852-e9d31064dfd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd9ff552-e971-4bb2-9f35-3ac6da423abc",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c2e5e96-2062-46c0-8c1b-be6c33bb3ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2be1d99e-d8f8-42fa-9aa2-b934ddf71b7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "812c32cf-bcfc-4954-a6dc-739baff0ad7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b4f140f-9065-4c00-bd5b-82714fdabb08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea2fb5bc-7e5b-4e04-8a38-8b615f5c9118",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1168d1c3-b8d1-4af0-abbb-035dfc9db966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b0583e6-0733-4bb5-92d0-84a749859285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "701c1dd8-c50f-4b90-b6d3-06dd0611e703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3358f633-8cc2-403b-a5f1-ca0dc40b459d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00299611-2136-4125-8bf0-752cc7e8c66b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2cf4a4e-afb0-4218-99b7-231b208f7ed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b19d4167-d387-43ed-8d3f-07f62360f5a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fc0f982-d196-4d92-8dae-c193e3502349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "91219f03-9472-46ee-b834-4644a9191ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a4a3f6-d9c6-49c5-a5b0-bf8d9e9f1441",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ff63afa-b666-4948-9276-2a9da4e47d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a7f04be-977b-425e-af6c-55d8ccae34f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e1404d7-e60b-4cf6-ac5f-9cb26f43ba51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9867ac8f-e5d8-4f2b-a681-d4ecc6d4caa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4cf0e9a-a627-463d-b0c4-9bf42df15a01",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b438a99-647f-4a5b-b40a-ca5dc5f7afe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d83a6573-1d9e-4fbe-90f6-7ddb229c2387"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4116f7be-a051-44ff-adb3-466838336ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d00ff6d-86b4-4f64-aee2-442c5a052c5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b325e305-3f2d-4adb-bc9e-5457a8ed0f8c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e38828e2-ad07-4606-93db-65a65743158f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cc110d3-ee81-498c-8e68-9da7316bc7cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1655a2f-1ca0-4252-8455-0a61b1e51a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "86e4fbeb-65f8-4366-91e1-3855526b4734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "531ed193-c9e7-406d-a1a4-532120ef55ec",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60bcda2e-92b1-4fdc-9f8d-4d17e0e8ac30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bf8a007-84f7-4665-afba-b2deaecd9fce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e29bbb-92de-4884-9c65-64e4a70ba006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d2d0c32-043f-47f0-9f7e-6721ce0fe31c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae2a3fd-fff5-44ac-b9ae-cb8e65cd17c3",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a8d6fe5-e2bd-42a2-8e11-6fd8d5fec0bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f9fe416-28b2-46bd-8747-95bcf95f425b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f4ea61-b87b-429e-9392-51dcea75c4c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "20039d9c-1db5-4f25-b863-4a18a80ddcfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd783b47-466f-47a5-a39e-85ec52ee44d7",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ebf8b59-4858-44aa-b034-1f8ea3af750f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8f455fe-448d-40c0-9453-f438cbe295d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47ffe13d-a4e6-4b05-aba1-8a7677a778c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5997571-68b6-4945-a5aa-8298afeb03d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13e5aea7-f29b-4e65-b8d0-1e79e33a2421",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8ba69f3-afab-4212-a444-fb7fe589b67b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfa34be9-4729-4f16-bda5-53887bb05a57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e94dee3-c8c6-4920-9763-6dc8d9f9837f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "541274d3-ba7f-47f5-a1a4-6e891d792877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f741ab99-44b6-4a10-b076-c3e790b7fcd9",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae3b322-e66f-463d-b18c-8d29a61d360c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4c90d8f-1f93-4df4-8e60-e685daf6e99d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a395809-6ad1-4448-8c4e-ad627dcc9dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5940be2e-c234-458a-ab88-1243cbc68fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f02f9692-d90c-48c0-a0cf-473fae6f0c94",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18208d3d-d4c8-4f0f-8dca-fabba3f2f5f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b58600c-15a3-449f-a212-38f3d02f7651"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fcaa679-3278-4fef-b930-d69121deb353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "54b73c47-dcc2-4178-a085-380b1fba836d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364d496c-e253-4bf1-840c-92aff2024ba6",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdcbf873-9f6e-4736-b731-c7d6d0b46b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caaf502a-d078-4030-b110-0a2cdb210bda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "668a2e84-4ca3-496e-a9af-92d5d4c64e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc4b6633-c814-4dba-877a-60d5a594cde8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e24d06-3dc0-4f1a-b7ae-d6d43a11e022",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4f66e08-a06d-4e20-b043-f9abbb9006f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07fd7d13-eb86-4479-946b-c3ae67c64b56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc6196f7-911f-4cf6-b2a8-66878c850266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd87bfce-0c1e-4a1a-8b83-40345eb832e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dddffd39-6620-4683-b6fd-8c10bdeb1155",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c8448d-0709-4c61-9c26-882d22f9a220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3458190-3ec1-434e-91bf-fa61747a8413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3460e32-234b-4333-b0cf-e6b5e6182810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5df52fe-0e3b-4939-9bb7-3c645543215f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec95473a-1cfd-4ef7-b9e3-15f0606802e3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef4583fe-f93f-4c54-9307-5ac5f5967b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "044a1a8e-3c70-417b-b8d1-5b8fa4a9e53c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2430714-4d13-40f9-90c4-1cd3b58903fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "469e2158-6020-4515-9b75-c4607e58a0b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f77813a7-3c9e-4793-9373-85f943dbccf3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2100ff06-ca30-4d8a-a583-db658c32a81c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78482f17-dda0-4ab8-aa52-6dbb5a613e61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7cb9953-212d-4176-873e-183d313ba169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3de27ebc-9a33-49f1-af1a-c1462c78f409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eae9a942-7bbd-4e98-ac75-8f2f2a75125f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f624c591-599c-49d7-9241-07ab5425cff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f3f6390-eb3d-46a9-a821-7df921fb5b78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b060f460-562c-40fb-a889-4ce1fb153d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a7c685d-10ae-4d21-98e1-25acf237d19c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7839ba75-af60-40b3-9df9-d12ffa38fef0",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f90242-10df-44d7-a711-c64590a14d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db2f02c3-2f49-4ee9-8fa6-3a2a5c9deda4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a4562b-1870-4a2a-b8df-bc02a4b2dbee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "060c2b6d-29ac-4117-a98a-7298dda961cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3649a9b2-0b33-40de-9907-1d1cd38d6c3c",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6c23f93-8b27-40b7-b6cd-09bd8d900437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e002a549-5397-41bc-9e55-c4b16b442dde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5981ce34-0b56-4e34-a50f-e8f5f6370c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "28fad5fd-3f60-4b1e-bfbc-dd03e8638f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90dbe473-abb8-4458-aa41-464eb4b6e3f8",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52761371-9ba2-4bb2-94b9-3ad2d8eee46c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5200b7e-76e4-4824-8c49-65126d6740ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2943191-bccc-40fe-ae12-7064a440d8df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5b28537-7248-4dad-af99-bebbde87d0bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b227ac-1d5d-403a-8adf-00bfb12b2303",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60421e55-acc8-4e37-8f0e-fdf16a5e52b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8646e055-0b86-4f19-9479-4344becedbb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23553d1a-e214-4195-9c0d-e69a5202be90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae371f7b-8fbf-4037-8995-c989750a0b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90eaf833-f1e3-48ec-bd3f-6a48623dde22",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74a39f70-e2e0-4996-aabb-2035c5e1bec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95ae76b8-e16d-4b27-8f7e-5151afc80e67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dcd261d-bc89-4413-b0bf-b34cccc7be4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a6fb60b1-1624-4838-b2a3-c6737d5dea9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcf38aef-cdc9-4e47-89aa-586611f8eb7a",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac71ec1-bc71-4133-9296-e0f3d65be76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eba88e48-8424-4f2a-826a-a7624c695745"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b6a653-f9bd-407f-8379-117a106cb374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "181e26c0-3513-4633-8c99-bd42ad7cbea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bbd9875-5e9e-49a5-8cd5-0fd447701e7c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdffb2ca-f3b1-43cc-abc2-b1fe7ff12f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "995fdf2b-00d5-4dde-ab9f-ecca2f75d5a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a28fbedc-e4e6-4bf4-b97d-1251f8892ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "87032f60-93f2-4951-96ef-dd67dbd9c859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "248d95e3-9678-42db-9534-3b54b4c4a1b1",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be72137d-8d3e-4cd7-b056-7fd83500f4eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3087d4e5-8aaa-4f50-94c7-17f177b454ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc7ee51-0426-4f37-b380-c0645e2401b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba72dc0c-e25b-495d-8efb-ba9305778364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16915cf8-6ae0-47b3-aeed-6a13014abf48",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "040d144f-095a-41a4-99bb-57b13c5cbbd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e3c269b-aa64-4763-ab93-703fcbd2f18e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26bddbf0-26fb-49ac-9b2d-49857e411fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd56b6d0-338c-4f81-be87-5fa37c24b6b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32e75ea6-3b41-4242-91cb-18d5d184d2d2",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0ebc0ee-8082-4d48-94f4-43134038be82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e9c03ca-c6f2-4fd2-bd98-45dd27c905bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "720e76cb-3aef-4098-8871-dc6f77b7c368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9a01bd8-1b19-4949-a114-78acc03eabab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c94ce87-dbef-41df-86df-3ad9538f51f1",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db3812d-85c8-4b6b-b2bb-0d4b2ac800db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ce845aa-ed92-4f0a-8c27-ab6394ff58b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cfef08f-cf40-4802-b918-411d33d792e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "28483e45-b773-4840-9684-dbf5c40a92a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "820e346b-afb3-4168-9be8-954d6c486c6f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "135d8c25-763e-4e70-9e53-c33ec6c3920f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6c812d5-9712-407d-b326-b3e678e308bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c52ed2a4-d2b9-4aef-aeb8-41fc83881c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "619545ef-8f73-456f-a90c-af4ac2c7b140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "531df155-e52f-47c6-ae52-3498280a6bdc",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb213f69-86f4-4a9e-8388-2cecf6d5f1e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc238bfc-9fb8-43ab-b8ef-f711a808cb50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac55e7ac-1039-43cc-845c-3a37289f71ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3200d28e-6809-4518-9853-73c1c004116a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8339ce-f912-414d-82fa-b924f52c4fd4",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a58d0b56-f7fd-4320-a241-9bde4486b8d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65de84cf-eaf2-4b9b-91b9-4754feae77be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b6ddfdc-c69e-432c-94f9-589c6662ab79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "44fca397-79a5-4b0a-bd7c-40b3975e7649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77af3e5d-5658-4dfc-9c07-b2e31ebb82f1",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c70d07a-f87d-4461-8352-171d2799d2a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ebe5bc4-a5ec-4603-a863-b7bd4c4579d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8530ed9d-1237-4609-8f9e-5bb521474aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e4902f2-2123-434d-ae8e-2c00c972f1bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcdcb49d-b813-4e5e-890e-6bc438511c80",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0498b60c-9572-4ccf-b161-a5a8c0018ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13032784-9bb9-49c5-8366-08309f2b16c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c83b9ebd-d8fe-47df-bff3-d71110127b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b0bbed3-10ea-4f89-8c1e-39023da9e9b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b33b47b-a22f-4167-a30c-84ea14fbf1b3",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da7f052-656b-4dd0-9901-a6ab67af4bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba39e309-b414-4e74-8491-caf7ad016787"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede9ee00-28c7-439a-a300-8d9a9a2181cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "76232794-973b-4d0c-b97c-846fe3cf1f61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f591c539-a294-4df6-a2d2-09d9da406d94",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb94348-653f-43d3-89d7-946aabebf27f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cef28c1-6dc4-4ae1-82ad-b50c45cca760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "847e271d-fb7d-4d90-9ac2-1777b31a005b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bd84268d-96b1-4371-a69e-1f3b0c458df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "275a5dfb-43ae-4025-83cb-cfea44830812",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e213846-5727-4ed5-b661-0114361934ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90de1fe0-9803-40ea-a863-d19a96fb6d9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b6883f1-3712-42a9-bbb0-2f11dcd65b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "86dfbb9d-cada-432e-b012-af9332b2b3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b54d77-0661-4f8a-b425-3b909479bf23",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc247f9-c9d4-4699-83fc-5f49185ad2ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93b32029-e32e-4bb7-91e9-9755f0d2c4d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe79fa1-7822-4574-a166-fce699ab414a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "33d64e8f-df8a-4794-b3e1-da64713febb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3eb6eb2-eed8-481d-bcbb-6db530389290",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "137d0c7b-1e4f-4ec4-bba1-bd59b1e789a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "471ae4c2-e799-4763-82e0-e68e56d0ddca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb02a24-141d-43f7-8ed0-0ec0ea05aede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "39649d82-08ce-4c19-b0a6-1d1534bd37b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "128e93bf-1fb3-4489-9f0b-6f862aa2d9c7",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ddf5e5c-adf8-455b-9d8f-7bd5d862b7ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dab9d9a9-6524-407c-9e24-e3c7093a27e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70f3aacc-47ba-45b8-968c-3e9f89cff711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e73fa21-a244-4fff-bb03-96c0b4a15173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c70126-7c7c-4caa-a3b6-441146bf97b3",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf0f0ce-7b61-4e01-878c-0a49a505ebfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f1e8a3f-0ea5-4dab-9f99-4cd0a23ab9b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49aca910-4dc5-45e8-95c7-62e5a3fb0146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2e586e5d-efdb-457d-8c35-054786258fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6962aa3-e869-4da5-b923-a94d2c707fd6",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3e23175-c462-47e3-8239-23a4c340e131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd23b7d2-e182-4f50-b45a-840c1d3f9617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b712aa-fcff-4b64-b615-ab0cf9b53c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5a55d5f-51de-4fc5-846c-e84371584b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87a4dc60-9e8a-4193-8a04-2fc366c83e9c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c96cb754-4e3f-4f92-a74c-6367e2ca37fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff55ab70-891a-4073-91f0-8c279129a6d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4919e855-3a42-450c-93fa-f22539fee465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "673d9ce7-4b92-479e-a2da-2d83d37c5d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfff8595-798e-41f7-afe9-014b23a6acdb",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38431791-b72f-4d79-bc43-984948abaedf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68baecc4-1b0d-419f-8141-85ae2500a1e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e784143-bbf4-4dc8-8c00-3bd7f01a423d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dace4565-36ef-4811-8155-3bde6b747084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc8b739-7da8-4197-b6a6-f7a39976feeb",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dff99ef-b3cb-4034-b306-63e72c9267ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "393dd4e0-187f-44a3-8c0d-00a432a4fce4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "755e0d8d-7039-400a-804f-8ead5d4c53a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "97299f21-eace-4d1d-b37a-093ab3694df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50494d18-e073-4758-aeba-c51345c6416e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7524ed7-b435-4d75-a7c7-33a3121f666d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c490abd0-ac75-4d43-85ed-0b5bc587157f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a418cf-175e-4319-94cc-355a7cbbf793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "83e81c93-de47-4d07-8004-d43508fcb967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93d04cc0-dedc-4bd3-85f9-9a6149b3c0ae",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "100f699e-a8d7-4176-8e4d-c2868abc22c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6d5be39-3a04-4105-a015-6f823becf446"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be6de3b5-1013-40e2-a49d-1b536b9b9a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "143c7bcf-c001-406f-b92f-26bd84c3fecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8140679-73cb-4c5d-9aea-62b074db7450",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca6905a1-293a-47aa-8b8c-764b15bb573f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "66b33951-faa4-4ee4-beb6-d321a7377621"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b790da2-542f-4017-804b-c8fc98dc7a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4bd7e33-5d5b-489a-8d88-91f459a3cf79"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c5031cd2-a3d6-4ae6-aacd-f362381d6f61",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "229c46bc-87e4-43fc-b321-ed6596044f2e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc32671-a997-448b-a2a4-ca34e11fef9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2b0b25da-ba0a-46e9-92c1-7d83280b23f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39cbb5c3-869f-47ba-9709-ab6a213cd8cd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68618ba7-a7b5-421c-b8f6-c22ecd754ebe"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c0309ce-0597-4849-8152-426942fde656",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "10c94b73-d17d-487c-8d81-f672f043904d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a3be209-63d3-4e3e-bd38-a30f69e23a6a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4bd48492-7321-4637-85ee-b68b2eaee33e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5aced380-2dd3-4688-b144-8d62f89485b0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "64166d59-6230-4a5c-89ef-b8815abcf165"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d73624fa-82a7-4346-9829-6c9aa0785ad5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d69854bd-c68f-427d-b4b6-3f113825dbe4"
                }
              }
            ]
          },
          {
            "id": "876ca062-0fa0-486a-a691-7597dc3b20ba",
            "name": "Positive Testing",
            "item": [
              {
                "id": "73385779-939c-4530-8f93-e7ca894fb4e2",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "81287e23-bbcb-4441-8259-a07c38eaff71",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c33a6347-4ce2-4af2-9034-d80ba6f1606b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ebdedb16-dc8d-4917-9ada-7574bc4171ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f7b44fed-df1f-4ab9-91ca-78d8548b8906"
                    }
                  }
                ]
              },
              {
                "id": "105945d1-01e5-40a6-a3c4-0e530b388a6f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "956d311b-554e-4c94-a484-1b0c7254365b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3878cd75-102c-4e0c-aecf-97f12b9d5557"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef1bb10b-0c3d-4e37-b609-38a1ebefc853",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "617ecad8-ae51-4b4d-a531-a231e45dc4e4"
                    }
                  }
                ]
              },
              {
                "id": "0d27bb6a-ea9f-4ba3-ad50-346f8dd287ef",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1613df4f-25a6-4ed8-902c-cd1d90020716",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a047c244-93f8-4d42-96a7-017dca062d01"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d17532b8-b55d-4178-8e56-705d1869abaf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cfc3bd70-492f-461d-841b-41badc73e0bc"
                    }
                  }
                ]
              },
              {
                "id": "efd2a889-b7fc-40f2-9377-c663f84cba35",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8aefbf3-3f6c-479c-9189-cdafcfebc334",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "535bb9f3-e0d7-49a1-a1ec-43d01fec8f74"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "113714a8-fbb6-445b-b917-5069b13a9e72",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "49cf0e4f-ded9-4c30-9730-c560ae1e78b4"
                    }
                  }
                ]
              },
              {
                "id": "238d0a15-0f15-4c9a-a427-419bdc7a5a6f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8439cddb-39da-4391-90cc-43042a7a889d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cf88f185-3400-4eae-b7d4-1dbc6325eead"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "43e098c5-c6d5-470f-a2d2-697c220bf011",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ff522089-dd87-49d2-9058-8b71c0f929ab"
                    }
                  }
                ]
              },
              {
                "id": "33c07925-287c-4300-879f-1f9bd0ceaacd",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "725c693c-fbd2-4f8f-b782-9cb28ac69a18",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1d7bb037-8dfa-4a0c-b25a-c12bbc2de473"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "099faf98-f7d4-43ca-ae61-47e077f5fe72",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c4055ab6-7cfe-4256-83e9-8d0a52a36532"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e7bfd30c-2c18-4dbe-a841-e86726783ec5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e10a57dc-30df-4f41-8a3a-95b9474e7896"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1e5a99aa-44f7-4f1a-8443-6e657c3cc4f9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2f690264-6da8-4963-9152-5d74036c5530"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0ea64bba-0862-4a96-a88b-ff51167b6cb7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b9d83e61-765e-47e5-a331-fed155af609f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2f989a57-4cfd-4a45-80a5-b9b086a6159a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "167612f0-4cc3-4061-af53-076f15f39ba1"
            }
          }
        ]
      },
      {
        "id": "039c4a8b-f998-4f3c-81a5-f74cedf2cba0",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4c3823cb-c0e7-4b2a-a481-54658faf1b10",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3d059357-ed9a-45c6-8e75-2b894ea5475c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "87630176-0ffd-4ee6-a231-ec1e2684a615",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eed81026-9d5a-4c74-9b05-753f9436c747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fe11ac8-929e-4e24-b9d1-be46d87b545a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c71c0b-b0a4-47b3-9344-b8bd364f4bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e06ac90-524b-4306-bbc7-6b0f5a9219e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37dcd602-3e0f-46d1-894c-e1360d017c50",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b6abf3f-bfc2-474d-b197-960c130eb691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2512b25d-e88b-44c1-8117-d1456a28607d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca9a2016-8903-42f9-8c23-45195b8fcab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7105c0f1-1cc0-44d6-bf1b-326816552c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f109cc33-483a-4f9c-a537-8849cbc2ebb0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e73d401c-357c-4148-a7f5-a720c53aa151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "926900b4-26fe-408f-89b0-f0540a0a6be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86262e08-2f93-4155-82e0-288b5f96a8ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "89e75bda-f7a7-432d-b1df-d49975abda24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e0fd46-5bcb-4ace-8702-af4e71a82bdd",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a06bb9-1d54-40ec-9c31-14f5acf0d7b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e930c7b6-e6fb-4d9f-89e9-04e8e171f735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b475397-c9bc-48e1-8378-35545b6ceec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6b6ac57-5f48-45f6-b645-ad1c403eeae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a37a238-be93-4fa2-b295-7e6cd8c2c6ae",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30287382-da2e-4d46-b8fd-347f077a08b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b3886fc-24e1-4d58-bcdf-efad964b5b7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db1c7fc-0e17-468e-95fb-497499860ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "15bf1d6a-fe1a-4e19-948e-8e100124fc67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b0e82ea-c64c-4110-9241-e532fb87bcdb",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f83d746-e7a4-4b2d-9bec-99eb1cb24b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ea2a3cd-5043-4e2f-9397-fd2da9ca70ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e636f482-bd57-4ab0-8e2d-f139b6a5229f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c7f5bea-13f8-4af1-a042-3e1ac3da2472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73675595-137e-461f-b2ed-cc849f8c933c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62423da1-5765-4178-8c6a-a9ce0845ff5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3a5b381-c42b-4b97-9f6f-487666451555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7bfaa70-5aab-4406-a9df-7de12548090c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a23fa3e-8409-4163-b278-5d69529c0ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b248f886-94fc-4df9-a66c-1d9df5680e61",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d80ccb50-6b82-436e-86cb-3152b716df33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8483fa5d-bb54-4136-8602-52000f0ff721"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1cfe2c7-53b6-4fb7-8605-bc17532be743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ce86ab2-cb9f-4ce8-b982-c8ffac64db14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af747d7a-6638-4079-9cf3-a46174af5ca3",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00dd639c-e2e7-4a4d-95bd-287ba9bfe65c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52738299-322a-48c9-8c79-d0e7c5df25ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f9d2d6-cd4e-48dc-b540-d0449fa6ca69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fe8f4fc-f482-4a04-b41b-694faf4ee1d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3bae689-0714-48fd-a0eb-2825928e09ff",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60041c43-7fc0-4c81-bdce-34dafc21d8f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e29f40d-8831-4ab2-b8f7-286ac9c704ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "176bcf04-55b3-4882-ad4f-ca547d2461a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "54a12f8c-f8f1-430a-8a97-eb11fca9aea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac6d445-94d2-4122-ab93-445bad481368",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "174f4524-7bdf-469e-b8b6-8cd882bef1c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98a40972-b5cd-4858-85da-1b4d0cfc117e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f34dcd6a-0055-4ae8-9201-8b5c69e2fb45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f81b3d8d-0fd5-4a3c-966b-6159ea575a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2bcd105-67c8-49c4-b68b-5cb53b57bd57",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "390abad4-2eb9-4759-9cc5-10aa5a41df1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af266cdf-17a9-4a3d-a6c4-31d62b268b98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9192bfb0-35f7-43d8-ae95-8b03182e2b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3c0d4f4c-c27c-4b8a-a42e-c3d64bd9ca74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "519fde11-06e3-4f86-9b47-f9d9ade66187",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ae6798-1a72-41bd-86aa-d5efce2eab99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3326586f-115a-4ab1-8b88-55008fb6c6b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d08c53a7-d499-4bcd-b06c-ffed71d44dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf495e07-c551-47a9-989a-f60b8668f620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd588da8-ceba-46f2-9699-6822124252d8",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a767b909-7323-4c1a-b6ad-73cb0a768e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "384aaade-5559-4527-8b38-68c140a547db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b9e580a-1b9f-4693-89f0-c58d3c2d1523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "decc8403-bdac-47e3-8242-46e1310ea026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f43300-8abd-482e-9dfb-6863dbc0e04d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab27327-b13a-4d86-a2f3-070da50d05f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17b14167-4d95-4efa-95e6-757ad3151228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef61329-7689-47c0-b2fd-632a8e6ef898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "00bc0c43-3542-4641-a51c-6634e9fc6a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a303ef1-32f6-4788-9300-ec3447a67155",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a91fe713-47b3-4b7d-9c88-73434e94b60d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed0c0c54-5c57-43d1-91d6-1367cc5e171d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4226e5be-78ba-452e-a1f6-da00cbef1c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c7102a9-3105-4aaa-926a-15f40c8fe354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0b4ba8d-11d5-4ddf-a2a6-6c4a8acaa898",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bce6d91-0f39-428c-a81d-22029f50ae27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c30be67e-3fe5-4295-ab29-58a489afa9e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eb556e6-2b5a-4401-8e25-8654d655066f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "56a02547-bbcd-4c8e-8175-7101546d27c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60bea25c-2d9f-4028-b040-1af74def24e8",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bbdc890-7671-4074-bae5-1a4a40f3aac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "261ec672-e58e-40e8-ad04-420c5d8a8bdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84af4bd7-140c-4bb0-bf17-14e451f69763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2fe49ca-3d84-40d6-8180-a4f9a353c506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e45e2731-4f14-4547-b37a-41e5ee615e35",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce0036e-0d11-4bcc-9efd-2ceca3575b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6af3b29b-edfb-42d5-afdf-7c5de351eb9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4190fa5-013a-4cfe-94fe-3373b7c701a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c53e2c7-c6b2-45d4-ad8b-ac3576931ed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69f3b4b-748d-4563-b170-f82583f80e04",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3afb6f74-bb9b-4000-ac35-b3facbb1f1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "638dc8ab-62e6-4fe3-af86-cfecb7739ef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30a267f9-866d-43b6-9c46-039705932f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b04d4145-6220-426a-8c3a-b87ba5d09bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6656042a-23b2-4751-ba9f-147c320daa7d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ccdfae-766d-4842-9ce5-67cb7c2ad882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cb17cdd-a91c-412b-9c10-b2e9306d6554"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "724e18d6-a772-4256-8b12-01f20be90a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23e281e9-2e2d-4c2d-b9fb-b692ce889fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca0b35ce-c8ac-4067-a38a-4612b24122c3",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "065106d0-9c36-47a2-b7f6-bdc6a566ebfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72eeff7d-6c2f-4de3-a999-66f1b0dc3b98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62127e83-eb7a-479a-9b2a-d592736306a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5098a369-3782-4361-959b-c88b4d1f79c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "693f5fe3-df7c-4ffc-badd-2469d06bad59",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5585b813-87fb-46da-9993-26128cfb9d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a165df3-9ea4-423e-8c82-145b7d9bfaf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ec6a69-c3cc-4a65-b7e5-1077d5139349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57c0cbd4-7105-46e2-8aff-08e8485c6fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36851a07-69c6-479d-8a60-6fb6b6c84e9c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c930b4-30b9-46d2-8616-51b40d6990a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5816015-c53b-4786-8749-b8d279513a1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b38b9a-bd3c-497b-be7b-d1a4b8c3ff98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1192cd98-e25e-4034-afc9-02d2619d19d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ff9a20-e730-4806-800e-2f51b5c9153e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c6c853e-a67a-400e-ba2f-ef4147e6b068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cd22a75-cf63-4b13-83aa-ee358cfecbe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb4ac4de-e3ab-46b2-8f46-7619b4592779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81a49138-58c6-4d70-99b1-46ed45292257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d5932d0-d479-4a0c-8963-720ffce73388",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "712ae90e-4896-49b6-8aa6-b204d044a80d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f34fb81-1d5e-4018-8802-36f450ae9ba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66fd0edd-c64e-4fcd-87d9-edc9a3c1c394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f475250-3c26-4a4f-b16d-694b76a4a790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1404983-411c-4e9f-a80e-6bc9b0377b07",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2706d72f-ba6a-4464-b1ca-328b52026e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd1f50a4-213a-4ab9-81f4-f5f47e3a12f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aeaa8c1-e2e8-41fd-88c0-b22f1cb3b2d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b03d32e-1d4f-45ce-9926-2af666531a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d1244e-49f8-4c17-b6c5-4027b6d9b45d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f36a145d-8112-4146-bb7e-8f4672fce576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b00ebd40-b87b-440b-b3d5-ce47236a8ff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b56dd155-1a7d-4cce-b28d-36265caaa7d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41fe68fa-b169-4744-b63b-95f714890e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5183d64d-b2f7-4dfc-ae2f-845773e0ce49",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "685e253e-8242-47ce-a0f6-d354171f1ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bb626eb-43e3-490a-9af4-69f96c782a24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df4b762-1af3-48a8-b1f4-11fbd69c42a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e254629-2d4f-44fe-88f6-a57d32a3d462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f03841f-55e9-4f69-87eb-12314b849719",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eee80b3-c973-46db-b06e-ee2b3abff725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d726d81-415d-407b-8e6d-e97515ac3a1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c48685-802b-4138-95db-02d4d3ac450d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32900bcd-95a7-4aba-91e9-c0f8a0ebd341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25281ec-54a8-465f-be67-ba2432ff120d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "831586a8-cde5-4178-a167-781efadd47b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50b523bb-234a-40ee-98f3-46c7ab58baa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e1ecb4e-5364-44a8-be92-1439cc95d46c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65bbff0e-8d38-41b8-aab7-79e727f6762b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8edf023f-d89c-4ee3-983b-07238a418afe",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f034d20-2848-4a28-af71-9466bf731e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01c86f3c-05a6-4407-b4e7-07f69012cb09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "275702b2-c13c-4a65-a7f3-ddfd7be2985d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e805486-11fb-4e2f-a145-9c3be3bc5e19"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3ca6ba50-8faf-4cee-bd7f-848d7195f1c9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1dde935d-d44c-4ef4-9941-a71939d2aa3b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f39b0f33-e9b5-4eb7-b673-eb9f1515e6d7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f08fdac3-1295-48ff-9d6f-a22aabb86d4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e89f84d9-30a9-40cc-8e05-8307d0761d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a2a3669-16cc-42fe-a6d1-2aaec751aa6a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "91ad66a0-99e0-4204-81fb-0e33d8d269e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9a3db54-9830-41f5-8ca4-59055090ab1d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a337ace5-be2c-4712-878a-673a5cd74673",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f0170a38-d883-4846-8e37-e87964927416"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "48f2e714-6288-4bcf-9961-eebb6830e262",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3e5415fc-6215-4336-866e-07bec2939681"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "95fae643-adf2-4586-a107-ca531fa635c8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "639ac135-6597-4fb2-9f09-79afba10dc30"
            }
          }
        ]
      },
      {
        "id": "85fd1ce0-424d-4b69-bc84-00f98ea94274",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3a51d20f-087b-4c16-944d-4d62aa8c92e5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a6bddbc9-b54d-4a78-a518-2b7250f85281",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0f1bb875-91bc-48df-b75d-8469cf6d1e76",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96f1bcd0-5fed-4070-a2b0-c4f327efac30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b23da28-4346-49cb-9cd8-a50aa7ea415b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e772cb81-1c7e-498e-b7c5-bb0d13d50da8",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98933cb-ab9c-416c-9410-f34a815e8853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7559197f-8af6-4d1d-837f-546657e57238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a91d51-1ae4-4c46-9700-934a529ab59f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d0693a5-cc0f-4570-98fe-2c3d097f34a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c17b5918-5e17-4527-a72b-96042e59a078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e0a23f7-b453-43ce-8074-659a600e1b6f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a534f9ee-5a94-4cc8-8186-031c2098ea6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28d4f19d-eb8a-4412-9ac8-26760f67383f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d04182d-54b0-4cba-b7b5-7520ab9f0266",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2999370-b1e2-4d3d-bdc1-8b69f4aff911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7af2ce25-4881-4ef3-ae59-933afebb5e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c0222a-4579-4c81-bb7b-96d8146a361e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f5e1a3-fd52-4570-ac09-b28156314ca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70079d1f-cd50-47a9-8d80-936bd3d88feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b5eb98-1b94-46a3-825b-3231a1f083c9",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1318859-826a-45f6-a7d1-7e7d0a511396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2b02b7a-88e2-40a2-8c2b-2d137db8bf5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e42d61fa-ec33-40c7-b559-6d809070e339",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f6c8ab7-f1b9-4bae-80ee-deaee6bd4a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f77a5daa-bf81-43b5-8c33-2fdec022b2f3",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a9e4aa-628d-4ea0-9dd5-70dbb7869d21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44da10d3-0eac-4db5-b9e6-8ea1646aaa85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a32140cc-b3df-40c3-94b0-93dbdf42363b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5973e96-9cd7-476b-ab25-4495a689a1b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf0eae2-d264-4a86-a004-0483730bf336",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1abf99b-8bfa-46ef-a700-5b85cb24074b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18e19cb0-83a8-4128-a358-b2d20f2df61f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4437a2c2-a249-4390-bc5a-6b3f6daff204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57a50f5b-31ff-4c48-b1f0-0bc34e5d97ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ff32f4-680b-494f-bc54-330e077bdc19",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "293726c0-d888-4d3d-b871-031dbf921ef7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fd5559b-2873-4ddb-95c4-efa9c6c6b06e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e59811a-0c2d-4024-9e9e-3f1bf7577cca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeb15674-c752-4702-bb08-f0f3b1db4d6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccba0feb-4a87-4763-a77b-6d943084d69e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f5fee6d-967e-498a-bb76-03df3e377bd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac6cb113-90d0-47f2-9b7d-58ec68efb8df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b27089dd-96ec-45da-81c9-79871763cc37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "420522ef-a5cd-4a0f-b799-6bdb1b49bdc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc429ab8-db50-429c-8890-1a7c931ad377",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a8eb11-f0f1-4932-adcb-ecfb6d1e7117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a965216-5e9f-4d7a-8a2e-586b678ef1ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7012a340-e1b4-4d6b-b717-cc58f1ae38da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72fd3888-3c03-4573-8e39-01d0a07eedcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "828d8270-9141-4556-9881-4b6a15ef4d2a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74bb0c42-c9cc-472a-89e1-72dc9b74ade3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d2a5a29-d6f9-45db-8767-78bdc1d91883"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a85abd-610d-488b-8cbc-e193218a3354",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6efd546-1ef0-49cb-8086-f91b99940f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff55382c-354e-4d9a-9c20-780030ec70d1",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eaf178a-98e0-4d3e-9e50-722825ff1c55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "580c9ff8-ecd9-4be1-bf6f-8e6de2c5ef7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0dc9825-d359-480b-be3c-a617e42a1636",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb11a73d-e294-4252-9fe7-d3f9767e43ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59746a67-5ca6-412f-ad66-476aa9192178",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "583404e5-6819-4a50-abdb-e17426fbc9aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42700c80-68ac-4628-9273-ffa7eff82cc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a8f59b-636b-4ab3-bd5f-2c70495ef7b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1e4d9be-9772-4b97-9c25-11b13ebc0d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d92dab90-77f0-4f59-9473-45da3a1e2d06",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "939e42af-e0d5-48c8-959e-70bcd039e3cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e84fc0d8-c929-4e24-a391-2075886a75cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8947d647-87c7-41dc-b84c-3917b46ff7f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8e0de67-25db-46dd-b37a-7c1ffa0de73c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ba8564-bb1e-4968-aa9f-f42eef24dc6c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7243f02e-fe4f-4cc7-8397-b301095ed583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c65f12b-bb08-4ad9-a2f1-61a6bffe67a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b93722d-4f7a-4884-b0cb-835bb4f2ddf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "987fe5d7-67a2-4db8-b95f-5c1dfab986e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c4c3a1-c632-4e1d-8f6f-3afc9f37e0d0",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e54c21b5-e21c-4195-bb93-7a5b5fc2a956",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d70d6b1e-f294-4ad9-bd17-7db3ae5855c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7883af-a3b3-4ceb-b561-1cc8d925a302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0fda108-f8ee-4f80-819a-5eea5a06d906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f28a3f-6d04-464b-9d8b-a61a4c1c975f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e104eae-6f18-42a2-8507-b8082920f7ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dd99d28-eeb5-48ef-920e-85750a64e24a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70415d29-1e38-4876-b84c-6ec202609c3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6e0ef09-85a5-4f70-a1d7-741c7b804693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4986fb71-f8b6-4132-8189-2bbe252da630",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e1002d3-f6a6-425d-839f-61def6f3735d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "438a570a-7e6c-4203-970a-7b9306dfd10a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed80f8bb-51fe-429e-b2af-1e50499530b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "594f5d42-e3ba-42f1-aee7-1f77bf7c7816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a67427-9cd3-4b03-8453-6a5d3ad83928",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e10b3728-88b9-49b0-99f0-dbeef4887c0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b884cb5-f43d-4c12-b561-137c5ec7d0de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7452be46-2313-4bb7-a92f-835f66cca0d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1002a8b-cc78-43ed-a0f4-43c6a543e198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b062f4aa-8759-4343-bfb6-ff1aa9faa392",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "347bcf9e-6b7b-4f06-be11-797c5eb4522c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdcbbf79-9029-43a0-b1e4-c8c66ce3e9a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f0106cb-4ebf-40b9-8671-138617fece43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c2209aa-8e93-4775-ad45-9f7ca5d97ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c12e2a38-f7f9-4f1c-8af8-4d498cce23c4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b01e83c5-4832-491b-989f-11dd7242052b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4eb42f8-d8d4-4474-9e9b-f01d76aa7090"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "871acb82-f422-4f8e-863c-21f70864caf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2144ebb-2bf0-4e17-aea2-f9ddf95e3ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbeedd33-836c-4015-9926-71fa6914d94f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e637df43-e2d2-44ad-9da9-2f4d588f3efa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04dc8ad6-31d3-452b-a7ef-02c81bddab4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea5f052-570e-482a-9ea9-fcd75371d5ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2046fb12-8d91-4f97-9150-84f9b0a84684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71fee22a-c43b-402e-9aa2-f30187f73664",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3286543e-9aea-4043-945e-d2eed5324254",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "075f7d27-b443-4774-861c-32754aa9d9ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a26b2285-044d-41f9-b0c7-914a296e4e91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fa09f0e-ec2c-42d0-97ff-9077841ce996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5432ba7-c576-486a-9f50-ac1a5cd7203b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964be36d-9014-4e48-9c61-decb54e5731b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab3da5c9-5d38-4a66-b21c-dc2656104bd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c5d36e-b803-4fd1-80e3-4554a38809f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "446d9a98-3a6a-410a-8239-02f5ce8d1828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb6546c-0631-4e9c-8b31-e31d369885d4",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "416f9392-f791-480e-a6c4-4666a0914a89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8f0e394-f9e0-42d6-b022-25f01b7391b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2cd1676-0541-451b-8c26-c0103388fc46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d8c89de-c807-4a0b-aca3-292ee08aa0a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c307780-75e0-4eb2-bc45-db0d97e00ba1",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dff30db-65e7-4e60-bf24-37065cd70672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c16f0beb-db78-4c47-8597-5f8ac0fc83b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2858cfb4-12a2-4b6f-ac76-721660d2e89f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bd2057b-626e-40e7-8d42-5150e88dbd1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb10a1e-616a-4b75-9fec-d033400dc11f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d9d83dc-716d-4d87-8ad3-00ed955ffeb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a91ec9f1-6414-4b07-9cf8-df81b12d7490"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "556c8ddc-f2f9-481e-9187-956d41794ead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fd54c2e-6e19-4f5c-a167-e75e741a0ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63028163-0460-418a-87ed-886b10ffa02b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed3c0dfb-f9bd-4ac5-87bb-d68e0a5e4497",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4eb1d957-1ab4-4529-9b59-b0bb4266d8e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad8d3ad-aa2b-4ea8-bcda-89a0047d4334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8ee1288-ca6a-4ffb-83ad-4abe1115d07d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea3b16be-e7ed-4bac-9d9d-7d36bd3cfe3d",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1d3edae-a82d-407d-b8d4-fe986a603dc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c065436-4af0-4a3c-8760-74a325340f72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e3e7dac-bfbb-432e-ac52-ad8e4c297634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e90381bc-4454-42fc-8dcb-5ed8574f50de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b0a1c33-c537-42de-951c-acc1a513f160",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e774142-0693-4ff3-a870-61cb8e4976f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afb61ff7-5580-452b-b815-4a9928774d6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3196463e-236d-4355-8a79-712235f3f5ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70245a6b-46a8-44e5-b149-3dd14e40eb53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f7cc49-72cf-4b18-81a8-e7dc66a012f0",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f94b386-c5b1-4b7e-9dca-52f74ce8c43b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6a6dea0-ea21-4474-b598-3a8a041836bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b12287-f5a7-4149-9a59-7d82ceb265c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aedd5038-4f9c-4b65-ba35-5e107e49b9c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92bfffd7-bc2e-4fcd-86b9-2ba9ac49d4eb",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d67b831d-b233-4347-9524-d2b0de4ae5fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d307d533-d470-4fc9-b2d7-71c1bcf6a779"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f334e16-9aba-4591-b985-7327dba33176",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94c4cef4-9c56-48f3-a9b6-2c0c4f2ebda3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d5cfd8b-9c41-41a6-a584-cc525ba87d01",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a2f864-b59a-48ce-91fc-bebd9f5f885c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e70df1be-e3be-4ea0-9419-aa5c42f4d7f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "847cd2e2-4f08-4f79-92ea-6aabccca8f13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1e001e7-aae9-4a84-b820-936135f2bf90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d295b0af-2006-47ae-a50c-da577e238de7",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a90909e3-192c-4114-a249-acd16ea3e363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c13de53-1c7a-48c9-bddf-5c2e996c32ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c087c60-732f-422b-85ca-20b8ac63ec6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8666cf15-359f-4db6-bffb-4f212aeb3619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da64bde2-9e7c-46ce-ae1d-cbdc7493a60e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36b7a143-9642-4327-b0fb-20e56b68d819",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43e6bb5a-9959-4f2d-a903-fe1eea4adedb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed585172-a2f3-474b-b33f-063402ec6e34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95bb89e4-3b16-4738-8f81-719bd06d1040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57aadfe4-f0b9-4bc0-9d13-1101625605e4",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78e2bd9d-5320-469a-96cb-2671759a4c18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4796367a-cae6-44a9-998c-cf7107237a4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e9e88a4-1977-4d3c-824d-cbe1eb77ef9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bbdc998-9edc-4edf-9de0-2f3f1f858cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da02110-f99a-4b9b-8a02-4e872c4afafc",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98cb8698-eb01-409d-b870-e70e16207535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf2ea555-4730-40ba-8c6d-cd67391a07dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a013c7-a155-43e6-84ac-69e653cdb8c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29d5c1b8-c2e5-4da2-a734-09037c8e6c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9396b673-a953-4782-b0de-cd1b943b9acc",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa394c8b-e947-431d-8823-a64dc578bb46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff966ad8-1a77-48fb-9224-9810cf22c98e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c19f9906-8cf6-401a-b6e8-277158dd8c07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7384bb02-38db-4d45-80e8-c1c3fb736f7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12de1e71-2485-4ca1-80d1-47affaef2892",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be311db3-8fdf-42b4-be2e-f1a9a103649f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3358d4c3-f5e5-4000-8701-06e18b253884"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0241ddf5-fd99-49a1-9266-f8b7ea5f9dcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7557f38a-1c64-4c34-87f2-ba43ee4c2946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2554d3fd-a8e2-468d-a57a-9c804b80c2c0",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf31c0f2-04f3-476e-8b60-ec569d7591b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db955a55-0f05-4ff1-a2a8-aaf732855db5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3703d7d4-4bcf-4e80-8e51-d5f826405310",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ffe782a-0c6e-43c6-a88e-c747a1b792ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab3f7c3-6900-4c2e-8b81-d52d20613fae",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f12a882-8fa9-4d4f-9ca6-3145f348bc12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad9aed2c-d1a5-49b0-bdb6-ac857557bd11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1682c5f8-7635-41e7-9c1f-799bfd7e4d19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c8bacfb-1539-4f3f-b7cd-c3fe1d8834e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eecaf98-2082-419c-ac47-1f379d528331",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05dc22b4-ac31-4bb2-bcd5-6b12ad3626aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dac5e17a-7a65-41f6-b6c8-34e481292534"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "306171b7-9351-4b9b-b173-fa2b009cc1b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f26feeb-4d93-40e5-83be-f83bff8f5db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ca8825-b761-4b67-b6d6-c3e1583052b1",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b7d5065-9740-4f13-9842-0636e1a6d26a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "638e6e7b-9d92-4797-8b1e-6bc61dca081b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1dc5ee-1d5e-45ac-9331-981d12130844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e886dd10-072f-4feb-ad84-e16f9f5c38a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e3fae0-af9e-4132-9433-4d4a15495df4",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd2bb0d-7f7e-488d-8777-19c207ba0b63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1072ea8-50a6-4753-a46a-e4aa9ec171b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e61ddbc5-a4f6-49e0-a989-e1bb80d2d0f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1deb8de-cd8a-4cc8-b30a-ff098f69bc01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2e50766-4d23-4302-998d-550cbf638155",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b84f8084-fd5f-4ef2-98a0-24f8f7884b89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcfa67a9-9858-4a46-9e57-5891a28c708e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ad0959-c3d9-4cdb-a043-19bd53f26564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57e01dad-f7d4-4aee-82b1-9421c5645f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a724f5bc-6726-4e51-88b1-0fdc04d368b5",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc5e6de3-5422-478f-a1da-5b63c147d2ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92dee764-2386-4d4d-8260-242b5c5243d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c60654-0f5b-4b1c-a548-0bc7ef008780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce89bc8d-61c5-4084-a543-f16be160d196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc39a83c-5201-4ad6-ae7f-8a1a48860538",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a78643af-ac05-47fb-9379-aec426951ff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "070da492-1595-4f56-a6a9-e942491b0966"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72d5ba5-3093-48b3-aa9a-55d8ecb6dbbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7b489fc-b67f-4ada-b7f2-fefdc83f538a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25fe5ada-53a9-404c-9ff7-e0de7da51348",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc74d42-7928-4718-85eb-c944392624f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57dab592-8be3-4a9d-b28e-82461be1a40e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c40b5f-bf31-4f27-983e-8d04538120bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c207382-0242-4578-874d-a4aba5aae218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe12786-e028-4dcd-ab9a-0ce37e7fe432",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc886d60-9812-4931-b58d-b81eafbfc5c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a32107a9-86b6-4860-887d-a8565c10ec5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "885cc9a6-c8ee-4207-888a-0ec2b4e633af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcee2456-b182-4268-9cb5-78e5b49e7581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "905e7685-e8af-4abf-9421-280180206c63",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed36e2cd-5183-41ab-a89e-00d33090240e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d5b2f06-697e-40b9-8018-f5755ec7efbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d247a7f-f157-420f-8257-2d4e29e76c1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8bdbeec-2619-461b-a9ab-1067969cda23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aaca90d-1aac-43ab-8c53-3da66ea842f3",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afffeeab-a5d5-4049-bb61-c20951c4a1e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f216d6d-35c7-4f5c-a75b-d24d6a3eba31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ce5832a-3e2a-4ac0-891b-55edad6d7bf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3044f021-171d-4b87-b277-fd8e6fa3e310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "403155a0-df17-4e8e-b037-f157c78605f4",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b905d5-5ecf-4453-917c-15637bd8df2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "356fcf6b-99d6-4491-a9df-9d77e80eea52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85359130-d722-409f-a569-0a6c473be7dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a31e213-9954-4671-86e1-64e2b8e51756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41c85d4-5f76-4397-8232-2499c56dd80b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d992996-64d6-4978-b980-48d11921a14e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f89d0e6f-291f-4527-982e-1c9c427fe57a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a740328-a14c-4ead-a1da-a76ec2f187b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5823ea0a-3a9d-43fd-a047-10c12712ab18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0f9ac3-74d0-46ac-b3a2-7373fb6ebd6e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b95620e6-3bb8-4605-876a-d0c1004e5abb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12da3ec4-457b-46a7-a587-09cdbb55bbfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bc6a1f1-3a55-43d9-8b10-db945db98705",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8cb43b6-91ef-40e4-a146-0d4234959901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "260e346f-cc1a-4b69-a5a2-0ef4a6f1f2d6",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca16bb6-00a4-4c8d-b8dc-2fd5fed0cabf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "245ad3a2-c8cd-415b-a51c-8ca465ba3420"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3526dcb1-66af-49bf-bec3-195edbf41b61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea33b6c9-f2d0-466e-bae1-7babffff1523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abbfab49-20ba-4cdc-8bb3-7064c5621bdc",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e63aca2-348f-4063-872d-712e8be7965a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da087ede-a8c5-4cf7-be18-2a6a2a80db89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0de97ab0-a7b1-4fc1-aace-2325f95d138e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67a046c4-b71e-4015-83fd-ff6807f170be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d46f6d70-b134-4c5d-b1b0-395382a74ee6",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c678700-3e48-4e17-836b-05bcd5959354",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e282f3e3-5bca-4422-848e-db85fb8ada8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17fdb3cc-17ce-4c25-8614-831a863251f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "726d2e01-18d2-4aeb-9830-874018b9756f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbfe5ece-e857-4953-a848-857cef43b611",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ed82c5-8dae-47e3-a60f-356888b60dd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e3f4ece-3871-4e5f-bcb4-ed521ee38b48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f5f14ae-8c2c-4ced-b1de-8b2504c59787",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b879bf5-58ec-439f-beea-57b8d7355cde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cdab370-f3d6-414f-9ffa-62874640576b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5218030e-3bf3-4f0a-952b-f5b7c4502612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "788606ef-0b68-4b71-8282-624f17716688"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "058ab052-1a2a-480e-90a2-3d5cb7130426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a419ab10-a7cb-40c5-905e-c7671e283e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e585ed-4397-4d81-94fe-17174332e938",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d3cfe9a-402b-49b4-89fa-d5c62d8149de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70d9b62f-da07-4003-ba86-f70c116409c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d4b9404-f5b2-484e-90a3-180a8df3ca50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf96a2ec-c5df-44a3-aa27-f5ae379bce77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecfac85e-a671-4749-83a6-c9e368323866",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "617fdc38-4a16-4fc4-82dc-20d0a19dbec4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d976e096-d98b-464a-bf7b-4ef41873d8aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6eb1c8a-980e-42e8-b238-549f710478ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b55eb83d-2a81-4bcc-b232-1242b79b8b4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ad5a78-d75c-4423-8927-f29ec22756ab",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41016972-d168-4000-9ed6-3b336a91a1d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe96ad44-5493-4b8f-8d31-f26941ee14e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c939746d-206b-4d53-bec2-1050013984d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99825d3d-3327-40c3-8cf5-aec4cb768ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cee795a-fc1c-4694-a409-0355e8f13655",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac36531-ccd8-4e11-8d1a-00ebbf53664a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f1a5b30-e727-4aea-b4e8-baaae448d249"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25066af9-7f5f-4960-acec-884cdcd48031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29b7c208-7abe-482f-b1a2-fd0e26fcbcb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad06e80-d5c4-4693-b8e0-023e85e1fe8b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20457d3f-5d2b-4c00-a82d-d7535c7613ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efd35877-baf8-49c6-b503-b6283d65f251"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d52cc995-e33c-428a-acf6-3f3d5fe44703",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ada8b152-1f92-4153-bde6-1af476930ffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "334ecb47-168d-44cf-8fa9-d173b15e4ae5",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a07bd7-c02a-4c5b-b8e2-a1fe97d94494",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f83fc05c-cf11-4298-b960-ded2c7c309f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55d7b4f-5fdd-4f71-9029-a3639cf17f8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71b0a0df-cd38-46ee-90c6-32d13a19c2d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35423ad0-4cc0-49a3-ab2e-59e9a01647e2",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd025d34-50e8-45f1-af33-3d96e139d68e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddb1db05-d66f-4b1e-a2a9-32c44f9e2239"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2384010-05c4-41b4-80ec-28e7260d850c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42e309ac-5cd5-4e68-bfcf-bf3838d544b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97443f3e-b9c2-4e80-8524-44854fb7fbf2",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d6ef490-5814-4163-88b5-c6d39f348408",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8206e389-b848-4aa5-92c1-b3c4521d68bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a74950-9c42-4d3a-82f8-713f9f747f9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "657d6b89-4bdd-4249-a17f-a032e8b437c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f712cbb-fb4f-4aba-b153-2591288bb202",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70755112-830d-4325-bc08-05bd595dcf33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e596382b-930f-4fc4-b929-cc5fdc9ee033"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba3a1d8-f27b-44ef-9833-3fd3a68bcdd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72322e5b-fb90-4b83-9ea5-e6618ae00ee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24daf85d-26f1-40d8-bb9e-ab1034b58a12",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ae4f2f-9a2f-4c27-a905-579ae6e363f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ea62a5a-a67f-475a-8526-4034ec410087"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a00cbb5-c9d7-4234-91f2-6afddaf902a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "098b1277-312d-4d5a-80fc-4dfd98ea6a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b7a2e3-9cf1-453a-98c9-2dc178e83812",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67d2fd24-452d-4d97-be5b-f4b1d98e12dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "441b2a29-f0dd-4ddf-948e-63ae5310310f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa1b5275-b81a-4bf4-bba5-e8ac9f42ceac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4013267e-47f4-418d-adc5-a2600fe62962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c007e1-c038-412d-a55f-bb79e1117fd9",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27eace02-7145-471c-aed1-7a8b770d20d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a6e8db3-e7b3-474f-a8c2-e2d11cc3fa1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a02b69e2-7c42-4eeb-a3a5-1de060b96f69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55477514-4bd2-4881-bbcc-c4ef2cc2c853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "830f2c85-3303-4d12-bc44-861aed9427df",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8e5d92-be95-4d21-82a6-95b3b2aebe78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46b02784-6c93-471a-817f-d48a1a41b97a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "393a051d-5683-4314-9f8f-3be028cb9c4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9056e420-b492-4caa-b008-91eb8048f8b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6623e5a6-fd08-41c3-ab40-778f8110bed4",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2abb709-dc0f-4c99-92dc-a7fac5c39079",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f6ab920-1ed8-4343-b3f1-82570a1dcbad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2946a6e-3fda-4577-a1da-2bded7b68b8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed7c9e40-8504-4a6a-99a0-4b7981783e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1003ee0b-f6e1-46d5-8533-930cfdcba239",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8433f8cd-a341-402b-b1ca-c42f39186dcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1adeb04-bd96-486d-a400-47f291a7d7c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a7be22-dd5d-4936-bc42-3967fd61533a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58fede7c-a13e-4712-9206-174d49c543fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0039cf21-3147-4b08-9240-b1ad1b501db1",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ea16bb-f156-409f-9297-e222a992b483",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce6b7e30-a949-4958-a14b-c8c6c12aefe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52b4f74e-c523-4855-8d9d-7cffd968ce9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03602f68-5be7-4a4d-a79c-5dbcfd2751c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a80be90-940f-442d-a1b9-2375bd7ff087",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "921f5a79-cdaa-4dab-a332-ffcee8e18fb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7377d3ba-8152-44b7-a76c-2e8ea8d5d6e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54044ed5-2565-43ab-a61b-5b49ecab081d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a164af00-07a2-4c4f-8573-c476de78f2f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0df4f50-3351-401b-9da9-ade0264d49e1",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6e93a01-0d6a-44e6-9d7b-c16a3e92c99d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2dea5a5-f131-477f-abdc-87d381dbce54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d79600b5-eeae-487b-afa7-9c49865cf266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1f41fc5-b69e-4c5c-9cb0-fc52b17fb648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d822cb1-838c-44f2-b675-f7fc62ec3d5a",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e6fa57-b778-4213-8d70-eefc38eaf675",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d68b90ae-aa16-4eba-97bc-369186cbc89d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1bfd86f-b39f-4b75-98da-1dbb34b8319c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af190030-f326-4118-bdb7-8764b06c4aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d3ec872-a299-4893-b58e-214230dd83bd",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968d8640-b09c-4ac2-a3e7-a580206394e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8396363b-f0d6-4a92-a0e6-668a25d912df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2890df54-9ee3-4d50-9cad-2d5fca297cf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55ee5228-2e32-4e55-a572-3f62778db4f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "935e170c-efbc-46d5-92e3-11725d6dc63d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a2440bb-bea2-44fc-a477-da90dd632854",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54c442c2-dd64-43d5-b856-da89d832cb27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eedf8eb-b3f2-4bfe-a15c-37454f736ce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a921fd73-07a7-4757-8064-437c290858f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ade1e91-c364-4b24-8aff-766f53a90887",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91855c28-61a2-4f2f-b4d5-d03b51f9d29e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f470ce3-dcb1-48e9-a992-9fae44724a6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55c0f6ea-d82b-4b13-aed6-1e9078b1c55b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69189830-f39f-4be0-9144-771504923666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a85d30-ae3b-448c-8a8f-5c3120f238f6",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db3ea3f-171e-4afd-acca-a5634aac15a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33d0aad4-2f28-40db-bbd2-b922a692c2f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b4b129a-3de0-4887-b57e-badec5367d4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3577b24a-d714-4e71-84b7-731538984367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc76f0d4-684f-4309-9355-61cd273dd1c0",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7acafa06-b689-4b07-95c4-a7977289039f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3860f780-7a2a-4e35-adc2-3d4b99e22903"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1160d7fd-fd37-488f-9970-a0718e486616",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00aa2b28-562d-4ee7-99c6-c2bd27c4df3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08517b24-5f69-4dcb-b586-95ac3c9abd10",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b338787-0be4-4a7a-9226-6c5d83e8d946",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef3822fb-7d99-4bac-bad2-0c6c8342c0f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf0b7b0-00c5-428e-a406-5bb50127d950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bca4aa2-50f8-45ab-a10d-1e127a82cb1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c2cd26-1b86-4f70-9628-78ee4c7ae28e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95f04ec7-82e6-40b9-973a-0bbb0d52ba1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdb75dfe-87f7-4238-b25b-9a02c2d86388"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "510d21fc-cf66-430c-8bb2-d003ad748910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "079aa265-be16-44b8-afe2-db680e0e9b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c88b391-eedf-421c-a57e-6b4fc38f32a9",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac3437e-ebf6-4ddd-9f74-9beca26d9b3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2235b522-c660-4b8b-9e89-002524735f3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd82ef3-5aab-4e97-9fbd-1d5f72eec379",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41812fa9-787c-4f2f-9a0e-661a01b3e820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16deec8-3577-446e-8084-734acc43a392",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ceee08-f514-4d24-9541-a2fdeac7dbe0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "429bd7e1-05fe-4b12-9f3e-d69adeeca717"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c201318-73b2-4eb3-a259-1fde45e32588",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34eb287e-5eae-4c8b-86aa-f1f872110798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5abe7fd6-39a0-4a86-aba3-6643e22d9b38",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d0be49d-8c8b-4c39-97b9-1670ebadf22f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "214d2af3-64e7-4db5-ae16-bcdc3c164cfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c151f568-2d87-41bc-ba0c-6ea451ba6150",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "662612fb-adc5-4eb8-91d5-8aa62d5c17fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ef91af-0dca-451e-8564-231c8db2b0f5",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3847f32a-b36d-47f2-b454-d53b972b4c33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55efdc00-d79a-42c2-a5af-9fc112dcf445"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da04e2f-0922-463f-8a71-4e1ae80252cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "940b1747-03dc-4524-9672-97ddba391da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac634701-26ba-4bd6-be65-483ab7f60481",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a13ace0-53ba-47f3-b122-ec6800098e33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6e07e08-f5e0-4ed4-b62d-a2bade57392b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed289c69-935e-4749-a505-7fbb8366e241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5643d4d1-cc8b-41a6-b407-09c89ea2fe6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3eac11e-4ee5-4260-ab9f-418c731e910e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9173d097-094f-43cb-94f1-97c6faa24fa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e711b21-c539-4053-9c0b-60d605eeeaae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc2ac51-4fc0-4dd6-b099-30c268989669",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e11770a-8233-4bb7-8c58-fadfc9b6197f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0f49b48-947b-490c-b4b2-e2928131b957",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d9ffec-ae1e-484e-9d6f-c16d46541917",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd60448f-46bc-484c-9f27-9ae80a65ecc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaebce2d-59b7-40c5-94a5-cfc63a0e3d11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "000f0986-b48d-47e1-a688-4282dd97e292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a0c26ed-93d5-4c58-8788-e711ebe92518",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a159217-ebc1-4ed7-b881-b56ba435b22e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3c40885-f71d-4072-9acb-ac21df228ae9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc563ea-fe97-4ac8-b624-f0562c5b7070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42ad962b-882e-4b72-bac1-3e1eb82baadf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "201fd641-3833-4c70-bb92-4b1f43781303",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41a05df-8765-408f-97e9-f63cafe2346c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "384ab780-8561-4acb-b538-8e0834fca16d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed970290-1062-456e-9b6a-467a9f104149",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7f48ca7-acb3-4140-935a-54bfc4776ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdd375e7-1ba0-4647-bd38-645ab3f5fa39",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95fcfff-5717-4159-ba02-e6c66cfa6dfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef64f508-2bf1-406c-9384-b45726a661e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e7e68fa-0b5a-43a2-98b6-43266fa58a2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53c907a1-6bec-477a-b4b1-405bf69e7025"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db70a8d6-3d44-43cf-8576-b7e02302548a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d6320f17-0c39-4620-be88-c187a962352a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0668e0a-1304-45db-af07-6fad58c1ba21",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6b29aaa5-7e12-4551-ae61-bcc45e6764c1"
                    }
                  }
                ]
              },
              {
                "id": "f11d7a3d-7e31-4674-b667-e95ddd4e05bd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8c07e050-dce8-4242-8327-e77fe7147e10",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b195753-5eb8-44e4-88b6-92d2ea235fe0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4df8e212-6249-4333-9055-644d3e844770"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9226b9da-8ad4-43b0-a845-3aed6f9098af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "644af218-84b3-48a5-bfb2-b9d659e1161d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "613ff2fd-3d40-4d1e-bed3-48bda362f0db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43f6b165-bd86-4d78-aff7-915bd9cce739"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "876d5daf-5839-45c9-b6c6-e3336eb59f8b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7aab4fe9-b888-434a-8d57-a2d127fea3f1"
                    }
                  }
                ]
              },
              {
                "id": "2210d281-3d38-43ea-9f80-a13e4457b877",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4b918ccf-1ccf-47c9-9f55-cbd94b16a64b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd8b022-89f4-4963-8589-28d7bb8a4618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9c54fae0-52a6-4986-aa71-03c15e0ec934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f27af9b-c6f6-4a34-b1be-8392e04b8f8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8585818-ebf8-4f82-a704-ca59b194f2c3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b0a10fc9-a740-4215-aaa0-6c3e1b09756a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ec10ee84-f7ac-494a-b57d-18aa62fa6387",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "13d31c18-47e3-4f9e-8311-5c4f4acf05f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "45948b14-9a46-4b50-8035-ec96aaa01c14"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72c0d7c8-5da8-4fdc-96f5-95fe3321eb69",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a4228b6-5bc8-4b30-915e-f3c2c6a3525f"
                    }
                  }
                ]
              },
              {
                "id": "ca989dc5-ac15-43a0-8f5b-d6202b6d76c5",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b530408-7f34-49ef-a4af-7eaf57dd3f8a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "959ab6df-bd18-4b53-b6fd-d97ca3f11407"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0097b5c-6e0e-4fd6-a945-efb37df28c13",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4c5ab47-1246-42bc-a927-9db08aa9a962"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c1bd389b-79e5-4fd1-a9e5-eefe3ed65d25",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "dccbbbc1-5f6b-43ff-aae9-31562e894216"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b1c5c3f5-5df8-4430-a44c-f12ba1cd7064",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9e35861d-eaac-4f02-8843-78b44aab70db"
            }
          }
        ]
      },
      {
        "id": "a859d16d-a790-49fa-9ab3-9d29a4e69fe3",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "69433ea1-5e36-485b-9ccf-cd2c7c4f004c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f6a5b587-ff3b-4203-a558-e51a4cd12538",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "437398cf-f344-4e8a-adce-d46c37be182e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f05a8189-0e92-422b-95d6-596b8f967c7d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2f7ec28a-b380-4301-8b75-691a9ff6deb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb31dc4b-2579-4d31-b3fe-5776d2cbc828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d1b205f1-12f0-40f7-8dbd-834c5ee6558d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "286f9d7e-e256-45ea-8f32-93836ce69fcd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b792916e-61d9-4938-8ed0-65eaa33f3201"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff1196a7-2c0d-42f4-88ae-2f9f05522c2b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ecf4b743-eb05-4c08-8f26-38eecae55521"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5a86c102-2006-4d40-9e63-223c79b97c3a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "147a611e-54ae-455f-b3c7-3591fb927c6c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "14cd8546-9ceb-494c-bbe2-a7e4f28fbf38",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2449e357-8652-4fca-b494-5e4dea57b174"
            }
          }
        ]
      },
      {
        "id": "0d6ad939-2c30-4400-a191-eb468a52b6ce",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b5b4ceaf-9602-4d2d-8461-6918341549fc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6236d36e-09a7-41be-a52d-f83d00365c5a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "11eab939-c7cf-4a4d-963c-1c65c1a68208",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07baa76b-5ef1-474d-9ac1-04c2cd83d90f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "add8629f-7078-4dd3-b398-db223028a4e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3be243-f69f-427e-89fc-65c71c5ef492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e5accf7-88b6-4078-8808-5477a532be65"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "73d21671-e90a-419c-95a7-4291578b60aa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "50581dca-d4a7-49a7-b53b-4f638da3b227"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "25c634fd-3056-4e49-84bf-a90d3fb7597e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d38aeb8a-9411-41a9-893c-3ae467c1f3a3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "70d6f62c-5b3d-455e-b0a4-7c3fc90fcc88",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dcc90be8-91a8-4a66-aac1-e246d46129ee"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5aa31895-1648-47ee-a6b3-aff9d86c1d30",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5f227af4-ca99-4ce0-a1a3-fa818d81deb5"
            }
          }
        ]
      },
      {
        "id": "11d33a7f-a47f-46c0-b92c-ce932ab8ff6e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "af18fc36-9255-436b-b8ed-d8f32849defb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2dab091e-261d-42a6-9355-f2e8f23c2236",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a78c9712-2780-494c-894c-bd9b36fa1282",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c84fe8c-e55d-4f63-ad3b-dff57826185f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "234f9c93-1fa1-4327-80d7-1dab59f34c96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d949dae6-38f4-450d-b701-fced96b58f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c745078f-1483-4d1c-ba43-d06c77f26e81"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da1cf01c-64dc-418b-8fea-b682ac82291e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "57e145d9-0085-4361-87b7-03ea953ac1a5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a44a737-9bd9-4b28-a5cb-85b2b3c0e157",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4649ecca-de6b-4275-a4af-525f78b1714f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "67badb0e-7ce2-4c6e-a93d-17c1ef71267e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ace73557-89f6-4b75-8553-d40e2988a404"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "78ea7e7a-b3dc-4d5e-af08-279ad21866b4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "56e663f8-c255-4adc-8756-32108196c997"
            }
          }
        ]
      },
      {
        "id": "fbdd7ea6-8795-48e9-8b4f-aa80a6dff733",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "87cfdc2e-f300-4136-8e26-997887ea8c15",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9d4ebcbf-24a7-4f65-a114-01b383f6f7e8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "28a3dc3b-509a-4837-bdf8-2b2a30306924",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f48f329f-03b1-41d8-bc6c-64c6841040e0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8240aa6d-df71-484e-a801-d8cfe6bef34a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1853,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 246,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 495,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 931,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 922,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 37.16260162601626,
      "responseMin": 13,
      "responseMax": 590,
      "responseSd": 42.95807636450753,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1687221648399,
      "completed": 1687221667780
    },
    "executions": [
      {
        "id": "5edd4532-c867-4424-93a6-7cf4aee6c68c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 244,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3c0a1fc6-a654-429d-9f0a-5c442072da03",
          "httpRequestId": "c34c0198-b391-42db-bfb9-34762ff0dbdd"
        },
        "item": {
          "id": "5edd4532-c867-4424-93a6-7cf4aee6c68c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "90f51a79-b0e5-43ea-849d-4fcc6ef678d4",
          "status": "OK",
          "code": 200,
          "responseTime": 93,
          "responseSize": 0
        }
      },
      {
        "id": "57209174-be60-4157-9b01-afe6648a7b36",
        "cursor": {
          "ref": "b4adfdf7-7df8-4003-9bdf-8590552d58d3",
          "length": 244,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f553a460-0e1a-49da-8423-302a35c89af5"
        },
        "item": {
          "id": "57209174-be60-4157-9b01-afe6648a7b36",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e0208bb4-acbc-4768-ac23-80b2eb126be2",
          "status": "OK",
          "code": 200,
          "responseTime": 13,
          "responseSize": 0
        }
      },
      {
        "id": "f2942ec2-832f-4440-b232-18677257b905",
        "cursor": {
          "ref": "3d192964-a433-4e16-8fc4-ac386d26ec50",
          "length": 244,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "5353125a-23cb-444a-9477-c69bda4a364a"
        },
        "item": {
          "id": "f2942ec2-832f-4440-b232-18677257b905",
          "name": "did_json"
        },
        "response": {
          "id": "cae4b305-0b24-4ed0-81d6-635dce83ddca",
          "status": "OK",
          "code": 200,
          "responseTime": 294,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35812356-1bc9-4f97-b96b-3f54b7f9f8dc",
        "cursor": {
          "ref": "b0dc8155-8f13-4286-b63b-9af3c989a60e",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5480fc11-fce4-41d9-8664-fabe4f362b14"
        },
        "item": {
          "id": "35812356-1bc9-4f97-b96b-3f54b7f9f8dc",
          "name": "did:invalid"
        },
        "response": {
          "id": "5327bb93-65bc-40ea-80b4-ce4a750f2591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35812356-1bc9-4f97-b96b-3f54b7f9f8dc",
        "cursor": {
          "ref": "b0dc8155-8f13-4286-b63b-9af3c989a60e",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5480fc11-fce4-41d9-8664-fabe4f362b14"
        },
        "item": {
          "id": "35812356-1bc9-4f97-b96b-3f54b7f9f8dc",
          "name": "did:invalid"
        },
        "response": {
          "id": "5327bb93-65bc-40ea-80b4-ce4a750f2591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c224010-ce76-4f0b-abbc-3cc8b09003ee",
        "cursor": {
          "ref": "60952ab4-5596-4046-a919-e78f35465b28",
          "length": 244,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "bf9e2fbd-677b-4518-ad09-e158e0a605ad"
        },
        "item": {
          "id": "0c224010-ce76-4f0b-abbc-3cc8b09003ee",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "3dd44a14-81e4-4bbc-adef-9bdf38621289",
          "status": "Not Found",
          "code": 404,
          "responseTime": 88,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8321dc20-854a-45f4-8fb5-b3ab75d3f515",
        "cursor": {
          "ref": "bce9f286-5a5e-41df-98fa-40af8f592c44",
          "length": 244,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d9d7ac7e-13a0-4922-a767-096869a81dd5"
        },
        "item": {
          "id": "8321dc20-854a-45f4-8fb5-b3ab75d3f515",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9a9603ea-0709-46c9-ac93-9b571b825e09",
          "status": "Not Found",
          "code": 404,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5ec2913-3fa4-47f6-b4bb-f9b6259d0168",
        "cursor": {
          "ref": "295e0a5d-9c2a-4e06-9131-ae2adbdb55eb",
          "length": 244,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "61accfae-8ca4-45eb-b88a-83ace87594bb"
        },
        "item": {
          "id": "b5ec2913-3fa4-47f6-b4bb-f9b6259d0168",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "6d083724-f856-47b5-8f8d-608571c9d999",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0007095-c3bd-4ed4-8254-3fdff68e41fe",
        "cursor": {
          "ref": "a10fafda-963b-4e6f-8fb5-5042fe83a0b5",
          "length": 244,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "bb5a3f00-f4ee-4323-ad95-9107e9760d27"
        },
        "item": {
          "id": "d0007095-c3bd-4ed4-8254-3fdff68e41fe",
          "name": "identifiers"
        },
        "response": {
          "id": "9a8d7c64-386d-4bb0-b6a1-a548f679ce1c",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3381b46-f10b-4063-9d8a-22513dfcae26",
        "cursor": {
          "ref": "9b1e7d9b-592e-40c3-b0e1-7fd19ca9fce9",
          "length": 244,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "aa9d8e2b-6262-4599-b644-b12de0b45b8d"
        },
        "item": {
          "id": "f3381b46-f10b-4063-9d8a-22513dfcae26",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "afebfc94-05af-47db-b2b0-5b9ba2447fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fdb4b36-7b73-48df-a660-b3dd4881c213",
        "cursor": {
          "ref": "a8767f17-ead7-434d-a99a-76142084a23c",
          "length": 244,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "33de5680-875a-4c05-92a7-1bc73d721940"
        },
        "item": {
          "id": "4fdb4b36-7b73-48df-a660-b3dd4881c213",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "660000bc-374e-4b48-9649-0595cc0e4f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "684b3f81-169d-4a9c-9b9e-9e0a9698b351",
        "cursor": {
          "ref": "8da22c95-434c-43dc-9880-f4b0f3d8649b",
          "length": 244,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3fe2c634-eaf2-4411-ac86-14d61ae59dad"
        },
        "item": {
          "id": "684b3f81-169d-4a9c-9b9e-9e0a9698b351",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "2209bdff-b21d-4eb7-8c84-d0e031057004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "634c52ba-cd73-41fc-a7b5-b7203b3e740f",
        "cursor": {
          "ref": "21767a93-a7f2-44d3-8d91-6bb6fd1456e5",
          "length": 244,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "27a116a0-b135-48fd-880d-64aecc6716a1"
        },
        "item": {
          "id": "634c52ba-cd73-41fc-a7b5-b7203b3e740f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7b1b2e36-fd14-44b4-abcb-36f5d0d602a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a78c28e0-15f7-4ecb-ab04-2dc8c23d3ed6",
        "cursor": {
          "ref": "b05625c8-7e0c-4a6d-a650-a77f2bfc2765",
          "length": 244,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "bc83b48f-337e-4aba-b61b-0559db55cbe9"
        },
        "item": {
          "id": "a78c28e0-15f7-4ecb-ab04-2dc8c23d3ed6",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "380ec8a6-fa78-4c07-a4ea-860ef6f8a7ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794eabcc-5696-47e2-9ca4-957ae3315b52",
        "cursor": {
          "ref": "c0524d23-bb65-42a2-a89d-68a249b4fa17",
          "length": 244,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "fb2c729e-ee99-463c-92d4-e556d40aa223"
        },
        "item": {
          "id": "794eabcc-5696-47e2-9ca4-957ae3315b52",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "be7c62ba-15e7-4059-ab97-f1f77b7a6423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "087560e1-31a9-40b8-89dd-0a8adf006ee4",
        "cursor": {
          "ref": "2e0d5785-e35e-440d-ac9d-4fca866c7941",
          "length": 244,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "4c5ae41d-4ed6-40ff-be74-8287aa81612e"
        },
        "item": {
          "id": "087560e1-31a9-40b8-89dd-0a8adf006ee4",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "6a52d887-e90f-4731-83a8-21dc793fcad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d0f09f-ec72-40da-a9d1-fdd8a78257e8",
        "cursor": {
          "ref": "8c193b14-eeb0-455b-b097-0e86c6bcb491",
          "length": 244,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "b8f15cd6-a424-4e35-b15d-0851c08a1bc4"
        },
        "item": {
          "id": "f6d0f09f-ec72-40da-a9d1-fdd8a78257e8",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "27350c06-218d-4ccb-8385-3104fe103bdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de8287c8-0433-4fb2-94ec-01987614619f",
        "cursor": {
          "ref": "bb4786bd-d1ce-40b7-8201-2fe10b72594c",
          "length": 244,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "6f371186-42e2-43f9-9a71-24e4d737fc45"
        },
        "item": {
          "id": "de8287c8-0433-4fb2-94ec-01987614619f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ef2d6298-92c5-437b-b182-f4237a38a97b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a1910a3-fc58-4aa4-b88f-94290b03fc93",
        "cursor": {
          "ref": "7e924f85-3b8d-4597-a121-db742c0bf71e",
          "length": 244,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "634e7740-f66c-46ba-8360-7c56b2ec3138"
        },
        "item": {
          "id": "6a1910a3-fc58-4aa4-b88f-94290b03fc93",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a0a45038-d86f-4e89-b532-c7f4f4650125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06cc022e-83da-4b84-a224-19325fc5b523",
        "cursor": {
          "ref": "72b8c2fd-d248-413f-b446-feed32562c7b",
          "length": 244,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "69e870be-072a-4a30-8aa2-b24cb418bbd9"
        },
        "item": {
          "id": "06cc022e-83da-4b84-a224-19325fc5b523",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "29295b05-ed25-40d3-bd70-d523ec58c9f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71df38a0-3b47-40ba-ae8c-7f8e037d5b55",
        "cursor": {
          "ref": "6b0214cc-895d-41de-bf05-8bf61b9ad1bc",
          "length": 244,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "bc9da80d-27de-44a6-9209-b97b5f49b6c5"
        },
        "item": {
          "id": "71df38a0-3b47-40ba-ae8c-7f8e037d5b55",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "829688f5-e493-4877-bcaa-064083a27cc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c44e9202-b191-4f3e-b8fe-319da576b421",
        "cursor": {
          "ref": "89ed50c6-541e-4297-9070-a3e0525361a7",
          "length": 244,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4de3dec1-c84d-4dea-9d33-35aed8746e3b"
        },
        "item": {
          "id": "c44e9202-b191-4f3e-b8fe-319da576b421",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e22b209a-ffa1-4fc9-98d7-9bc595092608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71c1ee5-4a65-42ff-a285-aad7d37184e3",
        "cursor": {
          "ref": "c6b350eb-caff-4c36-acbb-384dfbe7dbaa",
          "length": 244,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "17bfca67-6062-4bdd-a912-2fb8dce61b98"
        },
        "item": {
          "id": "c71c1ee5-4a65-42ff-a285-aad7d37184e3",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "5e61c20c-522b-4331-9c34-f52488b14337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e9e2192-8381-4547-9ae7-b20247bda3bd",
        "cursor": {
          "ref": "6a96ca2b-e1cf-4fb7-be9d-66264909b37b",
          "length": 244,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a77945cb-6771-424e-82b8-636bc7b2e42a"
        },
        "item": {
          "id": "8e9e2192-8381-4547-9ae7-b20247bda3bd",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "2b3f1ff2-156f-4d56-8d33-be64bd0d1ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2464242f-e29b-4257-9b11-d18148ea69c9",
        "cursor": {
          "ref": "12a35a3c-c26a-456b-8d59-20653d0c773b",
          "length": 244,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ef6f5810-25e2-4edd-9c5b-fd86ec8c7a23"
        },
        "item": {
          "id": "2464242f-e29b-4257-9b11-d18148ea69c9",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "897176ea-5887-4a4d-b053-0bb569df6e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9f2bd5-a5be-4735-84d2-90e3e960ef81",
        "cursor": {
          "ref": "c9739225-3e70-4522-9ce4-0089b0141635",
          "length": 244,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "3294403a-0898-467c-b47b-7078a351d6ef"
        },
        "item": {
          "id": "7f9f2bd5-a5be-4735-84d2-90e3e960ef81",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "3eb19f25-d8d4-4373-bdcb-bb647bffc256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda91cf5-cc94-4c48-bc63-e760f449c839",
        "cursor": {
          "ref": "fdf204a3-fc1a-4b9a-ae7f-f987a8b4c211",
          "length": 244,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b69072f8-2029-46e3-9780-5c373f35e464"
        },
        "item": {
          "id": "fda91cf5-cc94-4c48-bc63-e760f449c839",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "982d0948-45d2-4cf8-94b3-d6c10c4b11d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ef56d2-f10a-4658-94bd-c31b98fff72b",
        "cursor": {
          "ref": "422f01ff-c3f0-4ccf-96a4-af783f35bac1",
          "length": 244,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b77e12cd-6322-4c52-ada3-f40dd38164a2"
        },
        "item": {
          "id": "51ef56d2-f10a-4658-94bd-c31b98fff72b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "2ffc4188-65c7-4f82-99ff-9f8782d4d99f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407a748a-6248-425e-b9cc-887bab93cfdb",
        "cursor": {
          "ref": "321580f9-2e37-453c-9c62-9e1088e0b7f8",
          "length": 244,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "0f8dda4a-5ea5-4f77-9975-e04efc6d88ae"
        },
        "item": {
          "id": "407a748a-6248-425e-b9cc-887bab93cfdb",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "4d61b4de-a6ce-4e02-bce1-b53e84ec3096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4507feab-cb2a-488a-930a-0edc254bd45c",
        "cursor": {
          "ref": "c360dddc-1978-4843-ae05-1a9b9a8c84af",
          "length": 244,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "534277f2-f414-4809-9684-732e9f6ea1ae"
        },
        "item": {
          "id": "4507feab-cb2a-488a-930a-0edc254bd45c",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "39b418f4-b4ab-4391-9c13-32f37f4e7ac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8532713a-f64c-4cad-b055-117b457fc4f8",
        "cursor": {
          "ref": "8194d43b-aa9a-4b31-938a-c4d4cb2a4265",
          "length": 244,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e3e9e8db-e0b5-4e4b-9d96-5ff6264b4d69"
        },
        "item": {
          "id": "8532713a-f64c-4cad-b055-117b457fc4f8",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ab7f0c0c-f5ac-401f-b7ca-b76a853d6d79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19f4a7cc-32bf-4e0f-828d-0b055b6fe029",
        "cursor": {
          "ref": "30cffc45-dac5-497b-a4f9-4eb524805c29",
          "length": 244,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7c25591a-ad06-46d9-bc89-c8f2ac8ce067"
        },
        "item": {
          "id": "19f4a7cc-32bf-4e0f-828d-0b055b6fe029",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "3ce5dd63-44a4-4834-acfe-94cb264a93fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adba1c9e-65e9-45cb-b8f1-0e3fa795094e",
        "cursor": {
          "ref": "f21d789e-2aa9-40f4-b9bf-a761f5ba843e",
          "length": 244,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "92f9672f-9c3e-44c1-8045-f86cceb85c0e"
        },
        "item": {
          "id": "adba1c9e-65e9-45cb-b8f1-0e3fa795094e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "56f56260-2c93-4a47-8b24-7772e58ec8e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c3f06c-f701-44f5-ad4b-8170febff706",
        "cursor": {
          "ref": "ad17484b-70ec-49d9-8f85-4896f984e39b",
          "length": 244,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "5f5d2477-c926-4219-9855-5936b7199df6"
        },
        "item": {
          "id": "13c3f06c-f701-44f5-ad4b-8170febff706",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d319d026-e13a-4384-a036-9f6a3607560b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9353ad5-8207-4932-948b-a97012f69e98",
        "cursor": {
          "ref": "acbbffa9-b04b-426e-a366-f1afa856c084",
          "length": 244,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ce3323e0-6b16-4a53-ab77-2386c2f95753"
        },
        "item": {
          "id": "a9353ad5-8207-4932-948b-a97012f69e98",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5d10acb2-9fd3-4356-9ba9-86482281a38e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0367321-625b-4857-a989-24287e8a4589",
        "cursor": {
          "ref": "3168c225-ade0-4529-9868-d95064481f0d",
          "length": 244,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "e1ec25b5-6f2a-4e0d-b697-2cff9ce1b068"
        },
        "item": {
          "id": "b0367321-625b-4857-a989-24287e8a4589",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "88e5d246-8c37-4100-859c-4f2855bfef47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7965686-ad5c-4d06-a449-1f69143e0954",
        "cursor": {
          "ref": "fdbcb6ea-beea-42fa-a4b6-ddd6a0837ae0",
          "length": 244,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ff99b594-9ec0-4eff-aee2-ef909d00e4bb"
        },
        "item": {
          "id": "d7965686-ad5c-4d06-a449-1f69143e0954",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "fafb4c1b-7ffc-4d1d-bdd4-1a0b14f84444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c06e2fa3-d542-4199-b119-7ee03c4b04af",
        "cursor": {
          "ref": "6ed90b92-b4cf-4816-9d80-6b6cb97c5a41",
          "length": 244,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b4f589ed-b35d-4489-ae8c-a45cd46771cd"
        },
        "item": {
          "id": "c06e2fa3-d542-4199-b119-7ee03c4b04af",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "776074d2-c0e9-4268-b5b8-7f74418da1cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0445134c-fc3e-42cd-b81a-44d5b703acf0",
        "cursor": {
          "ref": "f346f9ca-d79a-414a-8143-33d2f455ff46",
          "length": 244,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "fd9c09a3-6b53-46db-83de-e633136477b0"
        },
        "item": {
          "id": "0445134c-fc3e-42cd-b81a-44d5b703acf0",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c97c5a57-1994-4801-aa20-ade13f1d4c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06740b45-3384-4eb7-a264-2c3062578746",
        "cursor": {
          "ref": "d6058627-8e29-4d27-ad7f-f1f9b504fa53",
          "length": 244,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "81dbb49c-ee95-4c67-9070-56c11e4ff65e"
        },
        "item": {
          "id": "06740b45-3384-4eb7-a264-2c3062578746",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d850fa6e-74cf-4b60-adb7-f7a981a03435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfab0c26-7b6a-4d66-b487-bf8b7d60c754",
        "cursor": {
          "ref": "c9fe25e0-7f70-4834-bcfc-e4bea1178419",
          "length": 244,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "58b45112-667d-4b62-884a-895f95b67f0e"
        },
        "item": {
          "id": "dfab0c26-7b6a-4d66-b487-bf8b7d60c754",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "690f7a53-726b-45b0-b170-969f5df864b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bcf8b1b-499d-41b8-88fd-55d472dc762a",
        "cursor": {
          "ref": "04e4802c-aa91-491d-943c-2b6f6ad06ad6",
          "length": 244,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c360c7e7-92ab-4b57-8a07-b7d4599716e9"
        },
        "item": {
          "id": "3bcf8b1b-499d-41b8-88fd-55d472dc762a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "111e5acb-f7f9-4424-b271-dd506a7a0ed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591402e1-b62b-4d6a-9e42-aefbf68ded7a",
        "cursor": {
          "ref": "838a94d9-fcfe-4dcc-9d0c-30cc72795e89",
          "length": 244,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ca36c8d1-072a-42f8-b2d1-c2ae8d0ec933"
        },
        "item": {
          "id": "591402e1-b62b-4d6a-9e42-aefbf68ded7a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3fc22fe5-dac9-47ef-9db0-a30a85d0002f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c7efad-a93e-4143-92d9-e5ff308b72c1",
        "cursor": {
          "ref": "d99f93ef-21cd-4e0a-b121-bc4a3809a8b0",
          "length": 244,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c3824bf5-aeee-48f1-bb5b-436a680b8c8b"
        },
        "item": {
          "id": "f1c7efad-a93e-4143-92d9-e5ff308b72c1",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9e0932e6-5c7a-4230-9eb3-a3f03d0f975e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd772009-88da-4ec2-9853-2f3bcb939cef",
        "cursor": {
          "ref": "1b7db76a-5f37-4bcc-b930-1d18f5ec80f8",
          "length": 244,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2c351852-eeff-4400-9e37-e268f728a614"
        },
        "item": {
          "id": "cd772009-88da-4ec2-9853-2f3bcb939cef",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "10963e4c-a5aa-46c5-9e5e-123494295927",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 39,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795f697f-3ecc-469b-a5e0-aea244137682",
        "cursor": {
          "ref": "08561847-88f5-4841-b97c-9b34130e21c5",
          "length": 244,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "2f4cfe6b-6035-4f7c-a94e-df79e902cf1c"
        },
        "item": {
          "id": "795f697f-3ecc-469b-a5e0-aea244137682",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "dbe299a4-4557-49d3-a36d-4e0b762682ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "724ca369-7b00-4a2e-b82b-ea9414ec9b4a",
        "cursor": {
          "ref": "fa4b7488-cb76-461a-917c-67cdb0cd2f44",
          "length": 244,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d5789def-3440-41fd-be8d-f68ab780cc3a"
        },
        "item": {
          "id": "724ca369-7b00-4a2e-b82b-ea9414ec9b4a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "edbc1bdc-03d7-44c0-ba29-86a98ba82eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d1a168-a1bc-4389-93e1-b71a26c29426",
        "cursor": {
          "ref": "2f4981fd-3f71-4735-8a5a-8841c6393748",
          "length": 244,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "04ca767a-b6cd-4051-819e-cc7f38be8a87"
        },
        "item": {
          "id": "c3d1a168-a1bc-4389-93e1-b71a26c29426",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "1ea75b50-e80d-48be-9da4-b181f26959b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09be1768-e1d9-46ab-a026-d1443b2edbb7",
        "cursor": {
          "ref": "b6a5bf6e-4bf8-4288-a5ac-fcbc452eb60a",
          "length": 244,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "23052f3e-aa43-4871-93e6-8d0bbbb5af4e"
        },
        "item": {
          "id": "09be1768-e1d9-46ab-a026-d1443b2edbb7",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "66461e4a-f903-423b-852c-2e9fc8c8b825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e28522-f0d2-4eac-9ba6-7baa1b6ed4bd",
        "cursor": {
          "ref": "849cca92-6aef-4d80-bf73-f465fc18a267",
          "length": 244,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "94318a8c-72b4-41d4-9148-a4016777c93b"
        },
        "item": {
          "id": "d7e28522-f0d2-4eac-9ba6-7baa1b6ed4bd",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "6f09751d-ddd2-4cad-bcfd-a2edce67b118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89641456-a737-4a9d-9172-20265061fa1e",
        "cursor": {
          "ref": "e7da2199-5240-42ff-afb5-238df2cba174",
          "length": 244,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "924c38d8-dc82-49b7-8500-cd0549a75856"
        },
        "item": {
          "id": "89641456-a737-4a9d-9172-20265061fa1e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "584b3fa4-ac9c-4302-bed9-c43b13d74545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d1a3d87-1a3d-41ff-a0e9-bdcec758e63a",
        "cursor": {
          "ref": "d99d038b-0de3-4373-a5ea-1d0c102c54ae",
          "length": 244,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a1beb4fd-c1b3-491e-98b5-90e43bba135a"
        },
        "item": {
          "id": "2d1a3d87-1a3d-41ff-a0e9-bdcec758e63a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "09dc3258-9197-45f1-9cc0-884e5958815f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 40,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f1d876-d5db-4aa1-b8ef-4ad59489d15b",
        "cursor": {
          "ref": "7f6746c9-3dd6-4a17-98d4-5ed6ec150b50",
          "length": 244,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2d0193b4-0b1f-4332-8d22-7afee09c51b7"
        },
        "item": {
          "id": "85f1d876-d5db-4aa1-b8ef-4ad59489d15b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "edb79a92-39ac-4c30-a047-02df72611da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd9ff552-e971-4bb2-9f35-3ac6da423abc",
        "cursor": {
          "ref": "e85b2290-dcd8-4a3b-84c4-ed45d5ee5606",
          "length": 244,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ed23b6c4-6d45-45c9-be90-8facbefba3e5"
        },
        "item": {
          "id": "fd9ff552-e971-4bb2-9f35-3ac6da423abc",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "90b85c26-18be-4471-95f8-3c4801805c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea2fb5bc-7e5b-4e04-8a38-8b615f5c9118",
        "cursor": {
          "ref": "2ad90340-204c-4451-914f-a53a2d7b8371",
          "length": 244,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b8678d24-35c6-4f07-96ff-e9eb55eec89b"
        },
        "item": {
          "id": "ea2fb5bc-7e5b-4e04-8a38-8b615f5c9118",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "360eb9ea-3231-4358-94aa-8ad910f2d1ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00299611-2136-4125-8bf0-752cc7e8c66b",
        "cursor": {
          "ref": "64be9366-6149-4eae-a61b-41854d581b74",
          "length": 244,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "77e042c4-f649-4a86-b7fa-abf867498c63"
        },
        "item": {
          "id": "00299611-2136-4125-8bf0-752cc7e8c66b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "512be070-3e42-4f45-b460-4634d16ec53a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a4a3f6-d9c6-49c5-a5b0-bf8d9e9f1441",
        "cursor": {
          "ref": "4137a11b-e880-4941-9193-55d25bce5965",
          "length": 244,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "92b989db-53b5-4312-83e6-7b7cf597b1a7"
        },
        "item": {
          "id": "72a4a3f6-d9c6-49c5-a5b0-bf8d9e9f1441",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "1d847a6b-d115-472b-90f8-5dc29e63c461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4cf0e9a-a627-463d-b0c4-9bf42df15a01",
        "cursor": {
          "ref": "39061fc5-fc57-40e9-9601-555a6d65d591",
          "length": 244,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6e3b688c-4c73-44d6-98c2-be2dba4d500e"
        },
        "item": {
          "id": "f4cf0e9a-a627-463d-b0c4-9bf42df15a01",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "29349db7-984e-492e-8fb4-b06551556388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b325e305-3f2d-4adb-bc9e-5457a8ed0f8c",
        "cursor": {
          "ref": "3131a04a-1c32-43fe-8298-84593a53e1a8",
          "length": 244,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ec16deab-190d-4d7b-a6b2-781212e2ed0f"
        },
        "item": {
          "id": "b325e305-3f2d-4adb-bc9e-5457a8ed0f8c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9f35c5f9-0a16-415f-8119-5e39b1ce6112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "531ed193-c9e7-406d-a1a4-532120ef55ec",
        "cursor": {
          "ref": "271ba8d3-d7c7-4954-af3a-eb47cc50eadc",
          "length": 244,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "30004ed9-6227-4baf-bae4-10d74a28a0b6"
        },
        "item": {
          "id": "531ed193-c9e7-406d-a1a4-532120ef55ec",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8b7f1d0c-c150-4150-a40e-153940e6ab12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae2a3fd-fff5-44ac-b9ae-cb8e65cd17c3",
        "cursor": {
          "ref": "9b2d21f7-7e89-49bc-a6c8-b48ad2d85b02",
          "length": 244,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "2e28d736-b29b-42bd-b88f-3fecbb7e98bb"
        },
        "item": {
          "id": "5ae2a3fd-fff5-44ac-b9ae-cb8e65cd17c3",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4d414dbd-95cd-447b-920d-e85d6778e795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd783b47-466f-47a5-a39e-85ec52ee44d7",
        "cursor": {
          "ref": "fd660448-93b3-4117-97e9-81df41d28d5d",
          "length": 244,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "4a54bf89-5c90-46fe-80b4-fb86749967b0"
        },
        "item": {
          "id": "dd783b47-466f-47a5-a39e-85ec52ee44d7",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "2986640c-0f3e-47db-b90d-567122d31127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e5aea7-f29b-4e65-b8d0-1e79e33a2421",
        "cursor": {
          "ref": "471ade10-9380-4b13-990a-fbceb0c64926",
          "length": 244,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "9fdc4364-a2c6-41c1-a9e0-ee3240ba003d"
        },
        "item": {
          "id": "13e5aea7-f29b-4e65-b8d0-1e79e33a2421",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "266dacc8-28d7-4ddb-b820-e588e43cedae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f741ab99-44b6-4a10-b076-c3e790b7fcd9",
        "cursor": {
          "ref": "da58873c-92aa-444b-a500-ab7dad6e3631",
          "length": 244,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "36e6dcf0-25a3-4514-9c15-25d9a77d7d03"
        },
        "item": {
          "id": "f741ab99-44b6-4a10-b076-c3e790b7fcd9",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c0444214-c3ad-4453-8072-772620600bb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f02f9692-d90c-48c0-a0cf-473fae6f0c94",
        "cursor": {
          "ref": "cc4a52d0-0654-40cf-bdd2-4d3e97aec7e9",
          "length": 244,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c2f18386-cd85-418d-8dcb-f33df2fc7d5a"
        },
        "item": {
          "id": "f02f9692-d90c-48c0-a0cf-473fae6f0c94",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "32a1429d-bee5-45ad-8baa-417962be70d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364d496c-e253-4bf1-840c-92aff2024ba6",
        "cursor": {
          "ref": "fb303437-45ee-46e3-b333-bf7a8c892f0a",
          "length": 244,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "98215f4f-ede9-4c0b-a0e3-9f76e4173c9a"
        },
        "item": {
          "id": "364d496c-e253-4bf1-840c-92aff2024ba6",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "46756163-b93b-4b0d-ba55-6e796bb169ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e24d06-3dc0-4f1a-b7ae-d6d43a11e022",
        "cursor": {
          "ref": "96386423-41cc-4a5e-a4b7-fd6645ce7116",
          "length": 244,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "feb70560-32a4-455d-8aa5-4f2bc7fc8236"
        },
        "item": {
          "id": "10e24d06-3dc0-4f1a-b7ae-d6d43a11e022",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "36cbcb41-5d5f-4f26-919f-4666c0db7508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dddffd39-6620-4683-b6fd-8c10bdeb1155",
        "cursor": {
          "ref": "d3476d37-6246-4503-8090-c9655abf3830",
          "length": 244,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "0a2fe22b-9649-471a-8f37-b67217a6cfed"
        },
        "item": {
          "id": "dddffd39-6620-4683-b6fd-8c10bdeb1155",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f28a4b8f-ed54-4e8b-8566-ac1dd4b0e36d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec95473a-1cfd-4ef7-b9e3-15f0606802e3",
        "cursor": {
          "ref": "e35abfce-04a7-448e-834b-c96af85af2be",
          "length": 244,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "92eead70-bf60-4a8c-8a5d-60f7e6ac059d"
        },
        "item": {
          "id": "ec95473a-1cfd-4ef7-b9e3-15f0606802e3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "23f2311a-5de2-42d1-a63a-4553d14282ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f77813a7-3c9e-4793-9373-85f943dbccf3",
        "cursor": {
          "ref": "fb2034ca-89c6-4f90-b2ec-902bcdb0719b",
          "length": 244,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c2a11a4b-7829-4297-bf0f-d56018439af4"
        },
        "item": {
          "id": "f77813a7-3c9e-4793-9373-85f943dbccf3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "04defd56-8e66-43b6-8bb9-02cbac15c126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eae9a942-7bbd-4e98-ac75-8f2f2a75125f",
        "cursor": {
          "ref": "55cfc6c9-e0a0-4cac-a6fc-02cfb715e2b0",
          "length": 244,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "01f905f5-1c0c-4a66-ba2c-7125bbbb9851"
        },
        "item": {
          "id": "eae9a942-7bbd-4e98-ac75-8f2f2a75125f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "15edf28d-0cce-462a-91fc-be512d31b45f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7839ba75-af60-40b3-9df9-d12ffa38fef0",
        "cursor": {
          "ref": "16d20b03-aa2f-4ca4-835c-920b43354f50",
          "length": 244,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "310d20ed-96af-491e-9fc7-2b147a769b7d"
        },
        "item": {
          "id": "7839ba75-af60-40b3-9df9-d12ffa38fef0",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "83665391-74d1-439c-9688-d9176a426dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3649a9b2-0b33-40de-9907-1d1cd38d6c3c",
        "cursor": {
          "ref": "cbd1a44d-69d8-4057-b167-e33afadba64a",
          "length": 244,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c6f30a4e-604f-4554-95c5-afa93984d2f2"
        },
        "item": {
          "id": "3649a9b2-0b33-40de-9907-1d1cd38d6c3c",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "edfba9ea-f0fd-4e56-bc71-bd741576df20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90dbe473-abb8-4458-aa41-464eb4b6e3f8",
        "cursor": {
          "ref": "5ed33d2e-af7a-48ae-b694-b0dcb38ec101",
          "length": 244,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6b93d615-15d5-4e67-8f09-8af06b9cc0f1"
        },
        "item": {
          "id": "90dbe473-abb8-4458-aa41-464eb4b6e3f8",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "394b5865-da9a-48d3-a713-6753b0110065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b227ac-1d5d-403a-8adf-00bfb12b2303",
        "cursor": {
          "ref": "b0ab9f3d-6981-4282-9ee9-5282e0ca4b24",
          "length": 244,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "87da1b77-f564-4859-9f93-5d15b704841c"
        },
        "item": {
          "id": "01b227ac-1d5d-403a-8adf-00bfb12b2303",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "272efd08-8358-47b9-951e-7fa219af8436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90eaf833-f1e3-48ec-bd3f-6a48623dde22",
        "cursor": {
          "ref": "a0bc096b-83d5-4ed8-9b39-9ad4e13fc434",
          "length": 244,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "93ef5b36-515b-4a6c-a412-ab72c45e5b5e"
        },
        "item": {
          "id": "90eaf833-f1e3-48ec-bd3f-6a48623dde22",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8258bf41-c789-4624-bb4f-9abe15b4bcd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcf38aef-cdc9-4e47-89aa-586611f8eb7a",
        "cursor": {
          "ref": "8d691531-9507-487d-b459-155590f14173",
          "length": 244,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "19603134-a30f-41f4-9650-fe71b7ed5777"
        },
        "item": {
          "id": "fcf38aef-cdc9-4e47-89aa-586611f8eb7a",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "8d60145b-85d6-4703-8039-392ca6129e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bbd9875-5e9e-49a5-8cd5-0fd447701e7c",
        "cursor": {
          "ref": "0aa01433-17b3-4625-8b53-dd938e7f4acf",
          "length": 244,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "06d93225-2499-42b8-942c-3971ac7fa531"
        },
        "item": {
          "id": "7bbd9875-5e9e-49a5-8cd5-0fd447701e7c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "141bfeb1-8a0e-4fe4-b32b-7741ba8d61f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "248d95e3-9678-42db-9534-3b54b4c4a1b1",
        "cursor": {
          "ref": "ef9caeff-c17c-4793-847a-45fa8a11d265",
          "length": 244,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "85b44b79-0d58-4aa9-a428-a39ea0be245f"
        },
        "item": {
          "id": "248d95e3-9678-42db-9534-3b54b4c4a1b1",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2b05ccbe-1244-4fd6-a8b1-e222b1774d3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16915cf8-6ae0-47b3-aeed-6a13014abf48",
        "cursor": {
          "ref": "5cd80fe9-747f-4021-9b85-0a59040fc0da",
          "length": 244,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "bad6cd52-7877-4dc9-a9be-2abbf4309fcc"
        },
        "item": {
          "id": "16915cf8-6ae0-47b3-aeed-6a13014abf48",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "36834764-7e3e-4561-815a-e0370178c6f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e75ea6-3b41-4242-91cb-18d5d184d2d2",
        "cursor": {
          "ref": "17c99228-5e2f-4a48-898f-54869ceca710",
          "length": 244,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "83e362e2-88c0-432d-a760-3e7881f7eb7c"
        },
        "item": {
          "id": "32e75ea6-3b41-4242-91cb-18d5d184d2d2",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "092f2932-50c9-4a7a-a2bc-129176d8cabe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c94ce87-dbef-41df-86df-3ad9538f51f1",
        "cursor": {
          "ref": "4b9bea0d-af79-4390-9793-34c8fe59b0c2",
          "length": 244,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "cf4e6a19-90e9-4851-adba-b057ea4a9944"
        },
        "item": {
          "id": "1c94ce87-dbef-41df-86df-3ad9538f51f1",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "30c430e6-c6d5-4504-8088-b0b90f9eeb63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "820e346b-afb3-4168-9be8-954d6c486c6f",
        "cursor": {
          "ref": "2eef520a-ce2b-484b-b3c1-f39cea301555",
          "length": 244,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3fd8ff2b-db0a-40f8-b8e8-a845658d686b"
        },
        "item": {
          "id": "820e346b-afb3-4168-9be8-954d6c486c6f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c7604e0e-8856-457d-89ba-7b53e07d54f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "531df155-e52f-47c6-ae52-3498280a6bdc",
        "cursor": {
          "ref": "70f7c5c6-bbe3-4ab6-ac38-84a3826fa51f",
          "length": 244,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "acc97cf5-adef-4e33-973f-284b0084daed"
        },
        "item": {
          "id": "531df155-e52f-47c6-ae52-3498280a6bdc",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "27810f58-9459-4db4-bc34-c884fde2a443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8339ce-f912-414d-82fa-b924f52c4fd4",
        "cursor": {
          "ref": "d7f2f456-f48f-47ba-b0e2-6665f18027ee",
          "length": 244,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "5a189e2b-b339-4061-ac2a-bd3eeae78a6a"
        },
        "item": {
          "id": "2c8339ce-f912-414d-82fa-b924f52c4fd4",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0d2d1f74-8afc-40a1-9740-398ff471740c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77af3e5d-5658-4dfc-9c07-b2e31ebb82f1",
        "cursor": {
          "ref": "c1664f5a-ba39-4cac-abed-4980cd124e63",
          "length": 244,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "43bbb7e1-a49c-4167-829a-a41dad4d681f"
        },
        "item": {
          "id": "77af3e5d-5658-4dfc-9c07-b2e31ebb82f1",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "ab9c2ab3-c85e-4846-bdc2-021e9258ceaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcdcb49d-b813-4e5e-890e-6bc438511c80",
        "cursor": {
          "ref": "e933b9cf-ee4a-49ea-91dc-4a04fa99ec79",
          "length": 244,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "62b84467-67fa-41fe-bcf4-ffc1bcfdc63d"
        },
        "item": {
          "id": "fcdcb49d-b813-4e5e-890e-6bc438511c80",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "69932ae7-d456-4f53-855c-74a65f909b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b33b47b-a22f-4167-a30c-84ea14fbf1b3",
        "cursor": {
          "ref": "367efc10-ab9c-440a-88f0-4f048af7b6e3",
          "length": 244,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "140e50ca-06ea-43c4-872f-0f069f07df7f"
        },
        "item": {
          "id": "7b33b47b-a22f-4167-a30c-84ea14fbf1b3",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ada56fae-1371-4e46-98be-730dc7b84199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f591c539-a294-4df6-a2d2-09d9da406d94",
        "cursor": {
          "ref": "c5063361-c3eb-40d6-8a3b-d9eecd31e4d7",
          "length": 244,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6781de63-ccc8-4cf1-add4-a59aea69076f"
        },
        "item": {
          "id": "f591c539-a294-4df6-a2d2-09d9da406d94",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1a09a309-548b-4f3c-9b75-2b4f882677f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "275a5dfb-43ae-4025-83cb-cfea44830812",
        "cursor": {
          "ref": "14cf04d1-a506-4756-b13c-647a1bbf572c",
          "length": 244,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "2118ee06-ceb9-4c14-b317-92889176df83"
        },
        "item": {
          "id": "275a5dfb-43ae-4025-83cb-cfea44830812",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e0e8905e-28d0-4567-8e14-0c31831da8fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b54d77-0661-4f8a-b425-3b909479bf23",
        "cursor": {
          "ref": "20229397-cf18-4b61-9e8e-25dd184e49fc",
          "length": 244,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "acc2f7e4-82c5-4a7d-816b-37298c7a319b"
        },
        "item": {
          "id": "d4b54d77-0661-4f8a-b425-3b909479bf23",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6107ee2b-83d3-4999-93fb-473b0f3627b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3eb6eb2-eed8-481d-bcbb-6db530389290",
        "cursor": {
          "ref": "615a9394-290e-4089-a76f-7c0b656a3d7e",
          "length": 244,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "baa02cdc-b8b3-4228-8bf0-e34c0cf77499"
        },
        "item": {
          "id": "c3eb6eb2-eed8-481d-bcbb-6db530389290",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "10f63ac5-fb26-4015-8079-92718f82ee33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "128e93bf-1fb3-4489-9f0b-6f862aa2d9c7",
        "cursor": {
          "ref": "ef359568-f68f-4081-a2e4-1b5a55ae388f",
          "length": 244,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "af0176dd-b876-44c0-97eb-c64e43ed60df"
        },
        "item": {
          "id": "128e93bf-1fb3-4489-9f0b-6f862aa2d9c7",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b3f73d0b-7774-4f52-80ca-9895ca2982c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c70126-7c7c-4caa-a3b6-441146bf97b3",
        "cursor": {
          "ref": "715bd7e8-6d0c-44ee-ad9c-e2608ded667a",
          "length": 244,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "69bde14c-4305-4f8a-ba9e-4b1c45e37ff7"
        },
        "item": {
          "id": "a2c70126-7c7c-4caa-a3b6-441146bf97b3",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "086cab3f-067f-48af-8a9b-06b646b5f034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6962aa3-e869-4da5-b923-a94d2c707fd6",
        "cursor": {
          "ref": "bbe550d4-f2fa-49ee-935f-4aa23ca94f4e",
          "length": 244,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c83b0014-5c3b-4d83-aacf-5009a03abaec"
        },
        "item": {
          "id": "a6962aa3-e869-4da5-b923-a94d2c707fd6",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "74ee606c-c939-4237-aa0b-3cbc2b5349d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87a4dc60-9e8a-4193-8a04-2fc366c83e9c",
        "cursor": {
          "ref": "a9c54144-3d1c-48de-bd9f-1fa263724a5f",
          "length": 244,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "49310d53-0840-43e7-9968-c62e4436ffae"
        },
        "item": {
          "id": "87a4dc60-9e8a-4193-8a04-2fc366c83e9c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "72d4996d-293d-4626-8596-6ceee2e12161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfff8595-798e-41f7-afe9-014b23a6acdb",
        "cursor": {
          "ref": "a5404fb3-e3bb-4912-8dcb-64af48d2fb3e",
          "length": 244,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "9d0b2234-5b72-41d1-99a1-43992e332553"
        },
        "item": {
          "id": "cfff8595-798e-41f7-afe9-014b23a6acdb",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "cd3a506a-d6d7-40dd-8a98-8694e088b877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc8b739-7da8-4197-b6a6-f7a39976feeb",
        "cursor": {
          "ref": "6bde2b99-b749-4d2b-a7b3-4e3524407a41",
          "length": 244,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "82710fdb-ba3b-4206-a007-6107c88d117d"
        },
        "item": {
          "id": "afc8b739-7da8-4197-b6a6-f7a39976feeb",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1421a6db-89e7-4574-baf3-8bce98da756c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50494d18-e073-4758-aeba-c51345c6416e",
        "cursor": {
          "ref": "72faa2eb-7e07-44b5-a09d-7eb7ed82be89",
          "length": 244,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "75eb5423-65c6-4fb6-9aff-9869887a4025"
        },
        "item": {
          "id": "50494d18-e073-4758-aeba-c51345c6416e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a944b920-980d-4fb0-b276-f288e06f51b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d04cc0-dedc-4bd3-85f9-9a6149b3c0ae",
        "cursor": {
          "ref": "b626a3d3-28ed-4df3-8d6a-f25afa417b8c",
          "length": 244,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b99203b4-8f78-47e2-a851-74654ebf916f"
        },
        "item": {
          "id": "93d04cc0-dedc-4bd3-85f9-9a6149b3c0ae",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "4c2784cb-3838-43f3-989a-f2921af8b0dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8140679-73cb-4c5d-9aea-62b074db7450",
        "cursor": {
          "ref": "416adea8-1695-4ea5-a274-17336ed08ce5",
          "length": 244,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "88ceaf94-c31e-4737-9490-4b9c631c72a2"
        },
        "item": {
          "id": "d8140679-73cb-4c5d-9aea-62b074db7450",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "6045a546-3cf8-4ccc-b4a2-9c24168e1873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "229c46bc-87e4-43fc-b321-ed6596044f2e",
        "cursor": {
          "ref": "52842df2-9fd0-420b-b8e2-28f8b215147d",
          "length": 244,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "24403683-e70b-42d2-83f3-3cc89ea41ecc"
        },
        "item": {
          "id": "229c46bc-87e4-43fc-b321-ed6596044f2e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "219690de-b9a1-4ccd-89db-2012d26ed051",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73385779-939c-4530-8f93-e7ca894fb4e2",
        "cursor": {
          "ref": "1c7675ec-9af1-4129-b24a-5abb6a86d794",
          "length": 244,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a574f252-3d1e-463c-b88f-a2efec3ca97c"
        },
        "item": {
          "id": "73385779-939c-4530-8f93-e7ca894fb4e2",
          "name": "credentials_issue"
        },
        "response": {
          "id": "307242db-b664-49bb-a770-8140bbf04db5",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "105945d1-01e5-40a6-a3c4-0e530b388a6f",
        "cursor": {
          "ref": "a393a82c-ebe2-4346-803b-e8b83f2e38c9",
          "length": 244,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9645da90-efee-4b43-a58b-8b037fbc449f"
        },
        "item": {
          "id": "105945d1-01e5-40a6-a3c4-0e530b388a6f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "763807c7-c4fb-41c1-8d0e-a666531043d9",
          "status": "Created",
          "code": 201,
          "responseTime": 590,
          "responseSize": 905
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d27bb6a-ea9f-4ba3-ad50-346f8dd287ef",
        "cursor": {
          "ref": "917f6362-b992-4680-9e88-3f146a53d85c",
          "length": 244,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1b1e9ce6-c4c8-4716-9322-8d9df317467a"
        },
        "item": {
          "id": "0d27bb6a-ea9f-4ba3-ad50-346f8dd287ef",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7d879598-b0e7-4c8b-872e-662ace6fc157",
          "status": "Created",
          "code": 201,
          "responseTime": 51,
          "responseSize": 905
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd2a889-b7fc-40f2-9377-c663f84cba35",
        "cursor": {
          "ref": "b994315f-e2d5-4071-be4f-e0b8c7028a8e",
          "length": 244,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "75036ca7-118e-4971-9a53-f5b78da2425e"
        },
        "item": {
          "id": "efd2a889-b7fc-40f2-9377-c663f84cba35",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ac5e985c-ca4f-4676-a44b-d9aeb01e5aff",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "238d0a15-0f15-4c9a-a427-419bdc7a5a6f",
        "cursor": {
          "ref": "90ffdcf2-be4b-4bb1-bcfd-aaa7d3a8cb0e",
          "length": 244,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "377b949f-50d8-4e42-9fb9-55ff15373ee5"
        },
        "item": {
          "id": "238d0a15-0f15-4c9a-a427-419bdc7a5a6f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e89fe8f8-5ac0-4b71-823f-e3d5335d3b01",
          "status": "Created",
          "code": 201,
          "responseTime": 48,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c07925-287c-4300-879f-1f9bd0ceaacd",
        "cursor": {
          "ref": "c62a727a-157d-4a20-b1e6-e4eae9acf6f0",
          "length": 244,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a20c8904-eab2-48f9-9fda-dbf0692f8b6d"
        },
        "item": {
          "id": "33c07925-287c-4300-879f-1f9bd0ceaacd",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "5d077527-6a1a-4ef5-9366-9cbed9dae2b1",
          "status": "Created",
          "code": 201,
          "responseTime": 48,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87630176-0ffd-4ee6-a231-ec1e2684a615",
        "cursor": {
          "ref": "da34c002-7f78-45c9-8da7-28607c6a6d33",
          "length": 244,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "3bf1d300-6298-4dd3-8489-b9b48b1e2589"
        },
        "item": {
          "id": "87630176-0ffd-4ee6-a231-ec1e2684a615",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9c8a7790-0d25-49eb-ade6-e8948d1fea1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37dcd602-3e0f-46d1-894c-e1360d017c50",
        "cursor": {
          "ref": "50bdede2-a6bc-4781-ae3a-ab52481ffe6b",
          "length": 244,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "58f36bad-d5e2-4229-b76f-33ba372d1eee"
        },
        "item": {
          "id": "37dcd602-3e0f-46d1-894c-e1360d017c50",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "507ac8c8-a07a-450d-b42a-e036964fccb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f109cc33-483a-4f9c-a537-8849cbc2ebb0",
        "cursor": {
          "ref": "1ee43808-76fc-4d7c-8de6-f3dc231a7bb2",
          "length": 244,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e77649a4-d36e-4714-b3da-df3510344ddb"
        },
        "item": {
          "id": "f109cc33-483a-4f9c-a537-8849cbc2ebb0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "cb599b06-18bf-4807-97f1-2b9f469503b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e0fd46-5bcb-4ace-8702-af4e71a82bdd",
        "cursor": {
          "ref": "acd96d45-1784-4b0e-b5f7-d71b8d1b2060",
          "length": 244,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "529d81e0-10c3-464a-8e91-52b646341f1b"
        },
        "item": {
          "id": "d2e0fd46-5bcb-4ace-8702-af4e71a82bdd",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "cb608769-3f78-47ad-8b45-5cd8b2efb885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a37a238-be93-4fa2-b295-7e6cd8c2c6ae",
        "cursor": {
          "ref": "84e4faf7-a887-4c5d-8f3f-055c8bee7931",
          "length": 244,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "26cac303-83c1-41ee-90e0-59841ff19cb3"
        },
        "item": {
          "id": "3a37a238-be93-4fa2-b295-7e6cd8c2c6ae",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6da8aa06-74d0-4bd0-81df-efbd53b65142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b0e82ea-c64c-4110-9241-e532fb87bcdb",
        "cursor": {
          "ref": "7bf04046-c57b-4f5b-9871-b20134e6a1f5",
          "length": 244,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d5c9ed8c-5747-4ec3-a0d1-b1343c8d894a"
        },
        "item": {
          "id": "5b0e82ea-c64c-4110-9241-e532fb87bcdb",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5056fc0c-4a4b-44c4-a769-36270753c8b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73675595-137e-461f-b2ed-cc849f8c933c",
        "cursor": {
          "ref": "0af82a4a-780f-40f6-b906-3915a8507e4b",
          "length": 244,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "791f0bae-b63e-4376-9f93-edfd7394e6a6"
        },
        "item": {
          "id": "73675595-137e-461f-b2ed-cc849f8c933c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "27d8a40c-fe31-4fbe-9ac6-332917e74221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b248f886-94fc-4df9-a66c-1d9df5680e61",
        "cursor": {
          "ref": "f7c23cc5-0798-47d6-9278-2e2856aa11bc",
          "length": 244,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9bfc91c7-53f7-4be4-9833-36eb4eb5e93c"
        },
        "item": {
          "id": "b248f886-94fc-4df9-a66c-1d9df5680e61",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a1c8a790-c318-43d1-ae48-82da2b6480ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af747d7a-6638-4079-9cf3-a46174af5ca3",
        "cursor": {
          "ref": "c32f78ba-d41e-4056-8ce1-c1f26dc4d7f1",
          "length": 244,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "27b240d6-750e-4ae5-9286-d9e386d06a0f"
        },
        "item": {
          "id": "af747d7a-6638-4079-9cf3-a46174af5ca3",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "953d0e17-be03-45f5-bd38-f9383a4761c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3bae689-0714-48fd-a0eb-2825928e09ff",
        "cursor": {
          "ref": "d52a78ea-1fe6-4d64-baa1-af995d425d07",
          "length": 244,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "6e2a6614-f260-42ee-964a-60426ceb14dd"
        },
        "item": {
          "id": "a3bae689-0714-48fd-a0eb-2825928e09ff",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d278a26e-497d-4b7d-a74d-8cb62dc39121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac6d445-94d2-4122-ab93-445bad481368",
        "cursor": {
          "ref": "01f4b7c5-9487-4b30-9ce2-4e9d70ee1bb0",
          "length": 244,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "be8511d9-af57-45b1-896e-48ef682fa782"
        },
        "item": {
          "id": "2ac6d445-94d2-4122-ab93-445bad481368",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d9bacd2a-f8a2-4082-a57d-bb9ed417a63c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2bcd105-67c8-49c4-b68b-5cb53b57bd57",
        "cursor": {
          "ref": "5fdfcf05-f3c5-4676-a671-39688c25d4be",
          "length": 244,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b985251b-7b5a-43bd-8cb9-8c5bbabd79c5"
        },
        "item": {
          "id": "e2bcd105-67c8-49c4-b68b-5cb53b57bd57",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "22bca996-306d-4fb1-abc4-dd032cf24eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "519fde11-06e3-4f86-9b47-f9d9ade66187",
        "cursor": {
          "ref": "c5b1ea0f-54f1-4b8e-a2aa-edd5e1d3d3b0",
          "length": 244,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "af0a2790-d8cb-4940-bb06-8c9765a079d7"
        },
        "item": {
          "id": "519fde11-06e3-4f86-9b47-f9d9ade66187",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "728be8ca-1ab5-4291-bcb3-884356f2e2dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd588da8-ceba-46f2-9699-6822124252d8",
        "cursor": {
          "ref": "5a6a8810-410a-49a5-a21c-587017ffc99e",
          "length": 244,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "bfe9ebb0-1101-4c79-a396-4424426f1a5c"
        },
        "item": {
          "id": "dd588da8-ceba-46f2-9699-6822124252d8",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "cc621c16-b985-48fe-89a0-f7d1fac16b9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f43300-8abd-482e-9dfb-6863dbc0e04d",
        "cursor": {
          "ref": "61c74148-3f0b-4942-a117-57f54d9ae891",
          "length": 244,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0e5bf9a3-4ec7-431e-874b-ddb99141313c"
        },
        "item": {
          "id": "a9f43300-8abd-482e-9dfb-6863dbc0e04d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e059069f-1ea7-4dfb-bc7e-df19d2cb8f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a303ef1-32f6-4788-9300-ec3447a67155",
        "cursor": {
          "ref": "de8b6f5f-0f54-40c8-8466-2026c82819d5",
          "length": 244,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ae2b43fd-55e7-47bb-980f-0f2ce5c2236f"
        },
        "item": {
          "id": "7a303ef1-32f6-4788-9300-ec3447a67155",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "176dcf38-6e22-4fb0-9708-b2f833cda7ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0b4ba8d-11d5-4ddf-a2a6-6c4a8acaa898",
        "cursor": {
          "ref": "37b7e5a1-8705-4b33-9eb2-5b79de167e9b",
          "length": 244,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d2ab3267-4da4-40dd-b5bb-01b8f386c3b9"
        },
        "item": {
          "id": "a0b4ba8d-11d5-4ddf-a2a6-6c4a8acaa898",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "944acf20-ab5f-4b50-ad9a-790d7251307c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60bea25c-2d9f-4028-b040-1af74def24e8",
        "cursor": {
          "ref": "10f3900f-2154-491c-aa64-dc408f46c6c5",
          "length": 244,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "549083e0-e408-4c03-a613-10b105809f9f"
        },
        "item": {
          "id": "60bea25c-2d9f-4028-b040-1af74def24e8",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "31e322b1-6384-4869-9635-b6b37e6385d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e45e2731-4f14-4547-b37a-41e5ee615e35",
        "cursor": {
          "ref": "1b7d5967-c89b-47d2-b2c3-a43e4a923a43",
          "length": 244,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "44a46c98-9a30-4913-a467-9c3495af7a2d"
        },
        "item": {
          "id": "e45e2731-4f14-4547-b37a-41e5ee615e35",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7ac3872f-be50-42cf-9a40-58fe2e3958a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69f3b4b-748d-4563-b170-f82583f80e04",
        "cursor": {
          "ref": "ccdc57b0-9f58-4410-9b16-3513c56a3666",
          "length": 244,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "bcac52ae-e30b-41f6-b723-7c13d69afeb4"
        },
        "item": {
          "id": "c69f3b4b-748d-4563-b170-f82583f80e04",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "53e17277-f7c1-48e1-a043-34f763f2518a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6656042a-23b2-4751-ba9f-147c320daa7d",
        "cursor": {
          "ref": "40270782-988c-4500-a8d1-37a864754a12",
          "length": 244,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "47210f69-2d32-4e8d-8365-1730f1d89027"
        },
        "item": {
          "id": "6656042a-23b2-4751-ba9f-147c320daa7d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0c3b8352-2ed0-47ce-9c51-af985f89a5cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0b35ce-c8ac-4067-a38a-4612b24122c3",
        "cursor": {
          "ref": "7d4fa0ed-beec-4cf2-8b30-26d37c08f878",
          "length": 244,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "418e50aa-b678-4529-9e6c-2cef57431b76"
        },
        "item": {
          "id": "ca0b35ce-c8ac-4067-a38a-4612b24122c3",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5e39bfac-3019-40cc-9b9e-6a5934a43276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "693f5fe3-df7c-4ffc-badd-2469d06bad59",
        "cursor": {
          "ref": "df6db9db-9cea-48d1-9d51-6cfe064c7a1d",
          "length": 244,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "034986cf-1940-421d-ad41-ab27ae3ccd9c"
        },
        "item": {
          "id": "693f5fe3-df7c-4ffc-badd-2469d06bad59",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "58b5f5e6-61b6-4bcc-96bf-1361fec12d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36851a07-69c6-479d-8a60-6fb6b6c84e9c",
        "cursor": {
          "ref": "40aae85e-b14f-45ac-b0b8-453d08c6c80e",
          "length": 244,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c5439866-2aff-4530-8385-3c88fe5d2521"
        },
        "item": {
          "id": "36851a07-69c6-479d-8a60-6fb6b6c84e9c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d01a16fb-874d-442f-8e74-aa6a484e316b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ff9a20-e730-4806-800e-2f51b5c9153e",
        "cursor": {
          "ref": "1c39a294-88ac-4a51-b128-1c46063309b0",
          "length": 244,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3b1dc28e-b5d2-4f15-8df8-1bc4a4141d6f"
        },
        "item": {
          "id": "13ff9a20-e730-4806-800e-2f51b5c9153e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6a3cd5f6-71e8-447e-9280-882c3c8ed2d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d5932d0-d479-4a0c-8963-720ffce73388",
        "cursor": {
          "ref": "e942319e-e13f-4335-8af6-879e5da23e25",
          "length": 244,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f2bf3645-6af4-48e3-b92d-baefdfe9e185"
        },
        "item": {
          "id": "2d5932d0-d479-4a0c-8963-720ffce73388",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "60517d93-4e77-44ef-9986-17888f238fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1404983-411c-4e9f-a80e-6bc9b0377b07",
        "cursor": {
          "ref": "76c1579f-2e88-4782-b68e-c9af8fb81730",
          "length": 244,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "aa7d15dd-1ba0-4626-81ea-fb19018010cc"
        },
        "item": {
          "id": "a1404983-411c-4e9f-a80e-6bc9b0377b07",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c625f547-d12e-4da8-9bb6-ee59f1c20376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d1244e-49f8-4c17-b6c5-4027b6d9b45d",
        "cursor": {
          "ref": "492e9efd-32f2-4bde-8d4a-9d1f18a7e746",
          "length": 244,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a5ad0b71-ce5e-44a0-88ff-b0507ff6df98"
        },
        "item": {
          "id": "55d1244e-49f8-4c17-b6c5-4027b6d9b45d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "61f86774-be97-47ce-b963-9360fb303e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5183d64d-b2f7-4dfc-ae2f-845773e0ce49",
        "cursor": {
          "ref": "8c20cda4-70a2-4ff9-a06c-163b611fbb21",
          "length": 244,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "df1216b9-f026-4179-848b-35001b43ebe8"
        },
        "item": {
          "id": "5183d64d-b2f7-4dfc-ae2f-845773e0ce49",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "dc6629f0-94f9-4571-8e53-4750cbac7e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f03841f-55e9-4f69-87eb-12314b849719",
        "cursor": {
          "ref": "e3e78c71-abda-452b-964b-08a8429cf7c9",
          "length": 244,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "47edf44a-6511-4c5d-a150-b8a80e5c0831"
        },
        "item": {
          "id": "8f03841f-55e9-4f69-87eb-12314b849719",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "60a769b7-1ee9-4b3c-9e56-0d224e30bd09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25281ec-54a8-465f-be67-ba2432ff120d",
        "cursor": {
          "ref": "0c7f6904-92d2-427c-8248-1b29c2bcac87",
          "length": 244,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "0677d833-60d6-4be5-8260-d017f2a6de49"
        },
        "item": {
          "id": "f25281ec-54a8-465f-be67-ba2432ff120d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d4a9ee10-7aaa-4b94-892f-9e908a256a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8edf023f-d89c-4ee3-983b-07238a418afe",
        "cursor": {
          "ref": "d13aa303-9a68-48e8-8bb6-12c1b2428feb",
          "length": 244,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ba94575f-0a39-4fac-aefe-6a6c37b84e6e"
        },
        "item": {
          "id": "8edf023f-d89c-4ee3-983b-07238a418afe",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "3944327a-b933-4ab9-9f35-8173372330fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dde935d-d44c-4ef4-9941-a71939d2aa3b",
        "cursor": {
          "ref": "90b2cf3e-f9f9-4a5f-be40-daa5a517dc84",
          "length": 244,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "45610f2b-0769-483d-bf26-827764d2c1e7"
        },
        "item": {
          "id": "1dde935d-d44c-4ef4-9941-a71939d2aa3b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "10d2d5a5-ee6a-466a-95ee-b622f3460938",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f1bb875-91bc-48df-b75d-8469cf6d1e76",
        "cursor": {
          "ref": "c69df561-6cf5-4626-953a-807a396ae59d",
          "length": 244,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ca67b1eb-188d-4691-a819-ffd2dd83748c"
        },
        "item": {
          "id": "0f1bb875-91bc-48df-b75d-8469cf6d1e76",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c27b9806-0e39-4a37-b474-1b39c41ed172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e772cb81-1c7e-498e-b7c5-bb0d13d50da8",
        "cursor": {
          "ref": "1cb54ddb-1a27-4480-9edd-1d5b6677b7d9",
          "length": 244,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5d1bf133-804c-471c-8bed-36685569f702"
        },
        "item": {
          "id": "e772cb81-1c7e-498e-b7c5-bb0d13d50da8",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "1ad26b7c-f87c-478c-af03-1e2a56bfa9cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a91d51-1ae4-4c46-9700-934a529ab59f",
        "cursor": {
          "ref": "48a62ad6-4d0d-46cc-96bb-7b9918e6dba5",
          "length": 244,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "514b989f-2ded-4d78-babc-72b7ac159ebe"
        },
        "item": {
          "id": "20a91d51-1ae4-4c46-9700-934a529ab59f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a5d51a73-35c8-436b-a0e4-456c60665247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e0a23f7-b453-43ce-8074-659a600e1b6f",
        "cursor": {
          "ref": "ef0a717d-517b-4db7-a5a8-ca6718552613",
          "length": 244,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "9563f729-8e36-446f-8295-1264b56108e8"
        },
        "item": {
          "id": "9e0a23f7-b453-43ce-8074-659a600e1b6f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "5c1d03f9-24d7-4983-936c-faf03029a45c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d04182d-54b0-4cba-b7b5-7520ab9f0266",
        "cursor": {
          "ref": "a7da5d71-33f4-4b43-a132-bcbe1e972c01",
          "length": 244,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ddf69618-dbbf-4a56-a4ef-07eca0b627b5"
        },
        "item": {
          "id": "4d04182d-54b0-4cba-b7b5-7520ab9f0266",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "04a6bfa5-ccd4-4346-b0e0-527a2abf354e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c0222a-4579-4c81-bb7b-96d8146a361e",
        "cursor": {
          "ref": "55b6967e-a6c7-4182-9a78-34cb6e22f9ab",
          "length": 244,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ea3edb05-57be-4f15-b36c-4abce0ac52e3"
        },
        "item": {
          "id": "63c0222a-4579-4c81-bb7b-96d8146a361e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "825f8d5c-36cc-492d-a307-14d52a26c667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b5eb98-1b94-46a3-825b-3231a1f083c9",
        "cursor": {
          "ref": "00301d2f-48cf-44d0-8579-2b8e146737d5",
          "length": 244,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "35b88f51-3f43-4cec-94cc-43faff8c8b77"
        },
        "item": {
          "id": "12b5eb98-1b94-46a3-825b-3231a1f083c9",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "62297b3c-d1e7-4171-88fb-3b0cdf797927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f77a5daa-bf81-43b5-8c33-2fdec022b2f3",
        "cursor": {
          "ref": "48013f1e-4030-4d18-92f4-7f4c426722f8",
          "length": 244,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6857620f-84c9-483c-8f74-ad1272ddef6b"
        },
        "item": {
          "id": "f77a5daa-bf81-43b5-8c33-2fdec022b2f3",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "c97416a4-c88d-42fc-867a-cfe5df79e672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf0eae2-d264-4a86-a004-0483730bf336",
        "cursor": {
          "ref": "3a1511ad-7a10-4d29-a582-fb055ca12c75",
          "length": 244,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "fc255458-b176-4030-be84-70179487353a"
        },
        "item": {
          "id": "4cf0eae2-d264-4a86-a004-0483730bf336",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "f039ce4b-6b2b-49a7-b7e2-9872450345d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ff32f4-680b-494f-bc54-330e077bdc19",
        "cursor": {
          "ref": "7441a57d-2562-4817-83f1-1a8b86ede442",
          "length": 244,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "eaa6246b-589c-4a67-970b-d8d426288229"
        },
        "item": {
          "id": "40ff32f4-680b-494f-bc54-330e077bdc19",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ebc62121-9e4e-42fb-8b4a-53fbbae89848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccba0feb-4a87-4763-a77b-6d943084d69e",
        "cursor": {
          "ref": "fdb28b7b-78d7-40d4-a924-5483232fd181",
          "length": 244,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "175b8aab-caf6-4ff7-b50f-c202c880bbb6"
        },
        "item": {
          "id": "ccba0feb-4a87-4763-a77b-6d943084d69e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "71560d3b-b87d-4e91-af42-7fcf09b0c04e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc429ab8-db50-429c-8890-1a7c931ad377",
        "cursor": {
          "ref": "326b806e-dfff-4e64-bb7c-f6e1430bd8dc",
          "length": 244,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "48b799cf-81b4-4725-86b6-434d78a34df6"
        },
        "item": {
          "id": "bc429ab8-db50-429c-8890-1a7c931ad377",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b554335b-0526-408a-82e9-a47d9945b830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "828d8270-9141-4556-9881-4b6a15ef4d2a",
        "cursor": {
          "ref": "8e647861-2fc3-4b7d-8165-dfee6c47ad00",
          "length": 244,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ccf74e0e-77bb-4527-89ef-3993038e810e"
        },
        "item": {
          "id": "828d8270-9141-4556-9881-4b6a15ef4d2a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a88d371e-98af-4e1a-bd20-44c7c161b72f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff55382c-354e-4d9a-9c20-780030ec70d1",
        "cursor": {
          "ref": "77483407-fd7a-459d-8803-ea75e5f8f53b",
          "length": 244,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7910acf8-74c0-472b-a758-660ae06f505a"
        },
        "item": {
          "id": "ff55382c-354e-4d9a-9c20-780030ec70d1",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "587e6d0c-06b9-450f-bc95-e5f80216ffac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59746a67-5ca6-412f-ad66-476aa9192178",
        "cursor": {
          "ref": "cf8da488-0c78-4c83-a158-8571833b6451",
          "length": 244,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "18adecdf-4b95-4999-9981-af87a55ccd1c"
        },
        "item": {
          "id": "59746a67-5ca6-412f-ad66-476aa9192178",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "86e57841-ee46-4dfc-a0df-2a3b734927f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d92dab90-77f0-4f59-9473-45da3a1e2d06",
        "cursor": {
          "ref": "374acb6e-281d-4e20-b103-41cfbd87b2b0",
          "length": 244,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "2c5070dd-92dc-406c-b352-20bb480047c0"
        },
        "item": {
          "id": "d92dab90-77f0-4f59-9473-45da3a1e2d06",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "63778f83-2756-4eff-a40f-33b151ce8643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ba8564-bb1e-4968-aa9f-f42eef24dc6c",
        "cursor": {
          "ref": "e4b4c7f2-6c62-4180-a6cb-9a0f78673de4",
          "length": 244,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "74bd7d61-a70b-48aa-8c87-423345bf714d"
        },
        "item": {
          "id": "18ba8564-bb1e-4968-aa9f-f42eef24dc6c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "de276736-738d-402d-af0f-4ca928c2a64d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c4c3a1-c632-4e1d-8f6f-3afc9f37e0d0",
        "cursor": {
          "ref": "afae1e8b-6964-45fd-8a6b-18b2b0756da1",
          "length": 244,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "383f4738-ad95-40c6-8ee6-ff508f4fc55c"
        },
        "item": {
          "id": "c0c4c3a1-c632-4e1d-8f6f-3afc9f37e0d0",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "3c024b3a-983e-40db-9d45-f9870322e666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f28a3f-6d04-464b-9d8b-a61a4c1c975f",
        "cursor": {
          "ref": "cc8096b1-78b4-4657-80d3-e57098d50af4",
          "length": 244,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "fbba4305-5af0-4978-9a10-70ba8e79f15c"
        },
        "item": {
          "id": "27f28a3f-6d04-464b-9d8b-a61a4c1c975f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "59f00fe7-42f3-4ce9-b6eb-b675cd9a7b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4986fb71-f8b6-4132-8189-2bbe252da630",
        "cursor": {
          "ref": "8b8b1650-eea0-4fc4-ba8d-d8946024f3de",
          "length": 244,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "69e5ad3a-1062-41ca-b920-69f885c1a39c"
        },
        "item": {
          "id": "4986fb71-f8b6-4132-8189-2bbe252da630",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b105a390-c6e9-42dc-a5ba-b042fda51c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a67427-9cd3-4b03-8453-6a5d3ad83928",
        "cursor": {
          "ref": "a852e77b-adc2-4203-8299-1f87b5a25523",
          "length": 244,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "1e46c0c4-1f39-4fbf-92fd-86e784316d77"
        },
        "item": {
          "id": "10a67427-9cd3-4b03-8453-6a5d3ad83928",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "798b9624-bb48-447d-aa2c-42ad2e219d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b062f4aa-8759-4343-bfb6-ff1aa9faa392",
        "cursor": {
          "ref": "7165866d-a405-4bac-b3c3-fc7ca68c862e",
          "length": 244,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d633671f-584e-481d-af9f-67d6e0025851"
        },
        "item": {
          "id": "b062f4aa-8759-4343-bfb6-ff1aa9faa392",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "af5e7f65-f9c0-461c-9f61-25d5dfea6042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c12e2a38-f7f9-4f1c-8af8-4d498cce23c4",
        "cursor": {
          "ref": "bdc2ab4b-4d00-48da-9a29-c522e39a119e",
          "length": 244,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "20378d5a-b942-4a32-a103-ab386d5add2f"
        },
        "item": {
          "id": "c12e2a38-f7f9-4f1c-8af8-4d498cce23c4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ac41ec61-ff7f-4580-8285-fd51a2a448f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbeedd33-836c-4015-9926-71fa6914d94f",
        "cursor": {
          "ref": "40836382-0b49-477e-bef5-e628af1628c4",
          "length": 244,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "36b1a063-e0cb-4e94-8233-d234b9bb745d"
        },
        "item": {
          "id": "bbeedd33-836c-4015-9926-71fa6914d94f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "17c85c74-5aae-4dbd-a5b1-895d582dbc30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71fee22a-c43b-402e-9aa2-f30187f73664",
        "cursor": {
          "ref": "5d6d7a34-16c3-48fc-bbee-acc2c0190c4a",
          "length": 244,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "583aed01-f0e9-42ad-a6d2-056d622b5eb5"
        },
        "item": {
          "id": "71fee22a-c43b-402e-9aa2-f30187f73664",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "cd87cc98-079d-44f6-b750-3b96d2a26bab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5432ba7-c576-486a-9f50-ac1a5cd7203b",
        "cursor": {
          "ref": "d4875c46-eb79-4b41-b122-c9d488e6bc78",
          "length": 244,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "0170e912-ca4e-48b4-a8e8-5184110a5cd4"
        },
        "item": {
          "id": "b5432ba7-c576-486a-9f50-ac1a5cd7203b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b3d6286a-86ab-43c4-a9a4-f7b9602e2cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb6546c-0631-4e9c-8b31-e31d369885d4",
        "cursor": {
          "ref": "e2bbbc22-b93c-4830-aa8b-3e7a93906e91",
          "length": 244,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "03ff2272-d237-44e4-a80d-6c4f79eaa94c"
        },
        "item": {
          "id": "5eb6546c-0631-4e9c-8b31-e31d369885d4",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a844c7b8-a2f9-4d7a-8ea1-741573aa702d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c307780-75e0-4eb2-bc45-db0d97e00ba1",
        "cursor": {
          "ref": "cd258482-f575-4216-8092-eb9e5acf979f",
          "length": 244,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c5b4d0da-59cd-464d-b435-ee074f1ffab2"
        },
        "item": {
          "id": "2c307780-75e0-4eb2-bc45-db0d97e00ba1",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6c77a08e-2159-4b6c-834a-e9d41d5d710e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb10a1e-616a-4b75-9fec-d033400dc11f",
        "cursor": {
          "ref": "5e0d6615-01c5-4dc7-b003-bb8862e2345d",
          "length": 244,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d85dac6f-5070-4c36-b550-3129a70a0490"
        },
        "item": {
          "id": "9cb10a1e-616a-4b75-9fec-d033400dc11f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "5ad0ce7b-a9bf-45ee-b519-1ff5cd51155a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63028163-0460-418a-87ed-886b10ffa02b",
        "cursor": {
          "ref": "88cd3481-5496-480a-b8b4-b949fe9689b8",
          "length": 244,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "92014980-f1ff-49f3-9fda-ca383b43ca3e"
        },
        "item": {
          "id": "63028163-0460-418a-87ed-886b10ffa02b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "3aebbb36-7ece-401c-99e7-2f733f55b486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea3b16be-e7ed-4bac-9d9d-7d36bd3cfe3d",
        "cursor": {
          "ref": "5abe462c-093d-4023-9698-0328fac66428",
          "length": 244,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a7e0867a-9e2d-4f6f-9f90-fcd9b17e4550"
        },
        "item": {
          "id": "ea3b16be-e7ed-4bac-9d9d-7d36bd3cfe3d",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d46b7476-55be-46cf-bcbb-f0354912c20b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b0a1c33-c537-42de-951c-acc1a513f160",
        "cursor": {
          "ref": "a8dc39a1-5d29-41b7-8f12-66f1c6baf442",
          "length": 244,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "781b98d1-d535-446d-9159-3fe2489101ec"
        },
        "item": {
          "id": "0b0a1c33-c537-42de-951c-acc1a513f160",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3a922a6e-8f06-42b1-af2e-c9e0422477a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f7cc49-72cf-4b18-81a8-e7dc66a012f0",
        "cursor": {
          "ref": "19677da7-d1b3-45ae-abd8-872d8ff11b11",
          "length": 244,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "1c3d945b-00d7-418f-a505-78859cfab014"
        },
        "item": {
          "id": "76f7cc49-72cf-4b18-81a8-e7dc66a012f0",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "da2cc88a-d4f6-4768-8ed2-d4de66495803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92bfffd7-bc2e-4fcd-86b9-2ba9ac49d4eb",
        "cursor": {
          "ref": "daf6971d-43f8-4dbe-8091-9ba37526cb13",
          "length": 244,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "64f28ef0-16c9-40dc-a5ea-c813fd383187"
        },
        "item": {
          "id": "92bfffd7-bc2e-4fcd-86b9-2ba9ac49d4eb",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "4e1dfcde-89a5-43db-88c9-925e44f028ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d5cfd8b-9c41-41a6-a584-cc525ba87d01",
        "cursor": {
          "ref": "6cfc26c5-c9cc-419d-955c-a2429a7dbb64",
          "length": 244,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "998e940a-7f39-43a8-b380-ce8d6ddeab44"
        },
        "item": {
          "id": "1d5cfd8b-9c41-41a6-a584-cc525ba87d01",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "5c1bee88-8e1a-4f46-abc9-95f0ed390106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d295b0af-2006-47ae-a50c-da577e238de7",
        "cursor": {
          "ref": "a95b478e-922f-46e2-9913-103663288ee1",
          "length": 244,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d2778837-7627-478c-ad02-c6b8631d08a4"
        },
        "item": {
          "id": "d295b0af-2006-47ae-a50c-da577e238de7",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "890c0903-6907-4ece-8d71-e2ef5643e06a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da64bde2-9e7c-46ce-ae1d-cbdc7493a60e",
        "cursor": {
          "ref": "6dd36635-862d-4c70-b741-84f6e0501167",
          "length": 244,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "3f7ade4c-531b-4904-871e-b35768bb04e0"
        },
        "item": {
          "id": "da64bde2-9e7c-46ce-ae1d-cbdc7493a60e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "e0bfc6fc-8674-471d-b315-87c364fb12d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57aadfe4-f0b9-4bc0-9d13-1101625605e4",
        "cursor": {
          "ref": "5b5e6c66-669b-4081-9271-1f485838c614",
          "length": 244,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ab7f78d8-cbf4-4770-bb14-f1bbf8b48f7e"
        },
        "item": {
          "id": "57aadfe4-f0b9-4bc0-9d13-1101625605e4",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "8dc93218-388b-4581-a7a6-ee1ed286f3b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da02110-f99a-4b9b-8a02-4e872c4afafc",
        "cursor": {
          "ref": "835937d3-1336-4045-982b-e233d396c31f",
          "length": 244,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "95cd05cd-7deb-4748-ba92-6c8a54dfede8"
        },
        "item": {
          "id": "2da02110-f99a-4b9b-8a02-4e872c4afafc",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c5464595-aff6-416a-bfb2-3e88befc1a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9396b673-a953-4782-b0de-cd1b943b9acc",
        "cursor": {
          "ref": "69dc9070-d7fc-4964-aa43-b6f70b0373db",
          "length": 244,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a677adb1-a5e2-4641-81d3-96f8049ccc40"
        },
        "item": {
          "id": "9396b673-a953-4782-b0de-cd1b943b9acc",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "29e315a3-f746-441b-8aaf-64fe5da0e58b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12de1e71-2485-4ca1-80d1-47affaef2892",
        "cursor": {
          "ref": "59bf2921-aadc-490b-847d-e5c2ccd25ce4",
          "length": 244,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2a21eb8c-cee4-43dc-8b2f-0e44862b5e3e"
        },
        "item": {
          "id": "12de1e71-2485-4ca1-80d1-47affaef2892",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "6cb14c2a-2817-4528-8774-dac170172da2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2554d3fd-a8e2-468d-a57a-9c804b80c2c0",
        "cursor": {
          "ref": "cb74cafe-02e3-44e1-a120-41070368f41c",
          "length": 244,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "9c93c913-b72e-4155-9de7-e3a908c6ae63"
        },
        "item": {
          "id": "2554d3fd-a8e2-468d-a57a-9c804b80c2c0",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a6674ac3-32c0-446b-b54d-d4a4f5d982c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab3f7c3-6900-4c2e-8b81-d52d20613fae",
        "cursor": {
          "ref": "81cc9f13-67c8-4c86-ae72-9587bf5fe31a",
          "length": 244,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "80988529-d2ab-4766-857c-e4d9a275418e"
        },
        "item": {
          "id": "3ab3f7c3-6900-4c2e-8b81-d52d20613fae",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "0f878db4-ceb7-4410-94c4-452f3e93d6be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eecaf98-2082-419c-ac47-1f379d528331",
        "cursor": {
          "ref": "c7f7c68a-3166-4497-ab74-c01d3be29ca3",
          "length": 244,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "da557005-2508-4d70-9fdf-d243c7101dd5"
        },
        "item": {
          "id": "2eecaf98-2082-419c-ac47-1f379d528331",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "080dfe2f-3c31-479b-89e3-63a397f57428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ca8825-b761-4b67-b6d6-c3e1583052b1",
        "cursor": {
          "ref": "0d5f7e94-190e-4887-9caf-db8f298ade05",
          "length": 244,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f180a02e-c14a-47af-9bb0-5e9ede2cebdd"
        },
        "item": {
          "id": "c0ca8825-b761-4b67-b6d6-c3e1583052b1",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d651052e-fb06-4ec6-8042-c84dd06bc6ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e3fae0-af9e-4132-9433-4d4a15495df4",
        "cursor": {
          "ref": "16469a73-18e6-479e-b370-1e72bf82167d",
          "length": 244,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "35407912-0fc5-417b-a88e-b5ec3ac13218"
        },
        "item": {
          "id": "96e3fae0-af9e-4132-9433-4d4a15495df4",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2ce896db-86df-490d-91fb-3bc8de174125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2e50766-4d23-4302-998d-550cbf638155",
        "cursor": {
          "ref": "ccb9541c-1ffb-4bac-a2a7-e0a287e5822c",
          "length": 244,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "9d51c3cc-e7d4-45e1-ad23-707af690aa05"
        },
        "item": {
          "id": "e2e50766-4d23-4302-998d-550cbf638155",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "1fdb8dce-e5cf-4bc4-a322-86d1ef5296d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a724f5bc-6726-4e51-88b1-0fdc04d368b5",
        "cursor": {
          "ref": "c23dadc9-e162-424f-9f17-6d41e90871b2",
          "length": 244,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "5230a755-a2f8-465c-8392-933acc4da8aa"
        },
        "item": {
          "id": "a724f5bc-6726-4e51-88b1-0fdc04d368b5",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c6f9277e-cec1-4e3d-9e42-b8912036d816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc39a83c-5201-4ad6-ae7f-8a1a48860538",
        "cursor": {
          "ref": "d83a3fab-0a02-429c-a8ec-2d6b027da82f",
          "length": 244,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "877318ef-45ed-4044-a3eb-0f4626878d5c"
        },
        "item": {
          "id": "bc39a83c-5201-4ad6-ae7f-8a1a48860538",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ca2b3988-5224-4354-a5d8-33c37a845e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25fe5ada-53a9-404c-9ff7-e0de7da51348",
        "cursor": {
          "ref": "df7570d3-fd2f-44d2-b56a-eb0b8a68a8a3",
          "length": 244,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "9d4a4ac5-ff9d-4a58-8352-3de1f9d041d1"
        },
        "item": {
          "id": "25fe5ada-53a9-404c-9ff7-e0de7da51348",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "2af0ce28-8671-4e89-97b0-7f327c303418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe12786-e028-4dcd-ab9a-0ce37e7fe432",
        "cursor": {
          "ref": "0c8244fb-457c-47f0-be63-8998dfb5c8ff",
          "length": 244,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d15f2aa8-f775-4a70-b2ed-0c92ec60e5de"
        },
        "item": {
          "id": "bfe12786-e028-4dcd-ab9a-0ce37e7fe432",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "fdee00b4-6763-4f10-8168-7fb2295173dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "905e7685-e8af-4abf-9421-280180206c63",
        "cursor": {
          "ref": "06183c20-4388-4687-8ddc-e79dc15c86a6",
          "length": 244,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "7ef6cc0b-b758-4711-901f-6ae4a865a4d1"
        },
        "item": {
          "id": "905e7685-e8af-4abf-9421-280180206c63",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "540b2764-d5c3-48ba-a670-e8d6010049d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aaca90d-1aac-43ab-8c53-3da66ea842f3",
        "cursor": {
          "ref": "5a13377c-6e56-41d2-866f-262c874cb798",
          "length": 244,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "366db518-8b4b-45dc-b3c2-371af5645bab"
        },
        "item": {
          "id": "8aaca90d-1aac-43ab-8c53-3da66ea842f3",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "7a2c6550-85a7-4855-b6f8-cf7a90f30c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "403155a0-df17-4e8e-b037-f157c78605f4",
        "cursor": {
          "ref": "7c6ea673-4d04-47f1-a83e-27c53fb8e08d",
          "length": 244,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5d6565de-3beb-4588-95bb-37af07993ebb"
        },
        "item": {
          "id": "403155a0-df17-4e8e-b037-f157c78605f4",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "46cb69b6-48e7-42a7-aa7c-21e03a161d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41c85d4-5f76-4397-8232-2499c56dd80b",
        "cursor": {
          "ref": "4f50d5e2-1f04-4e8d-95a7-db6b57693376",
          "length": 244,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "421e9383-8368-4746-bbf8-6898d47ab5fb"
        },
        "item": {
          "id": "f41c85d4-5f76-4397-8232-2499c56dd80b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "45a121c9-13b7-4728-aa57-40d25a40c93e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0f9ac3-74d0-46ac-b3a2-7373fb6ebd6e",
        "cursor": {
          "ref": "dee551fd-18e3-4b9f-9ea1-b023733abe61",
          "length": 244,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5740e481-b5b8-4d37-b8ed-358d6bcd1d4d"
        },
        "item": {
          "id": "1f0f9ac3-74d0-46ac-b3a2-7373fb6ebd6e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "9e24f3d8-3e5e-4f4f-888f-5b03cee9cbc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "260e346f-cc1a-4b69-a5a2-0ef4a6f1f2d6",
        "cursor": {
          "ref": "d9fbec9b-e612-43e5-a7de-77597dbef837",
          "length": 244,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "68719fc1-c5fd-4b1d-8828-f4f35ae0e0a8"
        },
        "item": {
          "id": "260e346f-cc1a-4b69-a5a2-0ef4a6f1f2d6",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "eaefad42-b84d-4475-b67b-35634bd3541d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abbfab49-20ba-4cdc-8bb3-7064c5621bdc",
        "cursor": {
          "ref": "ccbb85b7-be2a-4d3a-95a8-20ba59d6dccd",
          "length": 244,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "06604c9a-aa63-4cd9-bf72-818d1310fa40"
        },
        "item": {
          "id": "abbfab49-20ba-4cdc-8bb3-7064c5621bdc",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "11b9e2e1-3757-4d33-89f0-55a7a6aa669c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46f6d70-b134-4c5d-b1b0-395382a74ee6",
        "cursor": {
          "ref": "dd4356cb-8287-473e-9d26-0fa0cc785c18",
          "length": 244,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f415a2a3-89b9-4c5c-b0f7-970edc76b8f1"
        },
        "item": {
          "id": "d46f6d70-b134-4c5d-b1b0-395382a74ee6",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f1da3bfe-55c1-4a00-baf8-1b4fdb58fd3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbfe5ece-e857-4953-a848-857cef43b611",
        "cursor": {
          "ref": "1b1bafe7-69e3-4849-89f6-73a58634a9e3",
          "length": 244,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "0efe315e-9e52-4a53-92e2-a7721fc5e64d"
        },
        "item": {
          "id": "dbfe5ece-e857-4953-a848-857cef43b611",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "106f2787-af2e-4160-9d97-52ab7b6c2859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cdab370-f3d6-414f-9ffa-62874640576b",
        "cursor": {
          "ref": "35195515-dbe1-4142-aa8d-10426704d5af",
          "length": 244,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e3a96aba-7970-426f-963f-b4460239381d"
        },
        "item": {
          "id": "7cdab370-f3d6-414f-9ffa-62874640576b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "82c2d943-166b-4257-883a-f89ae4abb4a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e585ed-4397-4d81-94fe-17174332e938",
        "cursor": {
          "ref": "e9ea62b5-d591-4a79-95f4-98e5273259ee",
          "length": 244,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "7ea2d3c6-8b84-4ba3-a3f5-f227d62e5c94"
        },
        "item": {
          "id": "52e585ed-4397-4d81-94fe-17174332e938",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "3d1ed4cf-4227-407f-9c2d-2873fd04a1d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecfac85e-a671-4749-83a6-c9e368323866",
        "cursor": {
          "ref": "b30a54ed-f3b3-4f42-a222-93050ecc0ea4",
          "length": 244,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "9f051046-eea1-4a8d-bc9f-0c8428870616"
        },
        "item": {
          "id": "ecfac85e-a671-4749-83a6-c9e368323866",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "cce4ecc8-d7b1-4043-9e19-7121c2d2cb88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 148,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ad5a78-d75c-4423-8927-f29ec22756ab",
        "cursor": {
          "ref": "52fcf6a4-8e1e-40bb-89f6-0a361db9671f",
          "length": 244,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "4db43618-6339-435a-b8ab-81a970efa590"
        },
        "item": {
          "id": "16ad5a78-d75c-4423-8927-f29ec22756ab",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8a4cc36f-feb9-4e2f-9f9f-f162fb113e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cee795a-fc1c-4694-a409-0355e8f13655",
        "cursor": {
          "ref": "2100365b-ccf2-4290-a7f0-5647c51110cb",
          "length": 244,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "95aec154-f27b-4edc-8ada-ee6ccf77a8a7"
        },
        "item": {
          "id": "1cee795a-fc1c-4694-a409-0355e8f13655",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "706619ba-85b2-4fea-8392-645071794adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad06e80-d5c4-4693-b8e0-023e85e1fe8b",
        "cursor": {
          "ref": "6c09eee4-350c-48de-9955-8946b210aa36",
          "length": 244,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a553552c-4828-4530-99c1-733366dec7b4"
        },
        "item": {
          "id": "1ad06e80-d5c4-4693-b8e0-023e85e1fe8b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "c2ab20c6-d900-42a0-8114-3c280f15d67f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "334ecb47-168d-44cf-8fa9-d173b15e4ae5",
        "cursor": {
          "ref": "685b8e32-627f-40bc-bdf6-f9c33095ccb3",
          "length": 244,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a1d53f38-1f57-4655-89ff-c4b0aed22487"
        },
        "item": {
          "id": "334ecb47-168d-44cf-8fa9-d173b15e4ae5",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0bae80cc-82d7-4c86-ba7c-5b861b23c5e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35423ad0-4cc0-49a3-ab2e-59e9a01647e2",
        "cursor": {
          "ref": "fe16700b-adaf-4fb3-baaf-ee235bbeacf1",
          "length": 244,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "e08f2ea2-2960-4d57-8a43-c46a1ffbb8d1"
        },
        "item": {
          "id": "35423ad0-4cc0-49a3-ab2e-59e9a01647e2",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "9c7f814e-2c50-45be-afa6-6a7b086f7f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97443f3e-b9c2-4e80-8524-44854fb7fbf2",
        "cursor": {
          "ref": "dbbba38f-fdb5-413b-aaf9-af2449b3d088",
          "length": 244,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b7739f6c-38a1-4b61-82bb-e9784b65f7ee"
        },
        "item": {
          "id": "97443f3e-b9c2-4e80-8524-44854fb7fbf2",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "9427acf1-c76b-4a0e-9fe3-20e2f9a28f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f712cbb-fb4f-4aba-b153-2591288bb202",
        "cursor": {
          "ref": "5b5abaa3-9ce2-400f-b310-4c2c7a099cdc",
          "length": 244,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6bc1f9b3-a883-4304-a468-59c66bcfde08"
        },
        "item": {
          "id": "2f712cbb-fb4f-4aba-b153-2591288bb202",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "81216d63-6634-4035-9dd8-c332835ab12e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24daf85d-26f1-40d8-bb9e-ab1034b58a12",
        "cursor": {
          "ref": "a42daa24-c97b-4a4d-859c-bd63cefca38f",
          "length": 244,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "1335e441-940c-4e55-a4b6-1f0a3b470221"
        },
        "item": {
          "id": "24daf85d-26f1-40d8-bb9e-ab1034b58a12",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "414b103e-91d9-404f-9f75-ac49e07651f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b7a2e3-9cf1-453a-98c9-2dc178e83812",
        "cursor": {
          "ref": "d37db665-4d48-4317-af18-d6957fb181b0",
          "length": 244,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "7dfe2691-b0fe-4d35-8fb9-8458f9210a73"
        },
        "item": {
          "id": "f5b7a2e3-9cf1-453a-98c9-2dc178e83812",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "944a7eb9-c88a-485c-9ef4-bfb7d7c528a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c007e1-c038-412d-a55f-bb79e1117fd9",
        "cursor": {
          "ref": "12acceba-2b6b-4bac-9641-ac955dff0a3f",
          "length": 244,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "4e3a8a9b-b21c-40e5-8305-3ea2e92908e7"
        },
        "item": {
          "id": "d0c007e1-c038-412d-a55f-bb79e1117fd9",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f852d6e5-8c89-478d-985f-b95129c13609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "830f2c85-3303-4d12-bc44-861aed9427df",
        "cursor": {
          "ref": "f34cb34b-6e45-42e8-8e2a-43cddac67dbf",
          "length": 244,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "13776430-39b7-476b-bffb-d9b2d069bc1e"
        },
        "item": {
          "id": "830f2c85-3303-4d12-bc44-861aed9427df",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "24d80ac7-9f3d-45e3-b0d5-0129f35b480d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6623e5a6-fd08-41c3-ab40-778f8110bed4",
        "cursor": {
          "ref": "91ede3b7-45c5-4517-8a36-783f3df009b8",
          "length": 244,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f50765dd-5f1e-4585-bbdd-53452095e3d2"
        },
        "item": {
          "id": "6623e5a6-fd08-41c3-ab40-778f8110bed4",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "8000cb01-e12e-4925-97cc-7f2b355a7062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1003ee0b-f6e1-46d5-8533-930cfdcba239",
        "cursor": {
          "ref": "ac584bd9-fadb-4aff-9d43-15d754993635",
          "length": 244,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b19126ec-9fa0-48ca-bc5f-e9959e2d2d29"
        },
        "item": {
          "id": "1003ee0b-f6e1-46d5-8533-930cfdcba239",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c433c4c7-46cf-475a-890b-f44b1a68992b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0039cf21-3147-4b08-9240-b1ad1b501db1",
        "cursor": {
          "ref": "5d75e5a0-e072-4bb9-880f-5e340e3d1119",
          "length": 244,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "526a3395-71ef-4d26-88d8-5f980e34c308"
        },
        "item": {
          "id": "0039cf21-3147-4b08-9240-b1ad1b501db1",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "84940034-9cf1-491d-adc1-51015c12ca30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a80be90-940f-442d-a1b9-2375bd7ff087",
        "cursor": {
          "ref": "99fd65a0-c5a8-444c-a19e-e67200569473",
          "length": 244,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "dec34b46-e592-4038-b5b9-09eeb8f39b0d"
        },
        "item": {
          "id": "3a80be90-940f-442d-a1b9-2375bd7ff087",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "cbc75e8b-e3b1-4300-aa3f-49cd09ad9155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0df4f50-3351-401b-9da9-ade0264d49e1",
        "cursor": {
          "ref": "d2a6ba59-7893-4627-8960-64a6111644a5",
          "length": 244,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "428c4472-66a0-463d-95fa-6ebd6cb43ee7"
        },
        "item": {
          "id": "c0df4f50-3351-401b-9da9-ade0264d49e1",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e245234f-e888-41c4-bd7c-6649158840f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d822cb1-838c-44f2-b675-f7fc62ec3d5a",
        "cursor": {
          "ref": "90cbea56-d920-46ee-b272-f124dc3a2007",
          "length": 244,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c1c4db58-36ec-41c8-97cf-6b913a2540fc"
        },
        "item": {
          "id": "3d822cb1-838c-44f2-b675-f7fc62ec3d5a",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9cc808b1-52bf-4559-a487-d98d49a7e11b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d3ec872-a299-4893-b58e-214230dd83bd",
        "cursor": {
          "ref": "117ac90b-61ab-43fe-baa0-59242d60f869",
          "length": 244,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "0c7cc38f-619a-4bba-ab94-1bb8354a9e30"
        },
        "item": {
          "id": "5d3ec872-a299-4893-b58e-214230dd83bd",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e13a8aaa-dd4a-4b99-8a7c-ad733daa4604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "935e170c-efbc-46d5-92e3-11725d6dc63d",
        "cursor": {
          "ref": "53bd8f60-22e5-457d-b017-eb796090bcf3",
          "length": 244,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "56cec909-493f-440c-b9ec-8feae660dbb2"
        },
        "item": {
          "id": "935e170c-efbc-46d5-92e3-11725d6dc63d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "798daa91-3f6f-4a70-b755-f0fd7c306a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ade1e91-c364-4b24-8aff-766f53a90887",
        "cursor": {
          "ref": "e8f9af4d-5cd6-4752-b1a1-712e1c095699",
          "length": 244,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "c72f793d-aca7-4867-abbe-e13f68112300"
        },
        "item": {
          "id": "9ade1e91-c364-4b24-8aff-766f53a90887",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "65ff636e-e605-4598-9d28-74500ccf0b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a85d30-ae3b-448c-8a8f-5c3120f238f6",
        "cursor": {
          "ref": "663232a3-6458-4e84-ad18-a89bf1f923fc",
          "length": 244,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2f84868d-6650-4872-be8f-265aae1dbb65"
        },
        "item": {
          "id": "08a85d30-ae3b-448c-8a8f-5c3120f238f6",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "3a314b25-e6ad-4828-a884-1cc9c7d7b922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc76f0d4-684f-4309-9355-61cd273dd1c0",
        "cursor": {
          "ref": "f4239b18-3e6b-4d7c-acfc-4dd5287aa259",
          "length": 244,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f867341a-9d86-4bd1-ac25-85e655787cf3"
        },
        "item": {
          "id": "dc76f0d4-684f-4309-9355-61cd273dd1c0",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "9fd30f8e-0c01-4b28-be2a-3d8c063f9fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08517b24-5f69-4dcb-b586-95ac3c9abd10",
        "cursor": {
          "ref": "fcc6da72-a28d-447b-92ac-3dd420fa9729",
          "length": 244,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "bc8059d7-d4f4-471c-9ec4-e093be5036e6"
        },
        "item": {
          "id": "08517b24-5f69-4dcb-b586-95ac3c9abd10",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b49fd5ec-282d-4ac9-9a87-dcc06b24bb8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c2cd26-1b86-4f70-9628-78ee4c7ae28e",
        "cursor": {
          "ref": "981027b8-f0d3-44dd-96aa-61b8fba7177d",
          "length": 244,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e8cef3b9-a2fc-42ea-8648-5a6bd37dff9f"
        },
        "item": {
          "id": "e9c2cd26-1b86-4f70-9628-78ee4c7ae28e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "2fa3b581-31f0-4ae2-8a59-70d5c2319991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c88b391-eedf-421c-a57e-6b4fc38f32a9",
        "cursor": {
          "ref": "3bd279fb-caef-40c4-80f1-a9732ec8e858",
          "length": 244,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "2f65373b-7ed4-411b-802e-d16aaa7f3362"
        },
        "item": {
          "id": "6c88b391-eedf-421c-a57e-6b4fc38f32a9",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "3b2b0ad3-6db8-4604-bb37-717795342606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16deec8-3577-446e-8084-734acc43a392",
        "cursor": {
          "ref": "aa291f2a-24bc-46f5-a641-b89c897fb842",
          "length": 244,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "9b815de9-91ac-48a0-a473-9c0f35f2b663"
        },
        "item": {
          "id": "d16deec8-3577-446e-8084-734acc43a392",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f6d2b3ae-2f7c-464b-bc09-7b129277e97f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5abe7fd6-39a0-4a86-aba3-6643e22d9b38",
        "cursor": {
          "ref": "10101101-7cba-486b-9a32-b15db7a5ee34",
          "length": 244,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d7fa462e-60fa-4c88-8982-572d6a6f1ae6"
        },
        "item": {
          "id": "5abe7fd6-39a0-4a86-aba3-6643e22d9b38",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "316bda3f-5db5-43d7-ae9d-b336447bf3ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ef91af-0dca-451e-8564-231c8db2b0f5",
        "cursor": {
          "ref": "81342873-17fe-489c-8034-1fb7661f038b",
          "length": 244,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e6971d88-a159-450e-a87f-aecd09676bcd"
        },
        "item": {
          "id": "d4ef91af-0dca-451e-8564-231c8db2b0f5",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c3747d8c-ecde-42d2-91ec-b41529535017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac634701-26ba-4bd6-be65-483ab7f60481",
        "cursor": {
          "ref": "9732999d-bfbf-454c-89fb-4a8425a7ff12",
          "length": 244,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c016d7ad-982f-4471-89e2-b36b3574fe7a"
        },
        "item": {
          "id": "ac634701-26ba-4bd6-be65-483ab7f60481",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "309886bb-d63c-4076-9711-fb3dfae67ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3eac11e-4ee5-4260-ab9f-418c731e910e",
        "cursor": {
          "ref": "1455b1b2-11f3-4221-bb6b-9044807c4ab3",
          "length": 244,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2f2ec5bc-cd0b-4ecd-956a-3d11c888ba04"
        },
        "item": {
          "id": "d3eac11e-4ee5-4260-ab9f-418c731e910e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e1655154-cad1-4e87-9069-023bf1a57566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f49b48-947b-490c-b4b2-e2928131b957",
        "cursor": {
          "ref": "bfe470d2-796c-4f82-ab77-183e10b6cfca",
          "length": 244,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e01dd4aa-4523-4104-87e4-19a11041f1de"
        },
        "item": {
          "id": "c0f49b48-947b-490c-b4b2-e2928131b957",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1a44901c-f891-4313-abf3-886095a176b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a0c26ed-93d5-4c58-8788-e711ebe92518",
        "cursor": {
          "ref": "282faa05-c928-455d-90ed-3d2531ee0fda",
          "length": 244,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "81698828-81f7-49dc-b88e-a63d6732c94a"
        },
        "item": {
          "id": "3a0c26ed-93d5-4c58-8788-e711ebe92518",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "612ce70d-523f-428f-b908-c12bbb5736c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "201fd641-3833-4c70-bb92-4b1f43781303",
        "cursor": {
          "ref": "e1a8ba8c-c85c-4dda-9441-4b85499d3199",
          "length": 244,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "ed786bc8-03fc-489d-afd3-42792ed0d200"
        },
        "item": {
          "id": "201fd641-3833-4c70-bb92-4b1f43781303",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "68a62022-7ce0-4527-b144-fb0508a69ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdd375e7-1ba0-4647-bd38-645ab3f5fa39",
        "cursor": {
          "ref": "7938b14f-9e62-4428-bb39-f943c7354ee5",
          "length": 244,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b85d279d-84dc-4a56-b96b-213802b65b37"
        },
        "item": {
          "id": "bdd375e7-1ba0-4647-bd38-645ab3f5fa39",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ad6bc731-c6fb-4326-9c4c-3ab567830815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c07e050-dce8-4242-8327-e77fe7147e10",
        "cursor": {
          "ref": "3e50a44f-95ef-4bfa-9237-b9f16d352aa9",
          "length": 244,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "25d270df-b992-40dc-a33d-617c390246f7"
        },
        "item": {
          "id": "8c07e050-dce8-4242-8327-e77fe7147e10",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e8584d05-bd5c-4578-8c36-603c5c0d4a77",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b918ccf-1ccf-47c9-9f55-cbd94b16a64b",
        "cursor": {
          "ref": "e7a4368b-c350-483b-b55f-4cb1b3f60ed1",
          "length": 244,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "71653ced-9879-4282-b28f-87d1d683f8ba"
        },
        "item": {
          "id": "4b918ccf-1ccf-47c9-9f55-cbd94b16a64b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "729d42e7-059e-4b32-9cdc-fea4f67dbc69",
          "status": "OK",
          "code": 200,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec10ee84-f7ac-494a-b57d-18aa62fa6387",
        "cursor": {
          "ref": "02979361-8892-4006-814e-a2b33daa4a2c",
          "length": 244,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "1b370ace-9445-4972-b9f4-d696f367cbda"
        },
        "item": {
          "id": "ec10ee84-f7ac-494a-b57d-18aa62fa6387",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3f4f05c4-8c17-4e6b-ae1f-a359ada2bd19",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca989dc5-ac15-43a0-8f5b-d6202b6d76c5",
        "cursor": {
          "ref": "fb2be686-9419-4e09-b28d-2ecad115411b",
          "length": 244,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "44334708-66c3-48e8-9db3-44f01d150d7d"
        },
        "item": {
          "id": "ca989dc5-ac15-43a0-8f5b-d6202b6d76c5",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a8e90c4e-af19-4cfa-835b-3ae56c61aabb",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "437398cf-f344-4e8a-adce-d46c37be182e",
        "cursor": {
          "ref": "a99e9c08-80b6-4996-bd34-1466aa1b08ca",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3449ccb9-f043-43cb-bf07-89f68b7cd3ab"
        },
        "item": {
          "id": "437398cf-f344-4e8a-adce-d46c37be182e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0d8255ff-3665-45cc-9d54-ceb8fcd0ab45",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "437398cf-f344-4e8a-adce-d46c37be182e",
        "cursor": {
          "ref": "a99e9c08-80b6-4996-bd34-1466aa1b08ca",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3449ccb9-f043-43cb-bf07-89f68b7cd3ab"
        },
        "item": {
          "id": "437398cf-f344-4e8a-adce-d46c37be182e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0d8255ff-3665-45cc-9d54-ceb8fcd0ab45",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11eab939-c7cf-4a4d-963c-1c65c1a68208",
        "cursor": {
          "ref": "9ad91b27-64b6-4615-bcee-92f2fd68bff2",
          "length": 244,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "9bd1d146-46f9-4d9b-9e20-9b9dbe9fa961"
        },
        "item": {
          "id": "11eab939-c7cf-4a4d-963c-1c65c1a68208",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "4db1af21-d82c-4b5e-9896-8795c83a9eb0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a78c9712-2780-494c-894c-bd9b36fa1282",
        "cursor": {
          "ref": "42853879-8202-459d-8909-3e29c8d95cc6",
          "length": 244,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "53fdb62c-2eae-4ceb-9a14-1623970aca62"
        },
        "item": {
          "id": "a78c9712-2780-494c-894c-bd9b36fa1282",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9167bf8a-9095-477d-bfcb-314ec2473764",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}