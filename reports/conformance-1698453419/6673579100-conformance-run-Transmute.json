{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e09a9c61-52d2-4cc3-b554-608418bcdfae",
        "name": "Clear Cache",
        "item": [
          {
            "id": "5595e422-bff6-4c06-94e7-259e4d860c62",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ffe6529f-b436-4474-95b3-28f6445bea70",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "79dca802-a282-4cd6-9067-5ec3994a57ce"
                }
              }
            ]
          },
          {
            "id": "92391637-3096-4da7-b887-72924074d8bd",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "544c7884-1ee4-4841-8974-840e6beb6c92",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "159332e8-8b11-45ee-b560-bb817177087a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "176e810a-6fcc-4e95-91bf-fd0b4c8dbaa4",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "fdd13aeb-28b0-4421-bb39-4f24307302c6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9ed02b0b-8407-446a-ad50-a846a582df91",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf1b9bee-a6be-4ff1-b1e1-d4f46076859f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e0221888-fd39-4412-80f0-7504c105a0b6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7fae23c4-ae51-47d5-b739-11d6f4facc96",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c83e9c4f-3df5-4eb4-b250-98d88af25fcd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "70c14c16-07fd-430b-bbe2-1a06a5644118",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7aa3e165-cfe2-40c6-8374-16072fa16ce1"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f6cf5b45-4f24-4fa6-9813-58f1a67acee6",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "053c4aa1-fabe-4113-9c65-c4a651126e1c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f8a01a47-42a8-42ca-b989-43f8afda8e68",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "77db0cde-3f9f-449d-a53d-599e66f45948"
            }
          }
        ]
      },
      {
        "id": "525e25b4-450b-4b94-9c20-ec9df64bb59d",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "1fc42f07-e9d3-4d24-8a28-b07f4f66dbb3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d928fdbe-cdc0-4e42-a9d6-efb8e6cc71cf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "31ed04c8-7e36-4f89-87b4-61317d394530",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef05db48-63b0-43e4-80de-138edd34ec50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "784e4e4d-4d0a-46df-b05b-7913564926bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2be3c02b-165f-4f07-a46c-3981ea4bd705",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a304b2ec-3126-4b92-a694-60e2817379bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "38b933ff-d3ee-427d-bc85-c3e97686df26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c7f50f2-8c8f-4b23-89c7-2dc4979e2272",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e22f63cb-9ee5-49e1-8409-8ccc4bc4d657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8aa56adf-db9f-4075-9b94-8f3eb1b4118a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "accbcf0f-cfed-4da6-8534-feaeca160442",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2a05d5ac-835a-4474-ac13-df8e56097fce",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c88de443-0ad4-48cd-b99b-d66c3b869065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f010213c-d412-4170-9422-4bdbd50d5acc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6942013-0477-4e33-a4d1-2e75a7681889",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0fbc5e0-940c-42af-8fea-05c5d3853f44"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ff65645d-d899-4170-b170-6b7e9a7278b7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9268b87a-6afc-4666-8ada-0ea0c7affd61",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9424b6ae-8415-4186-8e1e-8ab2ce2dd00c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "cc89cbcd-d9bd-4a32-8e89-9f45ea1405e8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dd1a6870-4ebe-4158-8fb7-7e75864bf8fd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "0e437fd7-e713-4deb-80db-e5b2d77d79cc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "195160a0-1d75-40c7-9eeb-2bacf49f8d4c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d871d8de-4f17-48fe-ad20-5f1706037c7f"
            }
          }
        ]
      },
      {
        "id": "7b669355-219e-4ae2-b305-4d23a63ada4f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "493a11a2-62ee-4272-bddc-87fb63b0f3dd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c4437cbd-9df3-4a9e-9a63-419508d723ec",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "60589f39-2ded-4997-8f6e-73037e6c6a1f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f72b3a4-68e5-43d2-8255-00c364f585d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab03409a-9e0b-4d97-a3f9-7f5f006d77ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f74354c4-6ca8-46bf-bf79-7aa08747ae74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "393b5ee0-6a59-4746-b955-e0bff4ba9fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d4d4f6c-ae0d-4e9b-ab8f-2640396e1bd7",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaed2acd-3561-419b-9866-b886641655c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cae54b59-72ad-477e-ac35-8ec4161ddf90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee388357-4c9a-4143-815c-0d5c089ac49a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9438b1f9-f9f2-432a-b4fb-6dd0a0f5d3e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "031c67eb-7173-483c-9861-584ac11bf820",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee8a754b-317d-48c4-929f-fdbf7d9499f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f5bb1e1-52de-44fe-b56a-ebbd7403c7f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e505f1f-04c4-4b01-b7e9-b6c0a974c5b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "925ed2b4-fcb7-455a-8635-51e949f35212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e89fffa-28ae-41b5-959f-b04c986dd6ca",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2af9c5a-6b7d-406c-a748-9d929b547db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b97f1b72-dec7-4ede-a35b-dd86b6542cf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "341c8144-8f0c-42f5-93d9-e321e8245bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "820e1365-f4bc-425a-b709-e0f64cd43214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a5f13a-ca67-42ed-929b-222ac34f70f4",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "390fa628-654b-4798-bf60-4740cbaed8da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6916c20-89cf-4968-8a4c-5804791f7df6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "689272b8-ffc9-49e4-9679-bae05cd179b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81c628ef-4510-416a-852f-0738dcb1e2ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "964c0fd9-af2b-4f17-890a-a57450247046",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "392840a8-203f-4b4b-be13-a7c1b7becb69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d57526ab-e9c5-4971-a368-c7b7139cec9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a7d5c14-6c52-4b20-92c2-8fef21266329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7527d72c-5dac-4936-bb01-1fdc88c579ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95202ec9-cbf2-4e88-a0f0-c99c5bdad8c9",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f8f6b31-1cc1-40db-b3bf-b3f0a9abf5e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e421c0cd-4fcc-459e-b851-6bcc47f151f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d91323-c6d6-476b-8175-9286ac5fcc88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0bd3cfaa-3997-4af8-ae13-061e8354f869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "711cf2d6-9340-46b3-a222-c1b792ec45ed",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef56f19-245f-4d79-a42e-81c61d2143f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "536d40e0-d85e-4429-a24d-2c5f19fce79d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7043688f-f0ac-447d-9eb0-c257317cc127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9562c25e-ef06-4448-b9fc-5f02444d134a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc508a55-f5d4-43fd-b770-08ab037c8fc6",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a95fd94-bc76-4dc2-ac22-63f7b8a09182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9dfe51e-34a9-40b3-a899-ce9763abed0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1abc2a67-3c8a-49c1-b587-6587ae36a051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d105fd5a-e7d8-461c-a4a3-1cfd069c4ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a77b891-7e7a-4297-9ab4-ae28bf539ba6",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63fba1b4-b504-4447-bed4-a3589a172502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98fc727d-3f3a-402d-8d71-e599431ccc32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "311b39a8-3229-446c-868f-d5d697ec161f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "614dea70-8d0a-497b-b840-69ec796b2d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac1884b7-89f0-4fe4-84a2-0f006114cd7f",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "282d4143-dd75-4ecd-b9ed-a0ea0de25d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2be3e3ae-2203-4cab-bc6f-f4307401b967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca452e75-f1fb-4238-bd31-82e9c57c5b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1481d49f-14fb-4f0f-a434-f49311119502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad8f901-9e6b-4b5f-853a-7115760d4221",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66907d76-dc81-4f77-835e-35284059e087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4082d35-8fb2-4eb4-8e65-902a3f2ba2c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94995fc4-d849-4c32-9904-95881325bc4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf8fdc88-4ae9-4cb8-9932-9f9858a2148d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f685f4-bfbf-4d8c-bd50-440172295835",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e514c55b-9b00-4a30-af3c-5e7d6dfd586e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2a28326-310d-46c0-b85a-28866e7d0ccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26fbb98a-2a3b-466a-80ff-6a558c4d30ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e0fedb6-f1e5-4130-bc29-735870958d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db223ac-26f1-4306-b1d6-5f2cf9383934",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "224fe7ff-e77f-475d-8474-668ca76ba63b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "481922a4-dd59-4a26-90e5-ab83f1f3eacc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b200a1-f5ff-4f0c-8121-5735f32b8814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "288211fb-060e-4cf0-aa6a-76dfbe816e02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2761e9a9-c6f0-4922-a398-8e5b9d370463",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0de5bc9-b49e-4a89-a803-95078581756f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca56af09-dad5-4d90-8462-f21540ae92d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd544fcb-d0f3-459d-aba2-d1d9063d318d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b525bf5-947d-4447-8547-f22e2b1fddfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a158dae-499e-4db6-a16e-5aa3e266d618",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2779c639-42d3-471a-8cb3-53f4d56d55b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "318f165a-e5de-420d-9dd8-2ba5331b946d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d3e2f3b-4c97-4ca1-8a4a-c0f141111351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f39b88b0-ed15-49f4-aaf4-3868e3536dce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e55ed7-ac97-43cf-9375-10c4f3b63778",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23546f82-9172-49b6-8abd-d50bdceaa853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebbaab3b-1ccc-478c-8345-147e8301f9d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e6bdc6c-d71d-46b2-a64a-32d64ab6625c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a55757b5-6a4e-4784-bd2f-dd9a130dc9d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8e5b80-f606-414d-9c31-cb8d8a77d3e9",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c84e60-c351-4d9a-8938-b4cd70ec75e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa04937e-f699-47d0-bbaf-1d17cb91d504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "425f8fae-1f4f-474a-8912-01a5dd5786b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "75788a86-9293-4635-8f83-614dd4a174c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b5126d8-1a2c-4032-bc49-18c6ee664461",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e87a403-3ecf-40e2-aed1-bbbb13af6c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "667f9f99-aafa-4cdc-8ca4-35b99bbc0f23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e828f92-fa9a-444b-b7be-836079714f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "63c93b36-2701-4eb2-9e54-79f65b2e2875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee9261d-361c-4fe7-a0ee-30342fc0cc2e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05eb0709-4943-4c46-9a58-dbab7ec64a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c3930e2-bed9-4beb-8b1d-4f7681f15b79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb16d146-28c9-4e14-acb3-30ca8efb6409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f2ab0a4-c8d5-4f43-a9e7-446e22d3eede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85258290-e83b-4a99-85a8-da79d9a86327",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad8eb79-22f6-4155-8a34-1d482e5d3b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2cad4c7-4ca3-4f6b-9e61-e14127633c1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07355c35-b2c5-4add-9a2d-f7d3ae4e5cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d669dc54-a7fb-440d-aba4-7ba969cf1327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c3b0e45-06de-4986-a9d3-1d15ea6779e3",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "433ef8d2-1207-4e7e-9a61-93c8c843e00c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dfe8534-0879-43ca-97a5-dd7682f6f69e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03c6e2c0-41b5-4271-a246-c0776301cd08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e659694a-0998-4fa5-a3bd-ab18fb59c5e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d109178-6f7a-4e04-a366-c962df6fbabe",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4a5e6b4-5462-4b68-8bef-64072916414a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7243f398-f6db-467a-a456-0b6098a2b1cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e10096d-68e8-4c32-ac36-a9e532e41ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d81e58e4-19e2-4f82-b08d-45d75d48ce9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03407cc1-93cb-48e4-a39a-2726a992861a",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d23cf66a-d698-4c75-8a8e-e5bd748496d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2458c05a-89fd-41e4-a31d-42a7ef796f8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c90614-0aa4-42ff-b7f8-cd693f164e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4550dac-bbb7-4be3-85f5-288dadb6c529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d027ba3c-9163-4dc1-ae02-88a9cbccae63",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0738051-fa39-4d53-931e-9d07f80d2295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67f8f181-013c-41cb-bcb7-7d9f74bbb0cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8505919-1977-4b68-9ace-c0f7f84a22a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebe7085a-782c-44eb-877b-9c84cd371c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f414c10c-2bc9-4471-a018-3f563e77d84a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01474fd-c667-4336-a8f9-98d092826546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cd69445-d7a7-424c-bf11-4b3c9432c6aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f5edffc-2302-47b1-a723-a79f753e456b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "baedabe7-b31c-44af-8919-f18b17549921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58337195-8adf-4e1a-8cd7-b9a5bb95b006",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be5aebd2-2f12-44d9-b5be-c94b9fc29ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1920e5f5-0c2f-4153-a4a8-c8e9f9113f23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ce95cd-2c0f-4765-bc19-83196bfe5d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "782d17cd-2e51-443d-b22e-282b7656cffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac9a653-70c4-483d-9815-31a0eee2c6ae",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25802792-eda5-4f59-a084-36fe539d0329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4caab83b-4c1a-4d33-a1bf-d9dd72498039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c8e5b8-29d0-4b93-bec5-a9b54743fb6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e69259b-b489-4458-94f8-4c10734e7e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc13308f-86d2-4b9c-9635-2f4f92fceffa",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57360c8d-b359-48b9-af76-3c212e821480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6273eb86-bdd4-4fb7-81bf-c566cabe0ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab895136-4e3b-42ca-97ad-56036b0f4194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6ee961a-dd02-49de-8619-56893b856d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "076722d2-16f6-42f3-abca-f79d9338b8a4",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba64c63-6492-4183-9aab-a82a216f758b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd4d0a4a-5533-46d8-bfac-c3d960c385e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cbe63b6-0b15-413a-94cc-50a6b064153a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "893958ec-5843-4a9e-9548-c1d600d16043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db497aff-c043-4cba-b392-8ac8fefca7e3",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a06a0c84-0a1b-413f-8afb-96b2ff88947f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8adf4e9-4e61-44b5-a1a3-f68e9f785b4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51fa11cc-d02a-4f24-82d2-53d10ed68493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e2e91ec-e13d-4ae2-a1f8-348cd48c5f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b28b4a-d2ae-4c7b-945a-65610ea48ab2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d261241-29eb-4c23-8f04-59eb7b09ed35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e38010f-192c-4ea3-afaf-d7615b219622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "926f36f3-2a4f-4ab7-978c-7aa761467048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "de1eebdb-e4b9-45ef-8ff4-223dcf413016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d790b647-fce2-47e4-b54a-bfc441e13ee8",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c59880d-a053-4640-88a0-fd398437a99c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d24450eb-166f-4e73-9e4d-21777490be1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ce451c-6971-4060-ab2a-8675bbf313a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6d46786-262e-4108-9ce9-703b7f499fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30eb71a4-3caa-4c3e-9c45-d77d59340048",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b020e39d-5f3d-46cf-b1ec-0b166cbd8977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61787d78-34ac-4ab3-90f4-0c37521fddf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c57c70-f4a4-4d88-8845-e101944b7257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "de21b516-2b24-48fb-85f2-8f272848ad23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44cfa1a9-a745-4da3-a48f-fa92f276b205",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c2f5722-4169-4958-9d13-6bcdc5bc9ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aea19c98-4daa-41cd-87f3-b5c894c85be9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8d52045-dbb6-4672-ae1c-3625293c4fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a82a5d66-ef42-4fb4-a289-fa6a52de00e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "810ba27e-321c-460c-ae43-a5a76c580268",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1dd0d2d-daf2-470a-b9a2-27e24ce2db22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f81e4f0-ba9b-42bf-8600-93e4d13471a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b63843e-e89b-42cc-943e-b6b3cc627c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6efb7860-a4b2-4a05-a57d-35c6884a93b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20e30b2d-9be4-4918-afa9-292df644250b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b806d1-6d99-49cd-a898-4a4ec72e0853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d00c8a51-9ceb-475b-9fee-5c5a4556cc59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1402f64-5de7-4a4d-9494-3e96ea50e7f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cddbbfbf-584b-43e7-af4a-230e0c5b87ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40009039-4381-46e4-a6c8-69ea8e5625a4",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "645c6e11-f6b2-44f4-b65d-c62ad26c9bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e69b6b9f-4f2d-4f44-ac65-dd5cb696c2da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "414a3a4e-e1fb-4734-942a-d4bbf8b4ad91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c16ced62-6a41-4ed3-95b5-80f6286cdb60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46850763-c369-4edc-bd60-52e4a73f1108",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f89c23ce-6587-4f60-894a-d079d7ba1562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96359239-98e8-4513-83a0-5f3e3e6612a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc290fc-7c2a-48eb-a0c0-5acd8aea7a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff94dbbe-781a-4e45-896a-75d10578b0b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d238e7f6-7d3a-41f1-871f-1703ae979ae6",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b01432f-0d34-41da-b9c7-308ca620b262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b4216eb-d13a-4633-aa32-642cd24ef304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "723bffa0-fd8b-4ed9-8d69-a87bdcad8f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4dc3d687-084d-41ea-8f88-9157daeb41db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a144ff-4e73-44c9-97e4-ce3a05e69a8f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa82afa-7f6f-454e-9813-4c55abcfa64e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee901f30-0235-45bd-a961-36768bf698ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c93c4f1-1147-4aee-9e0e-f2d3f070f59e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f25fbbee-706c-4c10-80c1-19df99eda618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d79986-e106-4ba1-b013-8f75a0a6beef",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e68e9fb3-1e11-4fe5-8987-cf1bf51e0b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edebfc65-4e17-450a-8e4b-f5aeb06d70ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a850c3a6-9874-4122-a254-d607b32bfcc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "235fedbe-77ac-49c5-ba07-162a10710257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f67d02a6-e8bd-47dc-b29c-c94c4f453811",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c04f453-cc6e-4824-a2c8-278679241527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a97d0822-b0a2-4a2c-b545-ae63427883f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0025b1ce-cb0a-405b-95b1-91868bd00bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9bf95f6-c3ad-4223-a87a-12ba64f43929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6acb657e-8ede-44c3-b763-409c5f50b415",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be82547-4a1e-4364-9d59-f3023eece153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a8b05cc-e609-4dfb-8a26-67c67d85d584"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4edd81f-b750-448a-adc2-70e390375f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "26deb583-1943-456e-9abb-cb269a61a664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3354ebeb-a06e-4ba0-a359-8e4d64ce4d56",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33fc97f3-31a1-4772-b04f-72f59453274b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9a24247-2906-480b-baa8-284d16d38774"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e4c1ab-e857-4a4d-8a22-fec3d52cdd6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "34b2066c-c008-490a-9f1f-7402bfb7cd45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc2cbc26-2513-4e0e-89c9-2e6a9bb213c8",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2f67f1-a96c-4af6-a381-58f250fcc090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2be4ddb8-ec36-49b1-9332-583110150309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b7ed422-ff99-44c5-8160-da294347a2e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "474a4892-dd02-4187-9850-d6df342eb445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "541e5ca0-c616-409c-a7d1-ac457a7ccd8b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0abcc65-3ae9-43c8-b3d2-a353e68c8e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6c35d08-7e03-41fc-aef1-1e9f5a8d6923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5e9422-a3ff-4b76-bcfd-5ed847e37e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcfb949a-a5fa-465d-9db2-e5395473b97b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aabd98e-917f-41ae-8966-3adc80d76640",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be037783-c4e3-49d3-986e-161157c02843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d5e6329-e18d-4662-9d02-5168c14ac427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc33ce2-ef8f-48e3-bf32-5128384eae2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fc6849d-3d2a-4906-b151-095ca4e97db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e89e85db-1ac5-4a6f-af36-83f5d7ca5cda",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e645d7-c317-4ddc-87c1-52d985c0477d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c68e1ae-43e5-4f4f-a62c-34ac20c1305e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b87847-0e8c-408a-952f-1c6b72a7d99c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "03c77baa-8fb8-45e1-bb44-831de4f65d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecdd6813-b655-4150-ab28-53d908d9bb7a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "058bc30c-0408-4271-a4ba-2cc8ee0d1142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff318a76-c0de-4203-92b5-cf7033aa92bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e68676bc-7bf9-414b-8672-c101bd225a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d2ecdb40-651d-4a0c-9138-38c89ef5843c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a3d49c9-a6f8-4020-8f06-29281f4aa5ef",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a20857-b28c-4103-860e-6893e0e128bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0940e7e1-f117-4cfc-a635-58c1e75c2562"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3aad3c0-ba0f-49c4-bd84-2b169962ceed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d121804-0430-49c3-948f-7693367ab247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4700f99-da7f-4d00-bf55-83850b9d5d42",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e849d961-e481-4227-a6f1-f1bab0c0ce68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ad1a9ae-8b6b-439a-b031-8f21ad5aafa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd3655a-316f-4b9c-bd7f-ce27a2946fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "53f557b3-51af-4759-85a9-bcc528982809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "279dfe13-471d-4b86-b8c0-4bcfdcc36fd5",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "252eacf8-3753-4fe1-8aa1-5b4af8163059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e1b9d3c-4f85-4124-973e-d77308dcc592"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c27b9c2-d658-4332-a2b4-25eb76fda14b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0ec4eb3-0fcc-4d05-aab4-6c6c49794cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3040f0d8-eeae-4c15-830e-552fc7d1ec4b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd71267-8002-4a64-8a9d-76b4749b5560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbdcc383-3559-4fc8-9af1-2c382c9de322"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4973ffd-4fdb-4cc3-8839-e5a9f42c4782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "68218104-41ee-4402-9f0b-0411eadc7437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a31d7965-2194-47ce-8692-0151906b1e06",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d00260d-e64e-4f2e-b078-434ced93f784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c2076c6-4b88-4aff-a5f3-6ca48528c835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "317de1cb-3fc5-4c0a-a9b9-4acea43d649d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d031f10c-cc67-4956-a147-65a492e16d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3525e13-2917-4b0c-b2f1-341d816f47fc",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54fe89e2-539a-4760-96ba-00d6f4e871d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "986dbe19-5d83-4327-b646-a2d2eef8801a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "343de5cf-7729-42c6-b5e8-0a2e9ed42f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "59f620f6-e6b9-4a02-89c9-384e9f62d463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "556970ae-ba69-4dde-9c2a-1329f3056cc1",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f56f334-76c5-41e0-958a-ba11489fd784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed3b48b8-1126-44d2-99c9-76586c0651aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98028fa0-00cc-4805-9ff1-dc39925c5ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b80508df-58f3-48ed-90b3-95a2abaf34be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2430f01-ce0d-4ce5-ac08-cd1ca1f349e8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c827a13-9b52-4b03-8111-ab321d52f4be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01b17ddb-b362-43ef-82c7-f5ffc2df0326"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00cc3079-187a-4bc0-ba52-4818115205a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e2571ab-2a21-48c2-8a90-c9db8eaf28ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40bccc6f-bb4d-471d-873f-51567912f690",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b5ed354-a5ed-4b41-8884-cee992b187b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8facf6e3-3348-4055-ba5e-94cffd798440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb8211c3-0a2e-4c97-a9e8-a4abe0baecff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "99e36cb1-ee4e-445d-86c4-3081bc7b453b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8734733e-3e2d-4b6b-a612-e38a54ab2672",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f657039-10c4-4dc3-bfc3-17d6ed1fcbc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "709c618f-fc06-4921-b251-2dec89ab1b51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a62afc5e-2aef-4a82-9ef2-90190d5c1803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a89dca34-19f2-41a1-8169-ca1ffa7e789a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41527307-8507-4d28-af6b-0215e583d5f6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c68ad3-3dbd-4df3-853d-082fb783cdc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8757f4ca-b32e-4769-93e5-ca01bf0b685c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f5098f-f254-4314-b722-3058efd52ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ac2d45b-4012-415a-9cc2-d3e2e89ef4ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ebe417-d4f9-440b-a2dc-41298926923d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee97f0b-560b-469d-8007-e32ecbe15abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df417535-a4b2-448d-94fd-fe575f536bef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a91e85b-f281-4df9-971e-f3a127ad611e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3f4bc42-ed27-4421-924f-8db41739fb45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c01aaaa-e3fc-4b08-97ce-fdbf4f450ef0",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53a4f33-a448-4ca4-a019-5962ffe73978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b1be2be-6bbd-4715-9717-1d2f50350440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce8aaa99-8314-4a26-9686-5954adee7ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9adae822-e92a-4105-b3e8-3621e8489495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "078cf3e8-a4c4-4fd1-bc08-58ce85873ef2",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bfd80ef-a008-46b2-9748-3ddaba19755c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c0109f7-d151-4910-8694-46401c8d240a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b96c9c1-c8ec-48da-8329-991e94642889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7dbeb54-124f-47c8-ad8a-458d966f2a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "727f32e8-d1c4-46f8-93e5-db9cf0a307bc",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f86aff-13f3-4f9f-9e93-f96a0c1c9801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c3009cf-1cb7-498c-bf73-89e196c6060c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee4b24a1-74df-4f58-9b44-5ff7e1e34500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "39a771d3-6276-4c15-bdfe-8aa3bfde5a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68fab5e5-dc3b-40c1-aa82-0817da890c45",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70eff89a-3a25-4535-9877-f6be1b310016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d78aa013-5ca0-40f4-a300-de521c951646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc2429d-ebc2-417c-a5e3-028b70335290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f2bf535-3c29-4055-a422-0117d919f0b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41b78b8c-08fa-45a3-baa1-d0e069598c3a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83ae9375-edf2-4f5c-a100-093bacd6658d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afbbc3b4-59a5-4b25-aa51-301b623306ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b217ab7-9430-4daa-95ea-3d140baeb48f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "48f4a74f-eb64-430b-9eec-d0dcd977592a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a163f037-d6d7-448d-a908-037a2f856ea5",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c978d2ac-506a-4b5e-8419-ffa4d43ac8d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab5ac5a5-26c4-467f-930b-617ae639738f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e79fc2-9b42-4486-9366-4c38a77848f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ba95be7-4d86-4731-bb38-4fcef621ef57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f20c7a9-aa2b-478b-a507-2fc25f8ab356",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "681adf89-9436-45f6-ac16-c22043ccff4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc407f3d-c532-4960-ac94-cc5ab57847ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0382fb1c-5f2a-4224-8f23-a050daa67c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6257bc4-2007-4719-9508-cb19fc5e716f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "028d0db0-f18a-4cee-a5b9-b5d796d3ffb3",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "199400c1-30ce-4443-89af-8e1ec5360a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5831b26c-a7aa-45da-ba5d-192018148831"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "117d06b4-742c-40f1-bede-cd3b24cd82b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fedf36b0-474f-4e67-bbd7-cf258af4f22a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c17bc10c-a298-4b48-9b65-f2733ae423a1",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12eb335d-a444-4e81-8168-aa2ef0ff4783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d42b836-3b98-47cc-8dbc-6d818f70099f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a73a0a-696c-4ffb-a7e6-28667aef7f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "91b9a589-78f1-4751-a444-18f670872521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "909ba417-9799-4e4c-bd14-68a6923b8ef6",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ff600f-3f81-4f39-a1ed-bb8852155600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc8cb864-f615-4078-8df3-d9f856dac62a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a11eb001-f6a3-4598-a85d-cad796ee6e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "82c05565-213f-40c1-8357-a67fa5103a49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e21f413-10cd-422f-b2f7-876375beb61b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b95bf6a7-bd80-4db2-980c-bc09658698c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9768b470-286a-4ddd-8594-dc9a6e5f7652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "818f00b3-08b8-4d3e-94a5-2a4a92b842d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "77026487-2269-42e5-af81-8381ea01f3c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f5ff51e-8f1c-4b24-87a1-9557a5eb4651",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce8e92e9-35fa-49d1-9812-a3d8ad84a78d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2485cce-f352-4ba5-b35f-5c5f2ba1d803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdfd1cea-fd4a-4e53-a0f5-5bde96706642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "23f8944d-31b1-43c2-963d-8a1cfc28947f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b24ed81-e012-492f-910b-8df32cbfaec5",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c8f843-61cb-4344-84db-d5f9507a4c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "369f40bf-4cfd-403b-b960-33b14adaa10a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd16e23-73b2-4850-be8a-839c1d9af1bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ed23745-c102-4b3e-860d-8753b9a2bdea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a93db4a-253a-4f58-9c1d-4f096f3d0ed7",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07543047-5356-4de8-bea6-175f97385610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35036eeb-d88a-4f97-8790-bc788405c528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7a405d-96a1-4749-b49c-7a151e48ef25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b51dcc5-0065-4e1b-9582-966de78cace3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31cbad7f-9ef6-48dc-828a-1757a2ca7bf4",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c3015c3-6eeb-46c0-a562-2cb4098935e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "207e2e9a-8480-4674-881c-2834e31dab7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ce2e285-f1d6-4f1b-97fc-d68fd1a333c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "24e8fbb6-0916-4e42-803c-37da1c4680c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e38c6cd-569e-42b4-ab33-b55e6ce7c8c6",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1749af9e-7b51-4715-8edc-5c5ecfb8b978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a24d9090-2e67-4c89-bfeb-93535b4c9fb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e88dc52-2263-4159-9985-1ce70c0fc764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c603916c-1885-4236-bcb4-cf98f22c7e28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1636e3ed-3dfe-45ce-a9ba-ae3e00a99cc5",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a13405ee-16fb-4021-b4d9-503fa06fc8cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d9e519a-d986-4694-8469-8b77977043fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c440570-06d5-4b5d-b9fd-718480762ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "31d851e3-3ff2-409c-80ee-01c211f8bd5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9fce7a3-c1f3-4f54-840e-d5f6b3f19f45",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b83a381-9e62-467e-9c0c-8fffbee1e9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c3cd4fb-6a36-4902-a4bc-e9b31b86c214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cefa1cf3-7bd3-4d64-b335-482d2f07ddf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dd29a48f-07ba-42e8-a576-0d824f36ed1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2eb9821-6df8-42b9-80c0-2e3ae43a4541",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7e6638a-ce71-40f4-bfbd-e0a9c40c1ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e802794-c140-4af8-95a4-cce996b66c2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab614fb-ff9e-41d1-ad9a-b43068a6bc45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "453f9bc8-5ddb-4b21-b7e8-909d459c2da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "843b7948-74e0-4803-be55-14b0c01f26ff",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a076fe-3b9a-4f23-84fa-32e58b5cf0bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c91fcb96-5e68-4419-be60-6f38b9ec6c89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d2f14a9-16de-47d4-9f7b-ba1dbe7391d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf5bba94-3056-4874-9214-900a7623bc5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "620da9de-8271-445c-887d-0a57455f9234",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b312b9-6045-48a1-8dcd-49d4fc25cc51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e359ea9b-7604-4058-b4bf-cefb5e34a500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e10277-266a-4ad2-a142-3d858b91fa57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b19d629-d42d-4059-89c7-1715375e5df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a30657-8633-4e02-be5d-b954eb880941",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf304a0-a39c-4ce7-b096-f5021d9020ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c2c1468-a601-4671-afb4-436e3a424655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33fc5729-853e-48e3-89e5-80d87fcef198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "01396991-1699-41b2-91ed-cad25e728018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b70e20cb-ec7e-42cf-bb16-596da9321c76",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec35e1a-976e-4abf-a4eb-675b541769fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54380383-f9c3-49e0-9d12-52df7f2082ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03c61d1c-fea0-4c14-8f4f-fa599ddc2585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "edbd4803-a171-437c-aff6-ca1fb40440e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fef25909-028a-4994-b5cf-aba5cf765c7c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55fbef69-c12b-4163-b2ce-d4f0581d29d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96c6f6c6-9682-4bb0-a24c-0eac90dbdb1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b39fab55-78f6-4ec1-84d2-c82055389fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc5ad333-148e-4921-b22e-d69285bca1c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec9f69dd-c025-4f50-afe5-ee05850bc5fa",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c09cc9-0b09-4cc8-8402-17dbbf19619f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b95ccef-4bf0-4724-8d87-553645532aad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "191979c6-5b41-491c-8277-6d3306773b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7360e86e-c6e1-45ab-814e-39234e92a3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cc220f5-47ba-4c0c-b894-20e944494eca",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2082fd4c-c425-4d0f-8e17-19566af4da46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "878c60fc-ac90-4675-9f5c-ac171c2a8dc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6949be0e-1f60-4f31-b1e4-00735b8ab553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6eeb7613-a736-4de3-a463-e6bb620830bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e2fae9-57e1-4ff4-b900-b02836ebb02e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c7fbef-f480-4554-aa77-3a9f3be10af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3b79965-0c77-4d03-8b83-44bd1f01ac07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df01b942-daf9-4b72-9e12-d8b46912e0a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2902dd49-8f82-412e-87ac-bf0eebd9c223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eff1241c-6dd8-423a-8af1-a04d12573c72",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c103f2c-a639-4052-8043-8b0c835bf394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5605d1d1-9dcc-4b17-82b6-e6a6cee99964"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca526421-9bd6-4cc3-9531-ad2c20d9cfba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4669786-8082-439f-8c23-df9a5dfd7c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dfcb351-ab35-4c87-a72b-73a4f9a443e1",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a24fcea0-cd0b-4c6e-8cb5-410d252552dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a3e769f-69ed-42aa-ae6b-75916154f733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd6d0ae8-b5b1-4bde-93a6-57e251a701ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "777c9b23-38d9-4123-98b2-8a97ac41310a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa68c449-dd0c-42fb-ac72-686d30bacab9",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9d14638-1c2d-4e3c-a647-00d12d96f6d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "079eccc8-97b5-4282-85df-f1a3c92f40b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a8fa69-dd84-4acd-b6c5-c1d6c18c4896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3443b53a-267b-482f-8134-8f6fdc0c5a7d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4d605de3-8e3f-4fda-8541-bb11ea19dbfd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0bcbf339-ec13-4081-9e96-3790d4750545",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd1bdc9d-7cc9-4d4b-aa4a-d1d2841062db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "61c4dce7-96c3-4239-a485-fe1429a53b13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c9956f5-71b2-44ce-b607-25a99a1d8045",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57a02cea-0110-428c-8c1e-743f64fd7245"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a87e8639-b975-482c-8ae0-e451dcd97d35",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd56ecbe-4d50-4b9d-bfac-49395f5cbb0b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cab57135-bf89-4cc5-b6b8-0c2a9c42277b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72437828-04e0-4495-bf00-ac107ef24577"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c83c2954-e721-4f92-ba18-fc79d0c75644",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9a4bf0e1-3d2f-4b83-bd4b-53a9bab5e096"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6b3e7bf6-56eb-4638-b0fc-2dd33ca3d59d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "80fa98ff-a802-4dbb-afac-15a11686aa6e"
                }
              }
            ]
          },
          {
            "id": "278bf6f2-9298-49fd-bd0d-c4167fba83de",
            "name": "Positive Testing",
            "item": [
              {
                "id": "14954bcf-84f8-4d6f-a180-a934c3d5ff58",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "b9ab9363-faef-4b98-b12d-6be7d6639242",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "194cae4e-8e34-44d7-95a3-4cbbda696e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1251de6e-02ce-4e56-a871-0e18070d5e53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4bf41d6-f6fa-422a-9294-a6eb3f8d88a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81373d5d-2c5e-4240-bdcf-40297898fe9d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e48e0347-00ea-4161-8eb3-e0e64ff8a54b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b62033a7-836e-467a-89bd-36313c09f813",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "65ea7cab-91d9-41db-a057-2490bc81cf9d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f4e92e2f-29b0-4625-a7ab-4dce81835a52",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f62ac4a4-5ea5-49a9-a3d5-00e1e3ac6c68"
                    }
                  }
                ]
              },
              {
                "id": "9d198a21-5e06-474b-a6da-62f6c2197fca",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ebc81ef3-1982-408e-9773-658e3e82a3bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "82310650-1780-4f4e-b1fd-0b69cbcd8c37"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6bf9fd3a-6ab0-4e83-8970-651436b2e89b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "72f030d7-824d-4eff-919b-948a3cee5df7"
                    }
                  }
                ]
              },
              {
                "id": "f9598be7-f6d4-4913-96b8-94ee2177cb57",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a3c1844-5dfb-41eb-9f39-11290f582734",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c6f3dbf6-577f-4c0e-928a-8f41da5f0784"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "10e15b60-e1d9-460f-bb15-accbcba81673",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ed7b6b80-bb2f-48e1-b703-aaf6bc8363a0"
                    }
                  }
                ]
              },
              {
                "id": "ece847aa-0160-475a-b5da-e83e4fe387b1",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "85456ac1-0363-4e6e-af0b-6e00ece620c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3a0de8c3-ac0a-432e-ab3f-0858e6c0f2c9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5a8896c-efc3-4eb6-8ab9-5db0f9099302",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "36da35f0-0954-46aa-9919-9f7e82c9e8f7"
                    }
                  }
                ]
              },
              {
                "id": "ed589af3-b60d-473e-8b03-92af272fd6d1",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cddafcaa-42a8-4a77-8f72-b03894fc6320",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "44310553-48db-4d2b-9eba-02e86942c064"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59b68072-0445-4d5c-a579-903dd83d0429",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c19aac3e-2d96-4fa0-b016-f2d36baec881"
                    }
                  }
                ]
              },
              {
                "id": "acb14e8e-b4df-4373-a587-213ce8ca04de",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c99b159e-b0a4-4265-a51c-bc995c19cff5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a482645a-9276-4ead-b01e-1219780f89c9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e1e9e09-2b25-453b-b5d7-d0fa2bc46078",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4a76ba84-b700-47c8-8fed-474020a02220"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f2c9236b-658f-4637-9bd7-4527e445169f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "55cc3750-b593-435e-909a-0e5c172a49a0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5c2f4e1b-cb69-4240-986a-b155fb88ea7d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "942a4123-101e-4d42-8937-ab726e1cab49"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6192062a-8aed-4880-bdfc-77e4840c62b2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7d4bd3ea-62b7-41cc-a560-c167ec95c846"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6d6dd1b2-bd0d-46b6-8874-f29fdc210cc4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0ed50ba8-8121-46bc-8ace-7ff3f06e4999"
            }
          }
        ]
      },
      {
        "id": "ac10bd09-6771-476f-889c-a5cb49ae83f1",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "43dcf337-46b8-4ee8-a251-c35f90d714c8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "31d69e9a-7880-4ec0-b8e3-d3dee5345545",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d505572e-839b-4c3d-b9e2-b07398ed344e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "199119d9-951b-43e5-9205-a000104e8414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b50b2a7-6e76-4775-9aa2-960c5d05bc13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31c1f8f2-8375-4be3-8a3b-23a04d0f83a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "deb62d95-1796-4136-a3e4-ea2089adb0f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72d40a3-de76-4893-a93e-9dd3673bbc56",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa6e4906-243d-4e3f-a58b-cb2b137b7440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45e274e0-e8ed-4c52-97d3-629407e10aab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c3dca6-c45a-42aa-bd9c-2ee5792c9a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4977a944-d128-4515-b0c9-5f3ea9e43cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12952700-8108-422b-8d44-1bf311d2cbff",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e20e189d-0d6e-4f05-b265-83673c3d7bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21099b59-8a9d-4f51-b385-ff683ac250cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a53cf163-a65a-41c0-91f4-d313e277e1ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9430c883-342a-4f68-a7f9-753e64249b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5999476-29e5-45db-be93-d1d593586370",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2df18de-fed2-48fd-8324-0d29f3a95707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01658317-1380-49a8-aeed-612de4784d02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "188bd381-9314-4aa6-8542-0cffed937a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b68249fc-bb08-458c-8ce7-a61f743abe74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afdb7e85-76f9-4d9f-a507-c06dc7c2998f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "375cbf34-a8e2-445e-81fc-e04eedb0e623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbf6a31d-630b-4c1a-8c61-09395cb3b3f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9831db8-926e-450d-be0b-8688517af66a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "034ef67e-8569-4568-ba18-c60921176020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c49f6ef5-87b7-4a17-9181-d5b85ee00aec",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc583b6f-bc98-4d9a-9ab1-9d022f616e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcd1482f-94af-4e3b-b5e9-e62f2e756828"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1279fdaa-20e3-4da4-be2d-107d55a54f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2a0a131-741a-4d4e-a19b-37a23bef1053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "921bf75d-1bc3-4a2d-9fd3-9e443d6057fb",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca8a23e-e9af-47c1-8f75-cbf27ac14187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12b04726-90a3-464b-b50d-6696f4a7aad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3984222-546b-427b-8fa7-da02ebce414a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7e9a353-0db2-4dc1-b4a3-eb72ac4f0cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21d15ff-991b-4951-a842-cd86b253cefd",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6a46f47-6460-43c5-9b47-55b395fdf64c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56be152b-0b02-4b4e-ab8e-59dbcce58d81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d97d15c-c368-45c7-8b96-7c7e05b20e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a5ec5ea-e148-487c-a711-be112a179377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3821684-f65a-4fd1-a820-a8c948863e1b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b23fd63-eb0b-4cc6-a274-bc74d9317431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a30c3213-fae6-4137-9138-d8a3ead8d84f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a3acde3-7454-4c68-b6a1-ef2cfb372c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c37353c-420d-4089-b9f0-a5504fffb98d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca38026-eada-492b-af4a-655bdd865b70",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dac4738-0ea5-4a42-9d30-52968d572332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aa24d0b-e186-42de-8cde-60507e9b683f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ad2327-2d84-41ed-8ca4-3a90b961b95c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e281e9a-7557-4256-bab7-bbcf789b4129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac5e072-19b6-4961-a370-8e3d8e6b4d69",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a6da3b-a993-4000-96fb-d749c1703bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7abadd79-6008-43bc-9617-088045a3a5f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e0e2fe-6f6d-4723-994a-694c5e0bd2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c1b19d63-feed-40ae-8ec9-3719187dc3d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "642fc9db-54ef-487e-996f-11a3627f8f46",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1594439c-cc58-48da-b587-0051d02e43f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2520a51e-3a7d-4834-a19d-d2a7bff10c44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c41d46-97a8-4262-a2fa-acaa954dc683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f25a4196-79e4-42ab-aa90-de961eef8d3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dea07ead-f058-4c25-ad08-a56ea7f9273c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fb7588c-61d9-4264-97b5-f21a9f1d0bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5ebc0fd-82b8-4cb4-bf67-54703a8c1074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8408c8b6-5a77-4db9-bfe6-76d31d4c9b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c89349cb-e65d-4081-be2b-7361b95eb059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "817d2420-9f82-4a36-b9b6-0ee0d345a96b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5376bd83-bdab-4007-ba0d-9bbaf291a91c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ccbae77-714b-45ab-9a45-b25ae53b1aca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d2a243-bec8-45ca-b5ad-97f92244be96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "297b161f-00a9-461e-9c93-ad32d195344b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bde91f77-99b5-4c57-8b15-ddc8d9c6fd4f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c2f8ba-efae-4667-ad75-a37cd0c83466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8ff7943-b263-46d1-9d65-50ae651e4d9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b08a4d-00bd-437b-84d5-5786a352b525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3038549b-963c-494b-a7ea-df5dabc8e6ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a59dafca-b4c7-42c3-8991-9ec52b05ca73",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4485336-1534-43eb-bfe6-1ffae1d9cd44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed67cd74-f0b8-473a-ad84-dc64f563ac2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "185f916d-f22d-4588-b9b4-1cceba9b5c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "64a19577-0d12-4902-9bba-6c328893b5fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ae5dae-ed1c-4527-bee9-da4eddbed0af",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7abc1b-9dc2-47e1-a829-08cb8e1277fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "635c376c-2db0-4828-b01b-ff9337632c10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b059799c-f534-4552-94b2-2458b56d637b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa1d87e2-05c8-4a3e-867b-4b227c867a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc405da2-e59a-4954-803e-0034a38df404",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69fa625d-65e6-4e20-b37c-868b85a35838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a8b2fdb-ec5d-4b39-a59e-fbe56a6a7ff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "505b2da5-7f0f-4ea2-8680-24dca30013cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "73c3ec72-4873-4c34-b826-a3a29befc9ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf749df-a6ea-444f-9225-8ac8a483dcd0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f894b3ca-4ac3-429a-b867-60b21870cdb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68331332-a065-4a7d-ba83-63bd21ee6575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed45f483-c719-428f-a063-d76844a16132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3423718e-9535-494f-a19e-321bb44029ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d12c46e4-b086-4d8e-9a67-a521ea615a3b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28755469-4389-4f1e-9976-99fa0a6343d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4d75896-317b-4aeb-9866-edf51bef05b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b69ed4-066d-46d3-b2c7-45815f93b9a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "acc7aeeb-252e-442a-9d07-eb1f8b27f288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d387ec-00e1-4764-94c3-6b46344d3e01",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7068a7-0c4e-4104-8666-79abbf3afc3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc9d9aa4-1fe8-48a9-b2c3-843f4722b223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97258424-bd1d-4ff9-9dcb-c0d22edbcfba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6066a28d-eccb-473c-9d51-c6d1d0ad2681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f0e063-00b8-4dec-9101-f51521abae37",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f72ba8cb-8dbd-4d1c-888b-5f566fcc376c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec1cfc30-f720-4aed-b623-a37f14c8adfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fda56ea-54e0-414f-9abe-371b5a548801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c8c428b-b148-4038-bf2e-cdd0f5cf52d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a791b6b0-9ccd-4c33-8ac0-aab1d5bb7af2",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3def50-fdeb-4073-88e9-9b3b606d63d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80b7ff3e-e412-45dd-a5b8-8e1e1a546ff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0357285-9488-4a12-8560-e63c45c004eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e7f80a2-f91a-4da1-a33f-484c96c6b940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e7a17ea-8c01-44f2-a7ba-c334e86cd722",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5292ea3e-4ce4-4a16-a328-18287cd7f333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "affe1c17-f924-4430-b4c2-857f5d5e75fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2495bf45-8f9c-41c2-a2e9-ec07c4467e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6dab24bc-52ad-46a0-8de2-96e443b0123a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ce85c5-4a6b-4331-88b3-ee4d518aaea9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9bd0e97-a336-4bcb-b632-472f3cccdf37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c7ebc2b-e44e-4523-990f-3ac1b808551c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "574a2cff-f56e-4a70-a78b-f0d6cd2cbe23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12bc04d6-7767-498e-92dc-c92cb3ca4fd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dba2e0f-2fc3-4b3a-acd1-5c226cb67eee",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e47e47de-7f57-45d7-a856-9e4809a3157d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee791ced-e4cb-4c6d-abc4-a70c75715cc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce15d5f9-4007-4dbe-a68b-e309b25b6d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "addc6dc4-184b-42f2-97e9-2f98ec0cd326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20a52f8-e9c2-4045-b7cd-f835ab88ef63",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05dc7e77-60bf-48fe-bce5-8ad451030f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d75bd6e-d6b4-44d5-aeb4-b1b622b61adc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27fe0c5-45bd-49b0-9ea9-6026ea2a60d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17a48e8a-8d88-46f4-8a51-c695b4ca3ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cc6e027-cbab-409b-843f-acb376263fe1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9028ffde-6297-4c7c-8c34-3bbe811cf17e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68b28b4c-7cd2-4dfe-b7e3-eb3da7850b35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9acb446a-d71f-40dc-a777-bf5291ba0513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "133a08f5-db21-4bd4-b6f5-a73379cf5a2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f595231-b5d8-4390-817f-64210fc0d119",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14fda95c-903c-400c-a171-6bc0ce0c2b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12888799-eaeb-4134-a773-ce77c3467c2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca87da1-e93f-4c59-8556-f4cc2b234caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64672bc2-27c7-41fb-b981-7ab70d8f8d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b71a61f-350e-48b5-a453-c5a8782788b6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "629b93f5-60d4-4a9a-87b5-da7d63abbd6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9b18612-dcd8-4413-abfb-d9d8ae9d2d9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8219858a-8dd1-482b-bdf5-415898ef4917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77c05772-304c-4282-b024-a1fb365f5f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb4f31f7-75f9-4cf4-8476-5551957576b3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78494fc9-ec8c-4455-8f33-33ec889324a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e7bdc7a-e796-4c04-a304-18c3e65690d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e33ee16-36b5-43c7-85dd-84a5083bd857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd415363-d3d9-4a52-8f7f-9f2016696159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8aac532-e77b-4135-8dd2-ef3d0d7ca7f4",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a25becc-75ed-40dc-ba2a-0652d2509a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e81a684-bdbf-478f-a225-20e544a43068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "850d5f74-ea98-4ebb-abe8-715621630efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25c00121-0749-4e59-ab9a-4015e1c19c09"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5e873e7e-04dd-412e-80da-adb347fc3e91",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "af4c6c49-a3ae-49ea-a98a-0833874c4b46",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "687104ac-b783-4f41-9e41-dbcfa1257e9d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3480a209-0bee-4ab5-a4d9-5c65344039d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b9128be-c3af-4d7d-8a89-ec67470de137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ecce7cee-4ded-4fce-acbf-b9a89df6233a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26532356-c534-4c9e-948d-dd69a96cc818",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d0e3ffc-d955-4854-9acd-bd9ede0f9326"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "067a9bdc-a06d-4510-b9d0-1994c64400df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32626c9c-44f3-4a18-be25-6ebded664189"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "40679334-9f2f-4313-9be2-aea8f6320e88",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "11b8fc6c-7dfa-4b0a-886a-5bcdf62c07dc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7a6902d4-3a30-4490-ab5d-207c1b5e75ed",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bce9d943-409e-4e6f-ae24-8260f7819f11"
            }
          }
        ]
      },
      {
        "id": "c3397241-9fd2-4162-a416-ba3984a929d0",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "2ad978f7-ec1f-40b7-9191-927909e079fa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "66fff3cb-1e4d-499f-b637-f32472281431",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e90b22fc-334d-48c3-af9d-d213b7d7aab5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "185463eb-30bd-4bbc-982d-5370199f3945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45c9b0c6-32c6-4e8d-bca1-e4e9174af52a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a33caa-28d8-47ea-be10-310971c5dbab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d714a75-a927-4fb4-881f-6ce6ad8d33d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e38d0124-c50a-4554-a26a-413a9daa95ca",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5581ab8a-aaf3-46fa-88ad-0ccb1491978e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2801d5f0-deef-4ed3-bd9e-0b5f583c0604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17194599-484d-4368-b891-4d0a804e8cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d42c7e04-de98-4fc5-a3c1-410d555af885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64780dcb-7009-4ce8-a3ee-7e0603bbb723",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0432d350-9de1-416e-b95f-78a597f75438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a56304b1-1c8c-4563-9d57-523c2ba9675a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f7ce17-3a09-4f2c-b76c-fb13b921c9d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "36fc7d7e-bc5c-4834-a714-bf4d541e1a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e322eab-7931-4a88-8453-77955894b1a2",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15fb12e8-deb6-4436-bdd8-1f156064c5c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feea0d6a-9773-43d8-a9ce-e8f5e4ed821b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5117c556-01c2-4774-8e9d-f47df41061c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "22685666-3582-47c9-ba17-b7ae76fb9162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8748d3eb-f06d-4233-86d9-2d441ed3d752",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34aca0a0-0104-424a-a03b-e79a668182b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1c5c330-cd27-4715-86eb-824580ea5669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abfa7078-831d-4372-921b-ac99235f9c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed1568fd-cff8-4bd5-a0ca-68ddf3031017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce92e42-c58a-4a13-bd00-85ef3a93ba51",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b3bad5-59bc-4414-9a6b-5b5a4d89cf9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5893f8cc-f496-4abc-87b0-e8091ee8f7f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077b8529-b87c-4052-8a28-08e262d6ab1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "34a4bc63-b888-46bc-a105-79755a06276e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "905be741-b715-4c84-b38d-9bae0fc4fa0b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55364331-023b-4897-a5de-ee6e0ec5e14c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59ec2b0a-9b57-4f8a-bb39-10e50b296d41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8bfd7f-317b-4e2a-a201-448d84f84581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "91cdd0df-0201-4f04-b5f5-318b645293ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5265819f-3a0f-421d-a65c-be34b2e17045",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3721d71f-4ed3-456e-a0e6-e65f52a47aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ecd0cc4-c10b-4257-9470-8ea3ccdccfe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c61a40c-a6d0-4f9f-b0d3-ce87943b951f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab901c65-a769-4b85-8986-bd12e897c323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb8bb918-d820-466d-8cb5-b2c72a2750a1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f062466c-6752-451c-9168-407fb56d885f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8916ed2c-4447-4ff2-a0ef-7c75a1a7653e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93302279-acc7-460e-a69b-d4027c658b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fabe3f5a-3c41-4df4-98c3-837e1c1d60c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "456cbe9c-54c8-412f-b16f-19db043cb598",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5718bfb2-43bf-41d6-b164-1cdfc97da3fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5628348d-a0ee-4520-89ac-75484213df38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f96874a-0545-4a34-8d65-369b582b35bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0f15fc2-f48c-4565-9f3c-43c04513ea12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbce735f-02f1-4af7-a7c6-6edae8c81d12",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c992699c-4e95-4fa7-8b92-d2467030b2aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29873a2e-da5a-4c4b-b466-71af18fbfed8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ec555c-5800-4e86-856c-1321a344be99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e46c1b21-3fad-4718-9eeb-52e3f813ccf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63119f33-1303-498f-9402-d25ce9db5690",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6380b3f8-30f9-489b-bc0d-4592abe8ee77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dc91544-434f-4b1b-b388-36306f65ff9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e36165f-2be6-43b4-8b05-9cb3b47f96f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4bc64d0b-5557-4668-ac62-207e86787f78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c37d92a5-7717-4671-8a8a-ea8b3d90b915",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e38db9-3f22-4fbf-84f5-04feb337d8e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37d0b136-5622-49e6-bb6a-aba7b62671a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ef5e70-e398-40b5-bd47-cd0780e4c27f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bb1d93f-13e5-4eb1-87dd-4e1c289a42ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "756c1602-f5d6-4caa-a452-a0c425c89a1c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "effcefda-bb80-4690-9eb0-c8fd1e2ebe42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5ab0533-587c-4640-9b52-8f48b994a77c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae55fd4-6480-4c0d-a0e5-214ed009c103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b374086-84d2-496d-be39-11d86f5532b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13b3545f-be58-49f7-9387-0fa1ab9459b5",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6da180-c98b-46f7-be76-e73478b766e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "333ffe22-1401-4411-9d64-438681edf129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73317e89-ce83-4601-807b-b20592b5bbd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "610b0363-187e-4ee7-9395-7ccb01aa7753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd70e41-926f-45a2-baff-2c4ac27b752a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eaba807-94a8-4d60-8d77-2525ffe169b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34f62c18-e658-46e9-b637-0452890e0415"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcbf007f-43b5-4054-ab94-ea26feb27c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c91b1f1-e6ac-4f32-86b5-dd26f3758993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364f9639-84d1-42fa-ab25-be8df3c23bb3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47bc00ae-4c38-4d22-ae1d-95413a61b74d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ab08f0a-627b-4d15-b131-31389edfcf2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c0c5e5-f480-49cb-b21e-f1b4510e1242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0241ac02-ae6b-4b0b-97aa-80a6ebf72512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "084b3041-0152-44ff-9dfe-260a18129a2a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32eea4a0-aa5a-44af-984f-0fab6bc6b7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26203dc9-8280-48a4-860c-1896935acc1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4efa7c33-4b9b-4d6e-8932-5f9baa4b9890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "780c3467-4e80-4b49-9077-eabe52ee3eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "801cca9a-9363-4172-996a-55ca324c8c29",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e31c18-0f1c-4518-b458-10cd423a9808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e42a1aa8-3de4-4af3-8f89-393d5cf5f8c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "117d8931-d474-4017-9ce9-c0707a3addfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7884c05-b7c4-4eac-99e1-0e224fff6c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d3a0d0-9401-4125-acb0-1fa329fdb599",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f56c163f-536d-4d32-8ade-2fc35c026647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f61eaeee-edac-477c-92e0-55ee4bc262cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d5303d-da82-430d-b349-b69b6a578a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fab2f2d3-f728-40b3-8cf6-8bb7a27f0f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "613b599f-cfb5-450e-90e7-4f4252db4c1c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7982262d-0b54-436f-9268-bed3b1782b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09241044-7b8d-4885-a894-75a71cd564d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9644fa0b-80df-4325-b759-f6ce9a7f1f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb98968a-be1e-4c85-b40a-214d0074e8a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e70d474a-56c0-4b3e-aae6-e1218b21fca6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e4a36ae-4717-4ceb-aad5-2a427d2f0b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0626cc3-c2c2-401f-9da3-3af1e91729fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f89310c-9e6c-47d6-8b5b-7a5819c6501a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c704da2-3602-424a-a35f-312e809ff428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e45889-7999-4189-aa15-05d3eedd7d7f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8925f329-ece5-4de5-81c0-6cfdf81d902d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "789941ab-9ba8-4b33-a0f1-6a1374184190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f6b020-c49c-4572-a5fc-bca7cc4be131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dfc55f5-0648-4b36-aea4-45ac8326d6a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9377fdb-2114-411a-b0b8-6d86a7daf5c1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d81750c-27c9-4dd9-967b-f43b3d584a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e1889bc-36b2-44ce-8054-00351ec0c689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc462a9b-34f4-47c4-8c88-a94f36634fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b35de22-5e40-40f8-8404-5da9ef4a449e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c06023f7-85ea-48ef-9138-439ee80619f3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f9dc12-5e36-47d2-9fc8-1f0c748bfffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16077275-7b7c-43ed-81c1-b446338bccfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a3758f-705b-454a-99ec-3c11676db7ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a575367e-357f-4029-bf1a-aa2ac4864b57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87bfbba7-3e36-4002-a311-4d60374afe18",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd379d5-6f19-4446-9d68-1219152f7d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f09d0e3-ce15-46c8-98e0-2cae8f4958c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2afb2df5-d114-432c-b39d-2ae8b6770902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "815a6a53-6822-439d-b360-ce58c4d31fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6729eb71-63eb-4e8a-96a9-d2517c5bf779",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "761a9bbb-4007-4ab2-a547-f70e5f2c1f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c27eb81-9a1c-4e58-aea8-0effb1bf5f91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6caf1775-adb2-49a8-bd35-389dd0fdc112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "694617c7-adbf-4b37-9a90-ca842ef48e2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "311f57af-4e04-4e4d-b36d-52240f96a03a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7739ac-1bc1-446d-8a30-f534cf0f463a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d140dae3-9652-4a49-bfcd-8868877566db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a4d8d62-f67e-4e8a-9ad8-ed43d5150966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7729abcc-e00c-4fca-ae08-d2aa23a01759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20e788ac-1aee-4b3f-bd22-546b3ac7e960",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64999e5d-33c8-422c-8c9d-eb66f8472076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "350f1988-0cb2-49a0-9329-5e4e6f4e3b55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7755c0d-d819-4170-9325-642395323e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d4ce4f9-465f-4ad8-95be-15a9ca6eded2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e211aaa-2058-4e55-afa2-7282955e9899",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "312774ed-7b54-471a-b4a5-0b6f8e018976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb068f7c-09e9-4c6c-92b5-bfeb51e10542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfaeec08-f68e-4092-a9d6-29a3ee0a4b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0b6e0e7-6fc1-4b80-865d-ab5b61c98ed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71bcb5a2-5e59-4287-81c9-95f1c7a54ad1",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd73e631-e0f5-48e5-a78d-7d3782deb60b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fdf0dec-694d-4f44-a68b-0ebc7c06ecb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fba6280-87dd-4e2a-9be3-f3d9a9cad745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82b34e4e-0b45-4fca-923a-c7a8d744bc3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8765953f-3c75-474f-b825-18f75b356e2f",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2140022a-2164-4c3e-86fc-4466f6b373b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4d9b766-35ba-4b31-9dcc-996d51128e23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a37e75e-5a1b-428e-b655-e3e7ab69d092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b832af9-a947-4566-b8e3-27fcf41d2757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37cb8ead-7974-411c-8d87-e7c127cb586f",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2318ea35-69eb-4602-ae6b-fc33e6ccc90c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c179082f-c627-4553-8fe1-de41fc1b5375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab0b4271-0d10-43b5-9c59-b60a0b192899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27399d6f-d7ad-4cc6-95b2-07ba7877635b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d0f3450-c6e1-45fe-a7a0-f69c40ce9ec7",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d01b6d75-7277-4351-a5ef-24e02c777fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e31b988-be74-4970-8a5d-5e5ab3652b01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b919667-f752-40f2-aec5-8a0036369432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bd6e253-d0c8-4729-bc5e-970646c89d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc2089f6-132b-4eed-aa98-28ee308c4cb6",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba52738-0e13-4015-9889-cb37bbc66d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8259d751-4604-4b88-8412-6e685fb1160a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b535a03-c505-46f2-a5b6-097038f974f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a7a5e43-241e-470f-a586-bd5a03efe876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8b5ff2-2366-4be0-a5b4-24efa8dff425",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2778f38-6908-4301-87ab-e79da7713446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5123b255-8f76-4108-aac0-30d1edf83fc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff35a2c8-4df8-4986-b1e9-3d90cc795b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0544351-c449-4063-afb3-2876b91e78d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a2df75b-d618-463b-99b8-c7c1f3bf2d63",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d551d9db-7136-4075-87ff-e58cb8e9256a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3657e3a2-2d5e-4a18-b3ff-93512fa29ed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27bddf9e-226f-4c6c-8797-65eb8b6624bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85fb0716-571f-4f09-8edc-cd274c1a5c2e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "68c2db6d-32cc-4c50-a475-03e51722cf09",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "acd36b1e-a068-4d63-b9ef-f740e091ff0e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3855956d-0f9f-4cb5-8056-c8698fd99330",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "61285dde-a834-49d4-9e64-a743ee8cf649"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1edf4d-4a40-465f-99be-de560c3bf15f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aada42c3-f1d5-4248-bd32-06cf8f249cf6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "810ad40d-781d-4e2d-91c7-755a62f4b062",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d9926fe-c1b6-48e9-8e78-cbb4ffb55958"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f3ba1c44-d3ee-449b-b2e6-a444db579940",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "11313525-96ee-49b7-965e-2f4a0e3d9436"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7c191f09-080d-4442-9684-c2ee317d0e46",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "86da304a-2c34-4e94-a215-3b09258c74b9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "13527559-035d-4a9e-8475-3dfc17e296dd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eb489adf-b8b2-45b8-a915-525f1649d995"
            }
          }
        ]
      },
      {
        "id": "69a3c079-0136-445f-946f-e6282c672c8b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e5d330ff-8787-4dd6-a45c-385251ab8b0f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "11238efb-8b3e-47ae-a711-8e9683523a03",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "414efbd8-45f4-4dea-a315-4599ae7fcf6a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45aba5c2-61de-4235-9d57-080672a80e12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff500b0e-2f3b-426d-9e07-41ee3bfd9908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a34051f-d4a0-4df7-9752-2a62553dfef6",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5495faa4-f321-4992-a7d9-215d54b0c99e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ed6055a-a92a-4cdf-9529-210e4cb00631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "056f09d6-89b1-484f-833c-13f325bcaef9",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8952dad-b974-43e0-81c4-e8425c1e9d37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e14af0be-ac29-46c5-859b-1f55b15af535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a955b68-0374-4990-bb82-a71c6ad5cc89",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "164737b2-d0b3-4124-8119-b05c88799632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f58cb35-70a8-4300-ab93-4020dd941117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46817bd8-87d6-4dd8-96c5-132e69e43925",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fafe4b3-7f3f-43bb-89c2-c3e63850caa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "500b7a18-caba-442f-9533-b57d526d3d97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7555d8e1-2e3f-4dfa-89ec-44801df932ba",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "622d3258-a8e7-4b03-a94a-42f14444a18e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27cb73dc-0a01-4c52-9766-9375cbd59c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd5408ea-6869-4977-83e9-49fbb35af6b6",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc58b21-fe95-45bb-b44c-822d3a55c966",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b1cefa2-013d-4e04-8bd2-f1e595a57993"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18703484-3080-45c1-a7aa-ad8897c14d73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46be534c-a7dd-4d1e-b88c-74efbb2c8442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6410d14d-7341-4398-9633-ff62a851250e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c444f1-3fe5-4160-b169-0f8e1d5ab1c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95c70cdc-9be4-4e35-97b9-1b397409cef6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "addb658d-6369-457a-8773-982b3e75148c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a41c96ae-9846-45fc-be5b-3a48125b05a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e92a902a-ee57-4066-8adb-370c84aed91b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "481a0237-fc63-461a-81a4-94e894516451",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d542d7a9-0402-47e7-b7c3-abd39654914c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0801533e-227f-46f4-897f-b9b2f41f184f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77d50182-68f7-46f8-bd96-39026b80d259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd1570f-ad5e-4d18-8fe6-0e634b0c5739",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d706093e-4219-4b4f-82cc-fa6aade7bf9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b033ff03-18dd-45d8-b95d-1ee25fd6f00e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a06c1cea-18d1-41b7-b8f0-ef047cf67bd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e1a7915-8e1e-463c-95c1-fadf55cfd229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04bf316f-e427-4b3e-a3af-ed5f55490e84",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f04934dd-3e22-4a59-9605-1c1f81c978d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66137705-fc51-451c-ab59-a2d40649d1b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3392885e-f1c1-41f6-b6cd-f5292cf229d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41e9d700-c606-403d-b5f7-560bbd412cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b2deb17-f0c1-4626-b496-8f5a2fe45bb1",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c100330-c4df-45ae-8e18-cd3ce889b549",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e12d466c-84e2-4076-9cf7-b0b072162c0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac62491-6ec1-4122-8099-8cbe98586a22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a421114-8afb-4bfd-b045-6fce836ba5b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "247d0c00-e766-40f5-b6e6-d94f2447fdb3",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e85e5b-2f4e-4bb8-affc-71e2dcaed8aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fd73b7c-d849-46d2-9b59-8020db2d12dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34f5b18f-be50-4c9e-b986-e999d030522d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2573a151-3837-4003-90e3-ab1aae7d227d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1004566-4ef0-42a8-9e24-2bf7492f1b81",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb946f86-fce6-4f70-a9bd-362701435dd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29bd7695-6172-44d1-b424-aa5eb6b08604"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba0bf21-4038-4700-9016-c398d271ea1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14140e43-7516-4a4d-b2e0-aad55421642b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a2b7456-1c23-4928-b635-5d141f9adc2c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "975f7924-0940-4cd1-ad39-eaa6b6bbeff4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4802f032-0f7f-4070-bdbb-29c2743c8e12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd07f5e0-08b4-4154-a081-14d68a327484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43696bee-e3cd-43f9-94c5-f27c8448df25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23976fca-8fd9-4de0-a8ea-4a34f31d7386",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e29d8c4a-e4a8-456c-9a8e-d352575f9042",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "941853fe-9a8c-4374-bb71-154faede1bbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a804f407-b0be-4b7c-8a28-0be08003df47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d72e763-e4c9-44b8-858c-0591fe72e5dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bad913b-529f-4113-9498-208d5735f27b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be1ae947-d59e-4763-a640-9e94180a4c2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c6a711d-4092-4790-8986-b12f4baba89e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1149184b-782b-4d28-ac63-8a1f2984e0a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0557c382-8794-4706-9202-3e0bfcbd5af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf0f5237-422d-4877-932f-f7f4fa7efce4",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5713d2f4-75c2-430e-bfcf-698f6f110f4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f116cd5-5595-4878-9c8e-58063dcd5392"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7b249fb-847e-40bd-b8ab-30c2875e5a3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa99a3c9-8977-46df-98e3-743f04bda1d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60606881-0272-41c7-8f2e-d41e65ed6b72",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e872b7f9-eb47-48bf-848b-8a3ea05b09d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09ead3fc-2a79-479b-86c4-89bb9751aff1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66cefd8c-f161-4885-9d29-14a740a7102b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5952ff3-4984-4bc9-8f68-2596f1bfd4a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1754503a-f2d4-442b-ab0a-d2fb84b14926",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9803d6f5-72cd-4a00-9e43-6adcc39ee6a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebc2891c-84fa-4932-82bb-e58457b384af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77da477e-cfdd-4883-a80b-e1181f0d09c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d98b78ac-be1b-4d2d-b09f-c132905dcbdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca14e65-28e3-4b53-8212-48990f9b6d55",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fef57bfe-540a-4aaf-aa43-0d1b0adbf3d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b8f011f-e485-4041-8d15-cb9a980b2bec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3054578-4b10-4a69-b8e6-92d1409350ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c59901e9-95de-4b3f-bee2-baf891cd5248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e68e18-3279-457a-993c-aaf0b1d08309",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4004581-e792-43a1-9f85-4fab4da969c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19543507-12a7-4905-9240-4968cdcbe85b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1b1c32-eb40-4671-b0c3-a035eb9c241f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54826f34-094d-4110-8eff-b91901ab44f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5cd8df4-5f14-4f99-8037-a077151599a9",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d21c48e-2ec0-4d4c-8358-62af74dbd0cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d26dd5a-094a-41a4-bca2-f706b3845d52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "598a8ad1-51d4-4261-a2e2-e6fc1e1d9c85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "180fb3a3-2a1c-4409-84ca-0da0f44314be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2faad1b-84b9-43fe-86cb-7d912b4b0391",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc684ab-e4ec-45cf-b497-8398075802c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "457cbbde-fcbe-4b2f-a32b-52ec009955ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f36ddae6-a323-4b75-88bf-b6ad83644fef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a1c793b-e54d-4fec-9c33-64bceb5eaef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39cb8adb-b545-48d7-90cd-23343ae024ad",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5b904e4-d938-421b-8fb0-f047d2a807b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ad0a763-a510-4c90-800d-f3dcb8357fb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "824876c5-5229-4690-a4ab-9520a0354278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f447bf49-982e-4170-a771-130f5ff7819d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "232c5e26-086b-4e04-ad39-213d94758c14",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee2cd83c-4197-4dfd-ab5a-3bcc0e41b216",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b53529f-61d9-4c3a-97c6-13684a78f196"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b21710b-2204-44a7-b47f-c9f08b2201ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cdf37b8-97df-4d49-bb0d-49d654ff9ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29cb0fc7-7e4d-46cc-bb45-b109634d871c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7367f644-fb89-43fc-ad95-3def0b2ca595",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "227cec43-c53c-42c6-a6b1-ba15f927d1df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b486fe47-a3b7-410f-9d28-4452970823b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93253544-ed8a-4bd0-9cab-0bc25244b31f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8909d376-72b3-41b5-9098-4b10ab038f76",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb9ae117-c9d1-487f-ba73-fe7d4174b44f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c28c5b83-8dea-468b-bb2f-dad00868bf2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7825dcd8-0cd0-433a-9a9d-84a02b0042f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "986785a7-9f3f-410b-84f9-342b4e3994cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a16562-5a22-4214-a54c-2ff3eaaf6880",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe8697ba-e024-42e0-a11a-1d96c7a91f9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9102acf4-c701-4399-9c6c-f819fade2c5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4091900-860e-4beb-b0b8-5ec02aff483f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47f4167b-f55a-4ef9-9ebb-cf14f0b6201d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b92733-eead-4577-b0c9-ee427070abbe",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d49fc6e4-c3e7-41ad-b145-f206c414a9f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "779af66e-cf9b-402a-94e1-c93f08c56887"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e670abd-7974-4059-b27c-06ea97bac11b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4a61f6d-70bd-42a5-a46e-3167909be626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7616892-17f2-406d-86e8-4e8298503d2f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda6953e-4844-4c74-a4e9-99e0482127f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84dbd323-b91e-43c4-ab93-a1187c8f15ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba59775-0449-45ad-aeeb-2381f6632aae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7359de9-5d74-4e3f-8574-20afdf541429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed0cd22-9b24-4b32-a4ae-6524648026ba",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc6b30d0-6c8c-42b6-ae00-e16239db9445",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6535e9f1-4b69-4e7b-9379-f7ae17c6e195"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "112386df-c9f3-45b7-a2d9-f9f749c239e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28a1e092-9b6a-4d79-8ca0-b1a79c7bb8a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fedda4ad-b6c1-4530-801e-825c5060eca9",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8209e46b-b02f-40bf-93ee-057c28439352",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63cdc533-085a-4e90-9c75-cba66a7ee5f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7668653-f45c-4f2b-a870-24f97584b578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72d1e2a4-1c31-48d2-a74f-a837b2bf6336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dae21b45-ae89-40fa-ad6c-a0d99468c2e6",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c99b9b79-2744-4e75-b1f3-ecceaf6ce28b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6baf308e-d477-461a-bf98-53546e2a487b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c97197e-abb7-4041-a3ab-31add3bdec7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed32081f-f9ce-494e-affb-797ae4bf3ebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c23739d-c9d0-4cbb-9a09-0f33d6319561",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a40c46-3961-4698-8e4d-73a46e2fb67b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79b268b0-894a-4c5b-ae00-ff3dea71adff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "233fc5f5-a24c-44b5-b44b-0bfda3227906",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee65a5a4-8890-4135-81d9-b335af302b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b6ac42e-61cf-44bc-b43f-e0ff40b10944",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aff5760-f37c-43b3-b7c1-eb05e35b2bca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec72f94e-9b1e-469b-8b11-21402dc2604b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54737aac-0a66-420a-b48d-ea60922f3dd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df2a1ddb-53ed-49e0-9950-018f37c37493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795142f6-2b24-4080-9bc0-b6c186df375b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f378bf57-bbd3-4c9a-9c21-350086814cb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97207515-b9bf-4b7c-8bfa-88ed2ac3fa09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f47cf9-2cb3-4837-8187-0b57995d32b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e41240d1-77a0-413c-8712-0e25bfaac053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d1cdd03-86d6-463d-be0f-c068ad11144a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b44add9-e52b-40c1-90ad-60b679a379cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a126f6ef-b0ed-49e3-ae5c-35109b434672"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a6b39e-ca7b-4f55-941f-36e42c9a6401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e99f8e1-6137-4309-8021-432125fa88c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1202a38-1961-4fd2-adb9-65e6f5e62605",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e408250-9c52-43bd-a597-c7d5ac211ecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8accffba-dcf5-455b-a357-3acf4e075055"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "285636d2-d803-45d3-a52e-fcc25fd0394e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42548471-7449-4ed6-a663-44d2638cd165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2524bff3-95f9-4b44-9f5d-8a6e7ff51a52",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be06b2f-787b-4a88-a68b-12a61aff21ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ff7df4b-cef8-4cb9-8d7b-7432a2bd1311"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32645420-b54c-48f9-95b8-ea1fcfff9652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1397ce73-5786-4d7f-a230-1c1b72aa0494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a44936-5a0a-48b0-8f78-ae31d6af50c0",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "371e7fe8-c57a-4750-9a0e-38d537bb3f00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85200dc2-2d51-4e76-81b4-6e5b8d84d051"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa32a98-725c-4d7f-b649-99320a725d2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9a34c7a-6196-4c18-a446-7749ac6c0a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80a045fc-45db-4a81-8d53-835e9985a944",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d0c7512-a532-4ec1-946b-8e0b8769c75c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b7859a7-6176-49a9-b73b-ebfa7c5107b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a8ac28-c8e1-473a-b307-bd104b0ad91d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06c7c2e1-c452-4c87-975f-faf6841d066e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0eded05-d804-48c1-8a78-1da9a07e723c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2478361a-1fd7-4e54-893d-243244d80175",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7a99f2f-22a8-446d-8931-bdb2e9d3534b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3766f752-1339-46d0-b32f-018a0df9b24d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cb31c6d-a00e-43b4-bf26-1cb962ada060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc241cd-b8af-4e39-aa8d-fa8b7d643271",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26aad4db-a6e4-4458-8332-1ff266fc9289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88a49c9b-2222-497d-b6aa-a353ddf7af4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cced2a14-98e5-4ec9-ad80-21db6a6cb970",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fde42f7f-59ca-4fda-b468-1ab9ad58d9ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de26d60a-c3c9-43a0-9c92-9ad163819670",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87f7a893-2540-49cb-bb3e-2ca8db3d554a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a702d44-aa0e-4335-8e77-1dd7d618b71a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba376fa-1b35-45d3-8b5e-4fc62e60a81a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b930d2b3-da86-4087-a9a9-ee2f208e8988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec7ecb4-5675-4f44-a01c-c32ba0fce79d",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc024bd-322f-4c0a-b203-515420e68c86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aa1102b-0d07-43d8-a666-255dd836251a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70415110-f1f4-4ef4-8670-f14e5a10251f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5eba4c2-bcb5-449a-b219-c2c0ad3dbded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4abb26c2-b9e4-4666-9403-aecd72df154c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "648ba378-deb9-4ab2-8dc7-e01db27fc240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf55ab17-c2a5-45e6-a1ec-fa14afc9e362"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9afd1cf5-b46d-4705-91fe-cbe5b366123a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdf27f66-3d0f-4117-9942-94a534c4567a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f8873ff-b2af-46ff-bd01-071bc29463a8",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f8b724-fb40-4bed-9f18-82e206a9952e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "021c03f8-94f0-44a9-a137-2039721dad72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef03dcb-805f-48af-99a2-e2cd6b11705e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b8def02-7a25-43ab-8110-dfc91aa55636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a92e82-de2e-4711-8c3c-b72b248bd4d9",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f798775-d536-4297-9018-ad2eadb9bdfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ddea276-100b-475c-b1d7-2b6484020362"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "980349b0-9c79-4d6b-9cf2-a2ca65db2a69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c99e8a49-f107-4704-8134-5c33d4a00f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ecca51-ebbc-49aa-b9d9-46bf1604e204",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1534ad15-60b7-485f-b898-91d9f5cee1b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b609ddf7-7573-47d2-a0dd-7f4ab6ff02b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "712e4d49-e95b-4536-ae16-ac84aad7265f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b00653d8-9a35-4df6-b24e-f2368b93d557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93470e5a-fd54-4739-859e-fadf5d8b9a2a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37feae67-ebf7-4b89-9493-beb800a5fffd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97d74106-a8d4-4733-a1f1-eca19027d642"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db75f17-f1cc-4a65-9cc2-cc0d604eb1d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "428d2f19-df38-4667-8c6a-3801d2dba079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce049965-f141-4327-84e1-6f5f84962302",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e76f91dd-fd58-4733-8b65-a2ff74cd5337",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec65656d-ec4b-465e-b226-38225795d9eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8722195-a3fc-4db3-a430-63f3c65273cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4e60d81-d293-43a3-a9d2-2055c58f0c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea4b66c3-789b-41f8-bcbe-267fdb65e874",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80206a57-a371-497d-837a-00bd7b9f938f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07d00cdb-4bb9-4c15-a511-6b4eded54eef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33828f50-263f-47c0-97d5-7c977ea6d6ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29f3694d-261a-46b8-a18f-b5ab9a5c30c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "547e0971-9a04-48f6-8590-6af121e15b98",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2416a9b1-dd87-4642-b9c2-72bcba5e818b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6afebd27-20ab-49d0-944b-8df9fe51cb56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e03c5631-5d57-4524-a9c5-1b55c896eeba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3d38827-fc8c-43e8-94f5-3afe34dc8a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dabbb30c-3673-4ebc-a6c6-949b323be38a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "826ca959-5058-4bb3-9394-a843f5fd8dfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "316f727f-5f33-41c2-acbc-82625cbd8b43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5131327-5f7f-47dc-b2ee-c03ef250ff71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bde675ed-7a2b-4735-bb98-1725afc9eae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2741ddcf-164e-417e-9a6a-231019246edd",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa21f86a-c858-46bf-8ac1-ee5ac02a0615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b68dd86-5dce-4ada-9556-668e8bd957a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25f3022-a7da-4e12-b206-f99f5db4ac7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b26880d8-ef23-429d-b806-d7f6a7ccb39b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ba38ba2-d2d7-45e9-ad82-9708a4591f9d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e39c5e38-8363-4503-9b10-005fa2467fba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7f67c78-8f42-4f13-94e3-4d72b0b780d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee71356-fac3-494b-8d49-f53e4d585db6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "325a73d1-5a82-49a5-a727-02767a9267cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57dcbe5c-e477-4df9-91c8-3b475b4c516c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "862dfeef-3d72-4907-9b77-922e4b72eb7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f98b6729-4056-45e7-bd51-797264f67c5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3157438-c04c-49b2-949d-54cc1020e8ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44ef6b13-33b9-4472-8fcf-c8b5b4ab7c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e6266ee-0ab1-449a-9e01-d4b22066383e",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acaf393f-2d9c-4bdd-92a9-9fc06ebec59f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27f84b6e-bc52-4031-b95a-82a94a650361"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc4f3986-eedc-4e27-9288-70c9aa10757a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d87834ab-a8bd-44a9-80bb-d2946a9be31e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f7f543-6aa0-4df4-b5c3-3ab324e338e2",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e9f7ca-1c6a-48f3-ae17-0c9f2416e82a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94a98649-0b86-4f5c-8ea2-f7fc58f5dfa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf85756-8910-48fe-83d6-699ac18e9a6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "538ebdc0-01df-4739-af62-69d3e96c192f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd24d69-d462-415e-910e-82055172a74e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e66939b-773b-49cc-8f6c-6d000c26fc82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "562dd980-e33a-421f-9bfe-60e5d72f8476"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3abddedd-ee3a-443c-8e2f-0e2ad6da7937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c46e6499-7238-44b6-856c-e4cfc93876fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa0a73e-1e9a-4610-8298-c0a98f98b760",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a74d85-fc28-49fd-99ea-59e80aa3298e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0402ce8e-095a-4ad0-bcd5-4afac12430f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba146a70-4768-4c1d-a599-10c3db22a64b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6656bf40-3a65-450e-b1cf-be1678bc2571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6e5b5b3-a21b-44fb-8009-afa5a4d3be33",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "560394d3-02b8-44bd-9439-9d61c63d9d8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aec780e0-f9d0-495d-856a-0e3fad9b84d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f6272c2-f037-401f-ae58-cc575e836c95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6d158ba-3362-48ef-991d-a76b5f7310a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed2454c-a924-4e89-bf1c-3f677e77c3b1",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c75d145c-9eac-48a2-93f6-609953185d7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "950c86f4-e2ff-4ff4-816d-e0fe454403cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "158d345c-1414-4d24-8d89-d2efbcc1a082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "978eecb1-9949-4c76-a309-5c671287bf43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7734ff-1809-411f-89c3-f35bd908ae8c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b00ab21-14bc-4883-adf3-d1d378a83e40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91087ce5-8217-4435-b0c7-f753d8ec248e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ceb79c-571d-4202-a896-3f7d703bec9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5fac00b-276b-43c6-be6d-82fe40878a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fccd324-39b7-47ea-b21d-4f4fc542222f",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ade0e4-2f9e-482a-86ad-925ba0a349ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cecfe51-8b17-46c8-86da-4b867dae770b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13210a96-8332-4966-8efc-92509173523a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aba8b45-cdb0-45c4-af3a-8e1767044af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a01a9632-a753-4ea4-92c4-52089f3c8c1a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e45b9f8a-94ac-4e07-b916-4b2f0b03ad09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7f13f7c-1544-4110-91f3-dbdcf96e191d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55ddae85-e527-4f5a-8e93-59e8a93d313b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90775320-899b-46cf-bf6b-06f67d4b82ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f8d5bb-af01-45a5-9e19-7a546b86b42a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "920aca8c-1f42-430c-999b-ad9bd0c45f0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "213a7648-f84c-4723-8e8c-a2606e98a396"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "498ee712-63ff-4b54-a5bf-c62a1e2702ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "621fb159-b998-4421-9cbc-dab31786ba73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414e8c6a-e29f-4cd1-9325-0ad20e8a6dba",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc739bfa-422d-4739-b6d0-55d81cd00488",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e9a47e6-abbc-4b0e-9826-0ba58b754109"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba6c54b-164d-47be-a573-6bdd6b07482f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f7e9c90-1fb1-4a5b-9f84-25bcdbea6e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "119468fe-b80a-4c9a-ac07-76eb49000afa",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a179b1e1-694e-46fa-ac02-61ebd20248c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "856bf65c-ea94-45a0-b7cf-642bd267520b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe3ac7e-9fa7-4174-86c6-ced4051bc3d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aae0365-7082-4652-b43e-af29387e1307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d55f479f-6e1e-4fdb-9187-63ff4a6566af",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47cac7ec-8604-4ad9-97fd-29ecfb997e49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f02b8dac-d12c-40d3-981c-2842eb680fab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82dce313-c8dd-4318-9dbb-e76ec3cd7ca8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "190c61c1-4ee4-413b-9573-bc8e55f16fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b0dfc39-cc60-4885-b925-0a73c49b27dd",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de1b1fa3-ba77-4b20-a18f-9810019c325e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84e965be-8a8a-483e-b3a8-de23277f01eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f040b06-cb06-4fa3-9648-0eff41aa3def",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cd65cb3-e49a-4ed5-8399-926bd897ab22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d5d632-a2ac-44f6-8f71-046f99d45ad1",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd18a33f-98da-4291-bb9e-1685c7d04034",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec2cab3f-6e88-4e0c-a280-7ae5b78655ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64c6aae8-6114-4c7e-8e07-7d1cf1b37fe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4fcdf4a-22fa-4c66-ac7f-592f268b1274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b69dc9fa-9dda-4bd6-b840-32657c132e74",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d3a3ac-743c-45b0-9a6e-df9a8e15b59d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68af56e8-983c-487f-8cc6-74e7295f9837"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ed751e3-ccc0-41ea-9aba-7ef14bca4bd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "655efb2a-e297-4078-8dca-541760f1b260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43cd63a5-b315-45cf-bae7-efd5f52c43f4",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eaac756-1872-4dca-b620-13aa58165821",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32ad6f12-b409-4a9a-89a7-5bf3e2b7a31f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "812716f3-9ba9-43cb-865a-9ee51decbe5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5da96b1e-53fe-4012-94ba-01281621e249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1633c48-bfe4-416f-9d96-d9b751c4a941",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f9c408-f52a-43ef-892a-a3b936c56c84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70a0effd-4f93-42a4-8f5c-40e45c39c336"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c5394a8-5f66-408c-b616-de7936897694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb724c32-2699-4468-b90d-ad716282d082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d168b5-7dd6-44c0-8cae-107db8df4d79",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c006c73d-d545-4867-aa8f-e096ee398bfd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a88b1236-bf5f-4a13-94a0-5187f9ac5ee2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2babf644-501c-46b6-b89d-4796f264e471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "458c793a-db85-4ad0-a9b4-82e6588c0a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d636b0b8-1a61-4fc3-a8de-769dee905cfb",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c746253-783f-406e-a510-faa011123d45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94d0616c-63cb-4b66-85cd-410d95b6b1ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "523794b3-cc3f-447f-b579-c5bf5f1b2754",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c60be098-8b32-4019-b9e9-ed9df80bef22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a1f8f7-296c-41d8-9b20-9575e76ac73e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b8b4b3b-b3d7-42ae-af4c-ab25661c76c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e45ba20b-657e-42be-a38d-ae64ad44d519"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa76052-1e04-4ab1-b467-02d7ab0fdd1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "047b5d0e-8cef-41c9-8ba3-546f09b0563b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39b257d4-7915-430f-9087-3fbfbf36f8d2",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca6ed9c0-66ea-484e-a0a9-7d153732754d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b194782b-93a5-4a1a-a08e-11b3044e4bdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3068df6e-3580-401e-bf15-e346cdcc7ce3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2807c064-082a-40be-89af-af357a877e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb928936-ed8b-4044-8b43-39eb4faa3592",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e978d194-d08c-414b-8c28-e035823ce643",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "933782c6-b037-40b8-881c-530bf6468c3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e09c58aa-9cb5-453f-ace9-95f297c991c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b59a1c7-5fb7-4b20-8557-b4db93e6edf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3135b07c-4af9-4801-8151-0e21b2297e38",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb565777-d58a-43f0-a2fa-ae167c0e3418",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a29a9d9a-0877-4fda-a31a-f78b36f89534"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "903c3601-35a8-47cd-bca0-bd0e31e403bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab71ce61-536c-4c73-967d-91d8ccd4328e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f51377-ba8f-4958-8928-35b7385ca68b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ff1599-7be5-4f6b-a5b1-b9dbfe7573bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71a079da-a3f3-4ca7-b6d4-a8a996d8f2f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8996c392-9345-4f2d-978e-ff5eaa6bb0fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adaf3f23-c7ee-452b-aa05-20447fec9faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94624f51-9593-457f-b0e8-63af4776a54a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91003ae8-279a-4f54-b7e5-69ecc538544a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4db7180-9cbe-4943-a8b1-cf69258d9bd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f5b5df-cead-4f21-8442-a0532bf82bfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b3f7d3a-00ea-45f4-ab00-19afc21a075d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f7cfc99-8d9c-4f68-83bc-1b6ce9273811",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfd48a81-9b60-42b2-850c-989c84990fc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4a27284-4dc2-4b71-b2c2-0a598d711338"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9225d31-1fcb-43dc-b04f-ef721f035649",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "024160f7-976b-4df4-b51c-8bbd1f0d32ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de3585b4-9944-4e39-bb60-cbd9ef8c9fa5",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e98b73a7-df50-412b-a567-df30fabd5f2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2abfec69-2ba3-40bd-9f79-22350602975a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c9c610c-a6dc-4511-8f68-a7995d72e78e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e590ac2-297f-49cc-b941-80f5a9b02b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d971e1-fcbc-47ce-8b5d-4ea8cfff14ae",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32e33adb-85db-4756-a969-20559175a177",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e676a46-4127-4753-a192-7b073770e80b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f243fe-1d9b-413a-b86b-76db31eac131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a464e24d-9fcd-4cc7-b4fc-e202c1446ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d821ebe5-1631-411b-8aa8-6065866e1631",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56386591-c8d7-4091-add8-74590622d686",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8feac52f-6717-4f38-9fad-228924a26563"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d0bfc6-e75a-4dfd-b5a8-7eb453555e03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e17bfcf-6baf-4bfa-b5d2-8930525e0b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a3e4eb-912e-48d0-9fb1-545c5e061f21",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35a7907-6eb1-4133-92a1-77b160dfb0e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "615caa50-8664-41b0-a33b-8472539c1bce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f281d46-96f4-46c2-b634-341a12f7f0b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbf18035-b019-4a14-9cc9-90520a88b11d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1db9afc-f36a-4543-88f6-a244ee01fb8c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd3f8408-b502-46c8-882e-0c514025cf6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb4efcfc-047e-4f03-ac95-23b90d1296e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b0a0d9-17df-4eb7-a5fa-8347910ce47e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08db9d19-030b-429e-8609-7079ed146915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c447714f-7079-4fb9-ac9c-9f01acd116ce",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb73c2b-6290-4abe-9956-151ddb00891f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0a26655-af80-4a45-ab61-686f5387c721"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b4719d-7264-4026-a38f-d5ef5b6a083b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aca3d654-cc2e-4688-95df-77c131599d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3506b4fe-4afa-4d87-92ab-7c65379dc998",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b27ec848-803f-4855-b096-c4913e54a619",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f6e1eaf-e71a-486b-ab3c-7919dae47320"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8544c755-d083-4177-9e91-74b6c74eac2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "518c82e7-735f-4a24-816d-d35c02f1304e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc518e4-9701-4e76-bceb-b6ee49b6339f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bff759c-cca7-469a-a569-8e35fc15a907",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "719d8685-cc65-4230-aed3-77ff8645838a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e18613b-9fee-4eae-8375-d5748e27ecd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fb02e81-7d55-4708-8eae-33e6c06cf513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d6b14b-4fb6-4b82-9e91-58c1c006f9a6",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c98f0a9a-b930-4094-8e24-623314d92349",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65ab6cad-3773-4c11-a9cc-3c7e06f641c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48247323-de92-4b34-96a7-39618b62e345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24720af4-dda5-4095-8bea-c934b9565188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44791dbb-5295-4801-a880-8775e236f7ba",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2175be7e-36e9-4394-9aa6-c45629482380",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99787db9-442d-4bdf-beb1-67b4cbc7f07a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "000388c6-2ac0-45a6-af06-dd07c15b93d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca8badfb-0b46-4fc9-adae-c9b2eecc18d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cbe0e3f-423a-4157-9517-0b94a7981353",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ee62f7-f762-45b1-a8bf-4cd6ab09cc75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05facf77-1499-4fba-985d-7d802c7b53dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7174f6e8-5af1-464f-9751-f66154594482",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "329852c4-a931-4d85-a8ae-1165bb8ad950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b42c0253-5141-44b6-b3ef-bec22a27c053",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a463ee0-4fcd-4c00-95f1-e79835eb6b8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a73bee0c-9b5d-424f-bb6e-4202ddcecf64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f6c710a-e340-4184-b599-546409dacc36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c2c7d1e-faec-4504-be95-800e270a9f8f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47b1d613-092a-42a0-809b-29c227b025c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f85b949-331c-41e7-aafa-88cc66f18923"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0901edbd-450b-4cc4-a2d6-32788d0d1ba3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6e3e119a-da30-4be5-a9ab-c3e56b60db77"
                    }
                  }
                ]
              },
              {
                "id": "3eb67bd1-b07d-45ad-a820-6410f8071cfd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9a21c3b2-1159-4666-ac2e-bcd80266d7e9",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aac80244-8a23-4f64-b200-2cbe9ae6ff99",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a62d6cc3-56f5-480f-8a5f-3ac6fd0c96ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6feb7734-a357-4b91-aec2-997f16ba1e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1e562a78-e767-4740-9d16-f628ce5cb630"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18938908-95f3-4536-ac6f-a8100c70d17f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "66f51692-b0b4-4bd6-90ae-75cf4d6b4b6e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "df735cc4-23d0-40c4-b135-7c1fa3d2fae3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "075a2ff2-22bc-4692-982f-4cfb1989caf0"
                    }
                  }
                ]
              },
              {
                "id": "add9d575-f2c9-4806-97a8-f19f0868f162",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "fd430cc0-70de-469d-90fe-ffac23305a23",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46810920-7a51-4d14-bca0-7785dffd3cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "087fe787-8d8f-49da-9c9e-5c3445948921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58a35c74-22a6-491e-9552-78842b47c3f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "625bbe15-cd91-4448-92cb-69f3137ff72f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "52ea8f2d-a46b-4fd3-abd8-b3df8dae5eba",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4cdbf320-97f7-4b3b-8eae-9baff663fd89",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ac17d77-3928-465b-b09d-7a15007c7cff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "38ebb045-5c87-4edd-aa6f-834d26625f40"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fcc41e4d-d5b5-48f1-a191-7a6df0937f48",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb99e359-375d-4fc0-a1d9-cea85d0dc8a7"
                    }
                  }
                ]
              },
              {
                "id": "2e95cd7f-9ce5-4318-9086-967018ff0561",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "da48699c-f098-40cc-be49-014887e78328",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c37649f7-93cb-4ea0-ba23-e1df0aedfecf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47f0be21-3bab-4d41-a6e5-e8870b87c023",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea707bc3-bb56-4415-a3d5-2274ac7707b4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fd3c7ca5-1f3d-456e-9912-430fb4da4a5e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f48cb4ad-5a07-461d-b6de-bc3dea017111"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e7737d82-3603-4473-830a-eef412e8bd1e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bf651e6b-27b1-49c3-8525-5c409f73ee5c"
            }
          }
        ]
      },
      {
        "id": "41464463-77ee-4ab8-bda8-396693d4bede",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f31598eb-73f1-4dbb-8342-a2bdcaa427a4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6668a59d-414d-4a0e-b403-7b94e844326e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d1aee163-07f5-463f-9534-d07c0fbd64c8",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e3f040d-87f3-4616-a145-0c581f4c3dac",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d198e83e-0bf7-4b45-a5b6-6d7a868f2417"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe7bef3-09cd-47c0-a779-bf7e93c1ac37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4386dfac-dc1e-41c2-9b0f-b0346b5e57a7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dcc94136-9001-4eb7-a10d-276de311679e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6bcd2c84-aadd-403a-b074-6223f9a7e34d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b6f744c-fd60-46c5-99fd-3e0bc3472704",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "94582db0-8665-496a-9582-02cac9b6128d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0c66e388-eddd-4b78-9e28-f7e852984f4f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "73d4f2c4-fdf9-44b1-a9d7-a6798264ecc8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "520fa7da-2091-47b3-ab24-a2ab724cedde",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "32b87cc1-dc06-4728-a724-d0c96506f5e7"
            }
          }
        ]
      },
      {
        "id": "c5cc305d-4be4-4ab3-ae8f-36444e18260c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "75a9e4a3-5412-419c-9194-e23cf76957c2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4929e918-402a-4848-91c3-82af56f709b5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5960ba40-dd69-4b45-9529-ca2ba1d7fab0",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86534ced-458d-46b0-814c-df2226102fba",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99825b46-b7fe-40ad-beba-2fd620833e59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd8aaaf-0aa5-4963-b2e2-218c6f297be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5d879bb1-c6e4-441c-a224-d3ca8baa82da"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd7ffceb-c654-405c-a1a4-8eed0196a5b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5627dc60-1d53-4d26-80c6-42e0de76c36a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b204f16-7896-4661-9472-fc2edcf39bc2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b601a092-1eab-4fc0-9b47-1795c3e2c357"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "43cd41f3-eaa6-4614-9999-c06a3d64dae0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "76071a56-f8a8-4273-acdd-40105b5db33d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2062cc77-ae68-4046-b725-52168a4fbf05",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5342b746-4498-4230-a569-8f870da144f8"
            }
          }
        ]
      },
      {
        "id": "f7f0c848-ff27-4203-b752-a3fee751d272",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "134e21e6-68af-4c4a-85db-9bd8960531ff",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fb5f18e8-21d4-44b8-a93d-9c3d0abb8fb4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "17a17390-d029-4b0a-a88d-8a177f0504d2",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f43fe0be-59c7-4f63-b389-52363b19ef68",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24e9ca86-c6e3-4483-bf19-13bc9acdfd0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16094ab3-b1d1-4061-8473-ef2f28b2aebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a10033cc-b0f4-4f94-9fab-2ceebb1851f3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff029ab2-5b25-4356-a293-2c5dddf8a0c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f09d38f-328c-4316-91b7-8538e6e6a539"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "620e3f7a-ee50-4147-86d8-f1f1fae8a4ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "424c2994-4b2f-4ea3-9496-c4d04ab61bba"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e7982470-a687-4803-b3fe-9c7162e1b49b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f71ea318-6c29-4942-9767-fbf6e2fb918b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "54cfb197-10c3-431f-9bc9-99399a46771e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "743e6a6f-ee39-4380-990c-f84e272ba30a"
            }
          }
        ]
      },
      {
        "id": "b7b097d5-72de-45db-b4c7-c34932f072cb",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "46ddbab4-1fa9-46b2-840d-b0cb0355584d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "71697bbc-1121-4fe6-8cbc-f0a6e7bcab66",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "0442044f-a084-4c8c-955e-88e619d6ccee",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2bc65f83-1701-4d31-a509-ba3ea91daab7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5ea59c99-812d-49d6-9522-4a0a295229f6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 254.1157894736842,
      "responseMin": 16,
      "responseMax": 9460,
      "responseSd": 1155.7956918632456,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1698453141069,
      "completed": 1698453228327
    },
    "executions": [
      {
        "id": "5595e422-bff6-4c06-94e7-259e4d860c62",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d13bc9ce-f9dc-415e-b11c-bbcb00401be3",
          "httpRequestId": "614d62dc-94cc-4bb5-96a9-f57740961147"
        },
        "item": {
          "id": "5595e422-bff6-4c06-94e7-259e4d860c62",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "1dbf2fb7-38bd-4568-89f6-1cf36605cb1a",
          "status": "OK",
          "code": 200,
          "responseTime": 100,
          "responseSize": 0
        }
      },
      {
        "id": "92391637-3096-4da7-b887-72924074d8bd",
        "cursor": {
          "ref": "9ba7baf6-9a66-4691-9d20-a735f2958e75",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d9378e7f-5992-4e05-a7e6-b3735a5eb1d1"
        },
        "item": {
          "id": "92391637-3096-4da7-b887-72924074d8bd",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "28fc63cb-8405-40d0-be6b-d351b09c062a",
          "status": "OK",
          "code": 200,
          "responseTime": 16,
          "responseSize": 0
        }
      },
      {
        "id": "9ed02b0b-8407-446a-ad50-a846a582df91",
        "cursor": {
          "ref": "20bf29ad-b081-4644-a0c6-b870bab94a71",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "21087d29-a871-41a4-af3f-240a5ea3b77c"
        },
        "item": {
          "id": "9ed02b0b-8407-446a-ad50-a846a582df91",
          "name": "did_json"
        },
        "response": {
          "id": "0c260c24-df3f-4f34-a094-a2a4201b6332",
          "status": "OK",
          "code": 200,
          "responseTime": 1765,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ed04c8-7e36-4f89-87b4-61317d394530",
        "cursor": {
          "ref": "6278e4db-ce14-4935-9c19-d1841fe106c7",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d1c8ec5a-bb03-47a7-a0d3-b34225debf9d"
        },
        "item": {
          "id": "31ed04c8-7e36-4f89-87b4-61317d394530",
          "name": "did:invalid"
        },
        "response": {
          "id": "aa09dd2d-f569-4b4c-962d-b93bbf860d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1706,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ed04c8-7e36-4f89-87b4-61317d394530",
        "cursor": {
          "ref": "6278e4db-ce14-4935-9c19-d1841fe106c7",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d1c8ec5a-bb03-47a7-a0d3-b34225debf9d"
        },
        "item": {
          "id": "31ed04c8-7e36-4f89-87b4-61317d394530",
          "name": "did:invalid"
        },
        "response": {
          "id": "aa09dd2d-f569-4b4c-962d-b93bbf860d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1706,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2be3c02b-165f-4f07-a46c-3981ea4bd705",
        "cursor": {
          "ref": "445a03e6-f5e4-435f-99f7-b02e5ff5607e",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f74c1a51-86b2-46b8-a397-c00b83c6f961"
        },
        "item": {
          "id": "2be3c02b-165f-4f07-a46c-3981ea4bd705",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ba6f8a7e-ba34-49a9-b689-f738b42d897d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 185,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c7f50f2-8c8f-4b23-89c7-2dc4979e2272",
        "cursor": {
          "ref": "75df057c-771d-4f3e-8629-19994d44b5e1",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "726677fc-4d42-453e-bd29-249172eb9245"
        },
        "item": {
          "id": "3c7f50f2-8c8f-4b23-89c7-2dc4979e2272",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "1dbe89f2-6023-4e53-8fdd-7048af238d92",
          "status": "Not Found",
          "code": 404,
          "responseTime": 78,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a05d5ac-835a-4474-ac13-df8e56097fce",
        "cursor": {
          "ref": "089350aa-6c01-4d77-94e7-3ab927a2b6be",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "eb362b7a-6709-4726-b4d9-097295f84c01"
        },
        "item": {
          "id": "2a05d5ac-835a-4474-ac13-df8e56097fce",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "04b3019c-78f4-4dd2-af5f-c115d6e047ed",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9268b87a-6afc-4666-8ada-0ea0c7affd61",
        "cursor": {
          "ref": "3a46dd73-0a9f-4af2-a398-56aa0159cce1",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3b6477ab-366f-4b70-aff1-203d5119c271"
        },
        "item": {
          "id": "9268b87a-6afc-4666-8ada-0ea0c7affd61",
          "name": "identifiers"
        },
        "response": {
          "id": "68f289f8-a331-475f-88f2-d8c4823d6f7d",
          "status": "OK",
          "code": 200,
          "responseTime": 1233,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60589f39-2ded-4997-8f6e-73037e6c6a1f",
        "cursor": {
          "ref": "db107d91-72dc-4b50-aa39-1ab81a7e58f6",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6785c170-780e-4434-aaa0-ba8ce2615558"
        },
        "item": {
          "id": "60589f39-2ded-4997-8f6e-73037e6c6a1f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1858864f-d7a2-4705-9499-b9226860ebc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d4d4f6c-ae0d-4e9b-ab8f-2640396e1bd7",
        "cursor": {
          "ref": "07763c3a-3755-4774-82ec-0e94710a7c22",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b6485504-060d-4aaa-88ae-56b093a2d310"
        },
        "item": {
          "id": "9d4d4f6c-ae0d-4e9b-ab8f-2640396e1bd7",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c72dbeeb-f470-4fa3-88fb-bdf3a640eef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031c67eb-7173-483c-9861-584ac11bf820",
        "cursor": {
          "ref": "b8c73c7f-b19e-455e-85e1-c94e471498e9",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3c2e31b7-5cfa-4d40-be17-ba4be7973308"
        },
        "item": {
          "id": "031c67eb-7173-483c-9861-584ac11bf820",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "bbc6da39-8838-4ff7-a280-428114cdf0b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e89fffa-28ae-41b5-959f-b04c986dd6ca",
        "cursor": {
          "ref": "cbd0fa81-c768-4fac-b9e1-ca401d48134a",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "799eff97-c478-4a78-b650-ca0c2cafda5c"
        },
        "item": {
          "id": "8e89fffa-28ae-41b5-959f-b04c986dd6ca",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ca17bf24-c2b5-4dc5-9db7-060d64074d79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a5f13a-ca67-42ed-929b-222ac34f70f4",
        "cursor": {
          "ref": "644e0a2a-1925-463b-9acf-f6e21f682f09",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "483b6295-49d6-45ac-b8b2-08657b06c74c"
        },
        "item": {
          "id": "57a5f13a-ca67-42ed-929b-222ac34f70f4",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8dc42887-0030-48ef-8c42-4f81a80cd367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "964c0fd9-af2b-4f17-890a-a57450247046",
        "cursor": {
          "ref": "2c48ffec-70b2-411f-94d9-c99c06b63a54",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "3dc075ad-0a86-4884-9b69-c985bbfb4c21"
        },
        "item": {
          "id": "964c0fd9-af2b-4f17-890a-a57450247046",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ac0e7c22-876f-48f5-ab17-091ee400432d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95202ec9-cbf2-4e88-a0f0-c99c5bdad8c9",
        "cursor": {
          "ref": "c6c2e8bd-6fb0-40ca-8d8a-8ca09145c891",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "58876f6d-d29b-4bcd-8239-d71945aa7b67"
        },
        "item": {
          "id": "95202ec9-cbf2-4e88-a0f0-c99c5bdad8c9",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e3dc7152-224f-4b08-a492-c5c03cba3f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711cf2d6-9340-46b3-a222-c1b792ec45ed",
        "cursor": {
          "ref": "bdabed05-0b75-4c15-a55b-b378503991ad",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "cdfdba11-cb71-4052-b9bd-40560431948d"
        },
        "item": {
          "id": "711cf2d6-9340-46b3-a222-c1b792ec45ed",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "9991e205-1e7a-4348-b3fd-e297831e0943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc508a55-f5d4-43fd-b770-08ab037c8fc6",
        "cursor": {
          "ref": "423037bb-3184-4fe0-aa60-8bd958407a0a",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "7f7b2954-e92d-4e31-9c47-504f5216b16f"
        },
        "item": {
          "id": "dc508a55-f5d4-43fd-b770-08ab037c8fc6",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a3ff981f-6938-43cc-a75c-792eee30ad1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a77b891-7e7a-4297-9ab4-ae28bf539ba6",
        "cursor": {
          "ref": "3ecb8ab2-e758-4ca0-9534-420b651bc562",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "485186aa-7a8d-43a4-b5c9-1667ba5474fb"
        },
        "item": {
          "id": "4a77b891-7e7a-4297-9ab4-ae28bf539ba6",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "99dbc62e-bd9c-4bb2-bff4-41d8e954028b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac1884b7-89f0-4fe4-84a2-0f006114cd7f",
        "cursor": {
          "ref": "a2801e4a-b557-4b5d-839c-918b3210c1dd",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "fd8a71cc-adaf-49fa-8373-715197e91910"
        },
        "item": {
          "id": "ac1884b7-89f0-4fe4-84a2-0f006114cd7f",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ab807e9e-3629-46bb-82c1-8be7e310d653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad8f901-9e6b-4b5f-853a-7115760d4221",
        "cursor": {
          "ref": "f0897f47-e3d8-482f-a7b8-24adff652eec",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "1847be02-d5c9-4e0f-a820-e49466e0dcb7"
        },
        "item": {
          "id": "4ad8f901-9e6b-4b5f-853a-7115760d4221",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "cb0c19a8-583a-4490-b848-a169671fc28d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f685f4-bfbf-4d8c-bd50-440172295835",
        "cursor": {
          "ref": "b5c66876-45ea-4ce9-9f63-8c00463bc276",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f6e8e0cb-bd8f-4aca-bec4-3847c462e5bc"
        },
        "item": {
          "id": "52f685f4-bfbf-4d8c-bd50-440172295835",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "7ee6402f-07cc-4f5d-ab01-de1d8d0a05c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db223ac-26f1-4306-b1d6-5f2cf9383934",
        "cursor": {
          "ref": "a6c072dc-8803-45a3-86bb-498a0e297648",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "fbf4d54b-bcee-4bd8-b674-81e868940623"
        },
        "item": {
          "id": "9db223ac-26f1-4306-b1d6-5f2cf9383934",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c3a64a52-8cec-4818-b2e5-24a84d68e476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2761e9a9-c6f0-4922-a398-8e5b9d370463",
        "cursor": {
          "ref": "f9b897fc-f65b-465e-8970-a3978d1017e0",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "fd2a4a1b-0423-42a7-a946-5143f9a38f33"
        },
        "item": {
          "id": "2761e9a9-c6f0-4922-a398-8e5b9d370463",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "fcb4cf5c-726e-4be3-9877-923fb08a4d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a158dae-499e-4db6-a16e-5aa3e266d618",
        "cursor": {
          "ref": "2a14aa14-5535-4d3e-a45b-50a3c89af22c",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "2a750e45-26b7-4863-af4a-6ea66831a42a"
        },
        "item": {
          "id": "1a158dae-499e-4db6-a16e-5aa3e266d618",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "45a4cae0-ebba-4f61-934c-361b622d01b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e55ed7-ac97-43cf-9375-10c4f3b63778",
        "cursor": {
          "ref": "68b534a1-9392-4412-8591-cf087b2808e5",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d21f39dc-70a5-44b8-a6b9-a288265dc4b5"
        },
        "item": {
          "id": "38e55ed7-ac97-43cf-9375-10c4f3b63778",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "b6f94f2f-ac85-429c-b199-c059456f1673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8e5b80-f606-414d-9c31-cb8d8a77d3e9",
        "cursor": {
          "ref": "25108202-d36c-428c-88f6-8309af4a946e",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "94ca907b-9016-4524-9638-7e0afb7f5a84"
        },
        "item": {
          "id": "0c8e5b80-f606-414d-9c31-cb8d8a77d3e9",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "9a494bcb-a210-4947-9ecd-56dbb7904c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b5126d8-1a2c-4032-bc49-18c6ee664461",
        "cursor": {
          "ref": "f4b7e04e-e28d-4b73-a2f4-d24955ad08ba",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "3cecf314-1fc8-474d-bd2a-f60bc5ba6c44"
        },
        "item": {
          "id": "1b5126d8-1a2c-4032-bc49-18c6ee664461",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8333d2f2-00bf-46aa-beeb-cdc95ae71bad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee9261d-361c-4fe7-a0ee-30342fc0cc2e",
        "cursor": {
          "ref": "248603cd-a766-4246-ab8f-40c836ad4f1b",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c9447875-ab69-4d35-9fc9-b20660d38aa9"
        },
        "item": {
          "id": "aee9261d-361c-4fe7-a0ee-30342fc0cc2e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "453d6d00-cf02-41cf-97d1-2f87af98b854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85258290-e83b-4a99-85a8-da79d9a86327",
        "cursor": {
          "ref": "f2aa567d-10d4-4ddf-9c99-24fb815eaf77",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "792edba1-f60f-4168-8291-c58368d2b690"
        },
        "item": {
          "id": "85258290-e83b-4a99-85a8-da79d9a86327",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "fb590ff8-9037-4757-adb8-8a7f5a1dad33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c3b0e45-06de-4986-a9d3-1d15ea6779e3",
        "cursor": {
          "ref": "35c7c402-4009-44a8-81b5-98e9af43a146",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f52564fe-0773-46ab-9ce5-54d47e5377ce"
        },
        "item": {
          "id": "3c3b0e45-06de-4986-a9d3-1d15ea6779e3",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d51ed02d-231a-4761-abdd-a01f0edf0c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d109178-6f7a-4e04-a366-c962df6fbabe",
        "cursor": {
          "ref": "72580f98-5cd7-4c46-bc83-e3f8a8f54f89",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ed4c3ffc-5cf1-43ad-afae-370521072d44"
        },
        "item": {
          "id": "1d109178-6f7a-4e04-a366-c962df6fbabe",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f2d33bff-982e-4c42-9984-c10bce527f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03407cc1-93cb-48e4-a39a-2726a992861a",
        "cursor": {
          "ref": "174954e1-de36-4124-b039-93abdbcfd0ef",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f0ad9ecb-2409-4220-bb96-8bfabd58dfa5"
        },
        "item": {
          "id": "03407cc1-93cb-48e4-a39a-2726a992861a",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "55971fe6-0182-47dd-bc77-2ac393f163b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d027ba3c-9163-4dc1-ae02-88a9cbccae63",
        "cursor": {
          "ref": "bfa2caa3-1a49-4f4f-9017-00cb0975c30a",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "cf21e564-210b-4fb7-b7da-c9820ea56f99"
        },
        "item": {
          "id": "d027ba3c-9163-4dc1-ae02-88a9cbccae63",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "9b810224-36f1-4465-9520-9a3de245dbe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f414c10c-2bc9-4471-a018-3f563e77d84a",
        "cursor": {
          "ref": "6439997d-472f-4d6b-ad7a-0578169f2c84",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b7574e23-dd48-4963-8f7a-90e985a8596d"
        },
        "item": {
          "id": "f414c10c-2bc9-4471-a018-3f563e77d84a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f659f3e6-f035-4c93-bf1a-f4e82adb7e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58337195-8adf-4e1a-8cd7-b9a5bb95b006",
        "cursor": {
          "ref": "ef5dc51b-617d-4b7f-a57b-c295db87f683",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "bcde39ab-babf-42c9-a6a2-d799fa53391d"
        },
        "item": {
          "id": "58337195-8adf-4e1a-8cd7-b9a5bb95b006",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "200aee6d-eabd-4aee-b6a3-f01b37665047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac9a653-70c4-483d-9815-31a0eee2c6ae",
        "cursor": {
          "ref": "d6f8baa0-8dea-4126-a14a-bea2950c66d9",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "bc00cb71-397a-4e6c-866f-9cc6975c81e0"
        },
        "item": {
          "id": "3ac9a653-70c4-483d-9815-31a0eee2c6ae",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "2e662d51-348b-4dc9-bb25-aadbe911d8d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc13308f-86d2-4b9c-9635-2f4f92fceffa",
        "cursor": {
          "ref": "2c2570e7-a1c3-4016-a2f2-820e8c0865ec",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "68cb2fe6-ba99-4711-b7dc-785143a7193c"
        },
        "item": {
          "id": "fc13308f-86d2-4b9c-9635-2f4f92fceffa",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ee43b494-c821-4912-866c-cca59579a218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "076722d2-16f6-42f3-abca-f79d9338b8a4",
        "cursor": {
          "ref": "5275ac1d-be2e-49ee-8ad0-ceaf005256e2",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "56cfa38f-8c35-47c4-85f9-3c405dc77d7b"
        },
        "item": {
          "id": "076722d2-16f6-42f3-abca-f79d9338b8a4",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "69c67315-90a4-43fe-ab04-cbf1a3b8a798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db497aff-c043-4cba-b392-8ac8fefca7e3",
        "cursor": {
          "ref": "b27b6c22-9d65-4589-9536-9cdeff1bcb1c",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "71ad8a6a-e3fa-4711-be5f-556dbcb23bf1"
        },
        "item": {
          "id": "db497aff-c043-4cba-b392-8ac8fefca7e3",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "e3988174-3208-4c72-b404-a84ef1db046a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b28b4a-d2ae-4c7b-945a-65610ea48ab2",
        "cursor": {
          "ref": "b20d7117-21f0-4777-ab5f-9576e3ec473f",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "6629e727-e681-4736-a694-c4b161e430ee"
        },
        "item": {
          "id": "d5b28b4a-d2ae-4c7b-945a-65610ea48ab2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f8465882-2585-40c9-a489-52e90d090241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d790b647-fce2-47e4-b54a-bfc441e13ee8",
        "cursor": {
          "ref": "ab6ed767-c312-4f06-88ea-a86e0b684ca8",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a2dc5c5f-93eb-4e83-b25a-2ddd48a71074"
        },
        "item": {
          "id": "d790b647-fce2-47e4-b54a-bfc441e13ee8",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8de01968-3a56-485c-a3e0-e015f4bf505d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30eb71a4-3caa-4c3e-9c45-d77d59340048",
        "cursor": {
          "ref": "19d5c983-e36f-4c07-879c-a0280734bc77",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "5d3e96f7-0220-4f09-99f2-8209cfbb0d36"
        },
        "item": {
          "id": "30eb71a4-3caa-4c3e-9c45-d77d59340048",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "91acc5de-d61f-43fa-b2cd-7d025188bfb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44cfa1a9-a745-4da3-a48f-fa92f276b205",
        "cursor": {
          "ref": "47796a4a-deeb-414d-b641-c1a99700d860",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "07aed906-a77a-41e2-9b44-df972f86822c"
        },
        "item": {
          "id": "44cfa1a9-a745-4da3-a48f-fa92f276b205",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "925f79f8-a0c9-4bcd-be88-ddaead5dd3d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "810ba27e-321c-460c-ae43-a5a76c580268",
        "cursor": {
          "ref": "8dbfd134-5eb1-487a-a86e-67e3d86f44ef",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0163aba7-3df8-4fcb-8ca3-2528712c7ee6"
        },
        "item": {
          "id": "810ba27e-321c-460c-ae43-a5a76c580268",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e8a60a2d-3d52-4fd4-9c8f-f548e1c7a8cb",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1441,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20e30b2d-9be4-4918-afa9-292df644250b",
        "cursor": {
          "ref": "24d033dd-1536-4b9f-9c28-7a534edeacd8",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "ee4cd301-903c-4615-868f-5ae66a369e1e"
        },
        "item": {
          "id": "20e30b2d-9be4-4918-afa9-292df644250b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b931a12f-85b2-400f-9df3-a465bb425ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40009039-4381-46e4-a6c8-69ea8e5625a4",
        "cursor": {
          "ref": "247844ac-fc71-4f36-873e-acc3fab5b5b8",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "bb75c328-5c03-4390-9b83-c90d1c374142"
        },
        "item": {
          "id": "40009039-4381-46e4-a6c8-69ea8e5625a4",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "cdd9dac4-2afa-43b2-b489-84f2bd914445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46850763-c369-4edc-bd60-52e4a73f1108",
        "cursor": {
          "ref": "47800b01-5907-40ad-961d-cf81cdccf65d",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "5166f77f-cade-4a4b-93ca-24cf4fdc2552"
        },
        "item": {
          "id": "46850763-c369-4edc-bd60-52e4a73f1108",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e5d7bb67-102e-45bb-877d-51dcdd667226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d238e7f6-7d3a-41f1-871f-1703ae979ae6",
        "cursor": {
          "ref": "13a138ea-1075-4a09-8876-d1b00d2c72f9",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "edfd1509-7d5c-4381-a8e5-b0032e014fec"
        },
        "item": {
          "id": "d238e7f6-7d3a-41f1-871f-1703ae979ae6",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9fd5ab19-5277-4c2d-a94c-5dd91806aa13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a144ff-4e73-44c9-97e4-ce3a05e69a8f",
        "cursor": {
          "ref": "5f8c5cf8-9ff3-454b-979d-21f442af293a",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "27f21940-2e5f-407a-8afb-7524c27df838"
        },
        "item": {
          "id": "a5a144ff-4e73-44c9-97e4-ce3a05e69a8f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "894e3277-f784-464e-b18d-adb4f4d35323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d79986-e106-4ba1-b013-8f75a0a6beef",
        "cursor": {
          "ref": "7aa23660-f54a-4534-bf75-238a2f2a0c2c",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "20755bfb-c9fc-48ad-a75c-4fa511ce744d"
        },
        "item": {
          "id": "e6d79986-e106-4ba1-b013-8f75a0a6beef",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "9f18a7e7-ffbc-42cc-8184-d7eec8820287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f67d02a6-e8bd-47dc-b29c-c94c4f453811",
        "cursor": {
          "ref": "e344c8bd-81a1-4ad8-a3bf-587a8514dd9d",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "9b1c248f-9c78-47a6-8932-ed9f0ed05b41"
        },
        "item": {
          "id": "f67d02a6-e8bd-47dc-b29c-c94c4f453811",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "11b6a6df-0f1c-4ff3-b727-d884e1ca2cd7",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1418,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6acb657e-8ede-44c3-b763-409c5f50b415",
        "cursor": {
          "ref": "d8a05c98-3959-427d-b147-19bc3c5cf953",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2688dd08-2b5e-4dd2-b0a7-b1c32a2eb460"
        },
        "item": {
          "id": "6acb657e-8ede-44c3-b763-409c5f50b415",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "9fa470a1-7e91-489a-870e-7131554f8100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3354ebeb-a06e-4ba0-a359-8e4d64ce4d56",
        "cursor": {
          "ref": "41163021-8941-4d5d-808c-1459d4d1cdc8",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "7417d5ce-364f-488f-a5e1-056fbf95821b"
        },
        "item": {
          "id": "3354ebeb-a06e-4ba0-a359-8e4d64ce4d56",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "56e0c0c8-1cfc-4692-b1de-d403c121d14e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc2cbc26-2513-4e0e-89c9-2e6a9bb213c8",
        "cursor": {
          "ref": "7fbc1676-025e-4a10-9707-589a776437a2",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ea222075-df33-4ac5-9b1e-3856c9b8eee7"
        },
        "item": {
          "id": "cc2cbc26-2513-4e0e-89c9-2e6a9bb213c8",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "92a25c32-5019-4fe5-83ab-fdec1184b2dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "541e5ca0-c616-409c-a7d1-ac457a7ccd8b",
        "cursor": {
          "ref": "8290e04d-0c8c-4462-8eab-d3d2e62758e0",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ad9e78e4-ddb4-40c9-8000-7709f5705f0d"
        },
        "item": {
          "id": "541e5ca0-c616-409c-a7d1-ac457a7ccd8b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "29f2cc3a-15bf-4412-9f24-71734e845daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aabd98e-917f-41ae-8966-3adc80d76640",
        "cursor": {
          "ref": "5050618c-6944-41d8-a21b-02c99534b5ad",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e4c2074b-b59c-4835-aa98-94929b15c87a"
        },
        "item": {
          "id": "6aabd98e-917f-41ae-8966-3adc80d76640",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "467bb036-0cc9-4b08-a80f-7ee813d25a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e89e85db-1ac5-4a6f-af36-83f5d7ca5cda",
        "cursor": {
          "ref": "d62a1863-bdb0-4661-9a31-f7572199316b",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "618bf9e5-19f8-41b7-842d-175e014a920c"
        },
        "item": {
          "id": "e89e85db-1ac5-4a6f-af36-83f5d7ca5cda",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "0305d0fa-39c6-4e44-8f0a-57d7b1594eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecdd6813-b655-4150-ab28-53d908d9bb7a",
        "cursor": {
          "ref": "45e99d8e-7f2e-4003-9b70-fd8b0aaad7ba",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f533347e-beee-4c53-a7ac-465dac5af66e"
        },
        "item": {
          "id": "ecdd6813-b655-4150-ab28-53d908d9bb7a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b257d7cb-1d2d-48b3-a2d7-0a0fcee8ac4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3d49c9-a6f8-4020-8f06-29281f4aa5ef",
        "cursor": {
          "ref": "63dc0480-7c97-4c95-bb99-d9f15c170e00",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "7ee11f27-c19b-4760-b274-a595320e88f4"
        },
        "item": {
          "id": "6a3d49c9-a6f8-4020-8f06-29281f4aa5ef",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8a539a7f-4956-4479-aa88-a6fc566e273d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4700f99-da7f-4d00-bf55-83850b9d5d42",
        "cursor": {
          "ref": "ae053bca-abde-425f-9ac7-1f6978c1e34f",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "2f623ce1-6278-4c46-8f39-b29292a88f0a"
        },
        "item": {
          "id": "c4700f99-da7f-4d00-bf55-83850b9d5d42",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d1c370b5-6837-451c-b8e7-ce534e5eea73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "279dfe13-471d-4b86-b8c0-4bcfdcc36fd5",
        "cursor": {
          "ref": "f577fdf8-479e-4959-a9fe-44503753bf98",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "0013c455-5498-48cf-b2d3-2f406bf77abd"
        },
        "item": {
          "id": "279dfe13-471d-4b86-b8c0-4bcfdcc36fd5",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "39439e84-930c-4dfe-adaa-2371e753407d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3040f0d8-eeae-4c15-830e-552fc7d1ec4b",
        "cursor": {
          "ref": "ee07e1c6-b475-4c4e-bd43-07e37f1d2094",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "03ad06a0-6c8b-474f-8077-943b07da9374"
        },
        "item": {
          "id": "3040f0d8-eeae-4c15-830e-552fc7d1ec4b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ceba5645-121a-456f-8280-c7b0be7a5fbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a31d7965-2194-47ce-8692-0151906b1e06",
        "cursor": {
          "ref": "4edc066c-749a-45be-83ac-793961174314",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "515f7029-5c23-4f01-8db0-1bb5ea9bf50d"
        },
        "item": {
          "id": "a31d7965-2194-47ce-8692-0151906b1e06",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "84eb7194-6eae-45cd-853a-0af2e4d82f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3525e13-2917-4b0c-b2f1-341d816f47fc",
        "cursor": {
          "ref": "2378aed5-459e-479d-a475-c1132c2c7ce3",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "1df2b49e-be3a-4d00-8458-ecc0dbeb6372"
        },
        "item": {
          "id": "c3525e13-2917-4b0c-b2f1-341d816f47fc",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "5b0fa979-3fdf-4daf-9562-ba4ac5df1fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "556970ae-ba69-4dde-9c2a-1329f3056cc1",
        "cursor": {
          "ref": "9da7ea0d-5b46-41e2-8655-2c3d6a42193a",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7a408746-602e-4bfe-93e6-b59cad4a23d3"
        },
        "item": {
          "id": "556970ae-ba69-4dde-9c2a-1329f3056cc1",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "61e6295d-f911-4f45-8006-321ed313f011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2430f01-ce0d-4ce5-ac08-cd1ca1f349e8",
        "cursor": {
          "ref": "d8bc49da-d2e6-4aaf-b117-476275002c2f",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "9e9aba01-5eea-4125-bf52-56e03f157583"
        },
        "item": {
          "id": "e2430f01-ce0d-4ce5-ac08-cd1ca1f349e8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ae7dfb2c-a9ad-40ae-a286-f157ba3778fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40bccc6f-bb4d-471d-873f-51567912f690",
        "cursor": {
          "ref": "73970be2-69da-4bad-bba3-1382f0a27348",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "208f8348-11d0-4f3f-888f-d037c34f8cc1"
        },
        "item": {
          "id": "40bccc6f-bb4d-471d-873f-51567912f690",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "03c5a5f5-2710-4229-904d-dc347fd3b5ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8734733e-3e2d-4b6b-a612-e38a54ab2672",
        "cursor": {
          "ref": "24f9d6fa-233e-4511-922d-0bd26538e7a0",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "08b6b874-6a80-43e2-8e36-d8719362dc60"
        },
        "item": {
          "id": "8734733e-3e2d-4b6b-a612-e38a54ab2672",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "4094d2f6-5fb5-4177-8e47-50073ba580aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41527307-8507-4d28-af6b-0215e583d5f6",
        "cursor": {
          "ref": "cb85db56-1f2d-4d6b-b5c9-47e0483abf27",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "69994473-0c26-45c3-8f8d-d8794fb014d7"
        },
        "item": {
          "id": "41527307-8507-4d28-af6b-0215e583d5f6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "8d161014-0c8c-4008-9033-f028c3c5f365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ebe417-d4f9-440b-a2dc-41298926923d",
        "cursor": {
          "ref": "26776801-b0ff-490b-9476-464c85461542",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6de89323-5f0e-4b2a-9189-19c9be70a7d4"
        },
        "item": {
          "id": "f3ebe417-d4f9-440b-a2dc-41298926923d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "86606f56-3020-4877-801e-60abec5135ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c01aaaa-e3fc-4b08-97ce-fdbf4f450ef0",
        "cursor": {
          "ref": "a2098164-7773-4cae-81c2-1ff2e8e6ccec",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "21733fd6-cff1-49ea-97e1-12c3b5c86356"
        },
        "item": {
          "id": "8c01aaaa-e3fc-4b08-97ce-fdbf4f450ef0",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "9be76f46-4bd3-42c2-b470-5145e8308ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "078cf3e8-a4c4-4fd1-bc08-58ce85873ef2",
        "cursor": {
          "ref": "7ce1d3cf-596f-4e71-b54d-88e988cce229",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "2e389662-4114-4bd2-89c8-601d875ea58a"
        },
        "item": {
          "id": "078cf3e8-a4c4-4fd1-bc08-58ce85873ef2",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "51752c4a-9a68-4f66-a79e-0749edcca54b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727f32e8-d1c4-46f8-93e5-db9cf0a307bc",
        "cursor": {
          "ref": "d621e5be-3b03-4f2a-9d4a-c18e8a59bd4a",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "3c3019c3-3a4f-4ec4-aa63-cdf494523e6b"
        },
        "item": {
          "id": "727f32e8-d1c4-46f8-93e5-db9cf0a307bc",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "acd5b120-7b96-4e30-a07c-be9b0e2c1e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68fab5e5-dc3b-40c1-aa82-0817da890c45",
        "cursor": {
          "ref": "8fba0a82-711f-4027-8919-892cd2d4af8d",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "20c70404-e094-4948-8a32-11967e8b0610"
        },
        "item": {
          "id": "68fab5e5-dc3b-40c1-aa82-0817da890c45",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "b11331bc-438f-425d-8f1e-e2415071778f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b78b8c-08fa-45a3-baa1-d0e069598c3a",
        "cursor": {
          "ref": "e548943f-2873-4fa4-8fb5-9b6c4b2f5828",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b9e57697-241a-4db9-b4ec-80c2861f4f3e"
        },
        "item": {
          "id": "41b78b8c-08fa-45a3-baa1-d0e069598c3a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "bc5f8313-61a0-4d1b-b460-d0bf45d3e788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a163f037-d6d7-448d-a908-037a2f856ea5",
        "cursor": {
          "ref": "5ef79984-7189-4106-8f7c-71725ecf087c",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b337ef5b-5e75-4495-a660-2c2927028592"
        },
        "item": {
          "id": "a163f037-d6d7-448d-a908-037a2f856ea5",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "dd3f259d-9d95-4ee7-a392-2071fd675025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f20c7a9-aa2b-478b-a507-2fc25f8ab356",
        "cursor": {
          "ref": "90a566a8-c5de-4932-9de5-dd89a79182b8",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "140c0d59-35b8-448d-9020-a68aa2f42c72"
        },
        "item": {
          "id": "1f20c7a9-aa2b-478b-a507-2fc25f8ab356",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "0bf7b2ba-453f-47f4-b2e1-22cc75a53988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "028d0db0-f18a-4cee-a5b9-b5d796d3ffb3",
        "cursor": {
          "ref": "3e2e30c0-3472-49ae-8e3b-7da8102c4bd2",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b9430dc5-a05c-4e7f-bfa1-b01ce978f505"
        },
        "item": {
          "id": "028d0db0-f18a-4cee-a5b9-b5d796d3ffb3",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ee6e8e11-f700-4d93-8bf6-a2b1135ff7c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c17bc10c-a298-4b48-9b65-f2733ae423a1",
        "cursor": {
          "ref": "28191de3-f4ac-47eb-8d0c-3bc933d03218",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d4658625-49e1-4163-b57a-dcd3ac000cab"
        },
        "item": {
          "id": "c17bc10c-a298-4b48-9b65-f2733ae423a1",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c9a5160d-2966-4c00-a154-72d091a422df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909ba417-9799-4e4c-bd14-68a6923b8ef6",
        "cursor": {
          "ref": "19458365-337e-45df-b4fe-b3663a712f66",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "e40e5fc4-cca3-43c3-8cd9-43f39621e012"
        },
        "item": {
          "id": "909ba417-9799-4e4c-bd14-68a6923b8ef6",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "20d48ba5-6ac5-47fd-b0e9-d551ecc989d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e21f413-10cd-422f-b2f7-876375beb61b",
        "cursor": {
          "ref": "35c1b4aa-c941-4515-81e8-2834547e2cc2",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "dddfb99a-7c1f-4abe-ba4f-112fd66c9203"
        },
        "item": {
          "id": "8e21f413-10cd-422f-b2f7-876375beb61b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "44babed6-b75f-4207-8c53-63e2c3a75e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f5ff51e-8f1c-4b24-87a1-9557a5eb4651",
        "cursor": {
          "ref": "f6301fcd-02ae-4f7d-965e-6c02bdc719f6",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "aa285d65-7867-4a3b-8c8d-2ec717f1772a"
        },
        "item": {
          "id": "9f5ff51e-8f1c-4b24-87a1-9557a5eb4651",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "152514e8-e889-4c00-91ab-7f8f953b82db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b24ed81-e012-492f-910b-8df32cbfaec5",
        "cursor": {
          "ref": "4cbdddb0-dfe1-4a57-a00e-5a8fc41cfb89",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "94a9a6c1-80a4-45f2-ba22-45e3dafa4d22"
        },
        "item": {
          "id": "5b24ed81-e012-492f-910b-8df32cbfaec5",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c696a937-8f31-4dec-9dac-a0ca077ddb10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a93db4a-253a-4f58-9c1d-4f096f3d0ed7",
        "cursor": {
          "ref": "5d8a021a-f20c-49bb-801b-42d0392db29c",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "30e45de2-faa0-49ee-bce8-8b350040da27"
        },
        "item": {
          "id": "3a93db4a-253a-4f58-9c1d-4f096f3d0ed7",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "60c6a034-1975-4df4-8aeb-87ce3475dbc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31cbad7f-9ef6-48dc-828a-1757a2ca7bf4",
        "cursor": {
          "ref": "b8795b86-cb86-4dc8-8808-3b44c2b23539",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "700e5ac2-5761-4366-aa30-6940fb5fb803"
        },
        "item": {
          "id": "31cbad7f-9ef6-48dc-828a-1757a2ca7bf4",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "983dbb14-8a90-4899-9cd0-39a401c085cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e38c6cd-569e-42b4-ab33-b55e6ce7c8c6",
        "cursor": {
          "ref": "718d2e1e-1229-421e-8936-b218a2720814",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "29fb122c-5981-41e7-8081-e2d454587936"
        },
        "item": {
          "id": "6e38c6cd-569e-42b4-ab33-b55e6ce7c8c6",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "cb531db7-4e6e-4d7c-99a8-71bf1342be7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1636e3ed-3dfe-45ce-a9ba-ae3e00a99cc5",
        "cursor": {
          "ref": "87ff527f-8c1f-4d59-94ed-262ea8ce2181",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "33c0179b-0b96-495d-ab24-45e3a696d01f"
        },
        "item": {
          "id": "1636e3ed-3dfe-45ce-a9ba-ae3e00a99cc5",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "db172326-4747-47ec-ad05-319175064ec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9fce7a3-c1f3-4f54-840e-d5f6b3f19f45",
        "cursor": {
          "ref": "c704fe12-323a-4ce8-9a29-c3268f42ad39",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "1dd6e47e-56c1-4e9e-9312-9ce3ccb19511"
        },
        "item": {
          "id": "c9fce7a3-c1f3-4f54-840e-d5f6b3f19f45",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b105eae3-00aa-4752-9236-e0fd6720e23a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2eb9821-6df8-42b9-80c0-2e3ae43a4541",
        "cursor": {
          "ref": "df3686d5-21f3-45ff-b550-4a64c4e3dfc9",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "56542967-0043-4fb2-a80f-ec799a5f7262"
        },
        "item": {
          "id": "c2eb9821-6df8-42b9-80c0-2e3ae43a4541",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d9814337-ae0d-4205-a475-f62f34ab60b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "843b7948-74e0-4803-be55-14b0c01f26ff",
        "cursor": {
          "ref": "b5201bb5-8b09-4915-a80d-427cffda7865",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a2f0d287-f95f-4c2d-8677-bc3a4a5d55e4"
        },
        "item": {
          "id": "843b7948-74e0-4803-be55-14b0c01f26ff",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "9b71be06-fc32-4f37-aa46-e68fa15fee2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "620da9de-8271-445c-887d-0a57455f9234",
        "cursor": {
          "ref": "51f71181-622b-470f-8a8b-b09858249852",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "08a64955-4cfa-45c6-9d92-ce2976d06014"
        },
        "item": {
          "id": "620da9de-8271-445c-887d-0a57455f9234",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3d46aab7-13c9-4ae3-a0c7-50cf7927e6b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a30657-8633-4e02-be5d-b954eb880941",
        "cursor": {
          "ref": "2a22616e-604c-4d1e-9f9f-98664de4c8f6",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f0c9595c-119e-413a-a772-66c0883be942"
        },
        "item": {
          "id": "e1a30657-8633-4e02-be5d-b954eb880941",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "1faabc16-78de-4f4e-b7f0-95c2995a91de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b70e20cb-ec7e-42cf-bb16-596da9321c76",
        "cursor": {
          "ref": "ffc7ed76-d2e6-430b-809f-75146d8b6365",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "96412f1b-b50e-4a8b-a745-aa444546cee2"
        },
        "item": {
          "id": "b70e20cb-ec7e-42cf-bb16-596da9321c76",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "7feaeb70-cd12-4ebb-96d3-bb20346bcae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef25909-028a-4994-b5cf-aba5cf765c7c",
        "cursor": {
          "ref": "a3576633-e493-4829-887b-92516455c44b",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "30ce602d-20a2-4f5b-a486-1ba4e4ed8534"
        },
        "item": {
          "id": "fef25909-028a-4994-b5cf-aba5cf765c7c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "7ff6880d-6087-48e4-9bf9-93dbab6b6d81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec9f69dd-c025-4f50-afe5-ee05850bc5fa",
        "cursor": {
          "ref": "7fbf7e6e-dc31-4354-a860-cd9f3db87978",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "22092ccb-adc6-446f-aa34-57de0ad52b09"
        },
        "item": {
          "id": "ec9f69dd-c025-4f50-afe5-ee05850bc5fa",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "54378840-b771-40d0-bf89-7d4ca3fa3157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc220f5-47ba-4c0c-b894-20e944494eca",
        "cursor": {
          "ref": "20ec2920-b21f-4703-abe6-fe67d6f1193c",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "05d5fcfa-a198-4c0a-8bd8-f6a23017dade"
        },
        "item": {
          "id": "1cc220f5-47ba-4c0c-b894-20e944494eca",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "83c2b18f-9d12-42a1-bdcf-a0c0052d0827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e2fae9-57e1-4ff4-b900-b02836ebb02e",
        "cursor": {
          "ref": "feb52079-800f-41a6-a771-383a614b0679",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "27f98c8f-b285-4b19-8d39-83696447bdc0"
        },
        "item": {
          "id": "c4e2fae9-57e1-4ff4-b900-b02836ebb02e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "dd117bb0-69d8-4a76-96c8-f2d65c428fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff1241c-6dd8-423a-8af1-a04d12573c72",
        "cursor": {
          "ref": "bac5b21c-f707-4e8d-97ce-d1da4c923b3d",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "32da93c9-38e3-4a55-a5ba-e8a7509c9bcc"
        },
        "item": {
          "id": "eff1241c-6dd8-423a-8af1-a04d12573c72",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2be9db29-9e09-4aab-be8d-2b04bd40ed3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dfcb351-ab35-4c87-a72b-73a4f9a443e1",
        "cursor": {
          "ref": "703fc3cb-10b3-428b-a317-94e2ade69d0e",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "11d347d7-2432-4d7c-be43-e9a9988c9bfb"
        },
        "item": {
          "id": "8dfcb351-ab35-4c87-a72b-73a4f9a443e1",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a30ccb99-4e88-4003-b4e6-e44d0685dd08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa68c449-dd0c-42fb-ac72-686d30bacab9",
        "cursor": {
          "ref": "46a33af6-5fba-4d66-ba14-6b09a516ce5f",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "8549b3f6-2e7d-45e0-bfec-aad54b49ee0f"
        },
        "item": {
          "id": "aa68c449-dd0c-42fb-ac72-686d30bacab9",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "3c248abf-db62-4e7c-b9d4-913445b96474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bcbf339-ec13-4081-9e96-3790d4750545",
        "cursor": {
          "ref": "849ed233-b906-4028-85c9-3fcf00b57c59",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ece3c10e-4f7f-4107-a58a-577e05a29d66"
        },
        "item": {
          "id": "0bcbf339-ec13-4081-9e96-3790d4750545",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "53953629-c8b6-49bb-84ab-4d99fa5dc3c0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ab9363-faef-4b98-b12d-6be7d6639242",
        "cursor": {
          "ref": "484cb21a-a025-4fbb-8dbb-8a1a27f54f5d",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b0cc4943-5ef8-479b-93f8-aa696bccc41a"
        },
        "item": {
          "id": "b9ab9363-faef-4b98-b12d-6be7d6639242",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "1a405376-3a36-44bf-ba0e-f5f4551a7511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "e48e0347-00ea-4161-8eb3-e0e64ff8a54b",
        "cursor": {
          "ref": "7ef25275-e2bd-49ec-839e-c1551225988b",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "324e831e-e355-48ff-bb96-832e54631ec2"
        },
        "item": {
          "id": "e48e0347-00ea-4161-8eb3-e0e64ff8a54b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b22ed8ab-5550-4d02-b034-1ef8226c120d",
          "status": "Created",
          "code": 201,
          "responseTime": 9460,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d198a21-5e06-474b-a6da-62f6c2197fca",
        "cursor": {
          "ref": "618685cc-2e92-483a-af36-fe894b4cce94",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "591417b3-3027-4820-9730-fcde77742294"
        },
        "item": {
          "id": "9d198a21-5e06-474b-a6da-62f6c2197fca",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "25ba3b71-7cbe-419d-8607-860e8b83a6bc",
          "status": "Created",
          "code": 201,
          "responseTime": 8980,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9598be7-f6d4-4913-96b8-94ee2177cb57",
        "cursor": {
          "ref": "2593d889-caf6-4978-b05a-e3230652e0bf",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d77b400f-340a-4eee-9cfc-560de6615c3c"
        },
        "item": {
          "id": "f9598be7-f6d4-4913-96b8-94ee2177cb57",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "8d83f3bf-401f-4807-b923-af33d23da9f6",
          "status": "Created",
          "code": 201,
          "responseTime": 8327,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece847aa-0160-475a-b5da-e83e4fe387b1",
        "cursor": {
          "ref": "11c07e05-cdac-419e-a690-166e4409cf67",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "f01c74cd-1557-418c-bb77-e7ce18870a48"
        },
        "item": {
          "id": "ece847aa-0160-475a-b5da-e83e4fe387b1",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b4a73285-2e50-40aa-9e0f-30c4ca71ec92",
          "status": "Created",
          "code": 201,
          "responseTime": 8469,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed589af3-b60d-473e-8b03-92af272fd6d1",
        "cursor": {
          "ref": "01c67a09-7f6f-4072-ab0b-87e45cbe34cd",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d9f99677-7da4-493e-abec-eb00dd38beb5"
        },
        "item": {
          "id": "ed589af3-b60d-473e-8b03-92af272fd6d1",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "0bd3e699-8a99-4f76-bb62-702b6063fd7c",
          "status": "Created",
          "code": 201,
          "responseTime": 8203,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb14e8e-b4df-4373-a587-213ce8ca04de",
        "cursor": {
          "ref": "5b3ac08b-be88-4cbe-adef-feb3334ae52d",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "dd5afc86-a0a3-4d3c-bb8d-71acde3a2f8d"
        },
        "item": {
          "id": "acb14e8e-b4df-4373-a587-213ce8ca04de",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "660f4e6e-6698-439f-848b-e8e2f298d013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "d505572e-839b-4c3d-b9e2-b07398ed344e",
        "cursor": {
          "ref": "25c80a87-10c0-4ecf-b92e-7b506fcaab2d",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "af6b4c4a-10f9-4d81-b459-0f3095fde945"
        },
        "item": {
          "id": "d505572e-839b-4c3d-b9e2-b07398ed344e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "05f12757-2d07-4146-9b76-d0309641b34b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72d40a3-de76-4893-a93e-9dd3673bbc56",
        "cursor": {
          "ref": "2b72620a-70f8-462a-b7e3-4f4dba9e365e",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "77a94e65-3d4a-46d3-a08a-6b2a3459974a"
        },
        "item": {
          "id": "d72d40a3-de76-4893-a93e-9dd3673bbc56",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "77f071fd-5e7a-4ac6-9e4d-03edb80b19bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12952700-8108-422b-8d44-1bf311d2cbff",
        "cursor": {
          "ref": "26b5856f-3fe1-4e59-b8ea-1c1a8c97d31e",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "578ec5b9-78f8-4b47-a8b4-ac2c9724c668"
        },
        "item": {
          "id": "12952700-8108-422b-8d44-1bf311d2cbff",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1c17038a-69fc-41f3-bc4b-d2a5898155d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5999476-29e5-45db-be93-d1d593586370",
        "cursor": {
          "ref": "b62976d4-2308-4ef8-bd88-72d80c842b1c",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "630a2a61-8c9a-4054-8c4f-414e6a94b7e9"
        },
        "item": {
          "id": "b5999476-29e5-45db-be93-d1d593586370",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f902c618-d30f-471d-8cab-9b9a3ea552c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afdb7e85-76f9-4d9f-a507-c06dc7c2998f",
        "cursor": {
          "ref": "3a26a590-4161-4264-a0a3-578f613c256f",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a11b7fba-c32c-49ed-9d8f-efd8ed622354"
        },
        "item": {
          "id": "afdb7e85-76f9-4d9f-a507-c06dc7c2998f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "de92a81f-a0eb-40f0-aa2c-bfdc2670dcaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49f6ef5-87b7-4a17-9181-d5b85ee00aec",
        "cursor": {
          "ref": "0494ab1f-1c10-426d-8791-480426562daa",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e5e34588-d189-49a8-961e-2ee9dc0a3972"
        },
        "item": {
          "id": "c49f6ef5-87b7-4a17-9181-d5b85ee00aec",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "64eaf456-e213-4f26-9546-2ca7eda06e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "921bf75d-1bc3-4a2d-9fd3-9e443d6057fb",
        "cursor": {
          "ref": "7f669c2b-7833-4123-9b62-122898052ccf",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9c83057a-bf98-4010-b4c8-5055d08685ab"
        },
        "item": {
          "id": "921bf75d-1bc3-4a2d-9fd3-9e443d6057fb",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1fb1cdec-6f20-45e7-b026-a720c5118ffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21d15ff-991b-4951-a842-cd86b253cefd",
        "cursor": {
          "ref": "af09f14c-10a7-44bc-be2f-9ca5dc1832f1",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "1a3fa0e0-8692-4faa-bba5-5e1803cb73ef"
        },
        "item": {
          "id": "a21d15ff-991b-4951-a842-cd86b253cefd",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "409d9aa3-2673-4657-985e-7146b439e3e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3821684-f65a-4fd1-a820-a8c948863e1b",
        "cursor": {
          "ref": "babe5243-dd8b-4bf8-bae8-c7916872be82",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "bbd19290-4292-4a89-b7c0-bc3ed54aec89"
        },
        "item": {
          "id": "d3821684-f65a-4fd1-a820-a8c948863e1b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ac2b6b5c-cab7-492f-93c1-210e166dac65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca38026-eada-492b-af4a-655bdd865b70",
        "cursor": {
          "ref": "50642b86-3f6b-4d91-a1c3-b034c0d2f2c2",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "6ea7ec9f-c342-463b-987e-6c792811f3dc"
        },
        "item": {
          "id": "3ca38026-eada-492b-af4a-655bdd865b70",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "371b9928-d5ef-4054-bda4-a96b574c172d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac5e072-19b6-4961-a370-8e3d8e6b4d69",
        "cursor": {
          "ref": "2206e31b-4e56-4782-9ccd-55c0a397283c",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "c1eedc48-3240-41de-8686-0b097661d4a2"
        },
        "item": {
          "id": "eac5e072-19b6-4961-a370-8e3d8e6b4d69",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "23f39668-2cd2-458f-ba5c-210ffbfbd7e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "642fc9db-54ef-487e-996f-11a3627f8f46",
        "cursor": {
          "ref": "bec38259-9a36-4716-b386-bb03b0571a3e",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "df57cf7b-fd31-4a48-a46a-0aaaa5a98c83"
        },
        "item": {
          "id": "642fc9db-54ef-487e-996f-11a3627f8f46",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d3acd7e0-0840-45dc-8be6-20cc73e5a218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dea07ead-f058-4c25-ad08-a56ea7f9273c",
        "cursor": {
          "ref": "920d1ad9-4681-4bb9-9d69-4fee6d93b729",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "50e31937-995f-4045-901f-aaf9b5c22b4a"
        },
        "item": {
          "id": "dea07ead-f058-4c25-ad08-a56ea7f9273c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "064fe65f-f240-4cb7-9e6d-e8df052478e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "817d2420-9f82-4a36-b9b6-0ee0d345a96b",
        "cursor": {
          "ref": "67c50088-97c0-4fd6-b93c-1a392729b285",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "15060adc-cf1a-4531-a344-a4ce4c01b86e"
        },
        "item": {
          "id": "817d2420-9f82-4a36-b9b6-0ee0d345a96b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d661f46e-8761-4b76-8ae6-20c656a8e95f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bde91f77-99b5-4c57-8b15-ddc8d9c6fd4f",
        "cursor": {
          "ref": "26a93990-484b-4116-a9a3-947d39269228",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5fb4f508-dc30-4914-b0c4-4f87b63ee606"
        },
        "item": {
          "id": "bde91f77-99b5-4c57-8b15-ddc8d9c6fd4f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "793024cf-af26-41ea-88a7-6a619981c29b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a59dafca-b4c7-42c3-8991-9ec52b05ca73",
        "cursor": {
          "ref": "d9fe9252-c137-42f3-9092-a26a217eb144",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "75e80b55-722f-4926-9f23-812483325586"
        },
        "item": {
          "id": "a59dafca-b4c7-42c3-8991-9ec52b05ca73",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8365387d-427b-43d5-950d-612336a57ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ae5dae-ed1c-4527-bee9-da4eddbed0af",
        "cursor": {
          "ref": "3e14140e-1303-4e05-84f4-7f7819f19f98",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "731fab11-ed22-4786-a13f-8997d036861e"
        },
        "item": {
          "id": "38ae5dae-ed1c-4527-bee9-da4eddbed0af",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a7e3f43c-9d40-4081-b049-9b55fb284ecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc405da2-e59a-4954-803e-0034a38df404",
        "cursor": {
          "ref": "0f3b4aca-052b-4985-9f4b-7b27ab192d27",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "122e80e4-0ba8-4181-b5aa-060764f7f367"
        },
        "item": {
          "id": "bc405da2-e59a-4954-803e-0034a38df404",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2570b9c7-8ce5-4c4c-9896-7b1abb065db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf749df-a6ea-444f-9225-8ac8a483dcd0",
        "cursor": {
          "ref": "6e7e28f1-c73a-4b54-a767-1326ade2981a",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c6bd6101-b814-4eb4-b4b1-013705bf0913"
        },
        "item": {
          "id": "7cf749df-a6ea-444f-9225-8ac8a483dcd0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4953278b-3d48-43bb-9c5a-3f7069f8bd12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d12c46e4-b086-4d8e-9a67-a521ea615a3b",
        "cursor": {
          "ref": "708ad49c-d898-47f6-bd7f-2cf5af3258dc",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "117c512c-8957-43fb-9942-6deac46f086e"
        },
        "item": {
          "id": "d12c46e4-b086-4d8e-9a67-a521ea615a3b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0fcf9ef1-0900-4cdd-a04d-636845556136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d387ec-00e1-4764-94c3-6b46344d3e01",
        "cursor": {
          "ref": "fe48ee68-86f2-4b9a-9428-5885f427e4cf",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "30978cee-c2fd-467c-9d4b-3152e51e1819"
        },
        "item": {
          "id": "c0d387ec-00e1-4764-94c3-6b46344d3e01",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8d712e15-1859-4796-b785-f36f3504a4a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f0e063-00b8-4dec-9101-f51521abae37",
        "cursor": {
          "ref": "fcb06120-7393-4a52-9af0-6b6275c732d5",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "ec73f52b-5d78-481e-bed9-bde9ef2e0f33"
        },
        "item": {
          "id": "70f0e063-00b8-4dec-9101-f51521abae37",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d1c7261c-a3eb-4fe1-a19b-5fe09174d4a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a791b6b0-9ccd-4c33-8ac0-aab1d5bb7af2",
        "cursor": {
          "ref": "d7c6e4c5-1c72-4f16-8246-b0b0fc83194f",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "3fecb5ce-96b1-4a81-a39e-2c1b7a3b7b24"
        },
        "item": {
          "id": "a791b6b0-9ccd-4c33-8ac0-aab1d5bb7af2",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7db2bb91-b159-488f-bc31-c36156d657fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e7a17ea-8c01-44f2-a7ba-c334e86cd722",
        "cursor": {
          "ref": "410ac026-ff21-498f-814d-d65dba37347e",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3fa7c7b7-a7ad-4fbd-8441-721bb28529ee"
        },
        "item": {
          "id": "3e7a17ea-8c01-44f2-a7ba-c334e86cd722",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d641af79-2cc0-49f8-8776-5b1983a4cb7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ce85c5-4a6b-4331-88b3-ee4d518aaea9",
        "cursor": {
          "ref": "0b68ab76-645e-44f6-8b89-08c065d17c35",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6da11b6b-142a-4300-9cf3-a631a211e19b"
        },
        "item": {
          "id": "a3ce85c5-4a6b-4331-88b3-ee4d518aaea9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "55a6af12-c6e1-4f46-b137-2d45c9879a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dba2e0f-2fc3-4b3a-acd1-5c226cb67eee",
        "cursor": {
          "ref": "10e71149-2292-4c7e-a194-e6daa22beaaa",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c3406733-9d05-4995-a0a9-b6b6ae2b5588"
        },
        "item": {
          "id": "9dba2e0f-2fc3-4b3a-acd1-5c226cb67eee",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1bbe0829-dd7e-4d9c-9622-ebd80172ccf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20a52f8-e9c2-4045-b7cd-f835ab88ef63",
        "cursor": {
          "ref": "e9a093ec-507b-404d-a90a-df23e2c65d87",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "464eabef-8774-411c-a7e5-62f811d0aa08"
        },
        "item": {
          "id": "f20a52f8-e9c2-4045-b7cd-f835ab88ef63",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "67cd3a0b-19f4-42fe-9a63-73d1cd5518a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cc6e027-cbab-409b-843f-acb376263fe1",
        "cursor": {
          "ref": "1097b8c9-690d-4c55-9799-c7ceb480f821",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "42386d12-91e9-4b93-b4c1-77fbf104dffb"
        },
        "item": {
          "id": "3cc6e027-cbab-409b-843f-acb376263fe1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8cca6a4d-6f53-4620-b259-a4b438f63391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f595231-b5d8-4390-817f-64210fc0d119",
        "cursor": {
          "ref": "a53120a4-5aa4-4f1c-956c-17562fa87d07",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9497f95a-3d0b-4a08-8e28-54d2ff8110e7"
        },
        "item": {
          "id": "6f595231-b5d8-4390-817f-64210fc0d119",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6cc253d7-f5e2-4723-95e4-13611b364f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b71a61f-350e-48b5-a453-c5a8782788b6",
        "cursor": {
          "ref": "5b884427-f26b-4735-9672-060b8a6d84be",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e2f9efad-bc8e-4479-9dd3-d68f8cfba348"
        },
        "item": {
          "id": "5b71a61f-350e-48b5-a453-c5a8782788b6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "786fdcc3-a9a5-4832-bb10-51290157fd8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb4f31f7-75f9-4cf4-8476-5551957576b3",
        "cursor": {
          "ref": "9446378f-ff93-413d-b11c-ce34a7213f97",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "abfa9fee-cbd6-4728-b015-774213c25cac"
        },
        "item": {
          "id": "eb4f31f7-75f9-4cf4-8476-5551957576b3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9d2a2f93-7cc2-4c14-be0a-27151a5ed8d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8aac532-e77b-4135-8dd2-ef3d0d7ca7f4",
        "cursor": {
          "ref": "46e6c83e-ad68-4bfc-aa4b-7bf7024924e1",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "e156f406-0af2-469f-ae7c-cd54903bde3f"
        },
        "item": {
          "id": "e8aac532-e77b-4135-8dd2-ef3d0d7ca7f4",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "cc125642-78c5-470e-b4a7-e39de388e400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4c6c49-a3ae-49ea-a98a-0833874c4b46",
        "cursor": {
          "ref": "3f989d31-f169-48e9-99ff-ffc304b811af",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "2a043390-4025-4ce2-8b2b-2217d41342f7"
        },
        "item": {
          "id": "af4c6c49-a3ae-49ea-a98a-0833874c4b46",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3a443832-c94f-407a-867b-be61177a8357",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e90b22fc-334d-48c3-af9d-d213b7d7aab5",
        "cursor": {
          "ref": "7dc66dfc-b70c-4775-87af-4d2383a39fe4",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "04b84bee-9eca-4782-9acb-aebd1846bfc3"
        },
        "item": {
          "id": "e90b22fc-334d-48c3-af9d-d213b7d7aab5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f15a9bf2-6f5c-4d52-b30a-cae84305c7ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e38d0124-c50a-4554-a26a-413a9daa95ca",
        "cursor": {
          "ref": "9ad8cfc6-3985-44f9-bef6-607290198cad",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c3a5e347-eab3-4c55-b164-9ab0b7efcd8f"
        },
        "item": {
          "id": "e38d0124-c50a-4554-a26a-413a9daa95ca",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "edaac553-3db0-402f-a42e-622a8fc56b3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64780dcb-7009-4ce8-a3ee-7e0603bbb723",
        "cursor": {
          "ref": "a40e8a98-830b-4969-a73f-a7e9bfd30dab",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "88d807fa-9058-4573-b861-094209a83b1e"
        },
        "item": {
          "id": "64780dcb-7009-4ce8-a3ee-7e0603bbb723",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "72ead808-7614-48e8-9b08-0f3b130d1d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e322eab-7931-4a88-8453-77955894b1a2",
        "cursor": {
          "ref": "7071b3ef-2fba-488f-91d8-b2f7cd89684c",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d26da3a5-c68e-4302-86e0-5e83f1225793"
        },
        "item": {
          "id": "2e322eab-7931-4a88-8453-77955894b1a2",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "46ae4d99-c67d-4ae8-9042-7ddaa34fe147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8748d3eb-f06d-4233-86d9-2d441ed3d752",
        "cursor": {
          "ref": "e104bfb9-7351-40ad-8e20-8350e4940cbd",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "fc527dc3-d211-4b93-9ff7-2dd29c68e0a1"
        },
        "item": {
          "id": "8748d3eb-f06d-4233-86d9-2d441ed3d752",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0ad0ff1e-a626-4310-b8b6-1dfde9aac763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce92e42-c58a-4a13-bd00-85ef3a93ba51",
        "cursor": {
          "ref": "0d6a267d-1634-4eca-a99a-251a4643c9a5",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "493e561b-c468-4f86-9369-c93605037a5d"
        },
        "item": {
          "id": "cce92e42-c58a-4a13-bd00-85ef3a93ba51",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "72618f3d-e2a0-4ca0-8696-c1aece45f44f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "905be741-b715-4c84-b38d-9bae0fc4fa0b",
        "cursor": {
          "ref": "4a3d71ef-9465-46c0-8a63-732184b0124a",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "04e5d8e2-cb4f-428a-b297-0fb3c7390549"
        },
        "item": {
          "id": "905be741-b715-4c84-b38d-9bae0fc4fa0b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4e57bdcf-b98c-4e5a-9097-cfe09074927d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5265819f-3a0f-421d-a65c-be34b2e17045",
        "cursor": {
          "ref": "c4b6c598-09b9-4850-9211-4edf8658990c",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "c4097dcc-085a-4c39-a26a-7411e57575e3"
        },
        "item": {
          "id": "5265819f-3a0f-421d-a65c-be34b2e17045",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "cc39d035-25ed-487a-9fd0-7ae2e7378f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb8bb918-d820-466d-8cb5-b2c72a2750a1",
        "cursor": {
          "ref": "5a36bebd-b371-4b0b-9088-71fd23a2564c",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "50ce31a2-0604-4bd6-b6fd-836c89adc206"
        },
        "item": {
          "id": "cb8bb918-d820-466d-8cb5-b2c72a2750a1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "036f2f56-b29a-4c95-900e-6f4afe1aec3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "456cbe9c-54c8-412f-b16f-19db043cb598",
        "cursor": {
          "ref": "bbe87370-6e4a-4e76-8d5b-4b59726e7015",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "748d5346-e08d-4697-a858-db74b9411023"
        },
        "item": {
          "id": "456cbe9c-54c8-412f-b16f-19db043cb598",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "97f81106-06db-43b5-b0bb-dc6196224fee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbce735f-02f1-4af7-a7c6-6edae8c81d12",
        "cursor": {
          "ref": "a3942bca-6a2d-4a2d-b2bd-8e17778507ec",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "939f182e-8680-4fb8-a8a4-3ac5861ac88c"
        },
        "item": {
          "id": "bbce735f-02f1-4af7-a7c6-6edae8c81d12",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "560236b9-2c30-4770-9d41-c42696bb5743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63119f33-1303-498f-9402-d25ce9db5690",
        "cursor": {
          "ref": "f2798d18-3c36-4158-a2bd-54264684b5de",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9383285c-2ce8-4cd7-8f68-81ddb889492e"
        },
        "item": {
          "id": "63119f33-1303-498f-9402-d25ce9db5690",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "996404a6-a0dd-442c-8542-47c57628b37d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37d92a5-7717-4671-8a8a-ea8b3d90b915",
        "cursor": {
          "ref": "ed964133-6106-405b-adca-9c67ad2217a9",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b71050e1-724c-45d6-9b15-5eeb8165eb91"
        },
        "item": {
          "id": "c37d92a5-7717-4671-8a8a-ea8b3d90b915",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "dc5f3768-f230-4b30-bd82-8b220a13a347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "756c1602-f5d6-4caa-a452-a0c425c89a1c",
        "cursor": {
          "ref": "706d0fee-d392-41f6-951e-5a1d5b730a5f",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b2d87df3-46b6-4af6-98cc-b050de8dc418"
        },
        "item": {
          "id": "756c1602-f5d6-4caa-a452-a0c425c89a1c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "05566310-1b35-4e94-acc1-c0e203cb5a4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13b3545f-be58-49f7-9387-0fa1ab9459b5",
        "cursor": {
          "ref": "ec47731b-91fe-4c85-a2e7-f9e9ab20d772",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d9392622-5686-4fe0-b3c6-e1c7454cefaf"
        },
        "item": {
          "id": "13b3545f-be58-49f7-9387-0fa1ab9459b5",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b033c229-48ef-4af5-aa47-bd9d6fb5ddad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd70e41-926f-45a2-baff-2c4ac27b752a",
        "cursor": {
          "ref": "a966d44c-28d4-4f8e-b570-483984772a99",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b2664db7-7dcd-40b8-b1be-9965e0e659a1"
        },
        "item": {
          "id": "8bd70e41-926f-45a2-baff-2c4ac27b752a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7213357e-3938-44c9-a864-7469689b036c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364f9639-84d1-42fa-ab25-be8df3c23bb3",
        "cursor": {
          "ref": "e0b1d4d0-b9bb-469f-8754-59a0b2419137",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f633b7d0-158e-4949-9385-b45449369671"
        },
        "item": {
          "id": "364f9639-84d1-42fa-ab25-be8df3c23bb3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b2c79d10-0f99-4d0e-bfc2-6b38f0489a55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "084b3041-0152-44ff-9dfe-260a18129a2a",
        "cursor": {
          "ref": "b5d598f2-d9e9-48b2-aa27-959b9578f63b",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "593db654-324f-41ea-8b83-a8608bd3e3b4"
        },
        "item": {
          "id": "084b3041-0152-44ff-9dfe-260a18129a2a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3b66817a-6839-4fef-88d0-f9819686d00d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "801cca9a-9363-4172-996a-55ca324c8c29",
        "cursor": {
          "ref": "912d167d-5f35-4aba-a57a-6ceb0b328e87",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "74b974c2-dca0-401e-b1c7-03659c93b51c"
        },
        "item": {
          "id": "801cca9a-9363-4172-996a-55ca324c8c29",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e86bf271-c144-473b-9d07-73f436da8ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d3a0d0-9401-4125-acb0-1fa329fdb599",
        "cursor": {
          "ref": "c46f5991-683d-49a0-bdf5-8eb3ed30e1fa",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b977683c-793b-4ded-938f-39b5706325be"
        },
        "item": {
          "id": "35d3a0d0-9401-4125-acb0-1fa329fdb599",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e24dd9e0-466d-4bcb-8eee-29500fad8fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "613b599f-cfb5-450e-90e7-4f4252db4c1c",
        "cursor": {
          "ref": "290324ae-7bce-4458-992f-b77c20dac9f2",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "96e9786a-a56f-4172-8826-980fbaa36d78"
        },
        "item": {
          "id": "613b599f-cfb5-450e-90e7-4f4252db4c1c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "85c148f3-0c5d-4a38-b314-ba76645132d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e70d474a-56c0-4b3e-aae6-e1218b21fca6",
        "cursor": {
          "ref": "5f459162-5f3d-41b0-8bbe-f6fb8960edd6",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "9098b5a1-a55d-471e-9a5f-c2d60e9ce846"
        },
        "item": {
          "id": "e70d474a-56c0-4b3e-aae6-e1218b21fca6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c3ca766d-c4e3-443b-ab93-18564c1b5e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e45889-7999-4189-aa15-05d3eedd7d7f",
        "cursor": {
          "ref": "60dd752a-a7b4-47d5-b511-2001e4d13fd1",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "59fe7942-6b35-4bb6-8858-d51b76bd35f8"
        },
        "item": {
          "id": "26e45889-7999-4189-aa15-05d3eedd7d7f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7a86586a-a900-4085-b680-dc544b8f1fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9377fdb-2114-411a-b0b8-6d86a7daf5c1",
        "cursor": {
          "ref": "79cc9dc2-157d-4438-a6f3-b6ef5e078b84",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "bb1de37d-9cde-4b3f-8d20-de71d4e26237"
        },
        "item": {
          "id": "a9377fdb-2114-411a-b0b8-6d86a7daf5c1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "30cc2bb9-71b3-4d09-a9f8-a2fd05167b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c06023f7-85ea-48ef-9138-439ee80619f3",
        "cursor": {
          "ref": "609013ae-1fd7-429f-bff5-0d2566b21c3c",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "05daa8e6-e951-48c6-9732-0e1e98d33598"
        },
        "item": {
          "id": "c06023f7-85ea-48ef-9138-439ee80619f3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "250f693b-9425-47ca-99e3-fbf585d9ebf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87bfbba7-3e36-4002-a311-4d60374afe18",
        "cursor": {
          "ref": "5f549999-9400-4e45-87f7-b2aca0c98922",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "1ee5bcbe-5162-4624-ba45-abd12d60df2e"
        },
        "item": {
          "id": "87bfbba7-3e36-4002-a311-4d60374afe18",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "173f9326-ab59-48e5-b7c7-092a24605720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6729eb71-63eb-4e8a-96a9-d2517c5bf779",
        "cursor": {
          "ref": "d1acd0ae-b12f-4df8-8556-9a918971c331",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "19ee1341-21e1-4e2c-a91b-f941d73e781a"
        },
        "item": {
          "id": "6729eb71-63eb-4e8a-96a9-d2517c5bf779",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9dfe3041-eede-4b42-bbda-ecd2fb0f5025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "311f57af-4e04-4e4d-b36d-52240f96a03a",
        "cursor": {
          "ref": "b2fb40a7-c98d-48a4-9bc8-90745781d2d8",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b5bec1d6-18c2-4c8a-afa4-e65c31e1474f"
        },
        "item": {
          "id": "311f57af-4e04-4e4d-b36d-52240f96a03a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d4d7b2e1-fde6-4821-8aae-db8e3bc0a721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20e788ac-1aee-4b3f-bd22-546b3ac7e960",
        "cursor": {
          "ref": "bb6cebb0-84b3-4e5a-a9a3-297616ef56e8",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a75438c0-1e0b-4e1e-98f8-5152891ec561"
        },
        "item": {
          "id": "20e788ac-1aee-4b3f-bd22-546b3ac7e960",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "39c401a6-f9fd-4f55-ada5-9280d11ee24f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e211aaa-2058-4e55-afa2-7282955e9899",
        "cursor": {
          "ref": "726c22ef-e877-43a8-af9d-e6fd5b7e28e3",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "813deb6d-6af1-4320-a111-85d69a22bb1d"
        },
        "item": {
          "id": "1e211aaa-2058-4e55-afa2-7282955e9899",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f361b8e4-e181-47ba-86d6-92f8a868bfa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71bcb5a2-5e59-4287-81c9-95f1c7a54ad1",
        "cursor": {
          "ref": "55bc5998-7b11-4828-af1e-7680693c7c26",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ec3c0815-912d-4659-835a-dee44996f04e"
        },
        "item": {
          "id": "71bcb5a2-5e59-4287-81c9-95f1c7a54ad1",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "27ee334c-8c92-4323-b0a5-95b252598460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8765953f-3c75-474f-b825-18f75b356e2f",
        "cursor": {
          "ref": "1ed86903-d6ef-4e99-826d-85fa557194b2",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "125ca28d-bfbc-4b9c-ae66-4e0264a84dba"
        },
        "item": {
          "id": "8765953f-3c75-474f-b825-18f75b356e2f",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "18309c9c-d705-4351-9704-799778c2dbf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37cb8ead-7974-411c-8d87-e7c127cb586f",
        "cursor": {
          "ref": "168e02ee-bcfe-4c31-a3a7-7d722cc91c6a",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "25282d7c-e88e-49b1-aaac-81a5b17d2786"
        },
        "item": {
          "id": "37cb8ead-7974-411c-8d87-e7c127cb586f",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d4a233ac-665f-4a7f-9e01-51b3f2b7edf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d0f3450-c6e1-45fe-a7a0-f69c40ce9ec7",
        "cursor": {
          "ref": "6f545188-fbdd-488e-8d2e-259ed516502c",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "1e3562da-6819-4a8a-a769-c2e874cb4f94"
        },
        "item": {
          "id": "4d0f3450-c6e1-45fe-a7a0-f69c40ce9ec7",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "e16587d7-bde4-4462-9ea7-d486c56ea416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc2089f6-132b-4eed-aa98-28ee308c4cb6",
        "cursor": {
          "ref": "882cdec4-55d9-4ff0-ac27-4455f2087093",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "985947ce-f37e-4472-8d9b-e70eb9c9a825"
        },
        "item": {
          "id": "fc2089f6-132b-4eed-aa98-28ee308c4cb6",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "7fc81fc7-14e4-4cbc-bcd0-b94948afd41f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8b5ff2-2366-4be0-a5b4-24efa8dff425",
        "cursor": {
          "ref": "94e7dcfa-1a75-426d-a1e1-41f7e5553438",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "8d610ff0-797f-4b2e-8895-13fe85236f4a"
        },
        "item": {
          "id": "1e8b5ff2-2366-4be0-a5b4-24efa8dff425",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "8fcc1071-f964-4cf3-bfe6-37ebebf15361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a2df75b-d618-463b-99b8-c7c1f3bf2d63",
        "cursor": {
          "ref": "77ea8507-67fc-497e-8519-a352d268ec75",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "108d9afc-2778-4672-aafc-de551011bea2"
        },
        "item": {
          "id": "0a2df75b-d618-463b-99b8-c7c1f3bf2d63",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f2e43f87-f016-4000-a0d1-c0185ded5966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd36b1e-a068-4d63-b9ef-f740e091ff0e",
        "cursor": {
          "ref": "8f0c07cc-05ff-4f8d-9cd2-6bba06ba9cfe",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2da3002e-b541-4176-9270-2a16fe9208fd"
        },
        "item": {
          "id": "acd36b1e-a068-4d63-b9ef-f740e091ff0e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "26877632-9d2b-4cc3-9888-1ab83f397dcd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414efbd8-45f4-4dea-a315-4599ae7fcf6a",
        "cursor": {
          "ref": "1d06f421-f6cc-4691-81a2-0fdb059563b5",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f5634304-bca5-4b22-86f5-cdde6240fdbd"
        },
        "item": {
          "id": "414efbd8-45f4-4dea-a315-4599ae7fcf6a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c556f25a-0f97-47e3-bd43-31f239649876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a34051f-d4a0-4df7-9752-2a62553dfef6",
        "cursor": {
          "ref": "b74c3ccb-fc0a-4886-ae1f-575dd2dfd89b",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "06400633-b9cc-4cf6-92fb-7879d2a44fa6"
        },
        "item": {
          "id": "6a34051f-d4a0-4df7-9752-2a62553dfef6",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4b65d528-386f-4d9e-9f99-4412f69f3e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "056f09d6-89b1-484f-833c-13f325bcaef9",
        "cursor": {
          "ref": "23a45d90-bca0-4817-8bf7-d3dba3e6a9dc",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "25a39ce9-fa93-4fa7-a34d-742ae866abf6"
        },
        "item": {
          "id": "056f09d6-89b1-484f-833c-13f325bcaef9",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "56f21e33-1ad2-4382-8d5a-93b764b2c1c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a955b68-0374-4990-bb82-a71c6ad5cc89",
        "cursor": {
          "ref": "9c5b09c6-ccd6-4bab-9a2e-f32f5990234f",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "51f19099-ca6c-41b4-aa34-0827dd8183f9"
        },
        "item": {
          "id": "6a955b68-0374-4990-bb82-a71c6ad5cc89",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "7f1eaf0a-f9e9-4e2a-a0e3-a9a26b283ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46817bd8-87d6-4dd8-96c5-132e69e43925",
        "cursor": {
          "ref": "bf477228-a84e-4fe2-9b33-166d8f4e8219",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "fc25ded5-c415-402d-84d1-9bb77004b8a2"
        },
        "item": {
          "id": "46817bd8-87d6-4dd8-96c5-132e69e43925",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "b3563e18-47e2-43fa-ad66-7d1e1abbc9ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7555d8e1-2e3f-4dfa-89ec-44801df932ba",
        "cursor": {
          "ref": "0253c8eb-db5f-4b81-b46f-f6d7dabf1eb0",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "8dd4bbf0-2d5e-4f64-9e58-9ce140d89440"
        },
        "item": {
          "id": "7555d8e1-2e3f-4dfa-89ec-44801df932ba",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "fe7d71a5-48b4-4929-8048-a22afbd332cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd5408ea-6869-4977-83e9-49fbb35af6b6",
        "cursor": {
          "ref": "386362e1-f8b9-4509-bac2-e5e8754be44f",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "53217c77-cd12-482a-a463-7c7b0c664e4a"
        },
        "item": {
          "id": "bd5408ea-6869-4977-83e9-49fbb35af6b6",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "70b30137-d004-459a-baf3-0d4aa8ace652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6410d14d-7341-4398-9633-ff62a851250e",
        "cursor": {
          "ref": "d2631209-855c-4948-bd1f-ffb007e21cc1",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "0333a4fc-b3ed-4f05-93ad-49b681b1369c"
        },
        "item": {
          "id": "6410d14d-7341-4398-9633-ff62a851250e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "6dfe5182-3020-431b-bdfb-5171dfb5f2c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92a902a-ee57-4066-8adb-370c84aed91b",
        "cursor": {
          "ref": "439f8bb0-c15b-42cc-a54f-55875a87b1e3",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "56831bd2-7138-4b5a-9c42-2884af2f33f3"
        },
        "item": {
          "id": "e92a902a-ee57-4066-8adb-370c84aed91b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "2c88ace4-8024-4a11-bd5e-d4ef61f93f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd1570f-ad5e-4d18-8fe6-0e634b0c5739",
        "cursor": {
          "ref": "ab22cfeb-1d7f-47d4-a01a-a990637018d4",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "68dbf2df-03b7-4ba3-bbe2-064b8cf92449"
        },
        "item": {
          "id": "acd1570f-ad5e-4d18-8fe6-0e634b0c5739",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "52dd2612-a1f6-4769-b9ad-584596c34474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04bf316f-e427-4b3e-a3af-ed5f55490e84",
        "cursor": {
          "ref": "181e8118-da96-4f67-b99b-cb85e31169c7",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "0ef53b9c-748f-47a9-81a7-e71504fbe288"
        },
        "item": {
          "id": "04bf316f-e427-4b3e-a3af-ed5f55490e84",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f924c633-93df-4af1-a6bd-283875153e6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b2deb17-f0c1-4626-b496-8f5a2fe45bb1",
        "cursor": {
          "ref": "0956e881-7c10-4b06-856b-a87cb3d404d2",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "70fcd6d1-b207-44c8-a31b-32a7b39a8b3d"
        },
        "item": {
          "id": "3b2deb17-f0c1-4626-b496-8f5a2fe45bb1",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "7e7b6188-0fe7-46e5-992d-fa1ce057b4d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "247d0c00-e766-40f5-b6e6-d94f2447fdb3",
        "cursor": {
          "ref": "eaf187f1-b28b-465e-b18d-1d87fda3bbb9",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "34f3d572-66cf-4fe1-a0ea-2d190af2b7d3"
        },
        "item": {
          "id": "247d0c00-e766-40f5-b6e6-d94f2447fdb3",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "fa7c8cd5-ff87-46b0-acbd-916c9da984b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1004566-4ef0-42a8-9e24-2bf7492f1b81",
        "cursor": {
          "ref": "9a1e7b97-d468-4063-baaa-e50e4d19841c",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "76f634f6-96a6-44b4-ae12-74b3a3948901"
        },
        "item": {
          "id": "f1004566-4ef0-42a8-9e24-2bf7492f1b81",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "95aad37e-4c26-4e97-997e-bc5913fd9911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a2b7456-1c23-4928-b635-5d141f9adc2c",
        "cursor": {
          "ref": "db967af1-609f-473c-a2f5-b032f39aad10",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "72903767-cb87-4f7d-bf30-e80d37094bcc"
        },
        "item": {
          "id": "5a2b7456-1c23-4928-b635-5d141f9adc2c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "905b6ea2-b683-4757-947c-f34420aec3a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23976fca-8fd9-4de0-a8ea-4a34f31d7386",
        "cursor": {
          "ref": "7a4f61a9-3b6b-4e8e-9c11-6819b8dadbb9",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a8bc6887-1eaa-4e6a-9ea1-66a9ba80be94"
        },
        "item": {
          "id": "23976fca-8fd9-4de0-a8ea-4a34f31d7386",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ca7c8792-30ae-4b12-a9e3-153a7e04b3c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bad913b-529f-4113-9498-208d5735f27b",
        "cursor": {
          "ref": "9a6ef64c-1892-43b0-9aec-5899b5a8feb8",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "2ac9f1d6-e715-4970-b2a0-c1fc3299d020"
        },
        "item": {
          "id": "8bad913b-529f-4113-9498-208d5735f27b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "263992ba-c790-42e6-8be5-bb113f157ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf0f5237-422d-4877-932f-f7f4fa7efce4",
        "cursor": {
          "ref": "a9201b7a-94a2-45dc-af46-95176c7b5cda",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "10173876-c456-4a4f-9e8b-d3a06b878855"
        },
        "item": {
          "id": "cf0f5237-422d-4877-932f-f7f4fa7efce4",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c56b7547-81cd-4712-9814-d3fddac6911d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60606881-0272-41c7-8f2e-d41e65ed6b72",
        "cursor": {
          "ref": "0c924e28-c587-45e0-9db7-57ef484508f5",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3800cba7-805f-417f-b6b5-2be3657cd6d6"
        },
        "item": {
          "id": "60606881-0272-41c7-8f2e-d41e65ed6b72",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "36386bce-aeaa-4f1a-a0fb-7194d7765bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1754503a-f2d4-442b-ab0a-d2fb84b14926",
        "cursor": {
          "ref": "f452a3f3-4e0c-4ecb-8f13-60751182a902",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "6578e158-edce-48db-bde3-e37bc97d4535"
        },
        "item": {
          "id": "1754503a-f2d4-442b-ab0a-d2fb84b14926",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "98590152-f80c-488c-8273-29d5c1bfea7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca14e65-28e3-4b53-8212-48990f9b6d55",
        "cursor": {
          "ref": "c1315503-b72b-4035-b037-aaba61898fd4",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d1ca8bee-902c-402b-9830-f2425f3bf68b"
        },
        "item": {
          "id": "cca14e65-28e3-4b53-8212-48990f9b6d55",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "3f447275-c35c-4e8b-b0fa-ddba8258d914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e68e18-3279-457a-993c-aaf0b1d08309",
        "cursor": {
          "ref": "cb0072e1-2df6-4506-bd65-2359da1b42ba",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a67079e2-2f78-4bcf-ac34-d8374df60968"
        },
        "item": {
          "id": "c6e68e18-3279-457a-993c-aaf0b1d08309",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4f54934c-ec26-4389-b20a-70c65e65425b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5cd8df4-5f14-4f99-8037-a077151599a9",
        "cursor": {
          "ref": "694abdb3-ed11-4454-9558-8bb88a04e40e",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "8790c255-c7bb-4122-8850-7c115cad17a5"
        },
        "item": {
          "id": "a5cd8df4-5f14-4f99-8037-a077151599a9",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a1343682-9725-45f3-9f25-8b089c759594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2faad1b-84b9-43fe-86cb-7d912b4b0391",
        "cursor": {
          "ref": "d53a39d4-fc6b-4163-a3fb-291092621f73",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "4d991a30-d337-4276-b61a-704f2ba377d5"
        },
        "item": {
          "id": "c2faad1b-84b9-43fe-86cb-7d912b4b0391",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "11324f13-7f17-4389-9af3-0f1c991063ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39cb8adb-b545-48d7-90cd-23343ae024ad",
        "cursor": {
          "ref": "7854ecf0-969d-4eed-8171-fc7d0fa216fc",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "067dd2df-4103-42fd-8bf0-c285838e16b0"
        },
        "item": {
          "id": "39cb8adb-b545-48d7-90cd-23343ae024ad",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7b069138-0396-4fd9-a595-e9075b997ebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "232c5e26-086b-4e04-ad39-213d94758c14",
        "cursor": {
          "ref": "f365f184-8c88-4b92-8c65-8e47d8ad788e",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "7af96de1-9d55-4c7c-a4c3-ff79f306cb83"
        },
        "item": {
          "id": "232c5e26-086b-4e04-ad39-213d94758c14",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e076efa1-1fdd-45d6-bcf2-405c532d37d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29cb0fc7-7e4d-46cc-bb45-b109634d871c",
        "cursor": {
          "ref": "b4a7dfdc-fa01-4200-8715-620e1b8a8c6b",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d0c0b092-3ad8-4b2b-82a9-aaf981278b83"
        },
        "item": {
          "id": "29cb0fc7-7e4d-46cc-bb45-b109634d871c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "b63c4b7f-410e-433b-814d-5c7220d9fdab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8909d376-72b3-41b5-9098-4b10ab038f76",
        "cursor": {
          "ref": "8509f056-c471-409b-8bf4-14ec5d688bf4",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "44c1ed40-66f9-4877-bad9-c199f870d251"
        },
        "item": {
          "id": "8909d376-72b3-41b5-9098-4b10ab038f76",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6b34616b-93a1-44be-b99c-0fa3521964ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a16562-5a22-4214-a54c-2ff3eaaf6880",
        "cursor": {
          "ref": "9b87dc0f-461f-48fa-9fce-a0ccb4ba42fa",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "65fcce28-87b2-461a-bd7a-2f6e5224dbfe"
        },
        "item": {
          "id": "23a16562-5a22-4214-a54c-2ff3eaaf6880",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "de5762be-a44c-4d5d-a76a-5e9b3fb23978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b92733-eead-4577-b0c9-ee427070abbe",
        "cursor": {
          "ref": "7518ae59-57bd-4499-807d-62fd4c9b18c8",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c860cfc4-e4e2-4abc-bacf-1fe27457882e"
        },
        "item": {
          "id": "56b92733-eead-4577-b0c9-ee427070abbe",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2101c308-2ba8-4a7e-8c52-0ea8ce05989d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7616892-17f2-406d-86e8-4e8298503d2f",
        "cursor": {
          "ref": "a560ee91-1e2d-446f-931d-f21d8b9a7efa",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4cc1d965-48d2-45b2-91a3-3f9e2234f699"
        },
        "item": {
          "id": "e7616892-17f2-406d-86e8-4e8298503d2f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ca8d4b70-ed40-4410-91d8-61b195084deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed0cd22-9b24-4b32-a4ae-6524648026ba",
        "cursor": {
          "ref": "e672edaa-907c-47af-9fa6-cd4f27f86514",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "91bf6b88-3d54-495c-a8e3-44c6b9a6c3be"
        },
        "item": {
          "id": "1ed0cd22-9b24-4b32-a4ae-6524648026ba",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e386c2a4-8715-4991-bba7-06b6d4db9e79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fedda4ad-b6c1-4530-801e-825c5060eca9",
        "cursor": {
          "ref": "309da5e9-3178-4254-ae03-069d14aa008a",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "3b2d87ba-81c6-40d9-8148-6c36e3663891"
        },
        "item": {
          "id": "fedda4ad-b6c1-4530-801e-825c5060eca9",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "451f9974-5bcf-4fe1-8138-eb37b18ee8f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dae21b45-ae89-40fa-ad6c-a0d99468c2e6",
        "cursor": {
          "ref": "2a480eb4-9370-46fc-8e48-2e21c97fdbe0",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f4c62b7c-1155-4595-a18e-7e9c94cd9e46"
        },
        "item": {
          "id": "dae21b45-ae89-40fa-ad6c-a0d99468c2e6",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f4bbe2db-3d01-4dee-bdb6-556ad099021a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c23739d-c9d0-4cbb-9a09-0f33d6319561",
        "cursor": {
          "ref": "d439d112-558e-4568-a9d0-e6fb399e72df",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "7ad5a75a-433b-4bc0-b789-cc1b0e0ad4bb"
        },
        "item": {
          "id": "8c23739d-c9d0-4cbb-9a09-0f33d6319561",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e52dc010-fb22-4428-925b-55b846cab63e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b6ac42e-61cf-44bc-b43f-e0ff40b10944",
        "cursor": {
          "ref": "8f5c2626-307e-4c2b-8276-19f40665d48a",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "25e83860-da50-421b-b428-0bfabfde79b2"
        },
        "item": {
          "id": "7b6ac42e-61cf-44bc-b43f-e0ff40b10944",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e39ed6aa-b059-4fa9-bb95-d16c7716c4c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795142f6-2b24-4080-9bc0-b6c186df375b",
        "cursor": {
          "ref": "f09d6867-47ba-4414-b7ed-c2b3c9963dd1",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "50bbfabd-50a5-4b34-bb53-f3e11843f983"
        },
        "item": {
          "id": "795142f6-2b24-4080-9bc0-b6c186df375b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "0a36fd78-7633-4929-bae8-b3f12b449cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d1cdd03-86d6-463d-be0f-c068ad11144a",
        "cursor": {
          "ref": "88f69246-138e-435c-adea-664b9ed665b5",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "fa35181e-4496-4fe6-ac74-3b42826847e9"
        },
        "item": {
          "id": "0d1cdd03-86d6-463d-be0f-c068ad11144a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "cf243196-b663-485c-a3f0-c1b8d8526cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1202a38-1961-4fd2-adb9-65e6f5e62605",
        "cursor": {
          "ref": "3105e4af-3141-465f-8584-0b511499641a",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "0dc41ddd-a57f-4915-b914-58218b6cc23c"
        },
        "item": {
          "id": "e1202a38-1961-4fd2-adb9-65e6f5e62605",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "50422b0d-4b2c-4964-94e2-48cf87cdab51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2524bff3-95f9-4b44-9f5d-8a6e7ff51a52",
        "cursor": {
          "ref": "2d9ce228-0d5b-4e05-9fc7-b88ac1f0743e",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "1bbbd1d7-f16d-40a8-acfb-1f359f2da41d"
        },
        "item": {
          "id": "2524bff3-95f9-4b44-9f5d-8a6e7ff51a52",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2bf241f7-12fe-4c2f-b685-89c0726e73d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a44936-5a0a-48b0-8f78-ae31d6af50c0",
        "cursor": {
          "ref": "70851b10-6c4e-4bea-a704-0e4802c118dc",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a6cc5bf5-b62a-4c93-bcf5-263a9cc4ba86"
        },
        "item": {
          "id": "67a44936-5a0a-48b0-8f78-ae31d6af50c0",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d08ca4a1-a918-4be3-aba3-4344131de0a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a045fc-45db-4a81-8d53-835e9985a944",
        "cursor": {
          "ref": "eb96a18f-2c8c-456a-8a83-d223e17c41a8",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "499851bb-e7b6-4aec-bce1-8afdadc4de25"
        },
        "item": {
          "id": "80a045fc-45db-4a81-8d53-835e9985a944",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "52d30cfc-5073-48a1-8940-db68ebc553d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0eded05-d804-48c1-8a78-1da9a07e723c",
        "cursor": {
          "ref": "df79b556-fcb4-446d-8baf-ca6008f8dc2b",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "781d99cd-af7a-437c-b606-21d341438f72"
        },
        "item": {
          "id": "a0eded05-d804-48c1-8a78-1da9a07e723c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "5f328001-1a20-4640-9121-6694e08825c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc241cd-b8af-4e39-aa8d-fa8b7d643271",
        "cursor": {
          "ref": "a3388a75-7ac8-4cc5-b13d-955e5ee5215f",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "c1828153-6ffc-4ac3-94c6-1ab04e887644"
        },
        "item": {
          "id": "ddc241cd-b8af-4e39-aa8d-fa8b7d643271",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "548a5ef4-4932-4edb-9cee-be9147c3c19b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de26d60a-c3c9-43a0-9c92-9ad163819670",
        "cursor": {
          "ref": "e7df5b09-971d-4a4e-b41f-d8113dc9517c",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "8b9d608b-676d-4b5e-a148-bd4f63e489f5"
        },
        "item": {
          "id": "de26d60a-c3c9-43a0-9c92-9ad163819670",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "731ac94a-e6b4-44aa-8433-fd0bd1b81ccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec7ecb4-5675-4f44-a01c-c32ba0fce79d",
        "cursor": {
          "ref": "bef8109c-ce61-437a-8b2b-3c0f32b7b5c3",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "cd6335b0-5722-4b91-9692-da7eb15119ec"
        },
        "item": {
          "id": "eec7ecb4-5675-4f44-a01c-c32ba0fce79d",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "75914b29-c11d-49c1-b210-137e6a241d45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4abb26c2-b9e4-4666-9403-aecd72df154c",
        "cursor": {
          "ref": "0aa3c581-ee98-44a4-8dbe-67abf7566105",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "a761182f-df6c-43e5-b78d-4e7a9c94e430"
        },
        "item": {
          "id": "4abb26c2-b9e4-4666-9403-aecd72df154c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "da5f7eb2-bf75-40de-83af-d7741c0932da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8873ff-b2af-46ff-bd01-071bc29463a8",
        "cursor": {
          "ref": "ec770591-b200-4520-a1a9-2f9ea47abffe",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "472c7df0-64f1-41b8-9006-46db2e75c386"
        },
        "item": {
          "id": "1f8873ff-b2af-46ff-bd01-071bc29463a8",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "7cecff5a-85fb-4b02-b270-2290fc9c85ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a92e82-de2e-4711-8c3c-b72b248bd4d9",
        "cursor": {
          "ref": "253115a6-b9b6-4347-84c5-ac31f8512fc9",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "311ee16b-eb65-46d9-8a45-800e83b217e3"
        },
        "item": {
          "id": "36a92e82-de2e-4711-8c3c-b72b248bd4d9",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "4e02b971-8595-43b6-97af-f54e878231a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ecca51-ebbc-49aa-b9d9-46bf1604e204",
        "cursor": {
          "ref": "a86afa6c-8df6-414e-909b-9a24f79a8ff6",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d0c49ef7-179f-403c-9f8c-15808fe92550"
        },
        "item": {
          "id": "86ecca51-ebbc-49aa-b9d9-46bf1604e204",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "2dbd2017-9886-4ff3-a004-cd26afa057de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93470e5a-fd54-4739-859e-fadf5d8b9a2a",
        "cursor": {
          "ref": "e3ac3289-da4b-42e3-b65b-0edba318fc61",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "45aee317-41b7-4096-9837-539bec1874b7"
        },
        "item": {
          "id": "93470e5a-fd54-4739-859e-fadf5d8b9a2a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2b160fb5-710f-4d47-9f5c-06eced41c277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce049965-f141-4327-84e1-6f5f84962302",
        "cursor": {
          "ref": "d3d8fe29-f431-4c9e-9906-353415a97ad8",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "0d828e06-a5a9-4599-aa89-1c4107ce5c32"
        },
        "item": {
          "id": "ce049965-f141-4327-84e1-6f5f84962302",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "e7d600d5-b91d-4530-85f6-d9498f23ad26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea4b66c3-789b-41f8-bcbe-267fdb65e874",
        "cursor": {
          "ref": "45477b7a-b2ee-49d9-b09e-d9fa13d72259",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2bd7e306-ae6b-4d64-a852-037837493651"
        },
        "item": {
          "id": "ea4b66c3-789b-41f8-bcbe-267fdb65e874",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "6a0bef92-9a49-4c39-b3c2-269d05086443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "547e0971-9a04-48f6-8590-6af121e15b98",
        "cursor": {
          "ref": "8704fae2-4f8d-47f3-ac7b-df80ea3862f1",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "15f9cb7d-1259-4245-95cb-0ce763a3d45c"
        },
        "item": {
          "id": "547e0971-9a04-48f6-8590-6af121e15b98",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e232fb45-4bdc-4e35-830f-c0c4a2b2e5c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dabbb30c-3673-4ebc-a6c6-949b323be38a",
        "cursor": {
          "ref": "bca614c6-b989-4c07-ac0e-888deb7303d5",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6798c9a9-670b-4829-bc3a-01da533cf5bf"
        },
        "item": {
          "id": "dabbb30c-3673-4ebc-a6c6-949b323be38a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "70c923f3-06fe-4ecf-97b3-d83d179196dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2741ddcf-164e-417e-9a6a-231019246edd",
        "cursor": {
          "ref": "b6615622-6e1e-4ee0-81e0-34276b8b2bb0",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "901fa546-6b2c-4e26-b2e0-cd7950c1e37f"
        },
        "item": {
          "id": "2741ddcf-164e-417e-9a6a-231019246edd",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b8ed1be7-681d-4e9d-a714-11d9af498195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ba38ba2-d2d7-45e9-ad82-9708a4591f9d",
        "cursor": {
          "ref": "61e8e790-6a28-47e3-965c-65aedc0f1c82",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9529bdfa-ef70-4741-86a1-256133feec8f"
        },
        "item": {
          "id": "0ba38ba2-d2d7-45e9-ad82-9708a4591f9d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "feec178e-103c-4ef3-981c-26b1bdb5af70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57dcbe5c-e477-4df9-91c8-3b475b4c516c",
        "cursor": {
          "ref": "dae7b48f-9b76-441f-9580-adb10ec649e7",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b4f9487a-a5e6-4627-8f71-e7b5c15eb732"
        },
        "item": {
          "id": "57dcbe5c-e477-4df9-91c8-3b475b4c516c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "db498033-0318-472a-9677-35343ee34abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e6266ee-0ab1-449a-9e01-d4b22066383e",
        "cursor": {
          "ref": "cef6c846-43ac-4baf-af4d-bcad71042bdf",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "6d3072b0-c9e6-49e1-b63b-b04cf7fe88cd"
        },
        "item": {
          "id": "8e6266ee-0ab1-449a-9e01-d4b22066383e",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "66d96e59-4f45-4d5d-937a-194ed1d78f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f7f543-6aa0-4df4-b5c3-3ab324e338e2",
        "cursor": {
          "ref": "702ba21a-e093-42ae-9244-15cc67e155ac",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "5314a298-151d-4766-97ff-a394ce2f07b3"
        },
        "item": {
          "id": "d7f7f543-6aa0-4df4-b5c3-3ab324e338e2",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "9e4f3a97-39f3-4bd6-83d5-f7352a20e751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd24d69-d462-415e-910e-82055172a74e",
        "cursor": {
          "ref": "85ee3115-6316-408f-96fe-1ae017b56d52",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a0128d02-27f1-4e3d-919c-d21c674aa909"
        },
        "item": {
          "id": "3dd24d69-d462-415e-910e-82055172a74e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "41a7cf93-3e60-411b-b9e2-a08a363e03f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa0a73e-1e9a-4610-8298-c0a98f98b760",
        "cursor": {
          "ref": "8b53a27f-9d97-4c6d-a8c6-c06b5cc906a9",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "2726c169-013b-44b1-9a57-c09200f81912"
        },
        "item": {
          "id": "afa0a73e-1e9a-4610-8298-c0a98f98b760",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "dc738db7-8aaf-40ba-afb7-6ea3056853ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e5b5b3-a21b-44fb-8009-afa5a4d3be33",
        "cursor": {
          "ref": "e0a8675b-6f0c-4da0-8059-92b8eba4a132",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "432eb020-34bb-4264-97c3-1eb0b0b65e2c"
        },
        "item": {
          "id": "e6e5b5b3-a21b-44fb-8009-afa5a4d3be33",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9ed3c229-0abb-4234-8ede-d75d154ca282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed2454c-a924-4e89-bf1c-3f677e77c3b1",
        "cursor": {
          "ref": "7eaff430-8400-46e8-ac65-bdafe315833b",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "80f79824-06c0-42f8-8a00-260376289f01"
        },
        "item": {
          "id": "5ed2454c-a924-4e89-bf1c-3f677e77c3b1",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c10ee21a-8530-46af-b7cc-b93a2b4635f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7734ff-1809-411f-89c3-f35bd908ae8c",
        "cursor": {
          "ref": "72e8a9d6-f42d-426e-8760-dad3f58dfc8e",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "969c3014-e6e0-4424-b100-e51712382bc0"
        },
        "item": {
          "id": "0e7734ff-1809-411f-89c3-f35bd908ae8c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "77dcbb8b-ee64-40d6-a86d-2f1c20a3db61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fccd324-39b7-47ea-b21d-4f4fc542222f",
        "cursor": {
          "ref": "1db4215b-7705-4597-868d-703879986233",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e1fe026e-5bd4-4dd5-a052-6c6317d4e66f"
        },
        "item": {
          "id": "4fccd324-39b7-47ea-b21d-4f4fc542222f",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4717c410-eaaf-4fb3-8796-f9dc1896f90a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a01a9632-a753-4ea4-92c4-52089f3c8c1a",
        "cursor": {
          "ref": "771fbec8-e257-435c-b2d9-8922a66a49ae",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e75224c2-2d32-4a30-8aa6-24abce9b05df"
        },
        "item": {
          "id": "a01a9632-a753-4ea4-92c4-52089f3c8c1a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "78360892-3f64-4364-baf2-3a68b2e05361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f8d5bb-af01-45a5-9e19-7a546b86b42a",
        "cursor": {
          "ref": "04918196-71c3-47d2-9507-55e0cbc1611a",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "82423765-c3b6-4612-ab0c-33f3fd8ed907"
        },
        "item": {
          "id": "f8f8d5bb-af01-45a5-9e19-7a546b86b42a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "13e51f31-89c8-493b-9e7c-bc216ca4eb37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414e8c6a-e29f-4cd1-9325-0ad20e8a6dba",
        "cursor": {
          "ref": "db474b77-b9e7-4297-b062-c2f70950cf47",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f0f45ab9-2391-484d-9ba9-6ad0dd35d17a"
        },
        "item": {
          "id": "414e8c6a-e29f-4cd1-9325-0ad20e8a6dba",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "4b583797-2c68-43e2-963e-f5a73b877512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "119468fe-b80a-4c9a-ac07-76eb49000afa",
        "cursor": {
          "ref": "af1c13cf-b70d-4df6-a003-afbb281f43c7",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f65cea99-bfba-4e7a-8818-2ef719c090f0"
        },
        "item": {
          "id": "119468fe-b80a-4c9a-ac07-76eb49000afa",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f6609442-f1aa-4b9f-8baf-052779c50d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d55f479f-6e1e-4fdb-9187-63ff4a6566af",
        "cursor": {
          "ref": "f6053cff-bb9d-4bea-b588-a5fb34035e6a",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "04569e03-bf4f-402d-9366-c738b2242f66"
        },
        "item": {
          "id": "d55f479f-6e1e-4fdb-9187-63ff4a6566af",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a2024c79-ef15-4333-b284-c7bbceb66f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b0dfc39-cc60-4885-b925-0a73c49b27dd",
        "cursor": {
          "ref": "49a51dc8-0cc5-4ec4-a1f5-965a6852aacb",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "579732c0-e511-4fa8-80de-de516e46637d"
        },
        "item": {
          "id": "3b0dfc39-cc60-4885-b925-0a73c49b27dd",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "401b6942-d252-4ec8-bf46-bb2a6afa118a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d5d632-a2ac-44f6-8f71-046f99d45ad1",
        "cursor": {
          "ref": "202d2e4e-12eb-41cd-996e-503782e9f104",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "6a2c4c2e-9255-4d74-aaf6-14a42661b148"
        },
        "item": {
          "id": "27d5d632-a2ac-44f6-8f71-046f99d45ad1",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "4f2c3c7f-9af7-4768-b096-5a903362d393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b69dc9fa-9dda-4bd6-b840-32657c132e74",
        "cursor": {
          "ref": "71d51023-69fa-449a-8939-d3de2360a0ca",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "747b208a-adde-44d0-b3c3-2a399a8a33e6"
        },
        "item": {
          "id": "b69dc9fa-9dda-4bd6-b840-32657c132e74",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "5bac7b31-ace0-4218-a6cf-c88a701e6890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43cd63a5-b315-45cf-bae7-efd5f52c43f4",
        "cursor": {
          "ref": "66b82378-5fd2-45e6-af57-c3bbbd23c9de",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "44cb1dba-01e9-4bb8-bc1b-ea6b80f4ab71"
        },
        "item": {
          "id": "43cd63a5-b315-45cf-bae7-efd5f52c43f4",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "373b4635-960a-4793-a70f-308f8506b0bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1633c48-bfe4-416f-9d96-d9b751c4a941",
        "cursor": {
          "ref": "4b3e6ab2-2052-4108-8544-a5dda437c459",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "dc1a4739-6955-4b6b-b2d1-548725b55a6e"
        },
        "item": {
          "id": "d1633c48-bfe4-416f-9d96-d9b751c4a941",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d5a3c00d-34ba-4a6c-b030-76414ddabdab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d168b5-7dd6-44c0-8cae-107db8df4d79",
        "cursor": {
          "ref": "85870d19-5ec9-43d1-818c-ad955e4973d5",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "3ddeab3c-8cb8-4ffe-83c3-b41c50197d3a"
        },
        "item": {
          "id": "f2d168b5-7dd6-44c0-8cae-107db8df4d79",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "2592f564-932c-404f-bd01-986ca4f71c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d636b0b8-1a61-4fc3-a8de-769dee905cfb",
        "cursor": {
          "ref": "4e1dcd71-5a9a-4d08-91c1-7ba1fa6a78ca",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "5484225f-e836-4ac0-a306-a8299c247c65"
        },
        "item": {
          "id": "d636b0b8-1a61-4fc3-a8de-769dee905cfb",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "2b49a724-c55c-4b9b-b412-ffff226dc980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a1f8f7-296c-41d8-9b20-9575e76ac73e",
        "cursor": {
          "ref": "4b004fdd-a9d0-4b46-a106-7e2ed743b565",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "e4bcfa3e-2642-4927-93d9-c73eee7b1a53"
        },
        "item": {
          "id": "52a1f8f7-296c-41d8-9b20-9575e76ac73e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "3423217a-ec2d-41e0-a6a1-bcc4529eece5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39b257d4-7915-430f-9087-3fbfbf36f8d2",
        "cursor": {
          "ref": "4f596e6f-a851-4415-a566-5ada6beea2f7",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "ab5f9257-3691-45e9-9fb9-9a73293b0a36"
        },
        "item": {
          "id": "39b257d4-7915-430f-9087-3fbfbf36f8d2",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0c103a68-87b1-467c-8897-33a00549b8c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb928936-ed8b-4044-8b43-39eb4faa3592",
        "cursor": {
          "ref": "3201ffdf-5f7c-41dc-89cc-d469651e5842",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "aeaf451d-85c2-43d2-aa9b-b2b2b6f0e1d2"
        },
        "item": {
          "id": "cb928936-ed8b-4044-8b43-39eb4faa3592",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e8d97f61-c10f-43c8-acae-cdff4ce5177d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3135b07c-4af9-4801-8151-0e21b2297e38",
        "cursor": {
          "ref": "d52b1451-b24e-4961-9884-e6b00e66be21",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "b67ac34a-ea78-413e-a27a-1157878cc9d6"
        },
        "item": {
          "id": "3135b07c-4af9-4801-8151-0e21b2297e38",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "4ff127c5-75d8-4199-ad01-2d2c95a4df0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f51377-ba8f-4958-8928-35b7385ca68b",
        "cursor": {
          "ref": "f5f728b4-bc66-429b-b367-a7a9f1b90596",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "997780be-9ac4-4006-9468-84ee63caa604"
        },
        "item": {
          "id": "a8f51377-ba8f-4958-8928-35b7385ca68b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "5fa2d839-c1f2-4440-a1cd-d4677d0cb8c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94624f51-9593-457f-b0e8-63af4776a54a",
        "cursor": {
          "ref": "376cc1cd-a7da-4e79-85f5-367d332111a1",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "ca2545e2-d249-421c-abac-6969c797f5c1"
        },
        "item": {
          "id": "94624f51-9593-457f-b0e8-63af4776a54a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e66769b9-1304-483c-8283-344516607410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f7cfc99-8d9c-4f68-83bc-1b6ce9273811",
        "cursor": {
          "ref": "ee80076c-3abe-4a70-93a3-8bd89049a44a",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "895d1b98-011d-4320-9e30-2369faff0fb6"
        },
        "item": {
          "id": "8f7cfc99-8d9c-4f68-83bc-1b6ce9273811",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "06acdc7a-5b4e-4860-a736-45cc042d3fa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de3585b4-9944-4e39-bb60-cbd9ef8c9fa5",
        "cursor": {
          "ref": "a17b59b4-1642-4aae-8ec9-48f1fbad8457",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "d995e5ef-a008-47d4-a00b-ec1b61087bbe"
        },
        "item": {
          "id": "de3585b4-9944-4e39-bb60-cbd9ef8c9fa5",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "61951df6-6427-44e7-b9c7-ed57a9859740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d971e1-fcbc-47ce-8b5d-4ea8cfff14ae",
        "cursor": {
          "ref": "8f00c44e-437f-4d15-af85-81439cd16bdb",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "eb272a2e-5673-47a1-a8fc-a0e55a4bc61b"
        },
        "item": {
          "id": "d6d971e1-fcbc-47ce-8b5d-4ea8cfff14ae",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e713172a-448c-4597-837e-e32f78fcd854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d821ebe5-1631-411b-8aa8-6065866e1631",
        "cursor": {
          "ref": "e6998bc3-3ec5-4b1c-bec7-96151ca5d958",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "d022c800-86a7-498f-be6c-b55ca8524573"
        },
        "item": {
          "id": "d821ebe5-1631-411b-8aa8-6065866e1631",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "7df2b067-83b8-4aec-873c-547710a3b81b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a3e4eb-912e-48d0-9fb1-545c5e061f21",
        "cursor": {
          "ref": "ba7c5e2a-efe2-410b-92e1-81500eb48bf6",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "29118b65-e70c-4a42-8af4-8e82f9db5af1"
        },
        "item": {
          "id": "e9a3e4eb-912e-48d0-9fb1-545c5e061f21",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "cde89702-2af0-4b1f-9c1c-0186ee541902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1db9afc-f36a-4543-88f6-a244ee01fb8c",
        "cursor": {
          "ref": "85d19543-9864-4f35-8130-95a555e39a9c",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "1d29004a-e68a-4599-97ec-2043fd604bef"
        },
        "item": {
          "id": "c1db9afc-f36a-4543-88f6-a244ee01fb8c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "5faa7ab7-e25f-41af-96e0-12a145fc999b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c447714f-7079-4fb9-ac9c-9f01acd116ce",
        "cursor": {
          "ref": "2a2ef608-8530-483e-9d87-7ac60cc85ba9",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "33b3b5e6-fa31-4e2e-93e2-b67851d4115d"
        },
        "item": {
          "id": "c447714f-7079-4fb9-ac9c-9f01acd116ce",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "861e3405-3a0a-433b-83b2-7e0301bd63a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3506b4fe-4afa-4d87-92ab-7c65379dc998",
        "cursor": {
          "ref": "adafbe6c-4df5-4be5-8536-c0f91a6eda30",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "78e0664d-8cb8-4d07-909c-5db594af2e5f"
        },
        "item": {
          "id": "3506b4fe-4afa-4d87-92ab-7c65379dc998",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "9186e31e-69a4-4c7b-b7bd-ddad723e36a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc518e4-9701-4e76-bceb-b6ee49b6339f",
        "cursor": {
          "ref": "742b0c1d-70ce-4668-b300-b289bee10d5d",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "ce48050f-aaea-4ce4-8117-86dcade1aa99"
        },
        "item": {
          "id": "2cc518e4-9701-4e76-bceb-b6ee49b6339f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "147c30e6-4205-4323-8108-304dd44060e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d6b14b-4fb6-4b82-9e91-58c1c006f9a6",
        "cursor": {
          "ref": "47957336-7156-49ef-b5dd-5cf79e17d8ed",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "6ffd6bec-90a3-43ab-bbca-e40c3e6b68b7"
        },
        "item": {
          "id": "46d6b14b-4fb6-4b82-9e91-58c1c006f9a6",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "3b988296-05cc-43da-94f0-aa5e66243276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44791dbb-5295-4801-a880-8775e236f7ba",
        "cursor": {
          "ref": "bd87b506-f1aa-437c-b36d-24ed038c455e",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "9ec3e933-401c-4aae-bdc9-df8ddaf1bcdc"
        },
        "item": {
          "id": "44791dbb-5295-4801-a880-8775e236f7ba",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9b180298-4ca6-48e9-8c34-1e430428a87a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cbe0e3f-423a-4157-9517-0b94a7981353",
        "cursor": {
          "ref": "b4fac3e0-3ff1-4273-81f2-4f85ae8e7961",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "5031c2a5-0421-4e3a-8835-cf1555741524"
        },
        "item": {
          "id": "1cbe0e3f-423a-4157-9517-0b94a7981353",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "014d0344-8570-4dbb-a3e3-7592b019fb39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b42c0253-5141-44b6-b3ef-bec22a27c053",
        "cursor": {
          "ref": "d213f310-ce4a-47fe-a668-81020e5964a9",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "09b132ca-8586-4f0b-8145-26e24e36b937"
        },
        "item": {
          "id": "b42c0253-5141-44b6-b3ef-bec22a27c053",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d7503c71-f516-4a46-b993-9980df94162d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a21c3b2-1159-4666-ac2e-bcd80266d7e9",
        "cursor": {
          "ref": "883ed196-90fa-4760-88d3-fed7c2f2f1af",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "2f845155-b7d5-421d-933f-3e4d4dcace94"
        },
        "item": {
          "id": "9a21c3b2-1159-4666-ac2e-bcd80266d7e9",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c984674f-de5f-4795-93e1-f986a6c6bf5e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd430cc0-70de-469d-90fe-ffac23305a23",
        "cursor": {
          "ref": "0db640f0-9e3f-4dab-a442-0657cfbe942c",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "a571e6be-a01e-42ec-ab72-c271e8f1786b"
        },
        "item": {
          "id": "fd430cc0-70de-469d-90fe-ffac23305a23",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "41988c1f-0ab2-43ee-9112-19aa8c46479d",
          "status": "OK",
          "code": 200,
          "responseTime": 123,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cdbf320-97f7-4b3b-8eae-9baff663fd89",
        "cursor": {
          "ref": "cf0b0480-e91d-4a3b-b05a-6617026f53f7",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "0fd4bcc3-d125-46ed-9af1-b0c5bdf76b24"
        },
        "item": {
          "id": "4cdbf320-97f7-4b3b-8eae-9baff663fd89",
          "name": "credentials_verify"
        },
        "response": {
          "id": "852617dc-47cc-4648-9b44-8f4c7443ad56",
          "status": "OK",
          "code": 200,
          "responseTime": 1751,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e95cd7f-9ce5-4318-9086-967018ff0561",
        "cursor": {
          "ref": "ea356a9a-2c27-49f2-9040-1e36813dec8d",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ef5a33a9-520d-4132-85a7-a7563370f754"
        },
        "item": {
          "id": "2e95cd7f-9ce5-4318-9086-967018ff0561",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "05da670a-6832-4d90-a544-f498a7c4faa7",
          "status": "OK",
          "code": 200,
          "responseTime": 1754,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1aee163-07f5-463f-9534-d07c0fbd64c8",
        "cursor": {
          "ref": "1eb33a2c-e928-4f39-8481-74c98bb97151",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "44fac15f-21f0-4962-8fbe-0758b9a1cf84"
        },
        "item": {
          "id": "d1aee163-07f5-463f-9534-d07c0fbd64c8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a26009e6-5b9b-4a5f-9136-4fb41c872a88",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 59,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1aee163-07f5-463f-9534-d07c0fbd64c8",
        "cursor": {
          "ref": "1eb33a2c-e928-4f39-8481-74c98bb97151",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "44fac15f-21f0-4962-8fbe-0758b9a1cf84"
        },
        "item": {
          "id": "d1aee163-07f5-463f-9534-d07c0fbd64c8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a26009e6-5b9b-4a5f-9136-4fb41c872a88",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 59,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5960ba40-dd69-4b45-9529-ca2ba1d7fab0",
        "cursor": {
          "ref": "ff066669-7065-4231-bc31-99388dd99b63",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "dbc7e992-324f-4f19-890a-4f8b8c6e52c8"
        },
        "item": {
          "id": "5960ba40-dd69-4b45-9529-ca2ba1d7fab0",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "15d0bac3-0f12-4603-93bc-824dbcd46e2f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a17390-d029-4b0a-a88d-8a177f0504d2",
        "cursor": {
          "ref": "4f46f143-e460-44ce-9a3e-9a209200c87e",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "e149fa2f-7cf8-4572-985e-272fb8b425af"
        },
        "item": {
          "id": "17a17390-d029-4b0a-a88d-8a177f0504d2",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c0205368-8f0a-4851-aaa0-a3e1faaf5c5b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}