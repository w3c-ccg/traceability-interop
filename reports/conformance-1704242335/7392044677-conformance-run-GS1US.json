{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "0c8398cd-57d6-46d5-8d24-91603be6bc0f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d2c1bad5-6827-4ddf-a0c9-3fbaf652ed0f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bd3e9e27-dd34-447b-9b3a-2db01f02751d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5d24f4d3-829e-4817-a4ff-820bf8d69f59"
                }
              }
            ]
          },
          {
            "id": "f14ec4ed-8fd4-4ec6-928b-e7be73678154",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6990f24b-d50c-4684-90f5-a9dfd240ec30",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "bb2382d3-eac5-4ccc-978e-5073562aeffb"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "744ec4e7-5400-45f8-9d84-65ead0b18e85",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "beeb4917-b7b6-475f-80c3-3b1a5f725978",
            "name": "Positive Testing",
            "item": [
              {
                "id": "463d59ed-98c4-411c-9d50-4b43010222d8",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a1bde6af-f415-40b8-b50c-7072710f13d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "71732292-1187-4e2a-aad4-1e606c3f47ea"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "49fab5d7-f302-4059-846e-3298ae82f788",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "00fcfad9-7519-41b1-93bf-1238ac68bcf3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "44ac4fa7-170a-420c-b486-c20e23de37a0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5b4f4fc1-74c8-4b3d-884a-6f3bb3a1a221"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "87affcb4-db89-47ee-806b-8c4d396150f7",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "8187fb7a-36c3-4974-9fc4-89118f1a91b3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "33778c9a-c406-4c2e-935b-fd2369543823",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c78f5a7b-d9df-42c6-bc15-8578e9e50cc2"
            }
          }
        ]
      },
      {
        "id": "dc09bbba-2dda-4066-b572-69447fbaf587",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "9899828e-f569-4227-ad62-9063cc5592a8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3433e927-692a-496b-b5a0-dbaba9ca513c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f04c930a-cf66-4666-bf17-4f9c7615285f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a06f7bf-f1f3-486c-b7be-052f6fb0e87f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0ed91c3a-8c03-44f4-a700-260511e89130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a05499a-3511-4fde-9f87-567db146e58e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23681e9a-6027-42e9-8c8e-53f6084a3cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "78b1c35d-b48e-425a-8d1e-e27ef4db027e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c36ad16-5c65-47c5-9f72-30b98cf2c45f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24a4dc4-4bfb-4af7-aa08-b9babf14827a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2c87bf13-ad38-4d8b-ab53-84c594978e60"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "22c8ad06-2aba-4230-a8f8-6615f7570e5d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ea0a8e19-ddc2-49ad-a14a-ae2c76167743",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e856e810-bd17-4322-8755-d23da27cc84d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "17678105-074a-46cf-84c9-b1bcaf1775fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee74810f-0af1-40d8-b592-91ad1fb2afd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb6c1fb6-bde3-4db4-be1f-43ea09aa6821"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "34ea719c-73f7-44ea-a1cc-f7a92465aa27",
            "name": "Positive Testing",
            "item": [
              {
                "id": "12942fbb-79af-46f6-af81-8dd0100ee2c4",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb76c367-6603-455e-8e14-7e6fbf4da751",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c5559215-5ca0-457f-bfa7-ae81f7c4d973"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "47dbeb40-b508-4d80-a3d4-abce5c1be807",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "5bbb3594-4729-4b7d-a235-db49d1a19dd0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "002b00ee-bf02-4e51-a686-c0ed04fa45ae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "59b99645-f5d4-468a-86a1-f66e282d4638"
            }
          }
        ]
      },
      {
        "id": "48f89f91-fd0f-4a56-8a94-24bc83bf7b81",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "aa259605-6db2-41b9-9877-8e02a6ca9c1b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e7e2eb9e-36c6-4d22-ac1f-c8e6af575fb6",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7f2dae5c-8a92-42df-9131-6228defc682d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b08de6-f84e-4fea-8e7c-e60c7971c492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d2d6ed8-df07-4137-b1d1-4ec0aeeb911a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "303a7d55-6b45-49e0-ac0e-585e18a9f129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f299c03-3f3d-4660-9660-b18faf768574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00700724-5846-4823-849b-f4a2812c30a9",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7292f6b-b8e7-4c31-81ec-6532755516da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16355bf8-aed2-4f68-9f9c-c8297658428d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b290d08a-9a9b-40d7-a86a-2018b458773f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8db80fc-69c0-4b47-952f-515c55648baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcbd47ca-4a69-4e19-97e4-a12e4c00f89b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "643bd567-38b3-4df1-8a0d-d0d5f7f467f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6933ee60-fbd5-4603-9b2a-aa25dfd56467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a28af690-ce8b-4529-99d1-640336074e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab88ef9b-224c-4fc6-bab7-349eb5ede970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fbd3c5c-6991-4548-8141-c5d727e7688f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a1a36dd-f547-40fb-b613-e0ef5fc1c931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44e117e0-4ed1-43de-bcdd-ed61f26017a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd0d9720-7889-486a-8747-c137e1d303ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef2027e7-c2ca-4f4b-8798-31c0446bad89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f756fbf-99d5-4cf2-99ab-b5bb88eab47f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd99638-311f-4d45-a8f5-ca8bea7aaac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e18a8c5-d4ba-4e9f-aa41-2f985fc13d8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d7dfbbe-3bb9-4138-8b57-f1303257f5c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "262af0a2-156f-4e20-ac91-b121d238b01a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b37d49d3-797f-4eb8-b771-d42f7f1782cd",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49438060-c8e1-4dc7-9425-c8dd1b3dd84b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "011ecf91-1aca-4bd2-b845-48e37dbfe654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a774f63d-f3af-43c1-a657-aef66f2c89a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc996bf1-86fa-48f1-9c1e-94dd403d003f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26efe1d5-dc2d-4602-a7cf-f4cd1f9c8a74",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab9e0912-2f8f-435b-b3cd-573488623aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8440a658-1edc-4f63-9d8f-12b1df7fd0c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f07a6c-dafb-441c-9c86-cf5899f5e5d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "741810ba-6421-430b-a237-fdaf2b0ac469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b893ef3-6e10-4968-a0d5-8c2e32acafdc",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3201f2c-daf4-4f34-83bc-086333626b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e736418-924c-4166-aa08-a2fa7e01b263"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc34473-0897-462e-8f63-efb610ea9f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d19f54e3-f43e-44ba-80b7-cf6d797af546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64db5ce4-7bb9-4348-92cf-ff16e8426f3c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba5458c-e837-440e-b0fe-5a016a9fdd7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99742728-bd9c-46fd-9680-e782e618cccd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61407077-b277-4cb6-a953-ecaf9f7df43e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e35d6db9-c413-49c8-958b-354ccc30e6a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c5525fc-9e9a-47bc-a8a7-f041908728be",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ee79dd7-8980-48e3-9ca3-8596d61c2ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8cda416-9f8c-480a-9f4e-849b376bde32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07cd553f-6004-4486-8165-a0d54ac154c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a921d084-53d4-4c42-9221-bfffc372e232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e3145f0-0d0c-486f-a2eb-bbd7a595364a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d8f9bbb-a533-41d4-b9d7-74d69afa0603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bf88982-4028-499a-b4e6-c093da56d823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f13166-e406-475b-8ebe-e25b65df6e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3e6ce5e-7a69-49ed-a768-21ff7062a2c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5540db3c-e10f-4e56-87bf-0e101870da92",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d11df462-f1c9-4b9a-9387-ed8bde5adb5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29d764ea-127c-4625-9341-8bae79c335d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c735f2e-eab1-43f6-b722-5c4a3576882d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca922102-ef32-4231-bca1-994794662629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b4f6ba0-557b-48b5-bfd1-17ac8563b261",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1948ee9-ce3b-47d6-b8ba-8c5640bce66f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "411c4d2c-0db5-4aeb-901e-3ea12667eeea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ae51c9-7343-4f9e-8fc1-146ca82bde25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc253b4e-ff38-4baf-a013-3053fee9b363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c0e7ed-2f18-420b-b3d3-81ae152ecad5",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e7d5ba-1009-4ac5-a73c-b454c1eef4f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "961c37c6-0780-4557-816d-5b7e8cea8c0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef2fd9f-dd48-4088-85ba-cca99117ff81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe5a9a56-395a-4b19-b192-118e3de8eeee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "933f7287-88ed-4479-8913-e07c6448fd3d",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7632aa04-728f-4500-abcd-68f82a767c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fa16c74-3277-49af-9e40-c0867d0eacb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d63e8378-923d-4065-90b9-b0f0cfbe7112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "134cc3c8-1304-4ba3-a6cc-11012ac8e644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2836490b-bc63-4aa0-a782-e854d3085a4e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b929a1d-a9d3-47f4-b5cd-7df2ddcafa70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db4d6e1e-619c-4020-a12c-83bfbff82fa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e9b918e-c211-495b-acc5-40601f2808e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4993f34-ae0a-4b3c-9292-e9ee27d22dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6538df70-9e32-4240-899f-0fa77e57fc49",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e94769a-d218-4fde-a944-a180744ecf49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c03daef4-b8cf-451e-b364-c910febb764c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "978258eb-ebda-4512-b973-45d25c604622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "815b2208-224b-40d1-9600-9c9cc6c1455c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0887dfe6-1c2f-4939-9d89-667422c5df1a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0e256a4-b816-4c3f-b1ce-033291f1024d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5d3ec8a-67d5-4885-bd01-2fdc989d4fee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0408c00e-a0c6-4e58-a4e8-0ea02123df7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "dec1d2a6-b2c0-4eac-8c78-3fb597ff1448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb46ed75-4529-4821-80af-59f9bfb6d0e8",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8469645a-6c38-41a0-b34a-552af6228b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6792a7f-5950-4c46-95fd-73532cebf5ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a97602-cd57-458e-b56b-a5e524609c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2d03e8b-3e1b-443a-b733-74f9ef18efc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c1cfc16-713e-45bb-89bb-c14a5bd7455d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ad42b0-60f8-46b4-8ea8-f75c52a0dea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7937046f-e6ae-475b-a5cd-3dde881c18db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b25cbba-d374-4cad-b9a3-503ac938428e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ce97f08-b4df-4fb3-9feb-139cc3c6a412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a10f6bac-64af-42c9-a3bc-d3a8a75a52cd",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f25c0290-b57b-43f1-89f5-728f7e7f685b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0867975b-5430-4135-b316-e875ce43a68e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d034b6-087e-496b-91e9-5e7e99303af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "79302731-1bf7-469f-aff0-f1de02b757a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c29e0a2e-44c6-4f45-93c3-d84410283788",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "122fe505-fde2-460e-b810-461b93f01cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f0afb38-5572-447a-960b-736918cdd583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc4a323-3667-4401-be90-0fd61c049979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e57ef72a-fa50-4eba-afe5-f33bee61173b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d8baf4e-3b79-48a6-8e21-567becdde40d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d91c121-7394-4c9e-98f8-e94353ccff8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0f3215f-bb18-4682-b1ae-8ccc5465edb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e1311c-13ae-463f-86d8-d22bc110737e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5d62b7a5-fa63-49d8-a9a5-39dd3bbc5dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c9b767-4863-4219-922a-aebd8bc684a5",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc80b34-0a4f-4054-9e30-5dd6764b6a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09c3b389-ec3a-42cd-b2bf-1384e7013fb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b656ce1-a3d8-4651-a6be-26925287636c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b148eee7-81bd-4069-ad4a-5366a98e878f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5c9f0fb-f808-4d7a-bcfb-5c0c0119cd84",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "625ae93b-199d-4d88-8bea-eba5e1d1cd72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fe8dee1-e9b0-4b50-be40-b0e917a3c7e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f4b73a6-c0ab-4633-ad58-51638b8d2359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e07895fc-db8c-4d64-b274-621392e2e28e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1f16e61-f186-4912-815f-9b76a5fb1702",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a87b84d9-75d3-48a2-80b8-c07714f484eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05474aa1-ca55-43f3-a8e6-1d9413af76d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e480ba-6744-4020-ab48-04e0f5d065b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0aa337a-c264-4ac2-adae-e01cbee29181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f12b3c5c-889d-4138-b207-ee4bbf7c11e3",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e1ae410-d587-4828-9bbf-4b51280ed3d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84248042-6a41-40c9-9a65-bbbe3b86e96c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a96cde-3e9f-46b1-8f6d-fce6c3b6f50f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5956a861-6c7e-4c8d-b239-591b43774307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f7dae32-0c69-4a21-af58-40d574429443",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb25aa3-a0d4-464e-9260-a6c50a401632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bff33cbd-cf87-4699-81cd-5dd79c7eeb73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1386f8a4-7005-4d80-bcea-4107e93e2cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "295848f0-c535-4460-972d-25a3b19eebfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b05dc8e7-438f-49a3-824a-bd9edb5ed8ad",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1240b69-248a-407f-ae54-745ca660f8ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5b6cab4-0976-4607-bf3e-6b3080376bed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c379f58-cd09-4737-84fc-cd4663cc14ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc4e0f56-173e-447f-aeb7-08d0f959f6fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94414dff-0b2d-4b94-9d7d-6ccba4fea3df",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9448e716-91e2-4ca8-b6ef-2582a15a2e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aadf9d66-4e8c-4e8e-b545-84e6fde467b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e42ef723-8fda-4dec-b8a3-3fbb2bfc7368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "73c79cf9-eddd-409e-a38f-ed7fb6d34546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2307664d-e13f-4677-a1a5-d3ce589ae25d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa77bae4-bc42-4188-af3f-e516896ab878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "988ebcbf-ec08-42d0-8458-11f5605b679b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e146445b-e2cd-4b4e-9c7c-4b1edcca2c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "be7ffa22-b7f3-4ad6-a913-7200ff1619d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91552744-514b-40d0-9b16-ed5707c165ae",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d6f95d-0366-4c6f-837d-fbdba561478d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bc3b2c1-d3f4-4f3b-bac5-a17679ae1664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f20759-16c5-4979-bc2c-630084ffcb2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dc9ad8f-550c-4171-8c12-46a9f858e1a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "766197c3-8b4c-42f5-ae4a-4877fdd53a4f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7129c453-b6a2-4107-91ec-503e1819ace0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2c69439-48c9-4090-8340-949abaee8e5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df0c5f70-be5f-41c2-8c80-fa89028abeb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1e2dbfb-d1c9-4698-88ec-2e6e2f3cb3ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b4ca59e-cef4-4634-aad7-d826e2383f31",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "973bdbc5-b490-4930-a450-b1911f4b87f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d052c74c-87df-45a3-90d6-b0a406ff9dfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "655dc9f8-8758-4cf0-b5a0-fa108f8f6b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d3b905d-09fb-4073-848b-6078a96c35c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "553e9152-f580-4c22-92eb-3b6f0379ccf2",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea6df18-ca1e-40d3-82f2-4dda15e6fc88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bc986b3-f58f-4f8e-9cd0-47c2ed057ccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4310209b-173e-437b-b94b-96afe29c5e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "170949d0-acae-475b-b65e-f6fd9d7a1513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ab0001-e200-43ee-a65e-e3f4683a8bab",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93dc4073-a2c4-4879-85a0-6e659f37ccae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0ae3272a-f0ae-4f27-bb2f-6e7bf41c9a6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d942aa-a994-498c-959c-fd806f243827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b364ecdf-2da5-4fb4-b8d9-c5ef056395ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2bd199d-0e74-4a56-a904-dbf5e54d9900",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "136ec0dd-056f-4fef-952d-e4a1cdbd5472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e37d1dd-3b52-43c7-a94a-4c8b04e7a1f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad59f63c-b464-4609-9c47-587eec3da791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "761db81b-56bb-4b48-8906-7a4eb1797361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26574980-6f67-4d44-bd5e-83fb86b9d452",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e9fd341-857a-4595-8eff-d5904b6ef108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52e33c07-df2e-4c24-897a-78b6945b785b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b896cd23-b044-429d-937b-8383e7aa1a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "15b83f2f-212d-424e-9bf7-ae7ef3b8c92d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36558a7c-a0ae-4805-aa5a-4416595393d5",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "887ac8d9-cdc4-4370-a55a-a80e5d6df455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b80832e-6bb5-4b1a-8f2c-ecd5d643cf08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d404f84-26dc-4cc1-878d-27c2d1ec3bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e226910-d2b8-4225-8c08-737282c37890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c58816-7f34-4d99-a587-3a422f333b5b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "846b64ca-2937-4037-a978-95a6bc6d2bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d25e3e70-da3f-439c-9163-99efd97ba74b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51629e4e-9d82-4afd-b47d-cc966a7c997c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "51c4262f-3c0a-40d8-95b4-b838f7254f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7355f170-4570-475e-a621-16ee19451b37",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffba7f30-0478-41fb-a41b-83bbb8448efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c837e73a-d393-408d-9cf0-2c1a479c81c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a224f8-67ad-42fd-8f3f-77d1f9663cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "db9ae5d9-7cdc-42a6-86da-70308ee6fbde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7831ece1-e47f-4cee-9815-11008c62ddef",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2cc9bfe-b7a5-4583-b33c-08d3b23b479c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87bba23a-dcd0-4f04-92fe-7ca2e3dbc680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b2ee16-cb1e-4b47-b605-655ec616e6e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "ddd64792-292f-4e15-94a1-69f68c487f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a05039b-dc8f-498b-863a-bba520d111e7",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16859b50-9cf6-4b34-83e2-6b0f0dda7371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34ede04c-62e9-46e0-8a2f-73d57c2c2e7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d245b015-413c-4db4-995d-5f46ef5e330e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f93a999-8ba5-4258-aa28-8088eae95e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70cc555e-23bd-496b-971a-fe85a98b60e1",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c53fa183-3f9a-4e3b-984b-6c65c5e2e75e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2264653f-5f24-4fbb-9de4-b42f2ed49f12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16e91e5-7712-4e80-8055-a4072f596aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "508c8658-f14a-440d-a9ed-27f55ffe12de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c94c5c7-33bc-4296-a94a-37e2c78858d2",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d5111b0-1020-4c7b-9965-08cc144f1eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f64839c3-ec97-4849-815c-f724a2dbd84e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e19915-1cd2-4d71-a624-370d781503de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d63ee86c-58b4-46e0-9994-d7cf7dcb0f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b11461d7-0aa7-4de9-8be7-82605beaf3f6",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df61c83-437d-4700-a6b3-23560ca4d160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7513740b-cb28-4432-bdcc-725e8960f0ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "653b0e9b-52f1-43dd-b4be-05217e24d50e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "749c7859-b70b-4c9a-8676-7042ee29c2ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "021ed82c-0319-4420-940a-645416dcb3a5",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce13a068-e3c3-490f-8449-527d620c7e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0337078-c973-46ad-830a-ee4accf620ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d2a9e45-7687-49c4-80b2-518457e57b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "86157849-af6b-4150-9249-458d2401d28e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d41e4136-1f44-4a02-8e4f-584589f9cb6e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9254350-f96d-4402-8f36-5ec94c75b987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1a9d8d9-3048-4921-be72-0306dbd04f35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0097d3d2-ac5e-4ea3-98e6-5faf45d81657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb9381de-befa-4341-8c5a-d3900607ae8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09be3563-db4d-4a8a-aa33-4b464af13731",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b58c1c99-3e76-4d14-bd1e-fbc5f601ad4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13c3f387-398e-4756-9a84-9c8168799560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d466d72a-ab59-41d6-9b17-89a390d6dcd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ab5faab-e7b1-417a-bd19-778007b1d24a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "628530cf-c2f8-48b5-b8cc-2479d29fbaea",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32bcd5df-e395-47ed-af01-3a24cad77a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41a3ee82-d054-4608-b325-c2b31f8f58e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f79644-a602-488e-881e-08bd674725f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c902e265-7c4b-4690-9572-8bacb6eb14fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e4bc2d-b1c9-47f9-9231-389d46ef2b77",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33007560-de12-493f-bb63-56332dd73e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56d9df86-b7a8-4564-814e-01d991152472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "698da8fa-c248-40aa-913f-3d61109393e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b45bde7-986c-498e-8a03-08a10e4343da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "151566b2-94c2-4a61-bb24-995bc87f78f1",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0ba91fb-f40f-4895-a693-53db8d0eaf8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f07c17d3-c15f-49f5-8410-94eb89d7fbc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ccd8dc3-6a02-4959-a27a-10591c01defa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cc099de-ba93-4a0a-914a-0fc09af70ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef8945fb-e707-4aaf-980b-4e7d5f49dede",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd171fe9-9c52-4d65-bcab-b8e8db17d55c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "508ad91d-70d4-48bb-a8fb-389937153dea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a227f922-27f4-421d-a672-35ea99320e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce3f6b98-b1da-4345-a164-575afb884dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2deefe8c-b690-44d4-aee7-2302bc735ffe",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff36394b-e30f-40ff-83b9-c6f36d1c21de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52e8404e-02e4-4c52-a91c-11c421464483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed53d561-ad86-4f16-9cc2-d26846807320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b8edb91-67a4-4a59-bf7f-cda759d3fcfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d198451e-6715-4997-b78b-6ab8c9ba6b7a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba3f2e12-966e-4349-a2f5-cf2d4732955c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d49b8538-947b-4d96-b44a-b4b9b88d8a48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a58ad36a-64db-4f7a-b132-c4747de423c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "179a0ac2-222f-4f93-b622-394ecdc16f23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53eb8d8e-af25-492c-8309-8eb86aeede73",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc813c7-224e-4391-a55f-fbea59e21c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90bf9a30-2a26-4f07-8328-0778560bc5a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c9b552d-ad25-4b93-b993-f0807b42129f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f3ae91ba-f975-4ef6-8aa9-946bbf06e8b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0122004-2e81-432f-b604-533245762db5",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "506c0642-08a3-4032-b74a-54e4ed6fc781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc5ebee9-20a5-46e8-bbcb-4471e47432ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e18d2a7-6b3f-4c4d-98f7-58c87bf7b979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bed63e52-ad2e-47d5-9b4d-742c4d83ef40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa44e626-8ad7-4e24-8f48-404447be9e5d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb6b848-8a7c-4ba7-9c3b-a7be9f1b90e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "825e6bb6-1d84-4b0e-bf7d-0bf013c04524"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5eaca95-e780-4578-af5a-082c66ea3240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8bc40ed9-23de-4a8a-924c-df793a1bf75c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8266651d-9ab4-4eb7-a690-0a962a80c7e1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c9fec0-349c-484c-ba55-89c3beabfdea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e2a87a6-677a-4b98-b1ef-05e5487dc4f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c87b6496-223a-4baa-a433-9e2455706d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "850b67eb-c5ff-4ae7-948c-eb06a0fba089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f6b844-9198-4084-84d6-6cc20ba93dc9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df9c2ebd-5937-4944-9ec2-1d44a5987013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57de3c73-c854-4867-84aa-72e7e0fbe4d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7455ef82-67be-450f-829d-1a3074c25a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfbf32e9-1d7b-45bb-90a8-6a541a73287a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5897b5c-f0f3-4977-884b-28ae2ea47157",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79179778-3696-4bee-8ea0-29f776594c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2510f439-f4ce-4849-b7e2-489a5df94440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d43fe741-ca3b-47e9-b09c-2c9eb6196000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d6e7d16-84ee-4778-80b5-a7580e585d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b2eefc5-c21c-409c-8fa0-099e97ee1c8b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c37218bb-82df-4144-9c06-fea18184a25e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed796538-cffc-4a6c-8995-75d99c15fe12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab3e117e-ee93-4f36-8223-dab50a93deed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "cda172a7-6c77-4783-a198-d6d83c2f7260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82fda6ab-d35b-494f-81d2-9c134a18276a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "186f3242-62aa-4cd2-8951-b87ac4f513f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91ac61f1-5c93-4593-8bdc-0371e1ac8fdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d286067c-ed6a-4998-b544-442bc81c0a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "22d5f33b-f53e-47f7-9a79-93d0aae634e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "226e73eb-a83a-4252-a730-8fe3e2ff62a6",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89080f55-d527-408e-9503-9b8ef4694265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f744ef8-b5ac-4aa9-8d5b-bae62be5f458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5586bfcf-5116-4398-a469-3245b86da898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "44695ea3-8723-4cd1-bb2d-feb6ba048a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ea7e077-deb6-4bf9-937e-23ad279bf160",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9548299-3f67-4670-8a5a-27269f9a27c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "751a84db-a6be-47aa-b3f0-60ec06b5ccb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f455b764-7049-4c8d-81c6-fc2228ddcc67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d26c495-5800-48ba-af3c-7c069e683bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6264b86a-8d69-4f97-925d-e394f89589ff",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "589cce04-c4a1-4b3a-a133-9335c753217a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bf921f7-d934-4a1a-9786-2b35a7a291aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d810d7cd-3b81-4041-b353-b458786446f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "562f2653-4e74-4dcd-bc14-2f034fbdd708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35b4a82-80e9-4b06-8298-2842a73588fa",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79cbac16-9f6b-476e-a4d6-b27462827242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c864931c-acba-46db-8d1b-713bcc02a56f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa0f6746-b68f-464f-9f7f-ab421f82b8aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "337213fa-f414-4da5-8588-b2f3718f8231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2f5d0f-40c5-4d52-b897-209533b6fd73",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "237ef45b-13c2-40a2-a64d-19b2b8258057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb983858-bf2e-4726-bc7f-0f32664bc197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68db51c6-be03-482a-9153-5c97c033c812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "396bd2e6-a542-4626-bd63-23cc0bef97a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b4b5f7f-63d7-41b1-b9b2-8da97c57b0fa",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c909b539-547c-48e8-adc5-8ee0955531b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "470b553c-0406-4732-9da0-06e25ab3cf24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6438aa9e-cb22-49f3-a710-a98c93f6092d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd04c1c6-7277-4566-b29a-8930f29d0e1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27e58d6c-9e74-4e6f-b64c-1b7b2cb3bb0f",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fbdad1d-5bcd-45de-b535-1a2818d38f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c299606a-efac-410a-9df1-2b07f7b33e06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76d6c692-fb18-4aa4-9618-8d3c12edd62b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "912c8c4c-85fe-447c-8554-9d05678de9af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21405581-e859-4408-89eb-0e5bc7e62768",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a1da92-3424-4f9a-8549-f9f2a28cadde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3572f264-8080-4ba1-b4a6-9a0e2f2df628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2263ba83-ddea-406f-a72b-b92f32dd9e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1ddc0ad-b6a0-40a4-9cd0-9914dbfe359c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93eaa78c-6ed4-4e0a-a751-a69d9c95fbd5",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05aeeddf-fcdd-4924-bd4e-36f91ba7fe00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eb08fc5-97cd-4d7f-8e22-7f12f1bec712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecdd7ade-a417-4ad8-bc73-9f4180a21111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "39be1a9c-1c2f-4e35-bf45-d9083ddddd32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83353b1e-9f31-4d08-922b-fc8ab3efc4d1",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ef330c-f6b6-4999-ae97-49c9f168568a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aa44cb3-0137-4b93-b260-80dee5c10d51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36639b40-f6fd-488d-9482-9be7722a60c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "913ded8b-896a-48f7-925a-cae26dac412b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c560d2-bf83-46db-b790-907501634cb1",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf784e0-54a7-4c8b-b481-b1b4b74cba01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6f7c99c-cc88-458a-9071-c74ea90b627b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb9fa08-2e65-4e07-868b-022bdeffe213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0185381f-7bf2-4caa-8208-8754fa846d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d188b6b-81fe-4335-b175-eee0386e8b04",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d544e49b-da78-4b76-a32c-aba252264163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e72e7464-a7c9-4d5b-a082-5523e95c1233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a1987b-1bc1-4965-bc97-157d1c4fc5ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "553e1599-d492-4d8c-8765-01aed1428975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74fbcca4-1e8c-4d14-950f-06ee1b482409",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a54f1fc4-f055-4f56-9272-6a71ee742cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9983bc90-bee2-47e8-80f7-e9e4a6df02db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe91e2c-7d47-43a2-8c80-a3b9777c7eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "902d5b7f-e70b-43a1-aa51-8ac297ddb46d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b05b0bb9-782e-4489-8cd3-70a98681a258",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e675664-4276-4ef3-a05e-f28680264527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6db3879-c3c5-4343-a284-eaf3f4abcf0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f40d50-753a-40ca-895a-44c2e6bc88af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6b9d6c3-5ddb-4d23-be68-bdfc191f079e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e07d8de-308c-40cf-8499-4908e78671e4",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee360709-b7d0-439f-be37-156798e9434f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c21c1b89-864e-429b-a05c-a3e0affb1a03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7682b297-751d-4ce4-bc3e-9bcf94d57500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "605c9275-ecf1-47e6-a157-a414624b3e11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f043b0c-9161-469b-8fb8-8d14960a1d32",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f94c6ae7-238e-49fa-9619-5ba520883fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "001a55de-7d5e-4933-a185-056b2affa55a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d3ab13-9620-4d80-b56c-0a9988f5224b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "63ba2b3a-c3fd-4d91-bc20-c82924f14cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e5b606e-d8f7-47dd-8419-c962fed8a43b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39beae7d-dab5-4608-bff0-671ebe483284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2ea6640-921f-4f4e-aa76-9de9c0caacf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1211f8c0-3993-421f-9df5-014ce680ccfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1ceb18ef-e7c0-464e-a8c6-fdbbb8f776c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd92cc7-8987-413e-9584-7c1e1db20387",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e51e3f-b289-4734-b714-d38c601f6bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12f5f850-9e54-4a4d-850a-3402644b5892"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4324153-6406-4732-b352-625878ee129b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "659db9a0-2297-4390-b5b4-2fc252799e70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e2473f1-b906-4857-bfe1-752392fb7ab7",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "592b53d4-d22c-4b7b-8524-ae23e824468a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b49ef85-bab0-47a6-9a88-10adb03ea3e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff5116a-f82c-4df1-9c6e-7787a2736318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "902af1ff-c3df-48eb-8170-1bf25a2b744c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d6de42-08fb-434c-93cb-e97dbec00764",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd0fffe3-753a-4026-b074-aa701388d5e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a685c329-05a3-43be-a85f-a5383b5798aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97549d15-ad15-4a08-85af-3caa1a78c19e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "186a54a1-a3a0-4a19-8a1f-ca3022a27e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c200e3-078b-4510-b14a-4b62e6837d56",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8025058-f295-4063-8e06-2a4510178521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e1cee5e-ace6-4979-ba11-e2cd4eb5c37b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af1a81b2-0817-42a6-9391-3df9c480ceef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "024e4159-062e-4179-b946-e22affd56b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da95562-387a-49a2-9897-e62dd83b7300",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb4b1ec-88e1-42c9-bd6d-76602d8a6309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "085e315d-1082-4af5-92c1-120eaa7013db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df73cc50-eaa9-4e76-a326-c4c6102c108f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a9f37d18-caa0-41f2-a670-ec1a54cdb399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c993d4d-9105-4ca7-9eec-51d5faf962a9",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37cf78db-28a3-4436-bc1d-ac48474d71de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af5b3b04-e976-40a7-9937-21f6889b5401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84bebc98-6bc4-444b-84d2-c271e40a323b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5c0f3a5-9b3d-4e64-b948-deb788697579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff069fe-197c-4c8e-935a-3af72ee9692b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd059cad-15ac-4168-b291-80266530e36d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "794cad5c-0d3f-4d76-af1d-60704eb2a202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "367a0ddb-595c-450c-86e6-08458a1251b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8fcc77a-bf67-4443-bf0a-2198fdb54125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c43f1b93-4560-4529-8a02-5373ea54f2e6",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f69b4b-e8f0-4ce5-b665-9825f8a22564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe1f8b4a-7f38-4841-935e-9f8666c674fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d5ca51-117f-4c67-af1b-2c1f1beca2ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3de32bef-eddb-4898-a58f-3403cec5eaa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65eaeec2-b01c-42b4-a388-4ff688cd6c6d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a7cb6b-2d7f-40d7-941b-7719facd4ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d70381e-27f6-4d87-b0ad-09825573798e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "738cf327-e672-49ae-bbf2-553ca7f3ee2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "787090cc-22b6-40da-8158-1f17bd54a1e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "190b6274-7c4b-490c-8efa-59c35292cec2",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01dc75bc-6603-4f37-803d-d8d4e864f662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2891c4e0-ad8f-44e1-a629-3fe14c33adbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3eb2144-9e69-40b5-87a3-5230aef8700b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e22e2da-cbbc-43dc-80bf-0b974d213e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5980cdc0-caa4-46f1-b5ec-b2a7881aa443",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19637271-28bb-4cf9-a2d4-aae2e411e35b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "680f023d-3d4c-4010-a2cc-fd58851cd2c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba818a7-07aa-4783-a821-9a6eef6e2a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ebc4676-fb07-4aa4-a973-c086fa34b30f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df4417ca-c6d2-4363-9a3b-c57dda7aa88c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de4d80f0-3a4a-4ebf-bb00-407c81459aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ace499b5-d77b-4523-9477-cfae40ff768e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e26105f-bc93-4309-9671-21218906ad83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2cc767a-95ca-40cb-9846-5bc15aea1e89"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fbfb4096-998c-4874-a41a-ff289cb631d4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ea5925cc-1a15-4d1c-9ebd-d7e9f467e0d8",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f6f407-a5c4-4456-8ecd-14492dd95885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b7835d17-1e4a-43b4-bc96-fba50850ec4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74985e5e-0e36-4879-9c90-6e148f090d66",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f19da59-f71a-49d3-bcca-82f0f57499a0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "578da109-83fd-4a00-961c-53d3d1dfe764",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f069f6e-4804-40a3-926b-2745edb24751"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "07c48686-62bd-4c89-824d-eba8537c549e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19fe4b84-182c-4ff1-be07-fbd4b9770eaf"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4a645320-a67d-4254-8878-3961e43d0348",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "853efd0b-64db-46ca-a9fa-34a00a0a76eb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ba56ebb2-f177-4b5a-a89a-0282d022ae69",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9011c84d-b06c-4cd3-bbee-a507b07b2b13"
                }
              }
            ]
          },
          {
            "id": "5f92293d-3c34-4ddd-a4eb-3476c67a89be",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5500ca47-fa95-4fde-876c-2e3305bbae46",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "8d38d73c-bba1-4b46-89b9-a79b27d56bc9",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeeb3a59-841e-4ff1-8510-7906c11f62ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e059a203-9dc3-4871-99eb-55149c19eab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd22c4f-6844-49b6-bbfa-77d6afb93d60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ea3fe6f-481d-446d-81cb-efeab35093dd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4a310453-f73b-4e49-a344-ab43615ea0fb",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7df66a3e-1119-45ae-bca9-d244e259c67a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4fbfd146-2d20-4f8a-b8b0-03761720a9a5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b440750c-0cc2-4eb4-91a5-8fbb67ceb6ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "275abf5b-5018-428d-b320-1f0d2c043031"
                    }
                  }
                ]
              },
              {
                "id": "d2ed2200-7608-49eb-beb4-08840da5da8a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aea9f935-705b-460a-93ef-29ecb105ccc0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "57300fd3-9cea-498a-b811-778eee00ddb9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e3f5b15d-39cc-45ca-8570-402a458b5777",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "08c28270-1458-451e-9b8d-f2857f03879e"
                    }
                  }
                ]
              },
              {
                "id": "ba482b99-7596-483b-8086-46ed092da245",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d179bda-6b63-446c-aea6-94e0fb76544e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "50e55d7c-e7e4-4d0f-89ee-30971fde92cd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ac3f5b9b-a1f5-4e52-8ee3-25608b43a2d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9f99e4e7-e16a-48c2-b792-68e6aa2d36f3"
                    }
                  }
                ]
              },
              {
                "id": "a629e371-12db-47ea-b55a-aea95f3ed44f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc0bf395-2163-4a08-bf0e-9a71c86e4b0d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "25a4f28b-c5c0-4b21-ba26-870d19194b15"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "24d7dd69-6f99-4442-bbf8-e01545ca1cc5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b7cf6042-7c1b-4a7c-b53b-097de51ee2fb"
                    }
                  }
                ]
              },
              {
                "id": "9353e73e-cf41-4d61-b606-eab7097a63f1",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "653d973b-072a-4f97-8ebe-b00c4b44257b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "80019378-a022-4d73-8e75-4d9bec4b00e3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3aff3c9c-a0c9-40d9-ad61-81f154297912",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "cc7be9c1-37d2-4fa6-a31d-e52743d39a5b"
                    }
                  }
                ]
              },
              {
                "id": "5fbbe898-e6b8-4014-8858-36e5238a2754",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9cd7aa3b-3aa5-418b-819e-b746acff9282",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2be38971-6d30-4c46-a945-a3b0c29f747e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d85f2ad-1c52-493e-bffc-b882bb834e29",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6839d86e-8650-447a-a195-06fb3d63e53b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cb622026-1270-478c-94c0-52504adf1ac4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "afde8073-ec81-48e4-b158-91566b1b9823"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ec187641-565f-45f4-b333-cbb14f8d5abe",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "55c77897-7ff7-4994-8e12-132261d8a9de"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "147002e8-985e-4795-a2f8-cfe8be5624d5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "0c139a62-61f7-400a-a5db-b80a2c0c9a9c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4f83ec41-ecfb-45c8-9eef-1dc234fe3b0c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "719d5478-856f-4221-95f3-90bf0e8a56d7"
            }
          }
        ]
      },
      {
        "id": "dd350d69-139a-4060-9d7f-b2ffcdad2ae7",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1bf83a83-2014-4512-bf52-c632b386f653",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5bac9b5f-e7f7-4bd5-902b-4827c89c56e2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "eeca7486-188f-49bb-9bb5-2e7c70810bc5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b02a1e-7589-4fd1-be23-98f4810c3349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f87b2316-9f8c-44d9-b0d0-5667e0247b9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d6bb7bd-e822-4c1d-b2b1-27c3d0d7b129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5149d622-989c-4c5c-b160-22c7d3e4cfe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49def8e6-7015-485d-b360-998cdbf994fb",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2407e204-85fd-4dd0-813a-460ce46d49d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93f1bf88-8c1d-4ab8-ad8f-cf0272069396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b7c9b91-1a0b-4b75-8744-35a614e38d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "93732cbf-fcac-40a8-add3-1034d750de43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e678a1c3-e598-4c04-97a9-5340ec405424",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be307f5-7c34-499d-abb0-be973b92384c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f0b7db9-f79e-4a25-97d9-9977e45f4812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6821ef0-1a8c-4d91-a249-a82ce9d986f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "62114538-5df7-485c-8e28-9aea7b2ea19f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c566ad-71d2-43a0-b376-f5270074e1f8",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3544b3eb-6cfb-41df-8ea6-873e5a0bc34d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7e396b0-986e-4eee-b013-a7d2723bb8eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f651d48-7967-4fe4-b6c1-3a931aa516b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "99911426-c722-4129-a5f3-f957cd18dafa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2aee81c-314d-4a25-8ee3-7e362c646801",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b8002a3-277f-48f1-b535-5c716f92e055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32d18a2c-d0db-42e6-a56e-72e86cb84ffa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "935bac26-7c34-414b-9813-f62157a2fc47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "08a8afc9-ca8d-48fb-bed4-16312dc04bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6dcc84-436a-4714-b69c-4a0b08a3b653",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce0c2516-3bab-4c73-af20-ce0957c0b812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43d09ea1-5e28-40c2-971d-d2d48174b0cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d58113c8-fbb7-4d9e-abcb-c7da8824292a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "236e86d8-b3ce-4f4a-b97b-796ddfa3df32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c70f3c-5c60-4d88-b55e-eb644ca3dfc3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3cb0241-3131-4db5-826a-868f00d70512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8238652d-a691-4528-9da8-8387ae2cf686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9794883e-501e-4bbc-8d9b-a8aa39126edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f556346c-b33b-4050-8c1c-9d65a595439f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d17d57b-8231-4e92-bccc-dea304b10e07",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f997a4d5-748b-49a4-ad96-62af7bd6d4a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf324f2a-e801-48aa-b284-1c47ea81fe46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c5e4eac-4e30-4626-a50e-4561559ce177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1d5c93b-16a8-49ee-a490-e322f9ca3522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f54cc8fc-2936-43b9-8630-ec6e307b12d0",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9070951b-254f-42f0-9f35-91f3fb34f7f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7686ec3b-c175-45c8-a565-86e1d82f8c55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f87743a-2601-4233-80ad-f4e889c59330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b2fc7d0-dcd7-4f7a-85f4-6fb2402dd81e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06792d69-b644-4953-b032-6205e0e6857e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f7a67b5-c6a3-4c22-a7b0-fe76a813020b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0714489-4231-4615-9d69-55ed8c751be8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36640b06-1c5b-45e8-ac94-47a7cc4c8711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a02c0598-d3be-4a1c-93c7-2077965d3456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3275baf3-6ef1-4437-901f-e25cc2e360f0",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4a3c8e0-ce11-4e85-9315-70db6ffa353d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6c4e282-cd0f-4c85-88d8-900efb85b1cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5b9bd10-031c-4e0e-a0d5-9d29d01adace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ffcf429e-4021-46cd-b4d7-6a8fab18a86a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a77ad45-d673-42b3-ad1e-dc44e967ed93",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae53d910-be1b-4cb2-a998-04423542faf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f67141b-a9cc-4f04-bede-e7b5552a6b37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bafce4de-7a7f-4dcb-9984-64bcbaf7c5eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3495762f-7855-445e-a9b2-a348e9cc9825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b774479-efcf-473a-ab11-14cd095c721f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa76fc0-d4ef-43df-9ca8-b1cfefc93393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc5b5e76-7f8a-47cd-85fa-5cc2d0f75124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b41994db-18e4-4c41-a2f6-952dcba719c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "492a0b3e-90d2-42cf-8d4d-974c97310995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dcd94ec-5955-4f83-91d4-893b19b21863",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c295dc1a-515c-4c09-b65d-b13e200b39a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09b5e312-0543-4289-aee9-bac21175182c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed66c4f1-e244-462e-b3f9-2440e6c88ffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc7a4039-6eda-4bf0-b87f-553e63411a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c9de75-fadf-4418-9c0a-86954f5c0487",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cef8de9-8938-40c3-8555-f802177bcb3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83575aa4-589d-4c2d-815c-7790841fa3a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46898c9f-f53a-46a7-83f2-9acfd0049ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "33595521-226e-49b0-9737-d7a5945a5c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8c4d6f5-e0e4-4a9e-9fcd-7f41b1ef4995",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57bd54a0-de63-49b9-bae9-f93c8b104027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "023354b8-5618-40d8-894f-b57ba286c1c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9336e81b-b294-41f5-808d-efbbef6ed212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb7a0fe7-bdeb-4008-a9ef-1ba84f14a8e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def4c7b7-3a87-49c9-b4b9-14817e8c9235",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4a7877-284b-4565-b5bb-ee6af3e16e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "197fc727-3358-4d93-beec-d760d8e3b91d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "531db8c9-8ae4-4dc2-a0d2-37923e90766b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "958ce582-a0a3-4f8b-81b7-c3933d13d810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d8a16b-5088-4bc6-9c0f-d3a6c82d7b9d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4722c6f5-b92f-4ca2-98d3-3bbb9bc07b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9da78a7c-4ad5-4e5e-8420-be3f099ced02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb660b5-50ef-45fe-b17e-358f5c3d089c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c73a6897-4dfe-4452-925f-7ec5a48f84ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e389a2f-e8dd-499b-a8a0-8eac2bfad84f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c8da3d7-3c38-4e42-b5bb-ee04a4de64eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "706de233-e9c9-472e-9ab8-018d2c39b5e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3659a901-39b0-4495-a47b-6be234a066e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "849f7c76-ccb4-48c5-9821-97c86d5c330c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8507ef60-8e16-4634-8b39-a4d4a5f75d2a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9372cb9-bd9b-4efc-8547-e3cfa7eb1f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1742ebd9-6aaa-4f9b-b4ca-ff2a9c275f43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e880910-a468-4019-bbc3-6608fc7541d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02e11ae2-3c4a-4023-8e0d-382398c18b18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee03a15-480f-4417-b62e-7ceb757ecb8d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4aa1f99-4f1d-4c00-9450-d8a30f35ba9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f607d435-d2dd-4594-a00b-5924c583ce19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec7042f-8a76-424a-a1fb-405ec52dd3fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e9a137a-710e-478a-8c2a-3215b9ea389b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4892516-ac2a-49a5-9bd3-32247b62c920",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b33a1c8b-1c0d-4839-a543-38da8a80c9ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fa7dadf-6aa5-4e4a-9eff-edda8cd73561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6bb4b2-052a-4294-8ce1-53070d7c251a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9670abc1-13c6-4b79-afbb-4155f7a6dcc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef6acb3-0e20-4168-a18c-f7a11946a02f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e2650d4-ab04-4432-a9c3-00341019a9aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b769ba4-f3e2-4fef-adf5-6108556858a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0eff592-fdfa-4dc9-9b7a-c4256e666cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cc46ca1-3ec7-4246-8a35-4790da295ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2769dd01-df42-45b4-b80f-3bf9570fad83",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ac4a7ea-e840-4d35-9b8b-c8a01cb4c9fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb314558-1b78-482e-9831-4b17a93d8500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0cb88e3-205f-4a4c-bbc4-bba7ee85181b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed78fb65-e399-4a37-b487-1e30e8792d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a02147e6-3a8c-4a8f-a191-588698b7da67",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae81491-cb1d-4a39-821d-c24e9e252721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9ac3d31-686a-48ce-84e2-e41a080ebcb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea50fbb4-9602-43c5-af27-c4b941634996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd5dcde3-ee90-449e-9b1c-435a51c74b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e77bf64f-c0b2-465b-8dbd-6b15b0b509c8",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0a998a1-106b-41a5-92a8-f72132d97a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03b82ace-fc01-4909-aed5-28e903ae4e8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565c34e3-4789-4d87-a094-38c1d3105b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c88b399-5953-4b98-8bd5-71fde96ad9de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "565aca2f-b9d3-4b06-b1ba-deea5a70c071",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f213e79b-a0fc-43bb-8cb2-d85bdf82700e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7befe85-72a3-461a-a38e-e346701e6d46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebac58da-6cf3-44ce-8ee2-c9b86a7e6bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65015450-6f1f-43bc-b887-a07b29216c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ce3b58-dfde-4ddb-b209-f0f3f0dfe7fc",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5deb4113-d4a2-46da-87f2-4b4904fbbb0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "303dd722-3452-4a49-967f-7007d0214760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbfbe6d9-0441-4e2b-9fca-1510f44994d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19f26794-13a6-4020-b51d-33356cbb55b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21df06d6-0b73-432d-9463-4f8a15559c71",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "983efba5-8639-430c-9f24-e30a27e8a727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d8b83ad-5308-46d1-ab73-37212357e294"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b98c47e4-9915-4830-8df8-907d74d798ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e25f6206-02c4-4ee8-865d-9fc1b2ef8744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "623ac857-2d08-4e48-bcb3-e778fcb3220a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f7a5f4-939f-4aba-914c-0a005afb1523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ae5b5e7-23c6-44f7-974e-5d9f3ba50f63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d8ef186-ba5a-46d8-9ba3-5c99e901b512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "343c29d1-643e-49b2-8c87-969cef1f62e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a860c895-aff9-4697-9fce-97b2a9b198cc",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c50b9d-1835-44d4-b398-e6591f1bda01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1237902-cb04-48b9-92d7-6ee4faff5748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1091e4d4-6128-474e-a96b-0584a2b333cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9de855e8-7708-443a-9e07-08872212666d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c82f31a7-479a-4785-b438-8f1595729e75",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b78fe3ce-6d06-4810-9bf2-92f99e2ed98a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1c30a6d-70c9-46eb-8dbf-e4efb1aca8e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52610c55-b454-4ac4-bd18-0ca725d8357a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85e80d77-0555-490f-93d5-c60910314490"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9cbe3b00-7656-4846-bfb3-9be2545763dc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c79df756-39f3-4d17-b604-a7ebf6c6328b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2852fc7a-a70d-4257-906b-9b86c421a7e6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1854666c-d95d-4993-9009-97eb61c37c0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15afd866-2841-43b9-b9ab-c07cfced5411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f7d6cfed-35b7-4301-b8e0-862a703cac65"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f182f879-c993-4398-a1dd-7ce7db31e922",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "355cc8ef-4a5e-49bf-92b7-193616aeafed"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2df336d4-c575-44e1-97c3-4003a960ced7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "356247d0-8b50-43a7-a4de-15e44580669c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "040a5204-20f2-4c2b-bc7b-4da052487045",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5b6aea8e-f3c9-4398-9a14-7718a6effc32"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "64f790cb-89a2-4b93-81b1-10cd7012df67",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0c5f74cd-3c79-451f-9419-084120084482"
            }
          }
        ]
      },
      {
        "id": "3713e922-ae74-449d-a66a-c56b30f38367",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "13ee1f83-3a55-4481-a87c-aa8429debec7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2966607c-e584-4cd6-9081-a9e68508de90",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3207f5b8-92d3-4230-99ad-e8f805193862",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "524194b6-4848-4dd9-be8d-de6fab63fc07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f17d5321-edea-4eaa-b10c-137781c29dd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ba778a-2bac-4989-aab7-973d4372525f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b9fa318-72e2-44e6-a75c-41402ee92f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5306e057-8ef9-4891-9792-166508b7803e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0bedfb3-55a2-4c0a-925c-1e4f7047cefe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd62e4e8-bd13-41e4-a78b-cf7d27a8acfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a3e341-84f8-4208-8d2c-46c3272e09ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1607e75b-4c92-48fb-a23a-0cb87dce8195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364d3c3d-a887-4bd4-beb5-a29b8f6c5e6a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33198497-62c3-43e3-b4ff-9c346111add4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74e65daf-213c-47f6-bd0c-84cc1731f1aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba5dc4de-8505-4c08-9594-eed36be78ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "55641fac-5412-48d5-8e1f-b6b8ac8e8f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc11416e-4d45-493b-8a8d-958bb09a9b6e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a4cc5f5-24df-4799-9907-0f63923b6867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d125183-a6c0-40ee-ac7a-f321c398533d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb7bda71-a2e6-4cb4-b717-05ee1d52d78e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0622cba-24ed-4f8d-a815-7ded8da71590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b655dd-e9ca-46c8-a06b-8fea42fed710",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec66f9d3-f772-41c0-8397-c36004a7a29a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a04c9f1-20e0-491f-8df8-ff0940b0c78b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68a2d05-d61d-43ac-b88c-52d372a70a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0d49cae-5788-45ae-9370-de98cf3ff73a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d74eac1-f8e9-48c3-8799-b48ee15c5910",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5329401b-61f6-469d-a195-b14563975ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b414d66b-e283-437b-9991-b58de7038e18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e964fa4-a823-443d-99aa-981ea3409e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d8567bd-8968-4ef2-8a58-4dfa5c70fcfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2994fc7b-87d1-4184-a2ea-cd492f8e2d21",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a081bb27-382e-412d-9d7e-3582343a369d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd97bc99-b2cb-47d8-9aec-b7c4ed474fce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9142875-b7f6-49fb-a415-e9f75a7168ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcc41ecc-d0d9-433b-82fb-271db108ca21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "966db285-580a-4fab-9a43-4faf97a09986",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b8ca96-e767-4e7b-a7ff-c4a543f51f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31f9f9b2-3d78-44da-93da-d22765694760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b63a29-033b-4388-a276-b4e8411e4f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9f76da7-318d-4995-9ea2-e1592532091c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a1456f-05d8-48c0-a065-a502a9af03a9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebcc9c67-1012-41c7-817b-1bbee4079d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7c731d7-8c04-4bd1-980f-9f080b0b7f65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "712b464b-45ca-4e71-84c1-ce4b713d7e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee21db73-c5e5-4039-82db-c837550ecf89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3582fe75-4956-45fe-a7c8-a2fc8e6216e9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b088cc-9115-46c7-a2ff-70a1813aa840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c468134b-86af-4fb5-ad6f-d5b167480f4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3774160a-9882-4717-853c-80712f3a36b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a24bb8a2-c889-4763-acdb-73d495873188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c4e0bf-26c5-4f30-a718-592f379e1eb6",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5b58f5-fa89-4d05-8e84-4e642b37d8c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06007b1e-98a2-457b-825e-5a81617350b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10aca061-66d1-4d2f-ba67-a012d2b3d842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "90d37e0d-45ad-439d-983e-b2aeb68e5325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f1f68f-ce80-4129-85dd-863f602154d8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba5c7224-c430-4559-b71c-d12e1dcb111e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48fbc64c-32e1-4479-9f10-bc2308ebb2b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ea397f-9fe5-4172-b6f6-0516e930316e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8be4c2ef-26fb-4a9f-9921-cb1403372399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07e2ce9e-2274-4460-b831-87390d570706",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "455e740a-0cea-4717-9d2a-90f646bac909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98fec116-a0e1-495a-b07b-c4145506a667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b47c9c4-1b10-4048-a681-b819b393c0b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "032d6598-2844-41a5-a5b3-6419c5f3f210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "790e4369-02d9-42a5-b5cb-62ae9c3ee9d8",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4a493a-8ebc-43ac-b525-476afb6f96ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ff53e2b-d4eb-4947-a638-98747bfd7fb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a160924f-c6f8-4538-853d-beb056b4d223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a91e71d-1760-4cef-8b57-6079634b3ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d10a54-5656-4bcd-8b4d-d7f47906517d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da8e5bba-08ff-420a-b89d-861cdcc9dbd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9473448b-cf99-4c0b-997a-e7a008cccfaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa6b078-81bb-4ee9-97f5-cf2905171f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "668ba4e5-e02d-4a0a-941c-a6272aa68f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94bbb5a9-7535-4d1f-bd37-be5580df0ebb",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f40fb0dc-605a-452a-80fe-e21b49dc4408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77233298-7078-478b-84d9-5c84166eea15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5360629a-1665-4c37-8ac7-f025385a8126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c43710ab-114a-4cda-ba7a-68aeec7d745e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a77cf2e2-ef4e-4217-95ca-c9f17a48e48e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff70a194-7208-4969-b5f9-5d5d221dd1b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35010f8d-9fc4-4aa7-bc04-eacd0bb02f4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14046241-d49e-4ff7-a5ba-9cf389e32c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcda5f65-61f6-4036-8fb0-82cd35aee53b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61dd9569-1a3a-4ca4-baf6-196e168d4d6a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec02ddda-03d7-4495-b2da-9def5fd91b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1a4c753-9107-439e-b5a4-78bd215aead7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2f9692a-f166-4453-ac09-ff7eef8731a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "06cbe123-b08c-4935-800e-9c89d7924d24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e32cfc65-5e2c-460a-bc6a-1658d2141675",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "354f937e-aa4d-48f3-aec1-e399a3bb826c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53f37890-f839-4357-b889-896b974f8a24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e023575-6124-41f5-aafc-3bd90d00e10c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "955c467a-8195-4f9d-9f75-32abb098f129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e76f299-343e-4e2f-a455-1eee2973765e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec44ddf-ca6f-4f31-a07d-43c88b37e615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a929c26d-1763-4127-a7ce-a6fb1466f60a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07fbba8a-afd4-4227-87f3-fbcc40ae0a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10d7e3cf-4ab8-438a-a75e-cf65f6ad75d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1956f60f-69a3-4f74-8287-a51909cde296",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee1b7d0-a498-41b4-bbbf-8bad552cf578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a03b6fb8-f854-4972-9b9d-410660e20957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e12bac3-b58b-4012-84b6-91c33f1e783e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc0fedc3-9ff8-41f4-8b0a-4b5c30dd73ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e8736c3-ec49-4494-8dcd-0bdc98660482",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e6b4c5e-2665-4929-b2a7-9c7897fcc815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74d8d8da-7fb3-413d-8296-c3ab645be9d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e10bce6-02ec-45c4-bc86-71911c67f6bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9add0d34-6f2f-4bf5-8dde-96c563a56827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "677b358e-3d03-4183-bf91-84bb5a858892",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f408cb-85cb-4632-8a57-c78e277c5a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f7a5d87-eb1a-414f-9fd3-f11c306eb324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caf1fe1b-b7df-4ac5-ab92-30a77795aa26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33711f9a-4753-4a3b-ac7f-d45e22ccb547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "584cb334-cdf7-484d-97fa-4cc61733e129",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0cbb60c-82f3-4a0c-b825-a21b367216ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "263c5890-fd22-4b5d-95c4-7f734c6c498f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd02715-027c-4c4a-8c92-1d2019f23baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39725c80-2fdc-4d6e-b27d-6a559bf342b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a5f378-5367-4f3e-9c6d-928c29cc91bf",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd3ff232-4463-4f2d-a4bd-e6a198c09db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "118106d3-ebff-4f15-9eb9-adce77fb5403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f5f0c22-06dc-4dc9-ba75-4cbce2481f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f8b7b4a-3c77-4fb6-a57a-d57767f6b509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abaf8059-ddb3-4609-b4f2-03106d093f06",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "495ea2a5-eefa-4235-b96d-f8b874f768d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b7a1633-3e53-4557-9a6c-070a64a99887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6505296b-2c59-44d1-867e-86039c333c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed4b4785-e0ad-4fcc-8c69-6aed2e331ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aba4355-10bc-4482-96b8-a745792c4553",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "322f1d31-58b4-426a-9740-5a9d7fcd192f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c2eb769-5dae-49b1-8117-d03fb05aac10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0fb290b-0414-4ab7-8803-ead798c15e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fcb0b46-430b-49e2-97ce-7464be9fea1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "257a0344-de0a-42ea-88dd-2f33b68e2a86",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca18ab14-bc75-4943-84b6-d5a7684990a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d84ceb67-11a2-4a53-bf71-305feb2a2ded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc82fec1-0fbd-4db9-b24a-859d0ac07fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ba48777-c5ed-48f8-b3ac-6f0c15e3c602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8803061f-26e3-4ba8-8b83-865046e28629",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "534b0c5b-cd68-4e8b-9bdd-de9459588fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "830108c3-4ab9-4596-a816-a5cdd225c3fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca4f6b5-e792-490c-a0e9-8b033a12ca6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a93c9d7-1fa1-4e8c-8782-b3aead5afab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "336ed2ab-5ed1-46b4-8729-ce6a0fc91160",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc12c71f-4371-4922-907f-95202ae97e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "769bbda8-36d4-4a5f-8fc3-c3f916fce91b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4851ad86-82d3-4619-8e2b-6d70e825f25a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96744785-5b0e-49c4-a11f-2f17b9619808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dbf723d-4bf5-4dd9-8995-8f8c74c99ba9",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe456fa-7bff-4e2e-a078-e89526879ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b7fcec0-92ec-4d2e-8b36-03df7c571b08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "364ea51c-0617-40ea-aafc-3f4c2dc65387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eeddedad-8bbf-4073-8576-884c94284edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2b116ec-2c80-44ef-a27f-d308a9ca46be",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66637b47-1ec8-4aee-bff3-e03536046ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c7501bf-b170-48a8-a9ab-463c813dca89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05192a22-f67c-4101-a668-e88fc288e1df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2584f560-507a-43e5-91df-3f0e4d0f4f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2756e0b-e726-4506-9dbf-affbe397e4bb",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f2fda0-2e97-4d1e-bb83-a31da79c4b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9627dae7-bb17-4ecb-a7d2-dfd183d619e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e9153af-fd38-4fc1-8a88-40e2033f5f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5846798-67f2-4a08-ba91-066b3be2ff4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f32ad5-cb79-46e6-b3ef-b41dd9b691af",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37acd7dd-dc47-44aa-954f-6aa88d87fc8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "281301c7-257b-4669-b02c-37b88bdffc99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9059eaf0-3b68-4bc1-8d8a-109a5747dda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a05167b-c685-485b-8067-e3a26755aa26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d9341ed-11ec-4c57-91b7-e6f5b450d086",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df52eec-4a9b-4a4c-b72f-3ff1733dba80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e1f0730-cb71-4356-865a-5eef01a1eb67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1df4e9f1-d5c8-4177-8523-6c563a6737a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c308f21-ac89-4380-8765-10a541523432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c158958-27c0-4eac-9c53-667407cf78d4",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a6bbaa3-33ab-462f-a8bc-de753b0b9214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "185b4bec-c431-4449-9315-8225b7b6a156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48268362-1fe1-413d-8d6f-8e563350a533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "051e96eb-d8c3-48d8-a492-81b1da8ba96a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29909479-9816-4c62-a125-f3745cdcc285",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc20a719-8e3f-4e1b-a3e5-41d4382527ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "191cca1f-c252-460f-81c9-c99ae0d610be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d81c994-202d-4b08-ae5a-c8ce86ada860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57f1c7d4-2ff5-485a-898d-0b1a9e5e4a01"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1d30fd44-a56a-4739-badd-4dec9e1bf65f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fb4b9e94-ccee-4bed-8b35-c6b89cc83f30",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f1efb5-df0e-4ab7-a001-00c6c7cce4a5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ab831b72-f21e-422b-82ce-3e4c7b9bca08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "154676d1-e3d0-4b9b-bc1c-518c8939f131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d67f64fd-f11d-42be-b8c9-d45c905cce3c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50c189bf-ee83-4483-b89f-6be8cc6800f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f580718c-73bf-4556-91f9-e2425bf2cf3a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a28df277-763b-4c91-bc6a-991547210d98",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "355fff5b-c3fb-44b4-9b1f-5ab5d8284bfd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7a663611-8eaf-4b89-810a-24b9e5a85bc0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bfc3ab0f-a902-4714-af25-473393d6dde3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "43d9c3f6-9552-4bfe-8259-f7dfa4a96465",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "71d7530c-17ea-4cac-998d-f75582797af6"
            }
          }
        ]
      },
      {
        "id": "9ac8cff0-e952-4c3a-9815-e824417e2b95",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "27a8b97c-f224-4f8e-96e7-60b290f832cc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a299aa3f-623e-44e5-886b-2dc2f41d8939",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5e2d6de2-34a9-4cbd-969e-c300c916d111",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7c6f0c-b36b-4fe7-a1d2-948ebe45ff1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9980e423-cfd7-44fc-8287-85d70bcba342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dcf9ae2-6794-487f-b0c7-b161a98c7bf5",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89eba2d3-cea5-4d48-85ac-1bf64e6dcebb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2237bd4-5919-498b-881d-0862640f8988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d08b4db-a7b1-407d-b943-7993a1e2692e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d38d20af-398b-4dcb-a9d4-3a729d55720a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5707a6be-ddd4-4237-8a35-db4c834278ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e72a2d5b-382a-4a0e-b338-f2ebc6c2735b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6bc27b5-fc4e-4525-8832-46f50ebed87c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44746684-4513-43ec-a831-50aca6d371f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d0fb311-fcc3-4677-8ea4-53998091110b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72b7e32a-68ea-42cc-9f51-37d1252c5530",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbd1b0ce-326a-4b34-81ab-ce9e05c651e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef1f90d2-5a99-4f48-8ab8-933832e3db6a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1531ab08-e8a6-4372-a514-f3db3737db2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfb96dc2-3bcd-4aed-8149-907e2666c939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d55a199d-b0e2-48cd-9bc8-8423ca5bbc20",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d540693-31ab-4a8e-99d8-6996f8163a41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e592339-a4d7-4f00-9b4b-a6b88aae048d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f8d29c5-0c92-48ed-a2bf-018c01129786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de804606-c93c-466b-a84c-2313470a0814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7a1c095-6a99-416f-9a83-a835dc752829",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d7d9bf-4ea4-44b1-ba83-940986f27d1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f86d58d-4d6d-486f-8f5b-560aedd2476c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03dc95b2-e0e6-451e-97da-916988ca492d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "924a7d8e-f4b7-4ff0-8943-a5dd8dce3561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f47ae2d-3759-43b6-af4a-de9e351490a0",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "405c65f5-b859-429d-acce-c841f9e91ede",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65960b5c-1b55-4048-b00f-fee719d40a92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d244e1-bcf9-43fe-a883-6d89087031ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac1121f1-be97-4a14-bfdd-a7412d7d9948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efcaab7b-361f-4596-9252-9bfc3074496e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7750f252-77e2-4696-ad8f-346832f7fd52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be57be83-8024-4f26-a673-00dfe489c4fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ac0bf2-a15c-4dce-902c-6f957bb35dc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc9924d2-e125-4f53-9e85-cd8bdb1811a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e371c21-e854-4066-851a-7ac87f1d4cc8",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a558e246-9b74-495c-9362-0fc80f0db944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21bff5e2-581a-40a4-b89f-bb66a583fc39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a4b803-b60a-4bfa-990e-079147aee4bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e258c04-44ef-44b7-b439-a645c3e12787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28db2e3b-e2de-4ddc-ac8e-6349069d2452",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb9f9ee-a440-43f9-bb7c-d0e70a0b1133",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f491b91-0eb3-46dc-8059-c9462aa88c0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f77e057b-9ff3-4bbd-b10e-1d78a6555c36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cea0f090-0ab6-4d5b-b85e-c2e3fc932512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c61b0920-b1b6-463a-8b06-f8985b42a94d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1cc2ea4-ad69-4b98-9a82-ee29a3bbe7c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a78e4f20-e2cf-4f48-9efb-f5e6fcd9e7bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e005b5c6-9c90-473d-9dbd-7c36bf2d0af3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6ee5aa6-7d48-4d8f-93b3-7cfde6ce6d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a3509fd-d25c-4c53-bc26-3c4a7630db40",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bacae9ca-d3ad-4bfe-93b2-a26938165299",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b403a46-acc8-4af3-818a-87881e3b0a39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e626c2-03b2-4990-9399-82493a632cb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "481badb4-ef78-48cc-a803-418e7617b7a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df7214e-3e17-476f-ad3b-4eb713a12182",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f1b882-e18d-4cbf-a129-c34b3257af0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8df42c27-72b1-4065-a1cc-ac29b93e5d55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2917e7ed-b245-4dfc-a15d-90e8d595975d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d83242e5-2663-4330-8cc3-1333a1727999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ebdb0c7-b485-40b0-ab6f-8cbb14456bad",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2dc9648-7b93-458f-928d-57924fbea2ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a7967bb-6cf5-4fae-bc1f-75c58c86e1ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d92f67a-55f9-4c97-8e43-f981e5df1a9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "573206d9-7c4e-48a2-a0ce-dced2e890fd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd68042d-6e6b-4ce7-bee5-c4e251f5802f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39393f8-0b71-4c3d-9027-aa68ec87a701",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f59c3ddf-ff34-4ea9-96f2-7fec75fd5642"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a119505e-689e-4427-8a76-5a018fb6b308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0a44a86-1f88-49c3-9f8e-df1fb7727136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc22ec6-1cbd-4d2f-ac91-f6577bec41f6",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc1c73fb-a5f6-4a4c-b8e1-cde535e0cf39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42561b37-67c9-4af6-980b-ab0a63e6f11e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c338d80f-feed-48c8-8c9a-38853b71bd56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b5f1ed8-4b5d-4ad9-9c28-c2bde4b12142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3826a457-7b77-45b3-a5aa-308894594ef1",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eab122f-55ab-4466-ae3c-54017453f551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7df6f3bb-d6af-4790-a599-6a76413c6ee4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf42ab19-e61d-47d6-a8da-a1562757ef5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4973ef0-7418-4aa2-826a-4aa87721fd04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1780b184-778f-4198-845a-b6300494c886",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b6e6e9-cd05-4c5f-9639-942580496cf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "845fbc28-d90a-4209-b7d2-9793917a28ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccae1147-afb9-493d-84d4-849ee95cdd04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18717248-135d-4135-bed1-064a18cd2b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4928f082-3a19-4029-9770-16186b5f0aa5",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba0153f6-fa92-4434-9f6a-b596b7ce1bc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ea3f6ad-d661-4d02-94fb-b0d310d604cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5059511-2d8b-43a5-817b-228a7c5ba12e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec059b6c-cd9e-43b5-baf3-9045ce2eb1b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd74f562-018f-4465-a4a3-0f22d88357a9",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b308b01c-ade6-45f6-9a13-ee268f007ba1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31eb61ea-2065-4ff2-ad98-fb14dc70bf03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "510ca973-5937-4a0b-82fd-8555a986a2b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03231780-4ec2-4695-b43b-305b2e88fd4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d249867-7837-4f10-9943-aec4903d5b83",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da74ab94-4b4a-4819-8875-7e74ee1c2502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4a52e94-b735-4b83-a5bc-54f16879f27a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b1ffea4-ec6a-400a-8fba-d1cd71665b41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3e87b0b-5d3c-480e-a265-29c45e8462bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d4519c-72ae-4205-995b-75a753ebff2b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e28821-f0b1-4a58-9fec-3d69c05cf04d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "273f84fc-3b6d-4d6d-acbd-c49b2fbf5294"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "458d2031-ed0d-4eaa-9190-6c6d4581f27a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a7f593c-8f0e-4cc9-aa85-acb29c06f8b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cbcd051-c155-46ad-b548-88f4a8ccabc0",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8723f2c9-6016-4e53-91b7-59de489d9618",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d982243-f9b2-4530-aba5-3a600a282b92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3933e2bb-efa6-47fc-b484-bfb9609211af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b7e7843-aa68-4565-b57d-1b1be40564f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ccd49ce-7326-4933-bb74-1805e6b007eb",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c2fb8b7-f2e0-42b4-8685-c19ad2937854",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26a8aec6-a640-4684-94dc-cedca49dfcb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b546cab-4f0d-4bd2-923b-2a107e99ba3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d499aaa5-c68e-4346-a5cc-75f6520ccdab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b063b0-e630-4698-ae23-f9e7e800a2cb",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee543cb3-c084-4a35-9282-24e2821f3637",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47623697-e509-402a-bc8f-92b003d4b159"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a5b5b7-b0b1-4876-a43c-740cdc37943e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72c4449b-41c2-48cf-84c8-290565640284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38799c8c-6f7c-481e-879a-c5426c5f920e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c7253df-485f-4ebd-a5bb-edfa28adfa83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "377363b7-442a-4e79-ae12-9231c4dcb3b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f77bf8f9-7561-4a3a-b336-f1d037362bd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "693cfab3-c60d-4050-8242-5a9182214c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be46f46-2f7b-4ede-8478-2b7ef574bde1",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ead0ecb-1446-4a7e-aefa-610004ec3e2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "138dd588-1388-4a07-a0c0-9dd085830ecd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24dd90b4-fe22-455e-9567-5c522b58c194",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd8f831f-cc9f-4e48-819b-31c870fd96b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96d2529e-cf54-4930-874b-81fe5b1b5f4f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87052816-1448-4ce4-9771-c9729def1348",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c16ae5f9-2e87-4d8b-9cb1-aaf31bef6f84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f0fb85b-b603-4ba0-a80a-50ad4810a579",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5c0de42-a173-4c79-9987-28567c8dfc2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff522f67-c75f-4f40-9766-280b27336687",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "015109a3-1d70-427f-9aec-554dcf2fafbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb9d4ee1-ef70-455b-baae-2b2ca5552a37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a27c05-6fdc-4e57-87ca-d7cb5b3da09b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed0a343d-ef81-439f-bac9-c624a09b0062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb5cc9c-5ff4-46fa-b5ca-9da427dcbdc6",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbd76e54-5067-4114-95db-eb9f2396be6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f40ff42e-0991-4f29-9f5f-a4d7cab3754e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2fbe28a-a9a5-4e54-a93b-813ed29097ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0591aba9-d001-47e0-8df1-30ce51c4da12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61258ae4-bfea-49ff-b4ea-9f8dfa6d6185",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd125e4e-f688-49d5-8164-8b7996d5d710",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b44779e-7a52-4dd7-b5a2-88ac37848c0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c64902a-597d-4548-bf08-3870e190c832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96bbd315-7034-47b1-92d4-9a3a6b18af21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "218f4577-76df-4b1c-94fc-90c2581a2819",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f05e7943-9a35-44d9-b862-5a6f98cfce88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a363881-f1ed-4634-9e26-93446de79f65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "811d8d8a-be81-4c14-932c-1d213c9164eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d79bbbc-cc53-4ecd-b5a7-b212db952edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "041a278a-a898-4ff4-8d36-f1a378d55166",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "615781d6-5278-4edd-8d52-94ad4c7d743f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2f3fe81-8b48-43d8-ab1d-b6a8ae50315e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1055ee56-733b-4977-acf8-31ced7b5a897",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a14c075-802e-455d-b61a-006df137ad5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "162c4e9b-cea5-46ca-a43a-a1057cdbfeb0",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8293ef81-3938-41dd-a926-f676e6f265ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98a82be1-b0aa-4553-9197-fad3d3aa5c04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af27229-607f-448a-b517-30c61ebe8491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4e8f320-79bf-4c88-b9a0-90a0ccd4eebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bccda89-a69f-48cc-ac21-a5416a93438c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4e76939-03bf-41d3-b21f-b5e690acbd57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82d451f9-8efb-4c81-9699-8e77019f07f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d03fd60-e145-433b-80d1-3cb3f0ee5c0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baf684a4-aa5d-41f6-b4d1-e9719d8d0bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1282e63-6193-491e-b724-b83a9abd69a1",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40438413-c6ac-498d-8fa0-24a2f7338705",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a956e80-20b0-4e51-b619-63cee9cb94dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32cfec10-e08f-431c-8b80-2688c690bde8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e448e93c-76ba-49c2-852b-2b4019797d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c92b38cd-dcd9-44ba-94f3-2fe7df893d53",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea4e66cf-d59e-4c4a-89c0-360314023d3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e761462-4c75-432d-9180-d3a0a58b75b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f03c5d6e-ffa2-4377-a841-67510ad1b4db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "142eb987-6379-48db-b3de-3e3399e0058e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff053000-a64d-4f4a-9c8e-fb1d9089d771",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d780dc-71be-45b9-ab93-ab687e0b3a92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ee4576d-959d-407b-96ac-cefb215a0ce2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ee09298-740d-40a7-bed7-70333c9c1eb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "289ee30a-e28c-433c-ac3a-a0ca1c2e7cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3374dcf-5bf1-4806-98a4-52129f578672",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f5fd03d-d5eb-44fb-81ab-f79e59761980",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1dbda2d-ef81-4a43-9b5d-0c30ef385388"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6279eb9-57c4-4ba2-b058-9fcfc06c2d86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e23809b6-fa57-40e7-9e7c-e61225305e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "357986cb-2108-4511-b2c8-5def01b68f28",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bcd7b41-356c-4c87-a336-9c754543417d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75a6f856-ce90-4c62-b29e-7c601895d7ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2635e970-03ca-4ca9-bdb8-1075189dc510",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a528adc-0d92-475d-9014-e066bd8487fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dddd0b15-769e-4664-a2cb-f370e34012d4",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db57d4c7-d5a0-4906-8a0f-feff99be801b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25802ade-2ee7-4099-9d0d-2db63ba1b973"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40155c51-940c-4e63-9e74-cdf76b81bc74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b9aacf0-083b-4b0a-b154-7c32816726e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "713c9f11-936e-401f-82f0-1222434992c1",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51730543-7375-4e11-a66d-4a34d8b524c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3437c52c-f283-415a-ab77-9c69b2938f93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9cce21a-d1d2-4b83-b5a8-be00219b39c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32076d9d-5cbe-4d75-9f4d-9d9d160f72ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd58f368-2b58-491e-96dd-989b3f741d51",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4570bb2-35da-4f03-a42a-a9473bcb7654",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "247df6bd-b2ad-4f3d-afc8-e3835b72cab8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6118283-4fc2-4192-8b95-41d29cf0468f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49b973f9-bfe3-4bfb-a87c-3ccdf7fa26cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc481c15-fbd2-435f-992d-96cac99497ef",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee35e8ad-e838-49a7-814c-210a74c5e028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c84943ad-b608-4855-bb20-cdfde9e017f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63888f64-72e8-42f4-8a2d-478af11e06a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da5795f4-4066-4a44-bfb1-e80cf8307428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "138ab7a2-583e-4886-8aca-f3c80aaab027",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b04d01f7-6cf1-4737-a92b-c021f4466077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba9d2655-6bb9-495f-8f80-29424d3a56ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "590d4547-866d-426b-91a2-187d0133451b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24105c40-2f60-4577-a538-cc73625704b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67d47616-565f-4854-92f9-3814861e271a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb265f1-b00e-4861-adce-02571380e365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92891770-aab3-44b1-991b-ebddf1b92229"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82eee655-9940-40fb-bfeb-89c633aca518",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f9715cf-e71d-454e-94e8-2429b879ec62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cacbc66-b970-40c2-915f-c561fdbf629f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "225ccfb2-d044-48b9-9a77-436ae84d9d69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42b3b84b-2fa9-42ee-9b95-a631a909ceff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f714db-41a9-473a-93d8-95942412c255",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f35f363-bc72-47d4-be8a-3dca8d5dd254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "254374cf-84f6-4c34-aee1-b00444f423c8",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9935fc8-833d-460b-a0f7-514250e0cc59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "036bcdbf-daf8-4cb5-968c-6c6769cf20bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce499d30-92f9-4698-9aa1-e93cc4e9c156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "214877bc-d557-4112-b931-ef0f1b39e0ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fb06347-931a-4318-acc7-a74d3a5cae81",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "947d54a3-c6fa-4d61-a17b-4bccd4df1129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "212bff2f-b105-4636-85c0-27f4799130b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "779948f7-ad73-4dbc-9265-e8461e196e0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6ae4c5b-e11e-4e76-97fb-43a3bced87e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c9fd62-f97c-4fad-b2c5-8bf1702a715e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09905c1c-ab60-4a16-a896-ae4549c31dc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21eff380-b4cd-4008-bcae-10d1780680a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "724af112-e361-4dc6-9e24-4d703f8d7e7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "853025fb-3e4f-4424-bf2d-e1e748162eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e04f04-1201-4f38-a4d2-c54944e8b8fa",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb8bb622-118d-4faf-9502-916c55f02f8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08c7cfda-92aa-40e5-b3f9-592f8c2aff9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b95dc4d-37d8-4e32-a98a-062034502c34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dead2d0c-1cb8-44b9-81bd-10adff527251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a95f48-8962-4a39-a012-71e8e3c249c3",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f93dbafb-8153-4a8b-a519-7037be180bda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f056a7e-6b30-4ac4-a377-0a1442bc54bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6101baf0-647a-477b-bece-cd40b4056639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48f5b7d4-887c-4cc7-9a3b-736b0bbb44b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "435e3a85-3362-4ba9-a0f7-f49573b29926",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff4c98b-afd9-45a7-a17d-3e6ab1243e0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99a0fc90-481e-4863-87d9-94282018dd9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f73969-16b0-4238-8abe-87550723e66f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98081d76-310e-48c2-93c3-a74951cd53d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c36ad457-5473-4835-bb58-d5e01006c57b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4901c2c1-e05a-46c8-84de-547d248646c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5b1c527-4c1d-47b9-8324-2ffa7da60506"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "196c3a29-4d11-4b69-acae-ca82f14dceb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7153746-e93d-4c59-865c-99886b43cb5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d02db34b-d0dc-4f91-93ae-aa5cb2543786",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98d6778-7152-4b5d-97cf-3c59dd775aef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39b0c5c5-4c42-49e8-8dab-68a70a441919"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ad1417-816b-4129-b241-42bbe1700d75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "389649d0-bb94-495b-9335-db0abe090548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9138b62c-cc83-488f-8c65-fc605283b621",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e368923c-571e-4738-8d88-ed72722868db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dec13872-9a22-4c73-bde4-58abe3fbc573"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e841cad1-3e1e-4d3c-bc7b-523d757d045f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "952de182-1693-4f8e-91aa-2413712b8a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a667f2-d141-483f-9190-5fb545c5e518",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc7c68b-9298-4917-aa00-91a2ab1937bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2042282-53ba-46da-9d82-c24943e89d05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf91fb2c-8473-4141-bf38-16e8021f3633",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1485c4a-ed12-4468-b21b-addb39b172e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aaba8e3-56c5-4156-a2d8-3b93e53e5668",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f204c817-cb81-425c-a14e-1b8a92efa6f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51f9e077-5b5b-47dc-9de4-e6035b1fc8e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb46bb2-f143-441b-b334-ae8314409056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ec99bc9-8d26-40d9-81de-e3ea7e842c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd8acdc-5da9-4e53-8ae4-edea17a6134a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35edd7fc-a7d9-44af-b0e6-738a85190c64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd7f1da7-6a96-47cb-af01-0f40a1a07567"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff59bdc-0b45-4f7a-96f6-d62d57ecadcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15a30ec5-16c7-4a9c-a50d-b5437eb94cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a008db4-639e-4a24-bd67-434d211060a5",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66dd9d1f-448d-4d94-ac3d-977d06146ff7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1626ac37-357e-45d5-9cd6-b94ba57a0ed1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1168bdf5-0348-4bc8-a813-0bd42ce74aa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d93e76c9-23cf-4dd0-b4ec-2a856e8765bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "993f2598-2b94-446f-ae36-39ac903056a1",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb6f63f-b39d-4141-9752-bbadb0779b4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c46a4ff5-fbba-415b-a6cd-281701faae26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "657f9151-ce93-4ed0-880f-5246f4a487df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f4130d3-7546-4267-9a6d-bac50de07fab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9780c184-b9ca-4304-8996-6ebca1ec73ce",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb279a2-bc93-446e-ba74-1a9fe2469f55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5ad3c25-1764-4f98-8083-89c510842785"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d533893-47e3-404e-8fc9-dc62dbb40300",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8923b8f-7390-4d45-821f-033aefba2c28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b1abada-f2e7-4b3c-b2da-6f8ae4889988",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "403b5822-f9a2-4e7f-9a98-5961a99dda69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcdf2f88-2522-40fc-b4d4-08aa39f75372"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ddbc48-f6e7-4459-8eeb-66796e14e3b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a54a6e1e-807c-4581-97fb-04d452142515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2001620e-26cc-4228-b092-6c73c14e3cce",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf0c78e-6b85-4e7b-92e7-53df390c90fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1aabf002-c2f1-4535-ac0b-e4dac976c6e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc2ea289-8b8c-4f57-b324-e5cc7067c5fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1736c7d-e32e-4866-be8f-ca11ee699984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f02268b1-6b37-48ca-a5cb-3cce8bcc9205",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11312e0a-7d40-407b-9a78-818a0ce2d6d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaae5228-2bfc-4468-9621-8ee522f9035f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c109c7-bb37-4f18-9e89-e118bc7e7ae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e0dc337-0a89-44bf-a14e-54bec61bf233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e31c39-33b0-4839-9cf9-ad00102705a2",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc1e730-908f-42d9-902b-2d945853e2a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b7e5b9b-d8c3-4a6a-9dca-edbdd527a254"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15fa9cb8-66bd-4f27-9dd6-4533ef6b532f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d52d9c39-445d-4f5c-ac5b-5d7644f7bff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b257956-69d2-472b-b77d-25adb281ede8",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28064418-3e49-41a1-826a-ffef646d5501",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7e6beb3-7c78-4984-82ae-213e153abc03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a4edbc6-686a-4d8e-8bd1-a38eb4c5d58e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "592d8545-12c3-427c-a69e-cea03eb721f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99d7b43d-32df-431d-83ca-439a4040d832",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c52a92b-21e4-4878-bbaa-49cf99c5f511",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b01e88aa-9c95-45d2-8a4e-bf18eb0a7af1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d913c40c-05f3-4f1a-b470-429037773c21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99d3b006-9036-46a0-aa5b-9d20eb3f5744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d76d67d4-d247-4a25-8fd0-9f709788a109",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498ef8d3-9200-4f97-b921-4d5dd7588d00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54c09b14-7b70-4891-a027-18121668a476"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a515612-5f83-478a-b275-eb6f77a7e4fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aaf48ff-3ab7-43db-814b-39905d0c272e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8efe8ec8-3a50-4bb9-99f0-909f279a09ad",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eae7122-abb9-4191-9524-8bd9adde330b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de3f3ff1-dd54-4c14-81a4-697236aa5ad1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5513114b-6ef7-404c-ae5e-7d8b57fb4d21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f3fbc17-0f06-4934-9058-adf5f6dc7cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf13bf1-8616-4c26-a399-73a8c2ff0bbf",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "080ba99a-bd8b-4f28-881b-479a86cd409a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fb9c777-23be-475a-99b7-9fd59869d4de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e49763-267e-4d34-91da-5e995dce8642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed8715ec-1b79-43db-8c50-5056d8ef6cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afdfe68d-0ebb-4ca1-bd56-b39c47bed9b9",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "629c0642-3250-44bc-bf3b-2d4de0c16401",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb50d262-3170-4542-895d-1adf1d560c11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77db37f8-1752-4bd6-adf3-10e8c9e34efa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9434410f-c3a0-4167-80a1-941b5cc49161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c199e77d-ffa8-4dda-a21f-956d79df0f95",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd0cd746-2ed2-4d3c-8b5f-30fabe9ed533",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "708ad8a6-7b49-4f85-a89b-c05453b7da52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd99aef-20e9-439e-8fed-4ee3bdc032e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11a14792-74ba-44d2-b14b-305c789f1300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b4b29ff-022b-4e45-ab5e-d8b3debd275d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20636fca-796e-4d81-a6ef-ef7f3aadfa5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7cafdd2-ae52-4315-a5a0-4d007fc3298a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb3ab42-7cf5-4c2a-a257-c612233ac795",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "823aa334-a447-4ae8-a6a4-524a6d16c948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795f8ad8-7024-4c6a-ab54-abd8ad161f4f",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dc761d9-b74c-4517-9581-7ce43d2b7a20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7233789-94d0-4bf6-93f2-2ff385ab5641"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "864c2a75-f6ba-4be9-b2e6-1241ca0c0b2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b9426fd-dbe5-4a2e-819f-639cf3d2e9c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd726851-3137-4446-91d7-adf360273016",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10af4cb6-0353-4eec-9f8c-62dd604e0ada",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb4dc948-0e36-482c-96c6-a466fc2d7eda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5129016d-5eb8-4cd5-b8c5-3ba1b05d0125",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39bd35c9-0665-4b32-8778-28fff94ec933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09435f09-4ae0-4fc3-a6d1-ed419c5f22b6",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d11816ea-b8d6-4442-83fc-b597fe0755a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1ce3297-855f-47fe-bb2d-5f246c8624ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "455b43f2-de25-4a34-b627-c0724d190b4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90c7828a-d359-4264-abda-d708ef85c7e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e1b518-8189-4470-b717-dbcd6169df6c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "653f8547-3d53-47b6-978a-ebadc8e8e86b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5df71b57-f210-49d2-86ea-84cddfd5380a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31a9fd70-862d-4879-bb9d-3896827c9228",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "972429f5-f443-4d82-8b8f-a948e6851a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "361ecc2e-0491-468c-88d0-f7052b69cca4",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ff9aa6-3911-429a-b85c-c3d8347288df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce65deb0-4a22-46c2-9d61-19452d7d68fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de580db3-4e51-4ce0-9933-da0764b291f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fa6e6ea-08ee-4d94-b388-09a523a8c587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "105f5a1e-dd8f-48c4-a43e-eaab7fad9605",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca72a4ef-d20a-4aed-bab7-3f24db49885d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29c622e8-8143-40f1-ad8f-ae7471b9efb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c42f5fe-163c-40e6-8e86-77943e6ad3ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c3bd7ca-74e8-4e3f-8233-0b246758334f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05125f74-2cc4-43d6-97b8-25cc8d6ac603",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "955f3959-49a7-47e4-adb1-af1ad09be446",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eca95a51-e160-4d43-a754-857798d78637"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3502ae2-e3ed-43e1-a345-d26b8f05adcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97be5f4c-34a4-4902-afab-145651a37598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6607f287-c4ab-45d0-abeb-09478875b211",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0419e5b8-a243-443e-823e-847af553ddc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f76332c-a858-46a9-90a9-7a92ae0024e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "054030e4-d1ce-4c6e-9ace-1c093380917e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2283dfbb-65e9-4012-8800-01d923704d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b54eccad-a64f-428c-805d-ebd7b5dde3d2",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d1ebc0-5671-44ea-be1e-7d4701da1016",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d3961e9-2068-4f52-abf9-7d133a79f19c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcadd93f-6e33-4271-9175-ebc94d797b2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47440841-1376-4f41-8909-511e5cf10514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3568d6a7-c940-42f0-a6a9-625ac67719da",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a4ff062-67e8-40fe-8e4a-79f442845bfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1389a44-84b3-4ab4-9ea0-fec7d2ea389a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b8e7af-61bc-4574-9634-9043d0d68175",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88699966-c9f8-4c84-bd7b-ee32fb44dcd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c91c19f-562c-4a8b-891c-cda4dd5ef872",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5175d674-8e98-49e6-974a-e6671b02a903",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf631ec1-afbf-4d77-8e57-0ff13201ea16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76167f15-dd89-4f83-9d26-f90f5d54fef9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52b8c562-2ec4-4fef-bb7f-07eb31078941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a31b2f2-d6cd-4fe4-a467-6c76b371534d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "330ff4e7-ad64-4edf-94a9-0ef5fdebc9be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c51eb55-2906-4ba6-a57e-251af9fc02c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15153e21-8008-4fb9-bd9e-0df79030d939",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "547af5f4-3178-4fc8-9371-d8df4cd6980f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "510977d5-dcbc-4a1a-8833-d396800e7d66",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb1ad0a-843d-4de6-9862-f575f4479691",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60d3346b-3576-409d-b411-6781da61f525"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e599d099-1490-4397-9288-512a8188ed9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a96f79b8-9c0d-4bf3-bd7a-1fe150d8f913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d89aca3-e887-47e4-b30c-0b38d7d38949",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04ca452d-e4bc-43f3-a210-14a08ca4f095",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a72f4fd5-6f02-4ac7-9766-a2e0e10b962a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88704a80-16a4-4617-af5b-9ac3e4160617",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcea3fa3-8cf5-4383-b54e-cacef77e4671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7813ccdc-06c8-4bc9-9036-9ab1092c6975",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75cc0539-7c6f-4753-9ba6-0309d7dc3c11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76a9245b-38e5-4040-93b3-632993bde1f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8c1c609-b692-473b-9ff4-f8d56fb31dd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae9b9eeb-f037-4b0d-9181-19970ce1354f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc4061dc-8f92-4011-8b5a-02e62c4f97c6",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76620ce5-2c31-40d5-843b-a1e2592d834d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6e57c1a-c18c-40eb-8f92-9dfa4470d2c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f663639-5bed-4406-9094-cc54bcce3fc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fa85889-21e1-42f8-a7ca-75755ecd2325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf302121-ec08-4d6d-9257-b491ac7ae2c4",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f97ee1-c0a7-49d5-b561-e132c255bbe9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9648da63-1611-4cfa-bad5-ef5c9945c2e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a1e203b-6661-40a5-a3f4-40b7767f01f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f66e4273-5fc0-4cfe-87a1-b336b07e8f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f692340-e2c7-4674-8d8a-dcd4e42607fc",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d469aa-7aff-482d-a66a-e2c5b463ebd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26f63080-9cbf-4f9a-beb2-d4abfdf9ae4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b136ae-ab94-4ec4-b92c-50155619643c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42de8c27-8737-4f06-8b5f-52109749eb26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420b9e8f-93a8-481f-b1cf-3fe65768d83d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7acbc71-57f8-434d-b309-c6aa55ec95c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28f12038-1f9f-4691-a448-934d8de71153"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd2aab54-0392-4abc-b7ae-56c33d4fa614",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6e1ba3f-dd6f-4223-9545-aca2ee03a12f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1034ea17-bbd6-4f46-8d6e-1f1aa799aa51",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3cebf6f-cee4-4eeb-80b7-3b54af83afa1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89ac8e3a-f121-4db6-bbf1-555f0529f394"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75469478-c89e-40ba-a7cf-ca4c285f96e2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25ef63d7-e4f5-4aab-910d-a92bfdfd5e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f1405e0-5da7-4c4f-ba14-1632b61fc40f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9eec86b-278b-4d04-8f88-b947879cae91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb16e947-b72f-43bb-95a8-bbe9e2547016"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bdb9c00-1c7b-4277-ae88-87428a36edf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2148518-07a5-4642-8538-cafb568ba78d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f2a5e2c-6edb-4854-ad3e-4ee11b17f674",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce69113a-d9f7-427e-9d79-c6b422ccd8c4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "98d6a161-c636-4adb-927b-575778ea6377",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c85ef971-26a6-48c1-880c-c73288078ff3"
                    }
                  }
                ]
              },
              {
                "id": "df8d3498-d22f-491c-81e6-b1b050edaf95",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e21909b3-fa71-4728-8071-410c7292f779",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "449abb15-8d94-460a-a5fd-cdf7ce5d5458",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "447d2308-d818-45a0-a0ea-e14db5ff2ffc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed2673d-9888-4d3a-a37b-e1ce3164b84c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c3065356-57d1-4f3b-a787-8073387578af"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "015908c0-5199-4624-b8e8-109a491fa547",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d34e9108-1812-492f-91cd-559dae057e45"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d565727e-b1ae-4ff0-bda0-262879f1bf38",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf4b3f48-78e3-4971-9460-f026afebf752"
                    }
                  }
                ]
              },
              {
                "id": "0c84a429-3576-48df-9e17-e1b6674d61ca",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "bdbc12d8-fe5c-441f-8dbf-2412f9f40b7c",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a259d22b-d39a-4785-b85b-a6efebd25dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d98bc493-470a-41c0-87cd-24382754c13c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7906b809-fb42-4e50-93ed-39de0030fa3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a15ab73-7bb6-486e-984b-e2d50d985623"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e2f88b4e-31df-4896-81d6-55dfdfe20143",
            "name": "Positive Testing",
            "item": [
              {
                "id": "96148615-1ca1-47f9-b18b-ff3f0aa940ba",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "152bcb9c-a21e-4858-8495-62f3827a497a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "68351771-e088-4614-b2e9-606280ba7c18"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a15fc12a-8fb0-4fb4-a65f-e40768c3fd03",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cf7d3d1d-6410-4ca2-bcba-f32ff59bc101"
                    }
                  }
                ]
              },
              {
                "id": "17154bae-6e73-4550-bea7-209df7c83ae0",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff015029-0763-4793-b927-4c5083fbf2fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "04f0f733-ad40-4a42-8d2f-cb5ec993b00b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1f31cd4-1dee-411d-9e31-7e2fb952a32c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a264dab-db94-4fc0-812a-24861fa1b647"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c17353dd-ecca-4d0c-96ce-63acd3e57250",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b489b223-028e-427f-9714-899d893990f2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2916560d-2f32-4de9-b0e2-5e56d621e808",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b666506b-ebdd-4206-903a-6e3cca8a89cb"
            }
          }
        ]
      },
      {
        "id": "7f082ca8-e486-4685-85fa-3f7310782dd0",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "0247169a-71f9-4be2-acb6-ed1054115ca5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f4af94d5-db8e-4984-8ab6-01439c431fbc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b95dfdd7-127d-4cfb-b7eb-19d15aaa3ba0",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f4bf962-8357-4f67-a5c2-01f237140aef",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "19bcacb4-89b7-486e-93cd-9c890fca8952"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fad34e9-2bdf-4a4a-a8a1-38ff3e636d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "94ea7a06-58e4-46f3-a893-6a53a571546a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "32b98df7-8764-4f33-b60f-fbfd5ffae4af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2c67edd-09c7-4820-b41d-bb2e34810cf2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "38b51e78-4068-41c9-8b3e-6b5f8c2651a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f1a34b9-4bdb-4876-a4a1-62fb5a839247"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f092aee2-70c1-4c13-be26-072cfd9b0da6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "87ad4469-e90f-4fb7-a37e-3182f2fd06b4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "399ff747-b9c4-4219-bb94-34928ec10b84",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a8430f2d-9cb1-4f76-a514-518d9f42b3f2"
            }
          }
        ]
      },
      {
        "id": "937fe368-7e34-404b-8795-050eb80db0f9",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "83548e22-cf4d-486f-bd63-c5342500ab9f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4a73c9a1-c6ae-4a12-802b-25f3912c57a2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c07f42d1-89c1-40b8-92fa-09f2b4f07d75",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65373198-6cf4-49ca-95b5-d8d338163795",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33bd6e72-b92e-4a66-af98-b3d5b9263e18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d10781d-9433-4786-be02-7e7c499624d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d5650ab3-b297-49a1-9ded-762b85387a86"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dfe837bd-8beb-440c-9053-a899df26df11",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a46c37f7-5b64-4542-be86-22ca29a43fac"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d546c26f-89b8-4c12-8ce4-7f82cc29e46c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b6482f1-7803-4aef-a039-8a3209ad42de"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f2c0148f-4c64-4762-a3e0-0cb6c07dd368",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bd79e947-d6f0-410e-a785-2b4d5982d391"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "68e86c35-437c-4f2e-9e7b-2545e866ab29",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "21b699e3-2b09-4e6e-9185-20a602a2b57d"
            }
          }
        ]
      },
      {
        "id": "d7feb122-3977-4156-80de-8c9e2a416e15",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "512472fd-205f-489d-b5c3-ed932148da6c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "82ac973f-b430-41d1-a9ee-5013b52906ec",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8a3460bd-ce18-4e4d-ab07-d8f0fbec49f6",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39fa8eea-398a-4c9f-b8aa-26c09a68d981",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b5c86abe-f5f5-4241-b67a-4bad06f97d23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a729c47a-aab6-4a63-962b-8e67f7850e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f8fdf88a-bdd2-45e1-a397-f672ff366c1d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da265deb-1e1e-481c-9d72-7c67a03c01b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4fe5a0ed-29af-42e4-ab9b-f539a3b9f09c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aff83403-a2d6-4078-bfd7-ae0664daf1d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c277d82d-cb46-4d51-9dd7-1d989f270b37"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0730e035-d4a2-4fa3-9ab6-9ac4ab0be95b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1c9229a2-7d1a-4aee-bafe-83f718b2f96f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a58fdc70-4c60-42e4-9f46-82cb1b4f71de",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "126ff40a-c63e-40e3-a3fd-8e86287520ef"
            }
          }
        ]
      },
      {
        "id": "60c17bc6-9888-48a4-94d1-ad1f2eb65e0a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5caedb16-b194-4e30-8171-5db61d7dd08c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "52de2a2d-da97-481d-a69b-c47a14b97d84",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "22ce1be5-b054-4c8c-8aad-03d92f265e15",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "858c72d4-f9fd-492a-9255-dc09b9e5a0e5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0b6b6e9d-d73e-42ff-acc0-e67bb5a6d30e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 116.87017543859649,
      "responseMin": 6,
      "responseMax": 8596,
      "responseSd": 549.5432878771662,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1704242120960,
      "completed": 1704242163403
    },
    "executions": [
      {
        "id": "d2c1bad5-6827-4ddf-a0c9-3fbaf652ed0f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3b5f61f7-4c44-4a8d-b22f-1552fe5cd7e9",
          "httpRequestId": "b1e2ed7f-b3e9-4d48-81c7-a75cf45b3c9a"
        },
        "item": {
          "id": "d2c1bad5-6827-4ddf-a0c9-3fbaf652ed0f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "1993a588-cfca-48bf-8c83-2ee3600faa47",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 0
        }
      },
      {
        "id": "f14ec4ed-8fd4-4ec6-928b-e7be73678154",
        "cursor": {
          "ref": "1a5ad003-c90c-498d-ad39-8d2626e6d552",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "0ce4d537-6ca6-40a4-9ce9-1c252d3207f0"
        },
        "item": {
          "id": "f14ec4ed-8fd4-4ec6-928b-e7be73678154",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "96033220-a237-452d-9dba-b789f588695e",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "463d59ed-98c4-411c-9d50-4b43010222d8",
        "cursor": {
          "ref": "29963eee-b50d-408d-9610-abde0ccdb3b0",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b7f27956-b33a-4115-a4cd-49c1cffe43ce"
        },
        "item": {
          "id": "463d59ed-98c4-411c-9d50-4b43010222d8",
          "name": "did_json"
        },
        "response": {
          "id": "212c10cf-3e99-4115-acc1-240f81c4ae8f",
          "status": "OK",
          "code": 200,
          "responseTime": 417,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f04c930a-cf66-4666-bf17-4f9c7615285f",
        "cursor": {
          "ref": "c9a564c4-867c-497b-9647-f02204619243",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "57b8e5aa-c3e6-4bfc-900a-675fb8257269"
        },
        "item": {
          "id": "f04c930a-cf66-4666-bf17-4f9c7615285f",
          "name": "did:invalid"
        },
        "response": {
          "id": "54a89b4a-5410-458e-9ffa-17d150954d0b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 681,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f04c930a-cf66-4666-bf17-4f9c7615285f",
        "cursor": {
          "ref": "c9a564c4-867c-497b-9647-f02204619243",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "57b8e5aa-c3e6-4bfc-900a-675fb8257269"
        },
        "item": {
          "id": "f04c930a-cf66-4666-bf17-4f9c7615285f",
          "name": "did:invalid"
        },
        "response": {
          "id": "54a89b4a-5410-458e-9ffa-17d150954d0b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 681,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a05499a-3511-4fde-9f87-567db146e58e",
        "cursor": {
          "ref": "80d18c23-5250-40e1-83da-000d524663bf",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c58de7d6-d49a-4d1c-86aa-50b096d959ad"
        },
        "item": {
          "id": "5a05499a-3511-4fde-9f87-567db146e58e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "27401ac7-1a66-4670-85fd-fb0131d86c86",
          "status": "Not Found",
          "code": 404,
          "responseTime": 60,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c36ad16-5c65-47c5-9f72-30b98cf2c45f",
        "cursor": {
          "ref": "771ad72d-c687-44d9-8c54-b52277d2fa92",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "4348c7d6-1801-475d-aedd-16b31a674aff"
        },
        "item": {
          "id": "3c36ad16-5c65-47c5-9f72-30b98cf2c45f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "52f64bcb-9137-42a0-91c0-0907e09e77d5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 68,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea0a8e19-ddc2-49ad-a14a-ae2c76167743",
        "cursor": {
          "ref": "397dc8ef-ba82-4c95-8dde-2a5f1075ca89",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "42e73f4a-3fc2-4f25-91a1-24ec4439ed4c"
        },
        "item": {
          "id": "ea0a8e19-ddc2-49ad-a14a-ae2c76167743",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "adfa9dca-0b65-4c32-b1ed-588094652cd6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12942fbb-79af-46f6-af81-8dd0100ee2c4",
        "cursor": {
          "ref": "61fd2c23-28aa-4286-8225-7ebb3238626e",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d1d3ed28-b298-42b8-a2cd-2d1963c5e3d5"
        },
        "item": {
          "id": "12942fbb-79af-46f6-af81-8dd0100ee2c4",
          "name": "identifiers"
        },
        "response": {
          "id": "024ee195-6432-4e39-84bc-bbf905c220d8",
          "status": "OK",
          "code": 200,
          "responseTime": 75,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f2dae5c-8a92-42df-9131-6228defc682d",
        "cursor": {
          "ref": "bd55cd7c-e73e-4bf8-8825-2a713c0cc190",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c4af88dd-f6e6-4868-9530-f60faf2445a0"
        },
        "item": {
          "id": "7f2dae5c-8a92-42df-9131-6228defc682d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9d83b3b4-2376-480c-9200-bb2b6bebf3d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00700724-5846-4823-849b-f4a2812c30a9",
        "cursor": {
          "ref": "fb92e6c0-abdf-4cb3-af08-770ea9745141",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "acdbfc05-a36b-4995-8f1a-78f065fd2e8e"
        },
        "item": {
          "id": "00700724-5846-4823-849b-f4a2812c30a9",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "57add80f-91fb-4bb1-95f2-ecdf101b4a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcbd47ca-4a69-4e19-97e4-a12e4c00f89b",
        "cursor": {
          "ref": "7789865d-a08f-49bf-a1e3-4b967df25611",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "64922f35-7d26-4d1f-9347-ac5013f7074b"
        },
        "item": {
          "id": "fcbd47ca-4a69-4e19-97e4-a12e4c00f89b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d5acb127-3e89-428a-aba3-cc8998d205a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fbd3c5c-6991-4548-8141-c5d727e7688f",
        "cursor": {
          "ref": "2e19a69a-59bd-40ef-97ca-ef08a47fa095",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ddd56e2f-00e7-4dbd-81cd-7a5b2ec5001a"
        },
        "item": {
          "id": "4fbd3c5c-6991-4548-8141-c5d727e7688f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "1ed5cfe7-1b30-45ff-8a87-1ed19d11d195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f756fbf-99d5-4cf2-99ab-b5bb88eab47f",
        "cursor": {
          "ref": "80ac859f-7c8f-46c6-a836-30dbf2d57ae7",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "591032ad-b420-47fd-b5ec-dd23a39406ca"
        },
        "item": {
          "id": "7f756fbf-99d5-4cf2-99ab-b5bb88eab47f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5a0ad8d4-4426-4246-9860-621285cde9b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b37d49d3-797f-4eb8-b771-d42f7f1782cd",
        "cursor": {
          "ref": "1d95da7a-d9c1-4b87-89af-c54f36d2b78d",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e8eb2ad2-b8a7-4686-8de6-fa6164de5ebf"
        },
        "item": {
          "id": "b37d49d3-797f-4eb8-b771-d42f7f1782cd",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "15afdf7c-7078-41c1-bf01-a050d6016156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26efe1d5-dc2d-4602-a7cf-f4cd1f9c8a74",
        "cursor": {
          "ref": "0e11571d-84a3-4361-ae4b-af2d565fb353",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "3b16fcb3-264c-43bd-8356-346a25ea9813"
        },
        "item": {
          "id": "26efe1d5-dc2d-4602-a7cf-f4cd1f9c8a74",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "3f8fed13-c2c7-4c52-9167-6fb85eb49a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b893ef3-6e10-4968-a0d5-8c2e32acafdc",
        "cursor": {
          "ref": "68facde9-b8c0-49c9-b822-24efc0b5993b",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e053dd19-0907-44c7-89be-329013b4be99"
        },
        "item": {
          "id": "4b893ef3-6e10-4968-a0d5-8c2e32acafdc",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "1ba47eab-9f00-4477-b486-a4f30edb2ea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64db5ce4-7bb9-4348-92cf-ff16e8426f3c",
        "cursor": {
          "ref": "aad6e979-2131-465e-b00e-33344d0fdf05",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "2c3f4c7a-bf64-42e2-b401-6f97c0abb3fb"
        },
        "item": {
          "id": "64db5ce4-7bb9-4348-92cf-ff16e8426f3c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ec73f2af-7520-46d1-a05f-d4b9049406c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c5525fc-9e9a-47bc-a8a7-f041908728be",
        "cursor": {
          "ref": "6ace4352-4b15-401e-8660-c4b0438d7974",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "01a7df10-22af-4d61-a6c9-ed8170bb8f88"
        },
        "item": {
          "id": "5c5525fc-9e9a-47bc-a8a7-f041908728be",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ae89bd15-8ae2-4393-afba-656b3d93f055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3145f0-0d0c-486f-a2eb-bbd7a595364a",
        "cursor": {
          "ref": "b8887fef-d54a-48df-94b0-1ee1a35c1848",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a9beb731-72af-4b63-bf6c-9bcf4f308001"
        },
        "item": {
          "id": "6e3145f0-0d0c-486f-a2eb-bbd7a595364a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "56e9f666-02ad-439f-99d9-98597aa31422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5540db3c-e10f-4e56-87bf-0e101870da92",
        "cursor": {
          "ref": "5485242b-12b6-45e2-b97d-f8e165f108f6",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "aa388d70-8492-4b4c-97be-4b89b8a5c8ba"
        },
        "item": {
          "id": "5540db3c-e10f-4e56-87bf-0e101870da92",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e3695fdf-b6fb-41d8-b9a6-0c7059e0deec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b4f6ba0-557b-48b5-bfd1-17ac8563b261",
        "cursor": {
          "ref": "7d4131f3-cf72-467e-bb94-83a32037e39f",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4369135c-749c-4221-bdb6-f6d44dbd0a62"
        },
        "item": {
          "id": "1b4f6ba0-557b-48b5-bfd1-17ac8563b261",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "dff78f4e-2570-4573-b4af-4dd1c1989674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c0e7ed-2f18-420b-b3d3-81ae152ecad5",
        "cursor": {
          "ref": "f7a871d8-854f-4916-9133-cb55e33d463b",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "64cf2ef7-618d-47a1-81a9-19701b444dd2"
        },
        "item": {
          "id": "b8c0e7ed-2f18-420b-b3d3-81ae152ecad5",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "9a3b96f0-8b66-455b-8347-c809727cac1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933f7287-88ed-4479-8913-e07c6448fd3d",
        "cursor": {
          "ref": "a03477ea-07af-4edf-aeca-1dc82208f885",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "754ed24d-53fa-4e69-ad2d-0ddc6326514e"
        },
        "item": {
          "id": "933f7287-88ed-4479-8913-e07c6448fd3d",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "6dc73acb-5786-4ce9-978b-e07b2199a3ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2836490b-bc63-4aa0-a782-e854d3085a4e",
        "cursor": {
          "ref": "be997b7f-1ccb-4acb-80c8-ff6b02ba8db0",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f808044e-9446-4625-95ee-c2b73db57e77"
        },
        "item": {
          "id": "2836490b-bc63-4aa0-a782-e854d3085a4e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "7a3b1f63-0593-409b-8fad-1f5fe72148c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6538df70-9e32-4240-899f-0fa77e57fc49",
        "cursor": {
          "ref": "b3ce5d40-602b-456a-929f-e82bfcb57549",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "fe1f1411-b4db-4403-9051-ee89fad7c7a5"
        },
        "item": {
          "id": "6538df70-9e32-4240-899f-0fa77e57fc49",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "fd00c0cb-82bd-407e-8837-defab8fca9e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0887dfe6-1c2f-4939-9d89-667422c5df1a",
        "cursor": {
          "ref": "45e8c581-e215-4db6-8bec-34a01394e8c6",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e794d02c-491c-4b85-a1da-94740e68094c"
        },
        "item": {
          "id": "0887dfe6-1c2f-4939-9d89-667422c5df1a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b59368fc-2036-4628-b958-bf074431d8ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb46ed75-4529-4821-80af-59f9bfb6d0e8",
        "cursor": {
          "ref": "792a3cf2-f285-46e5-a611-e13216e9bcd3",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d2d3fdf3-1104-410f-a4aa-fe35c97b0083"
        },
        "item": {
          "id": "bb46ed75-4529-4821-80af-59f9bfb6d0e8",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "19fd75a1-484d-4f22-a8df-5dc292344ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c1cfc16-713e-45bb-89bb-c14a5bd7455d",
        "cursor": {
          "ref": "fffbae45-4988-4c02-ba8d-264d25d046bf",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "69736797-2e02-4ec8-accf-a8d30e19d3ee"
        },
        "item": {
          "id": "2c1cfc16-713e-45bb-89bb-c14a5bd7455d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c604f6f9-00b3-4250-a8c9-5804fec37c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a10f6bac-64af-42c9-a3bc-d3a8a75a52cd",
        "cursor": {
          "ref": "3da89c5d-f847-480a-bf1a-fb82845cade0",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "08f490cf-6d04-4e7e-b38a-116fe217778a"
        },
        "item": {
          "id": "a10f6bac-64af-42c9-a3bc-d3a8a75a52cd",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "9731915d-b65f-4cc2-8af9-6cf982de86d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c29e0a2e-44c6-4f45-93c3-d84410283788",
        "cursor": {
          "ref": "5153a9b7-af12-4ca9-a370-9d89a83e406e",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "3f0b4b08-4e85-4b2a-bf31-215b8298daa6"
        },
        "item": {
          "id": "c29e0a2e-44c6-4f45-93c3-d84410283788",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "a8f47c75-ff93-4743-9f9c-a6e08bf97900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8baf4e-3b79-48a6-8e21-567becdde40d",
        "cursor": {
          "ref": "d7597f3f-c82a-4dc6-945e-8aafc9e3bed9",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ce327526-ada8-470d-9be5-1fb2bc34823b"
        },
        "item": {
          "id": "2d8baf4e-3b79-48a6-8e21-567becdde40d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ec20f3c0-15e3-4d02-8d38-8eb7ab2237d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c9b767-4863-4219-922a-aebd8bc684a5",
        "cursor": {
          "ref": "859bf008-7ea9-41f8-a6a0-b04958f1b9c0",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "515e7c5f-b1a2-41f6-8f5c-8052c1821f12"
        },
        "item": {
          "id": "51c9b767-4863-4219-922a-aebd8bc684a5",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "7145935f-adbd-42f2-aecc-6d013ab42ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c9f0fb-f808-4d7a-bcfb-5c0c0119cd84",
        "cursor": {
          "ref": "9876b3a4-f9a8-4b49-acf4-60e2069364dc",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "098570b4-f50c-4b3a-9525-a259ac06cc6e"
        },
        "item": {
          "id": "b5c9f0fb-f808-4d7a-bcfb-5c0c0119cd84",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b6ab7644-0956-4517-9c37-344051619bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f16e61-f186-4912-815f-9b76a5fb1702",
        "cursor": {
          "ref": "72dd81cc-afc9-4c78-a8b4-9f8d735c3120",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "3b16ad62-ba4b-4047-8ad3-99e99ad1715c"
        },
        "item": {
          "id": "d1f16e61-f186-4912-815f-9b76a5fb1702",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f0cf7438-1e35-4720-9d3c-0648e1fababc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f12b3c5c-889d-4138-b207-ee4bbf7c11e3",
        "cursor": {
          "ref": "e8d07e16-11e5-4051-b3f7-279918084683",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4d988150-696c-4d88-ab77-b5070cfbc3af"
        },
        "item": {
          "id": "f12b3c5c-889d-4138-b207-ee4bbf7c11e3",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "4dc42994-fdd5-4289-a73b-0a0fb74e7136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f7dae32-0c69-4a21-af58-40d574429443",
        "cursor": {
          "ref": "cb051178-2c3b-495b-88f3-6bc866246c1e",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "0d73e9d1-8682-417a-8bb9-1eacced222a5"
        },
        "item": {
          "id": "9f7dae32-0c69-4a21-af58-40d574429443",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "dfb7a96f-967f-4872-a822-ab37f580d53a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b05dc8e7-438f-49a3-824a-bd9edb5ed8ad",
        "cursor": {
          "ref": "6f66cd1f-f5ae-4ff1-b023-b3ccb3b4cc42",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a4c52830-d45a-49fa-b5cd-14347125a368"
        },
        "item": {
          "id": "b05dc8e7-438f-49a3-824a-bd9edb5ed8ad",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "95a139a6-9fac-4293-b34c-63e6cbcac62b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94414dff-0b2d-4b94-9d7d-6ccba4fea3df",
        "cursor": {
          "ref": "969a857d-01df-43ff-b7ac-90766cc367d8",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "cd934bab-236f-42f3-971f-d686be57bc7c"
        },
        "item": {
          "id": "94414dff-0b2d-4b94-9d7d-6ccba4fea3df",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9e634f60-2b5b-4d1e-8f7d-f72bb01f92a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2307664d-e13f-4677-a1a5-d3ce589ae25d",
        "cursor": {
          "ref": "3d7c6b7f-0172-49bd-b981-e8ae2b2f30f4",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "7799dc11-1c49-476e-b96d-9380c46aece8"
        },
        "item": {
          "id": "2307664d-e13f-4677-a1a5-d3ce589ae25d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "404aa401-d58e-4965-baa6-9a234d11e01d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91552744-514b-40d0-9b16-ed5707c165ae",
        "cursor": {
          "ref": "826d3735-ae0f-43dd-ab4c-cd4e15929c9a",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "0dfc769b-3a28-4bfd-88fd-30ed2dc66d74"
        },
        "item": {
          "id": "91552744-514b-40d0-9b16-ed5707c165ae",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "755161bd-20d3-4460-86f9-6e59b4d0115e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "766197c3-8b4c-42f5-ae4a-4877fdd53a4f",
        "cursor": {
          "ref": "3b4b8f0b-8276-4115-9b9a-41ba349f2015",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "fd4e87d8-3260-4d24-baf9-1a6bb1e0b8ec"
        },
        "item": {
          "id": "766197c3-8b4c-42f5-ae4a-4877fdd53a4f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "c57c4941-c8f6-4d81-a647-393aec07daf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b4ca59e-cef4-4634-aad7-d826e2383f31",
        "cursor": {
          "ref": "5a4b0d40-7f34-4269-9b9a-b206ca2b1a1c",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "8c8b85ed-0dfa-4487-9323-91e478bc1bf7"
        },
        "item": {
          "id": "7b4ca59e-cef4-4634-aad7-d826e2383f31",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "150d00f3-188f-4e8c-a7e0-8f54c3cb7657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "553e9152-f580-4c22-92eb-3b6f0379ccf2",
        "cursor": {
          "ref": "de73d9b9-1b54-4d36-9f1b-f92adcd2e2c6",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b00e234b-7397-4087-a70d-d789c9ef9d13"
        },
        "item": {
          "id": "553e9152-f580-4c22-92eb-3b6f0379ccf2",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ae0d9b2a-43c3-4c67-9401-6bf1ec3101f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ab0001-e200-43ee-a65e-e3f4683a8bab",
        "cursor": {
          "ref": "0050ad7f-bc0e-4fb0-8ada-e60986ef1581",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "3751dee9-f033-4f52-922f-86ab4862cf6f"
        },
        "item": {
          "id": "b7ab0001-e200-43ee-a65e-e3f4683a8bab",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "752f4f70-c728-4c63-9124-321b8d26158b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2bd199d-0e74-4a56-a904-dbf5e54d9900",
        "cursor": {
          "ref": "c3aaa9bf-79b0-4da3-81f2-1600b005171a",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "ef742bc9-4e56-426d-98c9-2b180b4acbae"
        },
        "item": {
          "id": "e2bd199d-0e74-4a56-a904-dbf5e54d9900",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6510df1b-4755-44be-b9df-2e37cb8f3157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26574980-6f67-4d44-bd5e-83fb86b9d452",
        "cursor": {
          "ref": "6ef0a273-b96c-486b-9abc-73d302f4af30",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "076e9536-b9c9-443d-8bfd-6e9770ebcd4a"
        },
        "item": {
          "id": "26574980-6f67-4d44-bd5e-83fb86b9d452",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b62f14f2-41d9-430b-ae04-c7963afbe186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36558a7c-a0ae-4805-aa5a-4416595393d5",
        "cursor": {
          "ref": "a699e7c5-51f9-4989-96b1-b303282ec1d4",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "5dd143c2-cb2d-46c0-8313-e63c73225f55"
        },
        "item": {
          "id": "36558a7c-a0ae-4805-aa5a-4416595393d5",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "9d7958c2-5e74-47b6-80fb-5d7841aa78bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c58816-7f34-4d99-a587-3a422f333b5b",
        "cursor": {
          "ref": "2f211c25-977b-41c4-ada0-1af54d239b9d",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "9a1a7ce2-8ff2-4383-af8a-164006014850"
        },
        "item": {
          "id": "f0c58816-7f34-4d99-a587-3a422f333b5b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "246acf29-cc7d-432e-bc5c-36d8f08c5b8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7355f170-4570-475e-a621-16ee19451b37",
        "cursor": {
          "ref": "46667220-6d16-464f-ade7-7e20335fe05f",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "54aa10fc-1bcc-4b9c-8085-004cd967f3a6"
        },
        "item": {
          "id": "7355f170-4570-475e-a621-16ee19451b37",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "89b1f5ce-4eec-4211-bb8e-fb222932634c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7831ece1-e47f-4cee-9815-11008c62ddef",
        "cursor": {
          "ref": "492375c7-208a-4fc5-bf14-41d1504dbecd",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "da7c7f70-aa92-41a0-a3fc-3b8a56353602"
        },
        "item": {
          "id": "7831ece1-e47f-4cee-9815-11008c62ddef",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c6bc3da5-7ad2-49da-a29f-bd14b406f183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a05039b-dc8f-498b-863a-bba520d111e7",
        "cursor": {
          "ref": "3950fa1f-32c9-4e90-af47-8c1300690dc5",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "79b8e3da-d1d0-44b2-82db-df22935e9a6c"
        },
        "item": {
          "id": "1a05039b-dc8f-498b-863a-bba520d111e7",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "1d9057a5-4dc4-4aef-9cc1-0d411431f184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70cc555e-23bd-496b-971a-fe85a98b60e1",
        "cursor": {
          "ref": "c0822ef5-019a-4819-bb81-91ce3a4925b0",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "322b0d8a-6d59-4b84-a7b0-b20017bad058"
        },
        "item": {
          "id": "70cc555e-23bd-496b-971a-fe85a98b60e1",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "405c8594-9880-4bd0-8802-bef6113cb1a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c94c5c7-33bc-4296-a94a-37e2c78858d2",
        "cursor": {
          "ref": "94d7ea3c-3430-4e89-b700-b32ce2a6807b",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d5db7270-15ed-49e2-8c8b-9662508bb0a0"
        },
        "item": {
          "id": "3c94c5c7-33bc-4296-a94a-37e2c78858d2",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "177374fc-f2bf-4a08-ad5b-a953b1dcc3d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b11461d7-0aa7-4de9-8be7-82605beaf3f6",
        "cursor": {
          "ref": "c4492668-2e07-4af9-a485-db394fe3ee7d",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9dd67022-1403-4644-af09-83c7f3d1511e"
        },
        "item": {
          "id": "b11461d7-0aa7-4de9-8be7-82605beaf3f6",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "0c17e430-2d19-4b8a-9505-a70d3df06ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "021ed82c-0319-4420-940a-645416dcb3a5",
        "cursor": {
          "ref": "62d1b981-98ac-494d-9c1a-ade52e721505",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "fcca71dc-978b-44a5-8440-e4a230eaa0e3"
        },
        "item": {
          "id": "021ed82c-0319-4420-940a-645416dcb3a5",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d99b9f04-a637-4002-b9b6-78e3a6aac591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d41e4136-1f44-4a02-8e4f-584589f9cb6e",
        "cursor": {
          "ref": "1936abf8-dc40-403c-a5dd-a89a09fdf065",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "a942bcd9-781e-45fc-a20b-ae0c373f0737"
        },
        "item": {
          "id": "d41e4136-1f44-4a02-8e4f-584589f9cb6e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a6ff609f-d28e-4b80-8480-d321f6296dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09be3563-db4d-4a8a-aa33-4b464af13731",
        "cursor": {
          "ref": "4b87c962-c135-4896-9587-1c93c795ddea",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "bdd95269-3ab6-4fd5-ae0a-aa432cdaaaf4"
        },
        "item": {
          "id": "09be3563-db4d-4a8a-aa33-4b464af13731",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ef5f0f13-9c9a-457c-867e-c8cf714301e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "628530cf-c2f8-48b5-b8cc-2479d29fbaea",
        "cursor": {
          "ref": "47af0fa0-df43-416d-9825-e9db63785de7",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "2fe516c0-911a-4ac2-9d13-f1be6e2ba8b2"
        },
        "item": {
          "id": "628530cf-c2f8-48b5-b8cc-2479d29fbaea",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "155b0ad8-d66a-46bf-82bd-5088516a4948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 148,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e4bc2d-b1c9-47f9-9231-389d46ef2b77",
        "cursor": {
          "ref": "b24b34fb-2939-4a69-b68d-6c90297598de",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ae636d25-edcd-4288-a5db-dc24c8444701"
        },
        "item": {
          "id": "e7e4bc2d-b1c9-47f9-9231-389d46ef2b77",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "08115320-f336-4af0-8a73-92077a869dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "151566b2-94c2-4a61-bb24-995bc87f78f1",
        "cursor": {
          "ref": "2cffff0a-a833-40dd-bb77-ec630e5d9f40",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a599f90f-8447-4e46-aafb-5a8e3eb5b75e"
        },
        "item": {
          "id": "151566b2-94c2-4a61-bb24-995bc87f78f1",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c1b9575c-1085-4b0b-a57b-a7e8319ad549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef8945fb-e707-4aaf-980b-4e7d5f49dede",
        "cursor": {
          "ref": "564f67f1-dda1-49c0-a106-bf7ca66058c0",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "89741251-1c62-440a-8c9d-8523cdd7fc1f"
        },
        "item": {
          "id": "ef8945fb-e707-4aaf-980b-4e7d5f49dede",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b0323188-0200-4d6c-9ca0-a685d11165f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2deefe8c-b690-44d4-aee7-2302bc735ffe",
        "cursor": {
          "ref": "94ff1d16-7b3f-43dc-8c2b-552c702e5c21",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "cfaf8e3d-e6f8-4210-b9ee-8804d55dd86f"
        },
        "item": {
          "id": "2deefe8c-b690-44d4-aee7-2302bc735ffe",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "afb9d124-9213-4a31-b815-193a37f42f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d198451e-6715-4997-b78b-6ab8c9ba6b7a",
        "cursor": {
          "ref": "cc5ebf64-b17d-4f9f-91cd-f037c22377bc",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "bdb03181-64c8-4281-8be6-9c55658d35b8"
        },
        "item": {
          "id": "d198451e-6715-4997-b78b-6ab8c9ba6b7a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "132f1474-60da-4cfd-985b-6206750447c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53eb8d8e-af25-492c-8309-8eb86aeede73",
        "cursor": {
          "ref": "9d3600c7-ca28-4f63-933a-9662f8865196",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "6e8b2988-433f-4cb5-921c-fec574c0019c"
        },
        "item": {
          "id": "53eb8d8e-af25-492c-8309-8eb86aeede73",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "61be2ff6-624a-4225-9a61-e9e08850f3e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0122004-2e81-432f-b604-533245762db5",
        "cursor": {
          "ref": "78c6d88b-fecb-4fa7-a026-55d3cbbfcf9c",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9efae47c-9cc8-4f09-9c05-f4345f02c2f3"
        },
        "item": {
          "id": "d0122004-2e81-432f-b604-533245762db5",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "4e7b4e94-5ed1-4354-b5e1-fea6d08887ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa44e626-8ad7-4e24-8f48-404447be9e5d",
        "cursor": {
          "ref": "10e54cba-27d8-4799-8e79-ca2c68a921ac",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "b1d57d67-ef23-417d-882e-b64fb956bc9b"
        },
        "item": {
          "id": "aa44e626-8ad7-4e24-8f48-404447be9e5d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "327192d6-27de-4c4c-8828-501cf9248d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8266651d-9ab4-4eb7-a690-0a962a80c7e1",
        "cursor": {
          "ref": "52351c46-d7f5-48c6-9d55-ef0cb6dd9b7d",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "83aa0585-a06a-44f6-b85e-eacfb13d77d2"
        },
        "item": {
          "id": "8266651d-9ab4-4eb7-a690-0a962a80c7e1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a61a029b-c892-401e-95eb-dd5358fa86f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f6b844-9198-4084-84d6-6cc20ba93dc9",
        "cursor": {
          "ref": "b19af1b3-de5f-4e90-a93d-47645e90f266",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "501fec03-7dcc-4331-974c-f9f70e0bd252"
        },
        "item": {
          "id": "92f6b844-9198-4084-84d6-6cc20ba93dc9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "15c67862-fb34-48ce-af52-d7801581b339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5897b5c-f0f3-4977-884b-28ae2ea47157",
        "cursor": {
          "ref": "da205c8a-364d-441a-9397-dbe126b7a34c",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "7cf1326c-b7f2-417d-91d6-ed3aa33e450c"
        },
        "item": {
          "id": "c5897b5c-f0f3-4977-884b-28ae2ea47157",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "3fafa128-20fa-4aef-b89f-04b4375d3448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b2eefc5-c21c-409c-8fa0-099e97ee1c8b",
        "cursor": {
          "ref": "3090c723-ef8b-4acd-9035-bb52fefa583c",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e0e060a0-ad1c-488c-9079-864f291eadb2"
        },
        "item": {
          "id": "2b2eefc5-c21c-409c-8fa0-099e97ee1c8b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7cd9562d-80b3-4945-ad5f-245a472643b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82fda6ab-d35b-494f-81d2-9c134a18276a",
        "cursor": {
          "ref": "bb06b007-6836-4593-b07b-cd02f07a211a",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b1f4407e-fda9-4ab1-86d1-4a7faedd75a5"
        },
        "item": {
          "id": "82fda6ab-d35b-494f-81d2-9c134a18276a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ff1258d6-29ca-404d-a538-26c42cbcec20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "226e73eb-a83a-4252-a730-8fe3e2ff62a6",
        "cursor": {
          "ref": "3d6f5306-95b2-4529-8419-6a3d4a2c36f5",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a2b72e3a-c35b-4027-b1ce-6f366a6451d3"
        },
        "item": {
          "id": "226e73eb-a83a-4252-a730-8fe3e2ff62a6",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "4ed6b165-68d8-46a3-bf67-96a4e06b9baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ea7e077-deb6-4bf9-937e-23ad279bf160",
        "cursor": {
          "ref": "4e33ad63-2248-444b-a62a-144d82c15215",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a2f1aaea-e085-441f-9e83-e497a57df214"
        },
        "item": {
          "id": "0ea7e077-deb6-4bf9-937e-23ad279bf160",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f05988fe-7066-481b-8afb-4a74ef1d70f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6264b86a-8d69-4f97-925d-e394f89589ff",
        "cursor": {
          "ref": "f825ed40-4453-4b11-ac54-065289ec7dc1",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "57eb8eef-ee9d-414f-bae2-b0190bdc5735"
        },
        "item": {
          "id": "6264b86a-8d69-4f97-925d-e394f89589ff",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "cb79f6d2-b319-4b48-85bf-8272562690fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35b4a82-80e9-4b06-8298-2842a73588fa",
        "cursor": {
          "ref": "1c9f0017-6008-49a2-918d-9efa03029ec7",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f1a08ef2-162b-461d-9781-d41f0675c3af"
        },
        "item": {
          "id": "f35b4a82-80e9-4b06-8298-2842a73588fa",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b4738219-428d-4ba8-bd2b-6fdf113e16e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2f5d0f-40c5-4d52-b897-209533b6fd73",
        "cursor": {
          "ref": "cbb9a479-50c1-4412-bd8f-a161cebaed15",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "70aafc55-9abe-47b0-a6d7-28ad0df07102"
        },
        "item": {
          "id": "ed2f5d0f-40c5-4d52-b897-209533b6fd73",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "fa2d358c-46a5-4a96-be27-474f064f8af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b4b5f7f-63d7-41b1-b9b2-8da97c57b0fa",
        "cursor": {
          "ref": "581c3f2c-376b-42c7-9477-ee0f1a9376f5",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ffecdae4-681d-4178-9650-baae40fac250"
        },
        "item": {
          "id": "5b4b5f7f-63d7-41b1-b9b2-8da97c57b0fa",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "978e018d-46da-4b31-9d23-5afe7bd9fe1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27e58d6c-9e74-4e6f-b64c-1b7b2cb3bb0f",
        "cursor": {
          "ref": "f0c9f780-8ca8-4b14-b7d8-9d04ffa425fe",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "2d229306-7923-415e-9a97-861678df4427"
        },
        "item": {
          "id": "27e58d6c-9e74-4e6f-b64c-1b7b2cb3bb0f",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "62a5b813-0a50-4958-b0ee-cc8a30dfc613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21405581-e859-4408-89eb-0e5bc7e62768",
        "cursor": {
          "ref": "5b534330-b645-4578-9e67-a1c1094bbba1",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "0c185c9b-d9b9-4cf6-ad5b-79fbdba53f08"
        },
        "item": {
          "id": "21405581-e859-4408-89eb-0e5bc7e62768",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "2b44a5a6-d764-4f15-91e4-92bd964537db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93eaa78c-6ed4-4e0a-a751-a69d9c95fbd5",
        "cursor": {
          "ref": "5ec6f042-9b9c-4c0e-b763-52fad6092f95",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "6a5a4681-307d-4c12-9a65-b1b43008dc6a"
        },
        "item": {
          "id": "93eaa78c-6ed4-4e0a-a751-a69d9c95fbd5",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "baf44178-fb50-4880-bee1-e072f68e3a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83353b1e-9f31-4d08-922b-fc8ab3efc4d1",
        "cursor": {
          "ref": "c664c945-b146-419a-88b3-ca0d06ddd2d0",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5f359b4f-9892-4711-a92a-9fe18a29729d"
        },
        "item": {
          "id": "83353b1e-9f31-4d08-922b-fc8ab3efc4d1",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "25c25140-efee-4730-bf6e-682aa2d123d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c560d2-bf83-46db-b790-907501634cb1",
        "cursor": {
          "ref": "1ade8f75-9dbb-4658-81d2-f3940cb11840",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d4f2f381-1b29-453f-93e2-782e015a8b28"
        },
        "item": {
          "id": "d2c560d2-bf83-46db-b790-907501634cb1",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "58a8a21a-a6b0-4436-883d-936cd51010dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d188b6b-81fe-4335-b175-eee0386e8b04",
        "cursor": {
          "ref": "bdeee1cc-24c4-44da-8ca8-b5b43d932e95",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "8e8d00e5-0135-4747-9257-d21a683a1d97"
        },
        "item": {
          "id": "2d188b6b-81fe-4335-b175-eee0386e8b04",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "429383e2-18fd-485d-bb96-f0acd9e627dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74fbcca4-1e8c-4d14-950f-06ee1b482409",
        "cursor": {
          "ref": "e13fc6fb-f404-4cc4-8db3-92c4ddd1d7e3",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "28188dc6-1973-4511-a378-aaabfea7a385"
        },
        "item": {
          "id": "74fbcca4-1e8c-4d14-950f-06ee1b482409",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "5f790e37-499b-4384-ae70-ecfa1ea86c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b05b0bb9-782e-4489-8cd3-70a98681a258",
        "cursor": {
          "ref": "25b04396-0015-40c9-b56d-4c69e8b83d54",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c8bcd6c6-c36a-427c-8693-c5e11931c6df"
        },
        "item": {
          "id": "b05b0bb9-782e-4489-8cd3-70a98681a258",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "23194970-64c4-40f2-92f2-a9e7e8d37e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e07d8de-308c-40cf-8499-4908e78671e4",
        "cursor": {
          "ref": "305d033b-6ca2-4b22-8be6-7ff548e1ac64",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "666a61a9-36d9-4c15-8d60-03994a34ab1e"
        },
        "item": {
          "id": "0e07d8de-308c-40cf-8499-4908e78671e4",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a0758ae4-a768-4cf8-b5fa-e87dd8b983ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f043b0c-9161-469b-8fb8-8d14960a1d32",
        "cursor": {
          "ref": "030db4c7-5de2-4dca-8cca-a2a8698db8c0",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "22857264-899e-403d-a771-60b960cf4bfe"
        },
        "item": {
          "id": "7f043b0c-9161-469b-8fb8-8d14960a1d32",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ff3599fb-0d48-481b-9807-87aea478ac3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e5b606e-d8f7-47dd-8419-c962fed8a43b",
        "cursor": {
          "ref": "989fbfb5-500e-4a26-81f7-64fee9026b7f",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "1482e52b-693d-4b61-addb-cb5f6bfb4788"
        },
        "item": {
          "id": "7e5b606e-d8f7-47dd-8419-c962fed8a43b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c362c533-07a5-4752-b5b9-0a8a15b6cc46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd92cc7-8987-413e-9584-7c1e1db20387",
        "cursor": {
          "ref": "558aa3cc-74ef-4ef2-8b36-3033765f682f",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "27c84a0b-e1bb-4ee2-8be6-0376d2e7db95"
        },
        "item": {
          "id": "2fd92cc7-8987-413e-9584-7c1e1db20387",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "bbdabdb0-f10a-4b65-9239-893ad71da53e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e2473f1-b906-4857-bfe1-752392fb7ab7",
        "cursor": {
          "ref": "f1f9d718-0b2f-4177-92e2-54b1deafd73b",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "4838b82a-1812-4228-8cae-3a67c7768473"
        },
        "item": {
          "id": "2e2473f1-b906-4857-bfe1-752392fb7ab7",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "9b22ef9c-5222-4fb3-97c7-29565e5d0192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d6de42-08fb-434c-93cb-e97dbec00764",
        "cursor": {
          "ref": "e37c811b-2c83-44b9-a4f5-c8c352a3c2fb",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "30950215-10a2-4821-b9fc-77b3b24801dc"
        },
        "item": {
          "id": "d2d6de42-08fb-434c-93cb-e97dbec00764",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "4ca0c27e-69f3-41ad-aac8-6f1802141ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c200e3-078b-4510-b14a-4b62e6837d56",
        "cursor": {
          "ref": "03ccc0c4-8919-414a-a7a2-50aeab01dc09",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "57d4de74-7c86-4d76-99b6-88f22358ad83"
        },
        "item": {
          "id": "09c200e3-078b-4510-b14a-4b62e6837d56",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "3cc447e5-8e53-415a-925a-3dbc86a39bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da95562-387a-49a2-9897-e62dd83b7300",
        "cursor": {
          "ref": "d9828775-4e14-4e69-96ef-62098d326ecf",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "37967efa-d8fd-48f7-b0f7-b370dacdff3f"
        },
        "item": {
          "id": "5da95562-387a-49a2-9897-e62dd83b7300",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ddf01a4f-aa7f-442b-98d0-23d07ee4ff39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c993d4d-9105-4ca7-9eec-51d5faf962a9",
        "cursor": {
          "ref": "90d1e2b0-7a29-469b-a603-2588b30dcab7",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e5c0baae-9f28-41bb-93f8-1e52dab9e1eb"
        },
        "item": {
          "id": "1c993d4d-9105-4ca7-9eec-51d5faf962a9",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "55f3d72e-309b-49a6-b3ae-e4681e07a6cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff069fe-197c-4c8e-935a-3af72ee9692b",
        "cursor": {
          "ref": "56886ad9-b955-42ac-b6a4-83276303e752",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "134865a9-ab34-4066-822a-6b53fbd67ebe"
        },
        "item": {
          "id": "7ff069fe-197c-4c8e-935a-3af72ee9692b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "997b4f50-ab4d-42b5-baa7-46ca6fe308f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c43f1b93-4560-4529-8a02-5373ea54f2e6",
        "cursor": {
          "ref": "bfe25f80-2e44-4a3e-b485-3226d25b4d25",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "b3835f92-1ee2-4c4e-b17b-92e1bcd2bea9"
        },
        "item": {
          "id": "c43f1b93-4560-4529-8a02-5373ea54f2e6",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "10ef72b1-d9de-47d2-ae57-c811124707ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65eaeec2-b01c-42b4-a388-4ff688cd6c6d",
        "cursor": {
          "ref": "e02e33ef-fbd6-434e-8617-81f999b6b99d",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ef771bdc-5090-43ca-b792-08fbe9a7f9ed"
        },
        "item": {
          "id": "65eaeec2-b01c-42b4-a388-4ff688cd6c6d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "daa517ae-b253-4b5b-8489-0a67e03cbec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190b6274-7c4b-490c-8efa-59c35292cec2",
        "cursor": {
          "ref": "1836c25a-0f87-4556-9924-6fbf6c66340c",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "b5ea75bd-7008-4e13-9712-7dcad5199bba"
        },
        "item": {
          "id": "190b6274-7c4b-490c-8efa-59c35292cec2",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9a6b4fa3-0193-4ca4-a988-0ff336c85239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5980cdc0-caa4-46f1-b5ec-b2a7881aa443",
        "cursor": {
          "ref": "f5c0bb3f-b881-4e05-816c-61404a2bdf53",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a7bb45e4-c4a8-4876-b1e3-b1f180b7bdf8"
        },
        "item": {
          "id": "5980cdc0-caa4-46f1-b5ec-b2a7881aa443",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ef139b5a-28a0-45f8-b29c-a4846de692db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df4417ca-c6d2-4363-9a3b-c57dda7aa88c",
        "cursor": {
          "ref": "4aaf3f42-bf50-4abc-ae36-a5ded75c184a",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "5502baed-4034-4ca3-aeda-6886086c2200"
        },
        "item": {
          "id": "df4417ca-c6d2-4363-9a3b-c57dda7aa88c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "1d787b7a-f42f-4049-9461-b38f79d9dd77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5925cc-1a15-4d1c-9ebd-d7e9f467e0d8",
        "cursor": {
          "ref": "c5d74584-f3a0-4f71-a62a-afbea796761f",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "0040d3a6-5b5d-49be-9cbe-2a4bb7256d13"
        },
        "item": {
          "id": "ea5925cc-1a15-4d1c-9ebd-d7e9f467e0d8",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "488f6313-5f1c-490d-946b-bdfb7eeaf24c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d38d73c-bba1-4b46-89b9-a79b27d56bc9",
        "cursor": {
          "ref": "027e11bc-bd0b-4cad-9d52-58a79a3726cd",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b93b3ece-9940-4e35-a201-e4ece2420aca"
        },
        "item": {
          "id": "8d38d73c-bba1-4b46-89b9-a79b27d56bc9",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "dfc130ae-a9d4-41c2-9bd8-1bb52c80a268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "4a310453-f73b-4e49-a344-ab43615ea0fb",
        "cursor": {
          "ref": "45371c49-5873-4cee-95b1-e4e81607a548",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "ea77bb42-041f-44ce-80e9-267ee8ac6cc4"
        },
        "item": {
          "id": "4a310453-f73b-4e49-a344-ab43615ea0fb",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a756ef4a-264f-47a3-bc89-cdadb3196c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "d2ed2200-7608-49eb-beb4-08840da5da8a",
        "cursor": {
          "ref": "fb0221b7-a5d0-4cc6-bb0b-b57a77f63da8",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "07e80878-b0ea-40dd-afb6-cec642ad55bb"
        },
        "item": {
          "id": "d2ed2200-7608-49eb-beb4-08840da5da8a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "859a08a1-6779-4621-8b9d-3ed8597f8059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "ba482b99-7596-483b-8086-46ed092da245",
        "cursor": {
          "ref": "3045e58b-7651-4df2-8cf8-5d5c8c1ff722",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "c35f3a17-4f38-4caf-9a57-2d75a41c2775"
        },
        "item": {
          "id": "ba482b99-7596-483b-8086-46ed092da245",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "00d42dde-e2ab-4880-a5ad-7afaba49e3c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "a629e371-12db-47ea-b55a-aea95f3ed44f",
        "cursor": {
          "ref": "978ace99-580f-4ff0-a2a3-ddbeb7b7e59d",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "fa9e31a8-b17b-4ef8-a563-e076e03e7c1e"
        },
        "item": {
          "id": "a629e371-12db-47ea-b55a-aea95f3ed44f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9511e05a-f44f-4b7e-9525-91704683662f",
          "status": "Created",
          "code": 201,
          "responseTime": 8596,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9353e73e-cf41-4d61-b606-eab7097a63f1",
        "cursor": {
          "ref": "1323adb9-27e5-4c98-bf77-68f6cdfafde8",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d7504df2-f2a7-411e-9e4f-185a0e99fbfb"
        },
        "item": {
          "id": "9353e73e-cf41-4d61-b606-eab7097a63f1",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "06b86788-c433-471c-925d-d9cdc29f93cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "5fbbe898-e6b8-4014-8858-36e5238a2754",
        "cursor": {
          "ref": "8e6e239b-7f6d-4c47-b95e-996820160e33",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "1d7e360a-dd85-4294-b1b9-ccc20b64717f"
        },
        "item": {
          "id": "5fbbe898-e6b8-4014-8858-36e5238a2754",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8306dcc2-acdd-4b8d-800c-0e4fac2de359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "eeca7486-188f-49bb-9bb5-2e7c70810bc5",
        "cursor": {
          "ref": "a8a4bd82-f968-467d-b415-fe30a967f1b6",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3f11b2f3-3408-4d1e-9de0-16a3a790bd8a"
        },
        "item": {
          "id": "eeca7486-188f-49bb-9bb5-2e7c70810bc5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "96aaaa9e-e771-47c9-97e4-8f44d29c7eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49def8e6-7015-485d-b360-998cdbf994fb",
        "cursor": {
          "ref": "894fed35-feae-43d9-98da-0ff5f7943f48",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "83c3e5ee-313e-4f23-b8f8-5de18a4ee622"
        },
        "item": {
          "id": "49def8e6-7015-485d-b360-998cdbf994fb",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "44304dcc-01d5-4652-b690-92206f4715b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e678a1c3-e598-4c04-97a9-5340ec405424",
        "cursor": {
          "ref": "d7913cf0-007f-4bfa-9606-2b0801e5f120",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "3b235b66-f2a8-4948-8cf3-c1f05523d11a"
        },
        "item": {
          "id": "e678a1c3-e598-4c04-97a9-5340ec405424",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "77995293-846c-462d-8448-708caa06786a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c566ad-71d2-43a0-b376-f5270074e1f8",
        "cursor": {
          "ref": "4257d5e0-a855-4e90-bc63-64ae700c0037",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "eda31c1b-e392-41d0-8336-2a8594e012ff"
        },
        "item": {
          "id": "46c566ad-71d2-43a0-b376-f5270074e1f8",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1f4a5583-7e66-483b-b324-8ea91453c4e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2aee81c-314d-4a25-8ee3-7e362c646801",
        "cursor": {
          "ref": "f4920041-973d-4eff-b181-a1f7e0fe6879",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "6f96f921-f504-4284-a9b9-41f2dad8d897"
        },
        "item": {
          "id": "c2aee81c-314d-4a25-8ee3-7e362c646801",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "14543ec4-db5a-4873-af29-4b196851186e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6dcc84-436a-4714-b69c-4a0b08a3b653",
        "cursor": {
          "ref": "21dda7ed-d7f2-4cca-a852-8c1714d1ec08",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f9e01d7a-c2a2-422c-a129-8bf8392f0e9f"
        },
        "item": {
          "id": "ff6dcc84-436a-4714-b69c-4a0b08a3b653",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3eca2e30-eefe-48a6-9e16-bd41615cfd6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c70f3c-5c60-4d88-b55e-eb644ca3dfc3",
        "cursor": {
          "ref": "2b8b4ee0-0f21-4370-b1e0-fecb60c397f3",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "7e3bac23-fc41-4a0c-8749-7551279db6dd"
        },
        "item": {
          "id": "66c70f3c-5c60-4d88-b55e-eb644ca3dfc3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2625774e-0e3b-4c0c-910b-e262625dc139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d17d57b-8231-4e92-bccc-dea304b10e07",
        "cursor": {
          "ref": "18cf8f05-753f-42e2-b5be-e97c7bc9abd0",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9a7d1f68-9bd4-45e9-9f39-8ee4b29ab377"
        },
        "item": {
          "id": "9d17d57b-8231-4e92-bccc-dea304b10e07",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "50a74f4b-a7e3-4946-ab40-1728395c81ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f54cc8fc-2936-43b9-8630-ec6e307b12d0",
        "cursor": {
          "ref": "52f9f78f-8b7d-4a7e-96df-2f370da03e76",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c9e01b77-ac68-4fa6-ac72-1f1fdbae652a"
        },
        "item": {
          "id": "f54cc8fc-2936-43b9-8630-ec6e307b12d0",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9537cd0a-88f6-415a-985f-fed5d86e5958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06792d69-b644-4953-b032-6205e0e6857e",
        "cursor": {
          "ref": "78e6f29f-f763-433b-bf78-3bf1e7a7bf2c",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "fdb22ccf-d99b-440e-b155-5290a68c54b4"
        },
        "item": {
          "id": "06792d69-b644-4953-b032-6205e0e6857e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e637ac6e-0292-4738-b4ea-a6191e6ba9dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3275baf3-6ef1-4437-901f-e25cc2e360f0",
        "cursor": {
          "ref": "6f6f08a2-1dc5-42b6-93d2-4cae0d821ade",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "557799d5-aeb5-4b15-9229-9cf823c2d12e"
        },
        "item": {
          "id": "3275baf3-6ef1-4437-901f-e25cc2e360f0",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2731fa67-1249-44ac-ac8f-87ff8945b45d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a77ad45-d673-42b3-ad1e-dc44e967ed93",
        "cursor": {
          "ref": "52148a2b-ab78-4347-8ed1-02b08723e02f",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "37615574-59d5-45f9-8507-bf99a92b0ffc"
        },
        "item": {
          "id": "0a77ad45-d673-42b3-ad1e-dc44e967ed93",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e8df2faf-e635-4536-a054-5c1cd1868b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b774479-efcf-473a-ab11-14cd095c721f",
        "cursor": {
          "ref": "1e27b011-3dcb-46af-b474-4656c1614d14",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "41ce54f3-22d4-41ea-a3b1-75d941f135af"
        },
        "item": {
          "id": "6b774479-efcf-473a-ab11-14cd095c721f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "527045a5-81e6-48e8-aba5-8e213c2f822c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dcd94ec-5955-4f83-91d4-893b19b21863",
        "cursor": {
          "ref": "3aa1c3f9-119f-49df-aeee-599d8856a909",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "7b30cf2d-1d8c-4fa5-ae43-531965ea2308"
        },
        "item": {
          "id": "3dcd94ec-5955-4f83-91d4-893b19b21863",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "764ac2b8-c4e8-429c-a4be-61805ea8c913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c9de75-fadf-4418-9c0a-86954f5c0487",
        "cursor": {
          "ref": "79f34dae-2ca4-4deb-a909-92809cd81d62",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "0ef3535b-99bf-4eb8-84d6-4acac8e31822"
        },
        "item": {
          "id": "b7c9de75-fadf-4418-9c0a-86954f5c0487",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "bd51df07-b06d-4cf8-b8a2-64beb022d213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8c4d6f5-e0e4-4a9e-9fcd-7f41b1ef4995",
        "cursor": {
          "ref": "1bb45a2c-372e-4cdf-9b6c-f3cfdeacb31e",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "40ab2c58-f913-4e0b-ba6a-f45c1744525a"
        },
        "item": {
          "id": "f8c4d6f5-e0e4-4a9e-9fcd-7f41b1ef4995",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d2fe90b7-5e28-410d-9b06-25f34b43cb71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def4c7b7-3a87-49c9-b4b9-14817e8c9235",
        "cursor": {
          "ref": "5df34a1b-fda9-4e09-ad08-bd8f3c2ed22b",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "eafc10c8-9006-4bc7-a099-023e731fe8e3"
        },
        "item": {
          "id": "def4c7b7-3a87-49c9-b4b9-14817e8c9235",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "fcc14da2-5045-416a-9310-9b7a404147af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d8a16b-5088-4bc6-9c0f-d3a6c82d7b9d",
        "cursor": {
          "ref": "4eae2b06-6508-4ac4-8228-e39ca0c636aa",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "5fec0acb-575c-4b41-807a-5586bca6d942"
        },
        "item": {
          "id": "d9d8a16b-5088-4bc6-9c0f-d3a6c82d7b9d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2f009473-a21b-4740-8b21-48cef240478a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e389a2f-e8dd-499b-a8a0-8eac2bfad84f",
        "cursor": {
          "ref": "063b8c0c-76df-4525-8491-a1a577c4b502",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "9b4388c0-01e4-471c-996c-dd0c76171991"
        },
        "item": {
          "id": "8e389a2f-e8dd-499b-a8a0-8eac2bfad84f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c5a4be32-2513-48b4-af38-13d2c2a39185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8507ef60-8e16-4634-8b39-a4d4a5f75d2a",
        "cursor": {
          "ref": "478f7cbd-d9e3-4447-b1b6-99a57680592f",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "9cfb5a79-a4ac-47d9-a9c4-1724bd2cba70"
        },
        "item": {
          "id": "8507ef60-8e16-4634-8b39-a4d4a5f75d2a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5ab5f8fc-80a8-411a-ac37-6c7a9310e57e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee03a15-480f-4417-b62e-7ceb757ecb8d",
        "cursor": {
          "ref": "b4ecd18a-84fd-433e-a21f-db15dbf36b96",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "41619b46-e262-4bb0-be19-a47682d31667"
        },
        "item": {
          "id": "5ee03a15-480f-4417-b62e-7ceb757ecb8d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1563501a-5edc-489e-9801-dbd11c9f36a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4892516-ac2a-49a5-9bd3-32247b62c920",
        "cursor": {
          "ref": "431ee0f8-e2ee-4387-833d-d0343716e0c8",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "9e044198-1e6c-4701-8cc9-5c19b793efa2"
        },
        "item": {
          "id": "f4892516-ac2a-49a5-9bd3-32247b62c920",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f59c712b-7793-41ac-a87c-615442fa5f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef6acb3-0e20-4168-a18c-f7a11946a02f",
        "cursor": {
          "ref": "ef55bf53-3231-40ce-9894-c384762265cf",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "23366345-0df9-4c5e-b262-1e6e180677bb"
        },
        "item": {
          "id": "aef6acb3-0e20-4168-a18c-f7a11946a02f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f96b4a27-0a6e-4265-890e-fc9d488f3a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2769dd01-df42-45b4-b80f-3bf9570fad83",
        "cursor": {
          "ref": "becfeb1c-f1ea-43f2-8746-11f774b0ac98",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c991ecf7-9812-4b82-8c10-17a332b3a037"
        },
        "item": {
          "id": "2769dd01-df42-45b4-b80f-3bf9570fad83",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a1190262-648e-408b-b14a-9ad96daa5ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a02147e6-3a8c-4a8f-a191-588698b7da67",
        "cursor": {
          "ref": "4062a542-910a-4286-a226-e4e03a31872a",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c509c1f8-b4e0-485d-af7a-3d0318baa25a"
        },
        "item": {
          "id": "a02147e6-3a8c-4a8f-a191-588698b7da67",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e2783ed3-ab9e-4ff7-ab55-b7513d9f1541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e77bf64f-c0b2-465b-8dbd-6b15b0b509c8",
        "cursor": {
          "ref": "cc32c257-1092-4df6-93db-8238f5d7c356",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "1a3f1d51-77b4-4c83-9e20-1d653fda3da7"
        },
        "item": {
          "id": "e77bf64f-c0b2-465b-8dbd-6b15b0b509c8",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f3ee262f-3b00-4cf3-ba86-3ab3e39ccc46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "565aca2f-b9d3-4b06-b1ba-deea5a70c071",
        "cursor": {
          "ref": "44bfcb80-c99b-4334-aed2-439bd10e3dca",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "bc90e3c5-ac7b-4ad5-8489-982269cf124f"
        },
        "item": {
          "id": "565aca2f-b9d3-4b06-b1ba-deea5a70c071",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8064d35b-eb0c-411a-994e-b02f4a9bdaab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ce3b58-dfde-4ddb-b209-f0f3f0dfe7fc",
        "cursor": {
          "ref": "96c81b59-bb01-40e9-a842-49bd5a09f046",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "5d25e15f-1e73-480d-8a8b-74881eebabe1"
        },
        "item": {
          "id": "f0ce3b58-dfde-4ddb-b209-f0f3f0dfe7fc",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "91f315c1-902e-4096-8faf-9714e54b0373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21df06d6-0b73-432d-9463-4f8a15559c71",
        "cursor": {
          "ref": "1dca67dd-517e-49ec-b95c-f9bc513facc9",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "4df92b40-672c-4f4c-84db-95e2ace408ee"
        },
        "item": {
          "id": "21df06d6-0b73-432d-9463-4f8a15559c71",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "fcff1255-0f06-4a7a-b709-c9089ea50b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "623ac857-2d08-4e48-bcb3-e778fcb3220a",
        "cursor": {
          "ref": "e6da8ad3-b2ab-4ccf-99fb-a647d8b0f251",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "26e53ffc-5dd3-45e0-a28c-f0fad7239013"
        },
        "item": {
          "id": "623ac857-2d08-4e48-bcb3-e778fcb3220a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "23dc9841-0fc1-48d4-8750-4cd8e50674a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a860c895-aff9-4697-9fce-97b2a9b198cc",
        "cursor": {
          "ref": "0dcb9b9f-ca98-4aa9-b15f-1a593a124406",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c6e09736-1e50-4e71-8c73-52895089f18b"
        },
        "item": {
          "id": "a860c895-aff9-4697-9fce-97b2a9b198cc",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "813d3683-6f64-46f3-a512-d9d3fc9063a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c82f31a7-479a-4785-b438-8f1595729e75",
        "cursor": {
          "ref": "ad41fb39-bcc5-41a1-a60f-9d558f6f1f57",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "8fca7af0-d74f-4b19-953f-05a8de8b60f8"
        },
        "item": {
          "id": "c82f31a7-479a-4785-b438-8f1595729e75",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "66ba07ae-c5a4-47dd-91aa-77d1c9259853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c79df756-39f3-4d17-b604-a7ebf6c6328b",
        "cursor": {
          "ref": "615b04a8-c410-4a69-9d4e-6accbf271406",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "57439c45-66be-4bfb-b4ff-f4ed98958a7e"
        },
        "item": {
          "id": "c79df756-39f3-4d17-b604-a7ebf6c6328b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b4a2cba0-5f8e-4017-8d0c-e3da4e01e048",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3207f5b8-92d3-4230-99ad-e8f805193862",
        "cursor": {
          "ref": "f5d969ff-0521-4fa9-8b19-a0cae48bd788",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "61b4e8fb-ee4c-44c2-ba56-6c5a740d0089"
        },
        "item": {
          "id": "3207f5b8-92d3-4230-99ad-e8f805193862",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "049715a6-42f3-438e-8f36-c37575a20cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5306e057-8ef9-4891-9792-166508b7803e",
        "cursor": {
          "ref": "ef1f4a06-ea04-438a-a71e-ed3c65487788",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e5d8fe6b-4d2c-4683-859e-8f749499330c"
        },
        "item": {
          "id": "5306e057-8ef9-4891-9792-166508b7803e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "dc168485-25ac-441f-9f54-acac06bd8fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364d3c3d-a887-4bd4-beb5-a29b8f6c5e6a",
        "cursor": {
          "ref": "24fd8872-c2b9-4978-9d72-fde6f2a7d752",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "bdead52b-9626-49e1-85cd-5c4c3fcb3cff"
        },
        "item": {
          "id": "364d3c3d-a887-4bd4-beb5-a29b8f6c5e6a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c046dd93-2aa0-4cb7-aeee-669a4cbb22a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc11416e-4d45-493b-8a8d-958bb09a9b6e",
        "cursor": {
          "ref": "e94ccee0-6396-4ea9-9aa4-fc07d27bcc30",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "632bcee4-9369-4ffd-9ca4-cc16e725632d"
        },
        "item": {
          "id": "fc11416e-4d45-493b-8a8d-958bb09a9b6e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ac0b84ab-0c62-4c2c-9cfe-bad8cd5309b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b655dd-e9ca-46c8-a06b-8fea42fed710",
        "cursor": {
          "ref": "7aae6691-aa7a-4201-a9a9-0d84b657af20",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6e2c5eb3-6d68-4af8-80d9-62dbac320f4a"
        },
        "item": {
          "id": "29b655dd-e9ca-46c8-a06b-8fea42fed710",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7398d159-a70d-479c-b0d4-22f9c11cec74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d74eac1-f8e9-48c3-8799-b48ee15c5910",
        "cursor": {
          "ref": "a3177676-ae21-46f3-a7d6-3439c46b0325",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d8a16215-2f96-4170-b5f4-b3fa63b06b86"
        },
        "item": {
          "id": "2d74eac1-f8e9-48c3-8799-b48ee15c5910",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7042c69c-ad5e-4b95-a2f2-b001adfb540a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2994fc7b-87d1-4184-a2ea-cd492f8e2d21",
        "cursor": {
          "ref": "984a2c5e-6e09-4f93-a642-17d47258c754",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "146d92c5-6a74-451f-9c8a-b908c94d6c9e"
        },
        "item": {
          "id": "2994fc7b-87d1-4184-a2ea-cd492f8e2d21",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2bb23e5b-166a-40a1-8bcc-fcb8b00a7bdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "966db285-580a-4fab-9a43-4faf97a09986",
        "cursor": {
          "ref": "a083b02a-ab5f-4757-8759-27a96008bffe",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e761a417-336b-4f6a-bb4e-cdcec46c50ac"
        },
        "item": {
          "id": "966db285-580a-4fab-9a43-4faf97a09986",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "cbfc071a-5f71-44d4-ad31-3ba664a0399f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a1456f-05d8-48c0-a065-a502a9af03a9",
        "cursor": {
          "ref": "87e94d22-ef45-4e84-a159-8e28166d9706",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6663ec15-090d-4490-83db-8050e9bf2a92"
        },
        "item": {
          "id": "50a1456f-05d8-48c0-a065-a502a9af03a9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "fff64638-3fb1-4273-a6dd-8e062192f9ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3582fe75-4956-45fe-a7c8-a2fc8e6216e9",
        "cursor": {
          "ref": "760b82c9-ed1b-4af7-a5dd-0a6222988601",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "2757bdf9-c6d6-45b7-9df0-e6f1ba3334d3"
        },
        "item": {
          "id": "3582fe75-4956-45fe-a7c8-a2fc8e6216e9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "bfa5dad0-5551-4816-af51-73bf2d730e56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c4e0bf-26c5-4f30-a718-592f379e1eb6",
        "cursor": {
          "ref": "ebe779d5-7610-4fb7-846d-eb411c1ee77b",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "776eb3d9-0064-4550-83e0-34d3e7a21869"
        },
        "item": {
          "id": "78c4e0bf-26c5-4f30-a718-592f379e1eb6",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0e87d63b-031f-4319-a288-5189d8c70625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f1f68f-ce80-4129-85dd-863f602154d8",
        "cursor": {
          "ref": "594400e9-d6f1-47d6-abd3-7b33dc18ffeb",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "108ed443-206b-4018-940e-a1fd1aa40b63"
        },
        "item": {
          "id": "53f1f68f-ce80-4129-85dd-863f602154d8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8b9ebda3-2f11-46ae-b478-00d039b71342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07e2ce9e-2274-4460-b831-87390d570706",
        "cursor": {
          "ref": "c028a3cd-59f4-4816-a945-a371944fe9eb",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "2d444c2f-7e8e-4e24-911a-bf166809ed4d"
        },
        "item": {
          "id": "07e2ce9e-2274-4460-b831-87390d570706",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ae47836c-8726-4a21-ba83-478c91fe87db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "790e4369-02d9-42a5-b5cb-62ae9c3ee9d8",
        "cursor": {
          "ref": "f56a7541-42b2-465c-b855-577eade39883",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5a491eff-3a6e-4718-87c4-6cf5194ac6b3"
        },
        "item": {
          "id": "790e4369-02d9-42a5-b5cb-62ae9c3ee9d8",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6edefc1f-064e-4e81-97fd-1d0f12aa9bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d10a54-5656-4bcd-8b4d-d7f47906517d",
        "cursor": {
          "ref": "af625e61-804f-46ed-8145-8cce6b4d334b",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "2c54869c-f6f0-4f59-8c4c-daa0d138d09a"
        },
        "item": {
          "id": "21d10a54-5656-4bcd-8b4d-d7f47906517d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8cb88f6f-f2e1-4c1f-93d0-d37ddae0a543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94bbb5a9-7535-4d1f-bd37-be5580df0ebb",
        "cursor": {
          "ref": "00ca615d-26e2-4b17-8156-f61c66e3e0a0",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "67ad2186-6193-4caa-a747-6493bb6ba7b5"
        },
        "item": {
          "id": "94bbb5a9-7535-4d1f-bd37-be5580df0ebb",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0aa41bdc-91fd-4ca4-a7ca-c5814a200b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a77cf2e2-ef4e-4217-95ca-c9f17a48e48e",
        "cursor": {
          "ref": "36ed2754-f25d-4681-939a-973c08ad9079",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "50eb033a-3e8f-4bb3-b24d-6ec783e5efb8"
        },
        "item": {
          "id": "a77cf2e2-ef4e-4217-95ca-c9f17a48e48e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "adc45c33-4421-47c8-8fa8-0f466a8c3bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61dd9569-1a3a-4ca4-baf6-196e168d4d6a",
        "cursor": {
          "ref": "e18af7e3-5046-452b-96a4-d31746261ee7",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "6bda198a-a142-4b96-8168-dd13e1bfc7fb"
        },
        "item": {
          "id": "61dd9569-1a3a-4ca4-baf6-196e168d4d6a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "77d19d9b-6529-4f79-a4dc-6f84de4a84e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e32cfc65-5e2c-460a-bc6a-1658d2141675",
        "cursor": {
          "ref": "8c541a37-6de7-4950-b203-043632972584",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "fa1ec219-65c3-48fc-9613-0400944bb455"
        },
        "item": {
          "id": "e32cfc65-5e2c-460a-bc6a-1658d2141675",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "50588d67-41f7-419c-adc2-2e310e4cb3a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e76f299-343e-4e2f-a455-1eee2973765e",
        "cursor": {
          "ref": "115830ed-dd79-46af-b25c-3265fbd2d63f",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "68565647-7e95-4cd8-b0ac-974874798003"
        },
        "item": {
          "id": "4e76f299-343e-4e2f-a455-1eee2973765e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "daff534f-50a8-4e5b-8332-568889f621e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1956f60f-69a3-4f74-8287-a51909cde296",
        "cursor": {
          "ref": "3da1db16-2d64-4c19-b093-846474618692",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d5fb589d-838b-4e8f-a04c-00d8988ef538"
        },
        "item": {
          "id": "1956f60f-69a3-4f74-8287-a51909cde296",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0d17287e-f04c-4cc3-8bca-a2ba0e700039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e8736c3-ec49-4494-8dcd-0bdc98660482",
        "cursor": {
          "ref": "6a53d006-9fda-4316-8183-2730b1c3bb39",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "7d62a9af-7988-4197-936d-f4024516a979"
        },
        "item": {
          "id": "6e8736c3-ec49-4494-8dcd-0bdc98660482",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0bca14fc-0476-4564-8333-219c1ef9b077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "677b358e-3d03-4183-bf91-84bb5a858892",
        "cursor": {
          "ref": "e0d6af36-ad4a-4653-a87f-181f1a7f3bef",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "85a058a8-9be9-4d1a-a5ec-611836cac558"
        },
        "item": {
          "id": "677b358e-3d03-4183-bf91-84bb5a858892",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "accb0248-0136-4e33-b4ac-d63973aada73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "584cb334-cdf7-484d-97fa-4cc61733e129",
        "cursor": {
          "ref": "fadd5cef-e612-4376-8ea6-ca775e05fbfd",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "fe6fee51-45e7-4332-8d22-c4b813f9fcc3"
        },
        "item": {
          "id": "584cb334-cdf7-484d-97fa-4cc61733e129",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "55b93a87-5271-4de2-95b2-68a647828e1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a5f378-5367-4f3e-9c6d-928c29cc91bf",
        "cursor": {
          "ref": "1efd3183-701a-4c46-8f63-c172c731f566",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "acecc3db-823c-46e0-a548-f261d859899c"
        },
        "item": {
          "id": "d7a5f378-5367-4f3e-9c6d-928c29cc91bf",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ecb37324-346f-4caa-8e7e-d228708d9b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abaf8059-ddb3-4609-b4f2-03106d093f06",
        "cursor": {
          "ref": "ed3c6680-67df-43d1-8f95-32c9f7b81a24",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "8ad74856-e699-41ed-9494-e1cfb5bdfcbc"
        },
        "item": {
          "id": "abaf8059-ddb3-4609-b4f2-03106d093f06",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9013c08d-e662-4194-90fd-f9f442e56224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aba4355-10bc-4482-96b8-a745792c4553",
        "cursor": {
          "ref": "fba01aea-f797-40a3-ad55-199bd81cab5a",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "cf3db2a3-7a37-4fe4-9131-3baede529d58"
        },
        "item": {
          "id": "5aba4355-10bc-4482-96b8-a745792c4553",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "87b2bf08-146b-4d51-a1b0-3005e3dbecc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257a0344-de0a-42ea-88dd-2f33b68e2a86",
        "cursor": {
          "ref": "1279f1f0-386f-456b-9eb9-e15dc9f46d58",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "66648c9c-0310-4c45-9270-0d81d41e6450"
        },
        "item": {
          "id": "257a0344-de0a-42ea-88dd-2f33b68e2a86",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "86dc503f-451d-4f50-828e-7f2b33762362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8803061f-26e3-4ba8-8b83-865046e28629",
        "cursor": {
          "ref": "319d6d9b-ccee-486e-9334-3fcf492249af",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "1f62ffa2-df9e-43b9-b69b-ed130f7de4c8"
        },
        "item": {
          "id": "8803061f-26e3-4ba8-8b83-865046e28629",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e288ec5b-6562-4d5e-a724-34d412c2766e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "336ed2ab-5ed1-46b4-8729-ce6a0fc91160",
        "cursor": {
          "ref": "8e0484c9-6054-4a30-817d-b8312ff85351",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d6574d3e-4929-4bca-be95-f6b162473480"
        },
        "item": {
          "id": "336ed2ab-5ed1-46b4-8729-ce6a0fc91160",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6684cdb4-622d-4c00-bb2a-0047238600c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dbf723d-4bf5-4dd9-8995-8f8c74c99ba9",
        "cursor": {
          "ref": "87be06ba-0cde-4341-b45f-b5e54f575226",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "640ecb05-ee08-4375-b047-91c10cd54167"
        },
        "item": {
          "id": "5dbf723d-4bf5-4dd9-8995-8f8c74c99ba9",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "47cbf337-8122-4c30-86bf-c98f4d73ae0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2b116ec-2c80-44ef-a27f-d308a9ca46be",
        "cursor": {
          "ref": "c3b496bc-beb5-4ac9-ae1c-07acbc618784",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "32e2ef1d-f9ff-49f4-95d3-265f3ce35992"
        },
        "item": {
          "id": "f2b116ec-2c80-44ef-a27f-d308a9ca46be",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "624ace65-cb49-40c3-a5ec-2436dbc6ed9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2756e0b-e726-4506-9dbf-affbe397e4bb",
        "cursor": {
          "ref": "2a769330-e765-4061-8457-aef94cc4ebd1",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "62a37207-7472-47c4-af9a-734c0654ccab"
        },
        "item": {
          "id": "a2756e0b-e726-4506-9dbf-affbe397e4bb",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "7fafd708-0663-4231-885e-e475f4ddc5bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f32ad5-cb79-46e6-b3ef-b41dd9b691af",
        "cursor": {
          "ref": "c0249c26-12bb-4af2-83c5-faee133c23d7",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8cf643b2-a465-45a9-aacb-2dc9f0a0c50e"
        },
        "item": {
          "id": "31f32ad5-cb79-46e6-b3ef-b41dd9b691af",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "52612bdb-6c87-4581-9e33-6316c92cf815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9341ed-11ec-4c57-91b7-e6f5b450d086",
        "cursor": {
          "ref": "12f424e7-2f23-455f-a26a-13c34eab0920",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "46e4ba57-d644-4fb2-81da-cf695179c899"
        },
        "item": {
          "id": "1d9341ed-11ec-4c57-91b7-e6f5b450d086",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "613924a2-eb74-45ee-b145-9867fc137dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c158958-27c0-4eac-9c53-667407cf78d4",
        "cursor": {
          "ref": "bf6a1eb7-40dc-4047-ae34-5748172c23c7",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "647b25f5-5cd9-452a-b9e7-9408c3dc2e8c"
        },
        "item": {
          "id": "1c158958-27c0-4eac-9c53-667407cf78d4",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "790a2eb5-26a9-496d-8c48-03ee38d55987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29909479-9816-4c62-a125-f3745cdcc285",
        "cursor": {
          "ref": "ef964b6a-b5ea-46dc-96c2-95d160deb470",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "60f19246-8aa3-459b-82f1-85da43776e0f"
        },
        "item": {
          "id": "29909479-9816-4c62-a125-f3745cdcc285",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "6def876c-f9ba-4bdb-9b64-684defc8945b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb4b9e94-ccee-4bed-8b35-c6b89cc83f30",
        "cursor": {
          "ref": "e09202f6-df72-457f-9b88-6e219de749d5",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2920c456-401e-44db-8d36-05870c584e9c"
        },
        "item": {
          "id": "fb4b9e94-ccee-4bed-8b35-c6b89cc83f30",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b594e58d-d5c5-4c2f-a89d-0e47c8d2de17",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e2d6de2-34a9-4cbd-969e-c300c916d111",
        "cursor": {
          "ref": "aa12100e-2aba-4169-af1f-4b01d66cf1eb",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "433820ec-f3b5-4d63-8485-f501328e3ff6"
        },
        "item": {
          "id": "5e2d6de2-34a9-4cbd-969e-c300c916d111",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "02d01e88-0657-481a-a1fb-9d7a65a16309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dcf9ae2-6794-487f-b0c7-b161a98c7bf5",
        "cursor": {
          "ref": "d2c4e0f2-a5ef-4c15-b9bd-d3f9c15be4d6",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d80bcbeb-fca9-45f7-b106-3e43636cd63b"
        },
        "item": {
          "id": "8dcf9ae2-6794-487f-b0c7-b161a98c7bf5",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4841da13-ae8e-4627-9fbb-b30f7c90d88a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d08b4db-a7b1-407d-b943-7993a1e2692e",
        "cursor": {
          "ref": "12297370-34ee-47ac-9c64-77573a3a0c62",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "4592a678-0ea1-4823-b341-76d09b31ca48"
        },
        "item": {
          "id": "0d08b4db-a7b1-407d-b943-7993a1e2692e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f08cab13-4b0f-45e1-b539-1d9807c5d03d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e72a2d5b-382a-4a0e-b338-f2ebc6c2735b",
        "cursor": {
          "ref": "084044cc-8710-4e33-aa6b-ea8f89409cdd",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "079d47e3-6ddb-4953-a69d-f266354278c8"
        },
        "item": {
          "id": "e72a2d5b-382a-4a0e-b338-f2ebc6c2735b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "cdde7b5c-e1f6-413c-bb5b-072b846fdd80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d0fb311-fcc3-4677-8ea4-53998091110b",
        "cursor": {
          "ref": "fbbacc89-e804-4677-9593-31cbfee6c76a",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "62f86d90-a37d-403a-bdd8-e9b7b2d17959"
        },
        "item": {
          "id": "7d0fb311-fcc3-4677-8ea4-53998091110b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c0f8863f-32af-4be2-9acf-7468d8b75969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef1f90d2-5a99-4f48-8ab8-933832e3db6a",
        "cursor": {
          "ref": "5dd024e0-132f-4722-be29-9f41c44a32f9",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "55995f6f-f882-45d2-a9e8-9fd79a1ca53e"
        },
        "item": {
          "id": "ef1f90d2-5a99-4f48-8ab8-933832e3db6a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "687e8830-5b40-4203-af4d-d0ebe161f15d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d55a199d-b0e2-48cd-9bc8-8423ca5bbc20",
        "cursor": {
          "ref": "8c0e01d7-9809-4715-aa8d-dadbf7445d65",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "14a9f1aa-90a2-4ed2-8679-a3a7c02641af"
        },
        "item": {
          "id": "d55a199d-b0e2-48cd-9bc8-8423ca5bbc20",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "835be24e-9a56-4185-8fbe-4957b92fa56c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a1c095-6a99-416f-9a83-a835dc752829",
        "cursor": {
          "ref": "8cd3553c-aa4d-43ae-b6a4-e5f77131d1ba",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "99c68d91-1ba6-4fc8-b577-b10ba04a4f7a"
        },
        "item": {
          "id": "f7a1c095-6a99-416f-9a83-a835dc752829",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f117dfc9-3bf5-456a-b908-e1e8a2d85285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f47ae2d-3759-43b6-af4a-de9e351490a0",
        "cursor": {
          "ref": "305f8895-3af8-4af9-9671-2e4af5720a17",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b43102a6-143e-4445-8fbd-ab5b37a07476"
        },
        "item": {
          "id": "9f47ae2d-3759-43b6-af4a-de9e351490a0",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "2301ffb4-ae3f-4d19-85fc-3c5bc5c16d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efcaab7b-361f-4596-9252-9bfc3074496e",
        "cursor": {
          "ref": "2078223a-839f-47b8-addb-e83c84f03daa",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "509cc8b0-1f53-4c04-b533-6fc842e1de6f"
        },
        "item": {
          "id": "efcaab7b-361f-4596-9252-9bfc3074496e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "fc8ab4ec-638d-4411-ada5-be80134a7d32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e371c21-e854-4066-851a-7ac87f1d4cc8",
        "cursor": {
          "ref": "0a6ecbb2-7d41-4248-8b7a-f2872585f113",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d4428be9-a08d-4ef1-94e6-9ea64ce8346b"
        },
        "item": {
          "id": "2e371c21-e854-4066-851a-7ac87f1d4cc8",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "de00582a-5236-4111-b36a-1c0d5de4366e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28db2e3b-e2de-4ddc-ac8e-6349069d2452",
        "cursor": {
          "ref": "758b138c-8d65-4ec5-bc53-9994342ebea5",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c62ff904-2413-485c-bd3c-c1ae9a3ec5c5"
        },
        "item": {
          "id": "28db2e3b-e2de-4ddc-ac8e-6349069d2452",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "8f232df4-9b3b-4b4a-892d-48e98d2090b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c61b0920-b1b6-463a-8b06-f8985b42a94d",
        "cursor": {
          "ref": "0aeb1571-2891-4b85-a287-b34892bef646",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a48e4b5d-6b59-4538-b8ba-efcc2a531297"
        },
        "item": {
          "id": "c61b0920-b1b6-463a-8b06-f8985b42a94d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "7191993f-dab5-485f-989d-6686d55ee2b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a3509fd-d25c-4c53-bc26-3c4a7630db40",
        "cursor": {
          "ref": "bc6c8360-b3a7-417c-a6af-fa947c8960ca",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5bdc26f3-a0ec-448f-bd81-e71aa268891d"
        },
        "item": {
          "id": "2a3509fd-d25c-4c53-bc26-3c4a7630db40",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e22d2ec7-73a1-4379-b764-e60e47afd8b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df7214e-3e17-476f-ad3b-4eb713a12182",
        "cursor": {
          "ref": "c7283fb6-d7dd-4617-9ea0-76db4b96fd39",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "88a36d59-d923-4a24-8138-f4f990543ccc"
        },
        "item": {
          "id": "1df7214e-3e17-476f-ad3b-4eb713a12182",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "1a7d066c-3d1a-4437-b378-c7a6021630e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ebdb0c7-b485-40b0-ab6f-8cbb14456bad",
        "cursor": {
          "ref": "74be021b-1808-486c-bf77-a8b835cfc702",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d717d121-3b0b-44a9-8ecb-71d82a5ff92c"
        },
        "item": {
          "id": "1ebdb0c7-b485-40b0-ab6f-8cbb14456bad",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "58566177-04fb-4d3e-becb-0d8558ac17f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd68042d-6e6b-4ce7-bee5-c4e251f5802f",
        "cursor": {
          "ref": "abc8303d-72f7-4344-846a-dc463f09639a",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "9ef62ad9-7a62-4168-9b7c-d5ea1bfbf666"
        },
        "item": {
          "id": "fd68042d-6e6b-4ce7-bee5-c4e251f5802f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "cf71dd82-558e-48a1-9556-46cce0b69c3c",
          "status": "OK",
          "code": 200,
          "responseTime": 115,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "4bc22ec6-1cbd-4d2f-ac91-f6577bec41f6",
        "cursor": {
          "ref": "1b927999-0bdc-45e1-b1ce-7c5a7a99ad51",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "4b05f59f-0263-4660-a1a5-d7a1b3e77650"
        },
        "item": {
          "id": "4bc22ec6-1cbd-4d2f-ac91-f6577bec41f6",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "175728df-2c9b-4b3f-94fd-3af5d1532981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3826a457-7b77-45b3-a5aa-308894594ef1",
        "cursor": {
          "ref": "b3726c73-4429-419c-92cb-0a6a491eedc4",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "478d0afc-cb58-48fe-8796-66bd2179e871"
        },
        "item": {
          "id": "3826a457-7b77-45b3-a5aa-308894594ef1",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f15e1765-93da-482f-ad29-e4da55d3b01d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1780b184-778f-4198-845a-b6300494c886",
        "cursor": {
          "ref": "093e8b25-855a-4983-b414-017e4e07b7ec",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "104b855b-4c48-44c2-859a-cc9aceb85455"
        },
        "item": {
          "id": "1780b184-778f-4198-845a-b6300494c886",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "56b3532d-0797-4852-99e2-0b6897a12647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4928f082-3a19-4029-9770-16186b5f0aa5",
        "cursor": {
          "ref": "3b173a15-1c78-41be-a463-92b35c249341",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "47a8aca3-8edc-4c8a-b177-d9159d5bb8a6"
        },
        "item": {
          "id": "4928f082-3a19-4029-9770-16186b5f0aa5",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "fac16515-269a-451a-863a-a36fcd672957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd74f562-018f-4465-a4a3-0f22d88357a9",
        "cursor": {
          "ref": "53ae81b0-33fe-4ebe-bbf6-215d9a5f39ab",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "2c01c166-a386-4ee7-9a39-9327fae443dd"
        },
        "item": {
          "id": "bd74f562-018f-4465-a4a3-0f22d88357a9",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "8e710746-61b7-4fe5-ac0c-fdd83951d76a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d249867-7837-4f10-9943-aec4903d5b83",
        "cursor": {
          "ref": "165f337f-e8f2-42d5-84b0-8366e5c3fb09",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "169eb7b4-fe9a-4fa3-808c-4e71011cad4d"
        },
        "item": {
          "id": "0d249867-7837-4f10-9943-aec4903d5b83",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "24aa65f5-4358-45c2-be72-68e9283c21d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d4519c-72ae-4205-995b-75a753ebff2b",
        "cursor": {
          "ref": "252d15e2-5d4b-4fa5-a7fc-1ef572ae0390",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2c3064f8-f854-41a8-b579-46169ff02469"
        },
        "item": {
          "id": "53d4519c-72ae-4205-995b-75a753ebff2b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "1ae2e57f-e27d-47f0-bd53-b4aeacaa9bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cbcd051-c155-46ad-b548-88f4a8ccabc0",
        "cursor": {
          "ref": "11767fed-2280-4ef1-b5f3-e82ba479aff7",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5260f78a-407d-4ad9-b7bb-0fe627f3a72a"
        },
        "item": {
          "id": "3cbcd051-c155-46ad-b548-88f4a8ccabc0",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "46a14c03-54f8-4d80-b2fa-c90af91f05c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ccd49ce-7326-4933-bb74-1805e6b007eb",
        "cursor": {
          "ref": "f48bf7b3-8cd5-46fb-b476-6e78a694409f",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "4d0f8a03-65e0-441f-9380-14ffe8a746a0"
        },
        "item": {
          "id": "7ccd49ce-7326-4933-bb74-1805e6b007eb",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "406be399-7063-4b17-a19a-df7041897265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b063b0-e630-4698-ae23-f9e7e800a2cb",
        "cursor": {
          "ref": "511a4340-1d80-4ee2-a76f-34244c917cc6",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "848e3aad-4f5a-474e-a6a3-81002fc2ff28"
        },
        "item": {
          "id": "f8b063b0-e630-4698-ae23-f9e7e800a2cb",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e936aa5f-cfe9-45b4-b3e7-fa2aaad70155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38799c8c-6f7c-481e-879a-c5426c5f920e",
        "cursor": {
          "ref": "787b5be5-ec91-4a6e-88e4-42822d2dfa03",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "4ddca03b-eae5-4b08-b060-2ea7faf0aa15"
        },
        "item": {
          "id": "38799c8c-6f7c-481e-879a-c5426c5f920e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e72bbccb-a5fa-4f95-90cd-3bd91b3ec5b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be46f46-2f7b-4ede-8478-2b7ef574bde1",
        "cursor": {
          "ref": "d7e63779-789a-4ec7-abbf-45be1885905d",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "500bebda-32d9-4d25-8898-5987609ac535"
        },
        "item": {
          "id": "6be46f46-2f7b-4ede-8478-2b7ef574bde1",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "6c902904-a09a-49a6-99bd-7ad764625d6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96d2529e-cf54-4930-874b-81fe5b1b5f4f",
        "cursor": {
          "ref": "8b24d001-4aa3-418c-ad5c-a18a7b6d2eb3",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "03d10ee4-1819-41e8-ad2f-25927c0078d6"
        },
        "item": {
          "id": "96d2529e-cf54-4930-874b-81fe5b1b5f4f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2cda1148-c123-4601-9d53-9fa3e7ae3358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff522f67-c75f-4f40-9766-280b27336687",
        "cursor": {
          "ref": "ea51b13f-7235-4742-8ae6-238a2533b6f7",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4ba9712c-5e27-4cdb-83be-34089b68d87b"
        },
        "item": {
          "id": "ff522f67-c75f-4f40-9766-280b27336687",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "4c985c89-66b4-4fab-9cba-e23767a38fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb5cc9c-5ff4-46fa-b5ca-9da427dcbdc6",
        "cursor": {
          "ref": "1c69073e-b2bc-4e6f-9fea-01bdc0202659",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "abdb5d67-3aca-44b1-8940-b31ceb7127a7"
        },
        "item": {
          "id": "efb5cc9c-5ff4-46fa-b5ca-9da427dcbdc6",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "75e70201-0184-4853-8e79-ca9bf6505c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61258ae4-bfea-49ff-b4ea-9f8dfa6d6185",
        "cursor": {
          "ref": "748d35d6-0de5-485a-9ac5-c4e80699bd53",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "8fd627b0-0274-4e44-b0ee-72dd20a4e6ac"
        },
        "item": {
          "id": "61258ae4-bfea-49ff-b4ea-9f8dfa6d6185",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f3382264-84ca-4ec0-9ea0-31cd51de6851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "218f4577-76df-4b1c-94fc-90c2581a2819",
        "cursor": {
          "ref": "6a71057b-3e91-4ae6-ac6f-8d1c2612a515",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e041a9e0-88fb-4f9e-9bd9-6e5d9183b6a8"
        },
        "item": {
          "id": "218f4577-76df-4b1c-94fc-90c2581a2819",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "202ebbb1-d7ce-4705-a728-090ed2ed37ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "041a278a-a898-4ff4-8d36-f1a378d55166",
        "cursor": {
          "ref": "1e37b382-8c71-4345-9ae6-d4dc4e3ff4b7",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "63b4bfc5-1a34-44fb-b379-6a870770d4d1"
        },
        "item": {
          "id": "041a278a-a898-4ff4-8d36-f1a378d55166",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "26a7854f-8e62-4097-b777-e9a262f46525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "162c4e9b-cea5-46ca-a43a-a1057cdbfeb0",
        "cursor": {
          "ref": "951cb6b5-bef8-49a7-bb41-45820a417ae9",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0421b550-63e9-42f6-8307-cf4e48e9b5e5"
        },
        "item": {
          "id": "162c4e9b-cea5-46ca-a43a-a1057cdbfeb0",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "be7b833f-a2a5-424d-a1be-24041679e512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bccda89-a69f-48cc-ac21-a5416a93438c",
        "cursor": {
          "ref": "e0a38168-dfe8-4a80-8ca8-e977135934ef",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "7ca47196-cdeb-4752-9264-0c882bbee7f7"
        },
        "item": {
          "id": "4bccda89-a69f-48cc-ac21-a5416a93438c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "34938245-f713-4e14-bf73-d5908d30a612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1282e63-6193-491e-b724-b83a9abd69a1",
        "cursor": {
          "ref": "0e91606f-784f-4b56-a148-87444ac4da7e",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c72462b2-2456-46c5-bd3a-d234dd303c8a"
        },
        "item": {
          "id": "a1282e63-6193-491e-b724-b83a9abd69a1",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a030ef95-ef37-4b87-9575-080001e14965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c92b38cd-dcd9-44ba-94f3-2fe7df893d53",
        "cursor": {
          "ref": "8ee0761c-a715-4045-a653-e13a09ba2687",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "548ce00b-e2d7-42e9-9691-030f3414f78b"
        },
        "item": {
          "id": "c92b38cd-dcd9-44ba-94f3-2fe7df893d53",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "072f1148-4aac-4db9-ab15-da3c06d03241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff053000-a64d-4f4a-9c8e-fb1d9089d771",
        "cursor": {
          "ref": "55d81d72-987c-4c97-bb78-6a044816b9a3",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "10983c58-7b73-4cd6-a4de-73753440ca58"
        },
        "item": {
          "id": "ff053000-a64d-4f4a-9c8e-fb1d9089d771",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "d83c63e3-de3d-4fae-b167-1d85d9dd61a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3374dcf-5bf1-4806-98a4-52129f578672",
        "cursor": {
          "ref": "db6a2f13-fb06-479a-8635-7b8f44cc22e7",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "2b28c2fe-b151-4860-a20b-2b4f97af9e8b"
        },
        "item": {
          "id": "c3374dcf-5bf1-4806-98a4-52129f578672",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "fe5fdd0b-1f65-4668-b8d6-5678f717ff58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "357986cb-2108-4511-b2c8-5def01b68f28",
        "cursor": {
          "ref": "d1e89eae-1c35-4e12-b788-5dd6e7c8a40b",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "faa57fce-9f5d-4897-ba73-eedc297773c0"
        },
        "item": {
          "id": "357986cb-2108-4511-b2c8-5def01b68f28",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "28d2aafb-8fb2-408a-bd5a-e30982ba2484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dddd0b15-769e-4664-a2cb-f370e34012d4",
        "cursor": {
          "ref": "d8a20acd-c236-4bb5-b52d-10f5fe2cfecb",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "5334cbdd-3237-458f-b873-a3d9dbf3e942"
        },
        "item": {
          "id": "dddd0b15-769e-4664-a2cb-f370e34012d4",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1c648c2c-a177-42c7-b891-1d4c26e4c631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "713c9f11-936e-401f-82f0-1222434992c1",
        "cursor": {
          "ref": "4105df3b-0b03-4d49-a7a9-14c7b5d6e03e",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "38f41189-dd16-4ee0-b14e-19020c960560"
        },
        "item": {
          "id": "713c9f11-936e-401f-82f0-1222434992c1",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3c8f23f5-b63a-40b2-95c3-142e91a82c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd58f368-2b58-491e-96dd-989b3f741d51",
        "cursor": {
          "ref": "7f556721-f6af-4e1e-ab18-03cecbe0b14c",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "974c6705-21ef-49c8-aceb-31444a0cc12c"
        },
        "item": {
          "id": "cd58f368-2b58-491e-96dd-989b3f741d51",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "bccc5ca6-794c-4a31-9b66-b2cd7697ac71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc481c15-fbd2-435f-992d-96cac99497ef",
        "cursor": {
          "ref": "d90dfb12-3edc-478e-9b44-12c9360a6c74",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d1303640-b960-4a59-bdbb-52ea864c54ea"
        },
        "item": {
          "id": "dc481c15-fbd2-435f-992d-96cac99497ef",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "6871a56f-63ba-4e68-ac6b-c3e8496338f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "138ab7a2-583e-4886-8aca-f3c80aaab027",
        "cursor": {
          "ref": "1d859111-806a-4ddc-b078-db32f9465b6d",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "512d1d8d-f3e5-42ce-8380-83c4450a5786"
        },
        "item": {
          "id": "138ab7a2-583e-4886-8aca-f3c80aaab027",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "94071437-a08b-4252-b083-45ddca82c4b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d47616-565f-4854-92f9-3814861e271a",
        "cursor": {
          "ref": "f399602b-7ca7-478f-9ef2-1ff54aac6db8",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "c30e1fc3-692c-415b-8ed9-8e3d01a6c9db"
        },
        "item": {
          "id": "67d47616-565f-4854-92f9-3814861e271a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "7bb10080-b18e-4c4e-8a76-fd2dad637211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 149,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cacbc66-b970-40c2-915f-c561fdbf629f",
        "cursor": {
          "ref": "b4d3ef6b-67ff-4111-af80-f3403ecf05b8",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1942fa2a-7152-4735-9fee-4b9dbec45d8c"
        },
        "item": {
          "id": "4cacbc66-b970-40c2-915f-c561fdbf629f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ddedcd03-539f-44a2-bebd-b214a80d3503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254374cf-84f6-4c34-aee1-b00444f423c8",
        "cursor": {
          "ref": "19cb7a33-a881-46a5-ac9e-d24d3908d679",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4f8dd43a-bae5-4687-a8fd-423e5a08eb3e"
        },
        "item": {
          "id": "254374cf-84f6-4c34-aee1-b00444f423c8",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "54cdaabc-56e3-4e9b-9854-f0e14d9e6304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb06347-931a-4318-acc7-a74d3a5cae81",
        "cursor": {
          "ref": "8b51e918-d89d-4c02-8894-db68551a3dff",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "9b82abf0-bbf9-41c2-b0a0-b872c69d4b03"
        },
        "item": {
          "id": "1fb06347-931a-4318-acc7-a74d3a5cae81",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b1b143c2-de87-4e4d-bc15-d7c0e1c7938d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c9fd62-f97c-4fad-b2c5-8bf1702a715e",
        "cursor": {
          "ref": "20d8a03b-300a-47bc-b5a8-761419adca0d",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "9ae459df-5867-46f3-88d7-45f6ded8f06e"
        },
        "item": {
          "id": "53c9fd62-f97c-4fad-b2c5-8bf1702a715e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "23cf755a-758f-4090-9be3-5cd6e9933a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e04f04-1201-4f38-a4d2-c54944e8b8fa",
        "cursor": {
          "ref": "cb28469a-3c35-4d31-bb8e-f9fc79f09766",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2b7989ca-73c6-4456-b4e5-c6cefb51c7d1"
        },
        "item": {
          "id": "f6e04f04-1201-4f38-a4d2-c54944e8b8fa",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "937f1cd8-54f2-48af-979f-ef9ffc28d152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a95f48-8962-4a39-a012-71e8e3c249c3",
        "cursor": {
          "ref": "02fc0a84-1f61-4279-816b-3cd4faa40c4b",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "60ee6700-1f9b-4d0f-a05c-0890b593396d"
        },
        "item": {
          "id": "21a95f48-8962-4a39-a012-71e8e3c249c3",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "77067fb0-a0cb-4c63-8300-20904360827a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "435e3a85-3362-4ba9-a0f7-f49573b29926",
        "cursor": {
          "ref": "c1171cec-6e7b-42ba-84b6-184b63b4d977",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "3e60c159-d8ee-4d0e-a9a6-fd2af299c562"
        },
        "item": {
          "id": "435e3a85-3362-4ba9-a0f7-f49573b29926",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c12264eb-129b-4a68-854c-9743dc6504c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c36ad457-5473-4835-bb58-d5e01006c57b",
        "cursor": {
          "ref": "83456f73-4452-492f-9e9e-21c7ef74f8dd",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "68f47848-f9b8-4098-aa72-9a01fa7007f5"
        },
        "item": {
          "id": "c36ad457-5473-4835-bb58-d5e01006c57b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "6f061196-1065-4c0e-a9c3-6b5837a961e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02db34b-d0dc-4f91-93ae-aa5cb2543786",
        "cursor": {
          "ref": "a5d9e14a-1802-4bfd-9a5c-04767f710556",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f2cf651e-ca56-4ceb-90d0-4cfe7eb475b9"
        },
        "item": {
          "id": "d02db34b-d0dc-4f91-93ae-aa5cb2543786",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "55d61661-293c-4f44-95a6-68e604b89d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9138b62c-cc83-488f-8c65-fc605283b621",
        "cursor": {
          "ref": "b8afb5d5-7848-4678-a926-fd743a503466",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d952ecf9-f637-461c-a04d-76ede3ebf149"
        },
        "item": {
          "id": "9138b62c-cc83-488f-8c65-fc605283b621",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "eb448a77-a1ca-4048-b0d1-43f98c522e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a667f2-d141-483f-9190-5fb545c5e518",
        "cursor": {
          "ref": "5a6a5f1a-4c5c-4685-8d52-da7fc99f9f6f",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "6517f82d-cf42-4ffb-a987-78c651e8a0de"
        },
        "item": {
          "id": "82a667f2-d141-483f-9190-5fb545c5e518",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "16503a19-a684-4f43-b75d-747ac2e6ebf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aaba8e3-56c5-4156-a2d8-3b93e53e5668",
        "cursor": {
          "ref": "4d7ff625-4d3c-4830-82f7-70ca794b06dc",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "12a5791d-0284-477c-b45e-cb8fbc012260"
        },
        "item": {
          "id": "3aaba8e3-56c5-4156-a2d8-3b93e53e5668",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "64c326b7-d016-42dd-a0de-867ba81543e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd8acdc-5da9-4e53-8ae4-edea17a6134a",
        "cursor": {
          "ref": "68675c48-ed1b-4e4e-8a7f-de9470170404",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3da86ab9-5507-48f9-af02-a92885fa80b4"
        },
        "item": {
          "id": "2fd8acdc-5da9-4e53-8ae4-edea17a6134a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ed134a68-2cbf-4380-9b2e-2d5f4f25b010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a008db4-639e-4a24-bd67-434d211060a5",
        "cursor": {
          "ref": "bc2c42e0-a3e5-4f3a-b9d9-1c5d21ed9ce0",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5e1f816d-61dd-45d6-a8bf-0d5c10b3c9ee"
        },
        "item": {
          "id": "5a008db4-639e-4a24-bd67-434d211060a5",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "226238c3-d088-470d-ae32-d8dc35744d1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "993f2598-2b94-446f-ae36-39ac903056a1",
        "cursor": {
          "ref": "3ebf1535-65c2-4aa7-99c2-9d5b2ba3b866",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "91d791ff-a8bc-499a-a395-c275110946a7"
        },
        "item": {
          "id": "993f2598-2b94-446f-ae36-39ac903056a1",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "fe703fe1-b8e1-4a5b-8b31-5b9b6573f163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9780c184-b9ca-4304-8996-6ebca1ec73ce",
        "cursor": {
          "ref": "e0524758-e4ed-4618-addb-405e115882f6",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a1a78b3b-8b7b-4ed5-a83f-82fa9a77aef1"
        },
        "item": {
          "id": "9780c184-b9ca-4304-8996-6ebca1ec73ce",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d63983b3-3b03-44bc-a357-6ad105bbcfae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b1abada-f2e7-4b3c-b2da-6f8ae4889988",
        "cursor": {
          "ref": "945487b1-3286-458d-9597-fa3f4d1800eb",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "3e11ebae-2146-4016-a8f6-b3618fc5188e"
        },
        "item": {
          "id": "3b1abada-f2e7-4b3c-b2da-6f8ae4889988",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "aaeebd5c-30f3-403a-a632-5de5e71bdadf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2001620e-26cc-4228-b092-6c73c14e3cce",
        "cursor": {
          "ref": "f401ba44-b4a0-4a34-98c7-28ac5ea9d55d",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9105f3df-716b-4c6f-918f-7f4c07bb20e1"
        },
        "item": {
          "id": "2001620e-26cc-4228-b092-6c73c14e3cce",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "3a9dfec5-a358-43e9-bffd-d87075b9f4ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f02268b1-6b37-48ca-a5cb-3cce8bcc9205",
        "cursor": {
          "ref": "d42ed7be-84a6-4f85-b5cf-f0248055fecc",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8d764552-8d45-4d2d-8580-0a779e53cdb5"
        },
        "item": {
          "id": "f02268b1-6b37-48ca-a5cb-3cce8bcc9205",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "7511d1a6-5300-4f6b-8cd6-3bca3ac531a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e31c39-33b0-4839-9cf9-ad00102705a2",
        "cursor": {
          "ref": "30a01b54-a80b-400a-893f-f6a2436c810a",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d313d422-e4b2-46b3-8859-9064797696fa"
        },
        "item": {
          "id": "b6e31c39-33b0-4839-9cf9-ad00102705a2",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "06f41958-a661-4a11-9ac1-677a65a356b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b257956-69d2-472b-b77d-25adb281ede8",
        "cursor": {
          "ref": "b885178b-616f-4e2a-91a0-17bd965d6481",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "417c3d24-75f8-4ec1-8765-8ebb17a47e2b"
        },
        "item": {
          "id": "3b257956-69d2-472b-b77d-25adb281ede8",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "14637b37-391c-4de4-8f51-93f4b6c32648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d7b43d-32df-431d-83ca-439a4040d832",
        "cursor": {
          "ref": "9ded772f-e312-406a-9368-1a2d87eb87b2",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "97475647-0a5e-43e3-a07b-114704760a39"
        },
        "item": {
          "id": "99d7b43d-32df-431d-83ca-439a4040d832",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "d0ab7117-08e0-4503-86bf-265d39b6e645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d76d67d4-d247-4a25-8fd0-9f709788a109",
        "cursor": {
          "ref": "3e67d5ce-3fe9-4178-a752-1782c7c49598",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "690ea93d-d252-43a9-9436-dd09a8eefc08"
        },
        "item": {
          "id": "d76d67d4-d247-4a25-8fd0-9f709788a109",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "518c7213-7c27-4b1f-a501-fdc6bbacdb29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8efe8ec8-3a50-4bb9-99f0-909f279a09ad",
        "cursor": {
          "ref": "4b0095fc-30cb-43e2-94b8-21c712742f56",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "3d5fb48f-9b9c-430e-892a-a1ee4462b5ae"
        },
        "item": {
          "id": "8efe8ec8-3a50-4bb9-99f0-909f279a09ad",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5101b9ac-0960-4a8d-9e4a-d8bb88510129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf13bf1-8616-4c26-a399-73a8c2ff0bbf",
        "cursor": {
          "ref": "d379e9d9-d0f0-4824-9225-d2b1c983fdeb",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "94814e7b-b35c-432d-a79b-2cd872effba5"
        },
        "item": {
          "id": "dbf13bf1-8616-4c26-a399-73a8c2ff0bbf",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5faa3906-85d9-4fd1-8762-ade7584dd41a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afdfe68d-0ebb-4ca1-bd56-b39c47bed9b9",
        "cursor": {
          "ref": "7ec44776-8352-4288-895e-76f5254f292e",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "5608436a-5fe7-4ef3-ae24-a0a8e652559a"
        },
        "item": {
          "id": "afdfe68d-0ebb-4ca1-bd56-b39c47bed9b9",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e1346c80-97bb-41a9-b7fc-c01da5d7b824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c199e77d-ffa8-4dda-a21f-956d79df0f95",
        "cursor": {
          "ref": "c3af99b0-0a90-461b-8d91-14cf01007dc9",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "67c79878-f9a9-4b4f-a778-4efdc27fb242"
        },
        "item": {
          "id": "c199e77d-ffa8-4dda-a21f-956d79df0f95",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "cd7db981-3ebb-4f58-96a6-beb99eff61ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b4b29ff-022b-4e45-ab5e-d8b3debd275d",
        "cursor": {
          "ref": "ed39e080-582b-425f-ab00-ea55f199012e",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "45a5d0a6-dce2-4ded-aa73-d4c046f5e732"
        },
        "item": {
          "id": "9b4b29ff-022b-4e45-ab5e-d8b3debd275d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f31caa93-e070-46fe-9e22-b07074a14c19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795f8ad8-7024-4c6a-ab54-abd8ad161f4f",
        "cursor": {
          "ref": "c42ee650-4d2b-44c3-995e-6e12f8daf26a",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "9c749bbe-64e3-41cd-95b1-e10fa7975e1b"
        },
        "item": {
          "id": "795f8ad8-7024-4c6a-ab54-abd8ad161f4f",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "08ed69fa-d458-4ccc-9b5c-58d5d00d1af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd726851-3137-4446-91d7-adf360273016",
        "cursor": {
          "ref": "c7b726dd-6198-4137-a410-355d361b47c9",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "b79f04ad-9243-4828-81b8-71fb5dac9256"
        },
        "item": {
          "id": "cd726851-3137-4446-91d7-adf360273016",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "13c14f9a-c1fb-4963-bd40-230fe4f0ce31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09435f09-4ae0-4fc3-a6d1-ed419c5f22b6",
        "cursor": {
          "ref": "d54609f5-3d17-4c0f-9bfc-edfb4da6e65a",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "f500116e-8a0f-414b-9e35-a9197622eeb2"
        },
        "item": {
          "id": "09435f09-4ae0-4fc3-a6d1-ed419c5f22b6",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "70486bc8-5be5-4a79-842d-99fc48a4806d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e1b518-8189-4470-b717-dbcd6169df6c",
        "cursor": {
          "ref": "5ac7904e-2ce9-4965-8a14-057f6106ecf2",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "f0c310da-4a27-4fd3-96a9-0e8447a377c3"
        },
        "item": {
          "id": "a7e1b518-8189-4470-b717-dbcd6169df6c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e38a1384-ae1c-4130-a522-cbac6e7da0fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361ecc2e-0491-468c-88d0-f7052b69cca4",
        "cursor": {
          "ref": "10f09adf-4e88-4dfb-82c2-9b52e725f665",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "0bd73e3d-bbbc-42a7-92ab-6ac786382918"
        },
        "item": {
          "id": "361ecc2e-0491-468c-88d0-f7052b69cca4",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b5b1c2e0-902f-4fd9-936a-479ecb7a798d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "105f5a1e-dd8f-48c4-a43e-eaab7fad9605",
        "cursor": {
          "ref": "d06684f5-8fd6-4d77-ab7c-4638fe5efe97",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "8e6f89d8-099b-44fd-8181-094ad23f8f9f"
        },
        "item": {
          "id": "105f5a1e-dd8f-48c4-a43e-eaab7fad9605",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "9cd11370-c6a2-465d-b5e9-511e67bf2f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05125f74-2cc4-43d6-97b8-25cc8d6ac603",
        "cursor": {
          "ref": "e47adc6e-3576-44e7-8750-26b53862d266",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "7269e387-dd24-4e46-91e8-9177933e532e"
        },
        "item": {
          "id": "05125f74-2cc4-43d6-97b8-25cc8d6ac603",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ae04a334-ea1d-4912-82e0-aa3bb329ca24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6607f287-c4ab-45d0-abeb-09478875b211",
        "cursor": {
          "ref": "3b26406c-94db-4664-b9a7-b1e0dd47cc2d",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "1718f72a-8dc7-4fd2-8a7a-40682777f3c9"
        },
        "item": {
          "id": "6607f287-c4ab-45d0-abeb-09478875b211",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "eefb300d-35c9-4e0f-93c2-7de52ba9a1f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b54eccad-a64f-428c-805d-ebd7b5dde3d2",
        "cursor": {
          "ref": "ec8584b7-d9f0-4780-a141-d7308dde28cd",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "3fa03337-b875-4fad-b120-ea95c6f20c70"
        },
        "item": {
          "id": "b54eccad-a64f-428c-805d-ebd7b5dde3d2",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e78b47d0-6f20-45fc-917b-bd23cfde9b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3568d6a7-c940-42f0-a6a9-625ac67719da",
        "cursor": {
          "ref": "782f9d2f-5dcb-45e8-a678-28bf4260fe5b",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "4604b981-3dd8-47a9-8557-2e2f0f36d6f2"
        },
        "item": {
          "id": "3568d6a7-c940-42f0-a6a9-625ac67719da",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f063fa0e-5aca-44d4-ab0e-53437aebd144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c91c19f-562c-4a8b-891c-cda4dd5ef872",
        "cursor": {
          "ref": "70f01bc7-2765-4fae-8ca0-1209394a6990",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "9a6409b7-3239-4321-9b6e-56b655e7ffca"
        },
        "item": {
          "id": "8c91c19f-562c-4a8b-891c-cda4dd5ef872",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "933fd5a9-49ff-4dca-b678-6f90325e00af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a31b2f2-d6cd-4fe4-a467-6c76b371534d",
        "cursor": {
          "ref": "c391c077-9c61-4036-8ffb-ff5293bc0376",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "0f988a69-4b27-4f7f-85ee-a569d8f70218"
        },
        "item": {
          "id": "9a31b2f2-d6cd-4fe4-a467-6c76b371534d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "af0c116e-f0e3-4a00-82b8-f73d596c9c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "510977d5-dcbc-4a1a-8833-d396800e7d66",
        "cursor": {
          "ref": "97d1ce03-b0d1-450f-9251-e3b8ea1017a4",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "9414e9fb-98d8-46b1-86ac-db8d857de2bb"
        },
        "item": {
          "id": "510977d5-dcbc-4a1a-8833-d396800e7d66",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2ae7ca88-5fbc-4940-ae72-21ce76f49e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d89aca3-e887-47e4-b30c-0b38d7d38949",
        "cursor": {
          "ref": "8df3bfd9-6889-4d66-a527-0bee4adfb1c9",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "469b0c13-fd85-4cd5-ae85-a4bf42f127cd"
        },
        "item": {
          "id": "4d89aca3-e887-47e4-b30c-0b38d7d38949",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "26a4b62d-0e7e-4ed7-bb24-0fef31af0d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7813ccdc-06c8-4bc9-9036-9ab1092c6975",
        "cursor": {
          "ref": "55c5b15e-2d21-443b-ba87-cff84b957679",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "237d27ba-0ae7-454a-b011-dc4aaf105008"
        },
        "item": {
          "id": "7813ccdc-06c8-4bc9-9036-9ab1092c6975",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "50d0bb72-31c3-4aba-97ff-6d2fd5b19f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc4061dc-8f92-4011-8b5a-02e62c4f97c6",
        "cursor": {
          "ref": "9fb45892-ef61-4f71-a0e3-65f4a2842f3d",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "27d50b58-81ca-40f6-9485-e679db6960c5"
        },
        "item": {
          "id": "fc4061dc-8f92-4011-8b5a-02e62c4f97c6",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d937bd83-5538-4726-84be-0be0c08faa02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf302121-ec08-4d6d-9257-b491ac7ae2c4",
        "cursor": {
          "ref": "71efbb57-5f37-42c7-be6c-e7bf1b30f1da",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "2576f276-f30c-4be9-a13f-0224fc4c46d1"
        },
        "item": {
          "id": "cf302121-ec08-4d6d-9257-b491ac7ae2c4",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9b08d487-ef0e-4548-a868-9463b34f10cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f692340-e2c7-4674-8d8a-dcd4e42607fc",
        "cursor": {
          "ref": "8f8917f5-5be6-432a-bfe2-855b27400d73",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "1e81e837-cab5-4d34-8ce1-90b360f4721c"
        },
        "item": {
          "id": "6f692340-e2c7-4674-8d8a-dcd4e42607fc",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f8b79e69-283d-440f-a237-47f4a0f7a2f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420b9e8f-93a8-481f-b1cf-3fe65768d83d",
        "cursor": {
          "ref": "d194256b-b22f-4395-9dab-e7fa35489d95",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "2e041e99-806e-488a-8569-83154cf96123"
        },
        "item": {
          "id": "420b9e8f-93a8-481f-b1cf-3fe65768d83d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "964f7fc8-b44d-46d2-b040-f7e82ae98b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1034ea17-bbd6-4f46-8d6e-1f1aa799aa51",
        "cursor": {
          "ref": "3b8115c4-0147-4281-82bd-f1411d0830b6",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "44f328b9-1f8f-40c0-ae76-a0c000d16024"
        },
        "item": {
          "id": "1034ea17-bbd6-4f46-8d6e-1f1aa799aa51",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "4940b014-19d6-41f7-85d5-ef31573c1998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1405e0-5da7-4c4f-ba14-1632b61fc40f",
        "cursor": {
          "ref": "e108d1df-b4cc-406a-8064-c36a053045a7",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "cb0c3aa9-0058-4602-bfa3-a01b1519f0b8"
        },
        "item": {
          "id": "4f1405e0-5da7-4c4f-ba14-1632b61fc40f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c5cb0fa2-92cd-4194-9fb1-66ca613f6df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e21909b3-fa71-4728-8071-410c7292f779",
        "cursor": {
          "ref": "6c5fec80-62d4-49a3-ad4a-4b7b9e8d0d62",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "ce3f89eb-dfed-4270-88fb-c84d3a50e6a3"
        },
        "item": {
          "id": "e21909b3-fa71-4728-8071-410c7292f779",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "fc6a268c-ed2b-4c7c-bf77-75b336473100",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdbc12d8-fe5c-441f-8dbf-2412f9f40b7c",
        "cursor": {
          "ref": "9fa26d84-ff19-4d13-af00-cbc1d29d85ab",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "d8064642-eeb5-4529-ab22-bdcc394c28f0"
        },
        "item": {
          "id": "bdbc12d8-fe5c-441f-8dbf-2412f9f40b7c",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "7dc3ffe9-e61c-48a5-87f4-13650c6124a1",
          "status": "OK",
          "code": 200,
          "responseTime": 74,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "96148615-1ca1-47f9-b18b-ff3f0aa940ba",
        "cursor": {
          "ref": "b1e836bc-d7ff-42fc-bb90-6cb42a3eb9ce",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "eb152f14-3ac6-4287-a076-ca5d9e967e2d"
        },
        "item": {
          "id": "96148615-1ca1-47f9-b18b-ff3f0aa940ba",
          "name": "credentials_verify"
        },
        "response": {
          "id": "69557b3f-ef96-4f7c-8397-f175cfb2fe89",
          "status": "OK",
          "code": 200,
          "responseTime": 2397,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "17154bae-6e73-4550-bea7-209df7c83ae0",
        "cursor": {
          "ref": "cea6adae-b462-4b01-a775-cf1f4b89934a",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "a78a63cd-8ba2-4877-a73d-0f3b89ec99d8"
        },
        "item": {
          "id": "17154bae-6e73-4550-bea7-209df7c83ae0",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e65acf51-9c29-4cab-bf9b-60bb9ab5e639",
          "status": "OK",
          "code": 200,
          "responseTime": 2736,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b95dfdd7-127d-4cfb-b7eb-19d15aaa3ba0",
        "cursor": {
          "ref": "d2f12748-e059-48d8-9775-3134937fb501",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "85bf82c9-aafc-4d30-b32a-59dfa9fd0013"
        },
        "item": {
          "id": "b95dfdd7-127d-4cfb-b7eb-19d15aaa3ba0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2a9fae2f-c9e5-4af1-bf97-6e2a6d46ae39",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 59,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b95dfdd7-127d-4cfb-b7eb-19d15aaa3ba0",
        "cursor": {
          "ref": "d2f12748-e059-48d8-9775-3134937fb501",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "85bf82c9-aafc-4d30-b32a-59dfa9fd0013"
        },
        "item": {
          "id": "b95dfdd7-127d-4cfb-b7eb-19d15aaa3ba0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2a9fae2f-c9e5-4af1-bf97-6e2a6d46ae39",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 59,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07f42d1-89c1-40b8-92fa-09f2b4f07d75",
        "cursor": {
          "ref": "72f2ae4a-2e20-4a70-abd4-679e509311da",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "556a18eb-d18a-4796-9171-ef20197b80f4"
        },
        "item": {
          "id": "c07f42d1-89c1-40b8-92fa-09f2b4f07d75",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "928b7b0e-709d-43ad-8aa8-a88e60c1e166",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a3460bd-ce18-4e4d-ab07-d8f0fbec49f6",
        "cursor": {
          "ref": "36e53f22-4f5c-47a4-986b-b22167e1480d",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "7bfb0ef5-7781-4938-be95-383aedd2dcb3"
        },
        "item": {
          "id": "8a3460bd-ce18-4e4d-ab07-d8f0fbec49f6",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1c0503c9-0991-496b-8ec4-2a9e31a797f0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}