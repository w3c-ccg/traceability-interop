{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f6fc5755-9457-4ec0-b481-3514e4f5ea7e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "af458f13-db63-4a4c-8594-5101fe61b1ce",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "eeff137d-3185-4e41-a76f-770437cdc1c6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "458001b5-6d1f-4a62-b029-73e657bf1d77"
                }
              }
            ]
          },
          {
            "id": "30ce8e3e-1255-4347-b3bd-4228a362f7e9",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ec19d538-fa9b-41e5-9199-b7b731fe4a99",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "eae90c96-ae6f-434c-9466-07963d2b141f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a08d590d-f21f-4534-bdb6-6924d16fa4e0",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "04fd689d-c794-4eb5-8a56-e19ad524a475",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f5db0079-896f-4ca4-9566-790d48197284",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a02a42e2-5d13-4d0a-9a33-13b6bc055123",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5ccf6c25-9f56-4b9a-95f6-538cbe50968b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "279e578a-803d-4a67-80b2-7c7ff8646b0f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e96abfa5-5251-4b9c-ab0b-2e5a30adc446"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8306872c-7556-49f3-9f65-34aa93a42ccc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d362f9ae-a39c-4bf9-b2da-77d8a207f63b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2a77b087-f6d4-4bad-bd34-f062e3374271",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "0ec281c9-4796-4f83-bb28-5bbecba24ec3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "375b47ef-e6df-4a2b-805b-1d2d44256128",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "48691c2a-5486-4d33-b8a2-35c9e63d1f52"
            }
          }
        ]
      },
      {
        "id": "2f48f17a-7a1e-4e1c-baac-35786078a3e0",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a0bc2d33-33a9-419e-ad83-4389c44895e2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "418449f4-1085-4cf8-b087-2920d5cd0018",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f903934e-4b93-423d-b38d-d422238787b7",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc8aa09-2767-4c84-ab16-6cba168037a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb3ff196-0506-4774-8a9c-892310a83d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4faa08bd-3fc3-4c68-827d-61a2da7153c8",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43062fcb-87ee-477d-96ea-223221776b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9073fbc3-24a8-40e0-aa81-b22ee8378617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eebd900-6773-4c6b-8117-d91edb643938",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2787e37b-df25-4491-8a90-cbe2f8558a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32cbbf8e-bc71-44ef-a182-4aa36d59eb35"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8546b1a3-232b-4132-bd8f-760621354efb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "18d18931-a42d-4a08-99c9-be2bd8e60ad1",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bffa9899-427a-48f0-a800-5abb36ea6542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f3f56692-9f61-4635-afae-2d83e4128481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea33dd3d-924d-4bc5-b31b-d54c2c9f5637",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce626d33-a11e-4df9-9f12-1dbcc311c517"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a6900098-7883-4250-9275-8668cbb92aed",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2deab3e3-07dc-4ad6-8d12-b02e1c6e6f1b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0072142a-d669-46b2-8714-9765fb661ade",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "82dce323-8897-4e2f-bf18-30a156163505"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d721e1ff-8736-4898-b8da-54dc36425568",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "4e005079-6462-4b4c-9c59-8a09460f82ca"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "acb8a08e-dcf0-4b8f-8c50-aba1f97c61a0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6f539d5b-db4b-4193-8049-cb34864bb748"
            }
          }
        ]
      },
      {
        "id": "1b4a27ec-af4e-421d-83cc-61e63a44b307",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "8748c265-9781-4492-9e16-ed7e6f05b794",
            "name": "Negative Testing",
            "item": [
              {
                "id": "83e6d6a3-ae1d-4a92-a510-208eb7ee2a2b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a3323ccb-291a-4358-9148-fe562dbf4a8f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b8f87a-26a7-45b4-a0fa-c4aa60f51ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1bf53a4-6e01-49fe-942a-4d8aa8a01254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd6d7a1-a3ff-4b79-a49d-22e3dcb27915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1de9b92-3782-4a77-8959-aa2e664aa271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d2e1d22-9e8b-4b33-a534-5599e861082b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a421eb-5463-4a77-9dec-2cd46779810d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5daf1ae2-ff1b-402f-832b-ecb52271d859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50cfd327-6d38-4221-866b-e5ee660057fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f115b768-c914-4625-afc3-42b4a8ce684c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebee3988-d747-44c1-b75c-f72c2ac56518",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b31d0904-6d3d-4f6f-ae32-f69fd026478a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a1cc87f-8137-4c90-87f3-b0c309ec70bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "606b7070-9d1a-44c8-9649-a54b1ffca6b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06b1c432-b2f8-46a8-b1aa-92a5966ed0fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5edcde26-e35b-4cbc-83ba-2c12f394edc0",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd4a5de-b949-4e51-8ac8-30ade3fe86bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aac6e639-74c2-467b-aeaa-86efb9a299fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6207c0bb-653e-4adc-9dbd-e39513c35c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0c247a9-91ae-4450-a681-119447e8090e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f853a575-9fa1-417c-adf5-b77d83fb4afc",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a4cc1a3-f597-4d0e-b25d-c36fd6de899d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98ccf2d2-9c2e-46fb-a6c4-ea5bb2fb0204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd50812f-178a-4e6a-a090-3cc89b76adb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7025fb19-5ac0-45cc-b2e7-d2fde7ca4446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f19ddf92-869d-49a5-9cae-fea9c49fc484",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01fe5e3c-de4f-4d49-8f46-762eb715998a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab8fb6f9-1a92-470c-b312-6f09f5c34ae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f471945-4b6b-4b6c-9565-0bdba6f8e6e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99481e2d-7c08-4978-9911-0d0135a437f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559f500b-0fb8-4957-96c6-291a7cc334be",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beed0541-119e-4b95-b198-372036d3bec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f4c83f6-e35a-4979-995b-3e7f1eba7670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ffd292c-190a-4b86-8fc9-517447dc8a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a90d3eb-f379-44cf-84f9-146f735c9c06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e269ac0-6444-4489-afb7-dfb6b4e31f9a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4395bdab-32ae-4cbc-83fa-bb4e47c64fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb2844b3-beda-4eef-8565-69a6e8289bf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77041bbd-0d87-4c38-a8bb-bd1d41a86e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fdd71f15-c00f-4e43-b90b-ac163610ca8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf973c5-e944-48e0-a60b-d8677071078c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2a822e-123f-4a87-ad6d-b642c84edc10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32e03b1e-e76b-49a3-9955-e1548b4fdc99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d0791e-d511-4a33-9d92-39a4c9f8ed2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "960a4add-eabf-4454-88e8-188458833e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3655e78e-0981-46e4-9db5-ddfbd5a2ef32",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e045d27-7e26-4653-a6f1-b031d5b9e8de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21012b3b-3fd6-4d41-8ac0-f3f631fe38fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b68b95-0957-467a-8c9f-4b3c86944fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27c8eb85-67ae-4f35-aca5-3f2fcce7c903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e43d56-6de5-47e1-88dc-ad59aeb30eea",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d2e2c02-8120-403b-ac55-62b3872cf5be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8c19d91-be0a-4f7f-8135-1a5e7eb986d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf8e670-04ac-426a-b4e7-f99c20a7e5ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "14fc61b8-aeb3-4d00-902b-0715c75067af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c43ce2-636c-4b4a-8001-c0f3cfe3310e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db400fd8-b6fb-487d-9e02-c4db6b32c0c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baafee4d-ecd8-4bcb-862d-56f775279567"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39215b41-796a-43f4-be67-980676bc81a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ac78586-0e73-49bf-891f-4f7f7e43e15c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ebffdc0-9b7d-4689-bf82-bc3b23815b85",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e051c98a-a700-466d-981a-1503c7236563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dd836aa-825b-4093-bece-d133dfe46119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f9b5a2a-53c2-4e3d-8fbb-ab639433bfc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4e7201a-7da7-4fab-919e-b8ac12b06851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61438bbe-91bf-405f-84fb-c1c1b2f2a598",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b68b41-a57f-425f-a44e-7b5046580821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca0523f1-033b-4553-af1f-77038419f421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb6c97a4-737c-466e-bf66-1982f6a66a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fbea43fc-ad0d-4546-a9ad-4f9628ac538f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa78197-a02d-41c8-b4e4-51bf82a39f79",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e83e2da-e141-412c-8e07-048e107dcea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cee1c41-c3b1-43d0-85cc-2b847d8e96bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27868b02-43b4-4303-92fa-5578569cb4fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ea96161-bc25-4b8f-bf63-c18e0281c1bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b30f512a-ef8a-4f67-8e88-3c6629d9ccd6",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d28c9b-503d-4ec5-b0b4-c13b0a41c35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "993b102e-83b8-480f-91db-eabec2adcf4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c2c7a5c-2f58-4370-bce5-de151b8bc3e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd40eba1-b95d-4aa4-a900-baf3d24c1177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c05d93-25c8-4c18-80f4-29351ff4830a",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3595d9b4-79cd-433b-b085-5a975b581b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af3d8fec-09ba-47d7-86c7-a2a744fcb3d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de4270e0-f8a1-449f-b7f3-7dcbadf64f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0becce44-b309-47cb-8169-8d7ec1d10a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2629f1cd-baf0-411d-85fa-c8dd64c8c961",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e89c67aa-f802-4dc7-9710-572cb0237c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eacefaf0-0f39-4b15-92b3-6f445d11fcca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f23d60d-0585-4631-842f-2fd7679311e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0076a7b5-8f20-47b6-9fd4-00ec76e17e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55dd25f9-2101-4b24-8cbc-97990e5f3faa",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c1d0f3-2447-4b9e-9f71-abef31128200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af867eeb-ce38-4e19-a279-6b09d5ac0c11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe0bf99e-ec19-4ffe-a373-ab9a3546e97f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cf88226-692b-421c-bf3e-4af36c470cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce59954-60be-417d-9804-463c998b6a9a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "869a98f6-b3b7-4794-ac19-81991db2c525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cf0202b-db85-46de-afc8-2abb75eaee23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c5aa60-94e2-491a-841e-c6bac916e290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5e9ef3b-e4f7-48fc-a47e-dc7978970661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdabbc8d-18f1-44c2-ad92-e8f48ce8e6ea",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8befde32-e75c-4de3-83c3-bf4b2d374b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52040312-8581-447c-9890-fb664fbb2a7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f8fe47-baf5-4e03-aea1-252141a7d858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "30911b69-a50b-4df0-bee7-e09372d1cbbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1b4d770-44c5-48a6-861d-55b6062936e9",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48842e10-2bb0-466f-bc7a-d1667a42ce10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9f6d4c0-6ad3-4f82-9300-9d5c32950244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f3051f-a80d-42dd-b367-81008245ea9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d45b018-8cc4-4bf4-a719-3c181bc6f802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da3657f0-0284-4f28-96a9-0ca0513bbcc9",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2677e4e1-2e56-496a-b563-766beb723c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3ac4c45-d067-46e0-8535-b70f5b69037a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f9f74fe-ada6-4271-a4d4-b517e86f9dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f12c23c5-2020-4bac-9696-03380548b622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb3d800-9983-4fcf-a72b-5d188924fcc1",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5845e6dc-9a07-451f-8c8c-a71ea2fc1526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b832fa3-982b-4eda-ad04-048d566ca7dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "125e1f25-de9e-455c-b7a7-c5b9ba47cbab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f8fec07-1c93-4de0-9460-1789b21fa0c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69a706c1-92b1-41b2-b218-bd6453b3329d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9544bbd1-8d2b-4dd1-a6d1-d7b3872b394f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fa2f7f1-0f16-4df2-afd7-c812b9055041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35dc7411-2834-4bf6-aaa1-6373c8163846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "076ed733-f2b2-4957-8e40-2d2866f16ae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "485a39ed-114e-46d5-949b-7fb0cc761114",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ae9655-a482-4949-8d34-8adb236ff771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2a28f50-9896-4652-be8a-d84a6c9d6df0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de8bb783-bc82-4c5e-92cb-14fa07b3f52a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f3fe696-ef84-46e9-b78c-c2fd213a5c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b346d88e-a2bd-4440-be3a-28e8c4e6ba14",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b63267d-ecf0-45aa-8357-bc313c96a99d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8e6d089-66af-47af-8370-b3c7f7c5361a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7b53146-6725-41c0-b922-0707367b0233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0090c994-5754-4933-ac86-48d34fb84621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8596ec9-4fdc-45f9-b98a-74f90a48a77b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53d1b90-2e70-40dd-8eb4-9afe1def39a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a891413b-5737-4b84-a56e-db95c48119b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6495a609-fb56-4af1-be57-53d8fbd8b7e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9fa611b-6b42-4220-ae96-35ac0fca3034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d07e07e5-ad73-4c5c-b6fe-cec707a257dd",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5dc8133-04e7-4871-bfe7-5f64f2c531a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfbf2ba2-33fa-4449-b836-0814935f9f43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e79ad2c-06db-4437-ab40-686ee5e4c5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6aad386d-6c84-4aba-8a6f-544415fbabd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62314925-b968-400f-b83f-2355f1f208da",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d70ab1d-a86a-4357-ba95-0776c55aa0b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a900ed10-f799-4d0c-8844-60a000bb9686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4831af53-e720-4df4-a7d5-e2302964d0d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a272b6f7-52a6-4f52-acd1-01cc0ad1b94a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e13334-d52f-4f02-9bc1-d7c69f15263b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b48b1199-b310-4df2-88a2-c8e45e0fec47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "916e98e2-0541-4374-8d9d-51fb3d25850d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7044c0e7-15be-4d5a-9175-cf1c82b82e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b6f10e8-a222-496c-b61f-feb871b7d719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dda0157-c343-45a1-b75e-25e2c92b3c4c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98954270-b7a7-400f-9e8f-a68d61fb1f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d7495cf-847e-48da-bcf6-bec9900aee96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d54b622d-197b-42ff-bb01-348277570643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0191d941-57a9-4477-9ec6-157ea2fcf38a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae9218d2-e8b5-41b1-9d0b-3eb533ed8d69",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84835504-a117-471c-bea6-9a81aeab97c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e110eff0-6279-41b0-b1e1-a327593d4d0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b946cab-6646-44b7-af08-46f43571ce77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c8bfa4f-80ef-42b4-baaa-85617eaad16f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7864369a-66c5-4a5f-8041-2710113829ab",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d70dbc-608a-4532-9e4c-5e5990f08aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c135c7c-e061-4725-b431-bde62764f91a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2eedab6-2a29-4db2-b073-b56c5f9dfee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5850e6b-e1c8-4f92-81bd-fa721a0c957c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc7ca8b6-3f44-4bee-8bfd-cc9f27ed098a",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "722023ce-22b3-41ef-b119-8d1a3c126d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19ca4ddb-d984-4097-8d14-3e4f38db86e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff9a9a66-741a-4a21-9259-bf41502df685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "eba660be-90d7-4cef-9a92-7514aaf8d254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd86d269-fde2-4ff0-b6a1-04a35e811781",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed6767de-fb86-4054-b0dd-27edff76db1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f34ffca-79f6-4dfa-8069-92da73300e97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c3f40b-0ade-4461-805d-e33fade8870f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e5fd828c-faa7-48d1-b907-3deea549a0f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5edb86f8-a4f3-4c56-bb7a-8d56984c0064",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b39859-fafc-424a-a4c4-a29cc1b12515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33acb850-9ed6-430e-83d8-115e4e62ff50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f7c18a-71d0-480b-baba-0bc3f450dcb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb02a18b-e233-4f31-9ea5-935c347c9a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f0c412-c275-4c13-80b9-8ae3736ec8f2",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c805f155-497c-4468-a7f0-93e482bda866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a444a291-3822-4d6e-827c-12649f5ba0e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4020a1c-66fd-4cf9-bd48-0b2ccf4aed0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b5e0b27-d2c0-4a5e-876b-4c5d4337252e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d7f34a-fce1-4f2d-a019-976ebfd9b195",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b059ee5-ddf1-4d83-baf7-82b4e99c18d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71bbc35d-98be-4b7f-9d3f-29b818561d29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f69eaf1-ccf6-43ac-b535-8365f2bd2e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0ff8e47-42e4-49bd-817b-8f07b6507cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2483b50b-aa37-413c-ae93-6f2723b24329",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ae398e-73ad-4267-9d01-e48dbaa3fe99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45f29343-f941-42f7-a28e-334fb8d82edc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8fa5c2-2a95-49f9-80d4-ec018f3fec3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0eab487e-5edf-40cb-a7c1-3c8df637ca4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ceda95-8da0-4631-94d5-d2b4e5405296",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e5c437-6906-40a5-98cb-cd99e0aade6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f35206ff-0212-41a5-b956-64ed94470df9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d0a64a-0dd9-4580-88fd-b1d71b2b2d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8eab248d-b13b-4683-acae-e9f44f499d50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9204bcda-a1cb-4366-8b0d-1b027d47e2cd",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1cb2e51-dbb9-4edf-9c64-4a63ce5df552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c20fee23-52a7-4e8f-8777-48997bb98c65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de12a267-0d85-46be-b441-570a269e3cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "13c7c66b-9c07-4360-b34e-fb65f42138db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "406449d5-8628-42df-88f5-24bfb575572f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d087d8-ea70-4124-9bff-8fe0867e7d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dc508d2-82df-41b8-9b0c-862a999324fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d43fd2-722a-4ea3-af65-990029cccbd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d260525-7889-4040-81b1-126c088dcd27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a5b6d96-9af2-44af-b9a2-1f5e48bdfcfd",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd82f3c5-d996-4ca5-99ac-221992e342f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cab13aee-b52e-493a-9434-8a5dfbb92226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b357311-1919-4184-8b6d-08e4f1eb6361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf7c422b-7ed9-4de2-8d23-69df31041a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50004206-e4ac-4267-85d7-632b57e74795",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2000b3-4695-49eb-aceb-fe119cdff35e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fc22de7-80ec-48db-9552-d2d23def114d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b17ad8-d3cc-4e7a-9c17-1cd7f6cac4a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9577145e-1656-4eb0-8cde-ad8e722cff67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29061838-15ec-4ab5-8434-f41f1d09b20a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd96b1d9-10c5-4c9d-86f6-5622402370fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a0fd5eb-5b4c-4421-98a1-d3fc31ebbd81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bbe7827-0faf-4158-9ca2-8329a888709c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b13e3fbd-5af0-49f0-ac6a-3a60a75964b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa11c660-b50e-4561-ab40-27f09f857d36",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea281efd-8e97-4c90-a110-019f77300e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bec67076-f4fd-4607-8a7f-6e02323b4a48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c01dc436-1c25-4435-b00c-e19f5d12c4b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fb2876f-78fb-4910-942f-41a138c80c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f5b2af0-18be-49a7-b889-119303327ae0",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a719c198-c143-4e66-9eda-38095e146ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ee5536c-82c8-4ee6-a2d4-4e92bc72ff1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "487f6a37-c395-42e0-b589-121c37ddd4e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2019b7e-f6ce-4c35-aaa0-adf4fc957413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d75ee30-36f9-4712-8621-ad231f13e09b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d50eda04-778a-4870-be64-7945faa15b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e703468f-5b63-4f83-99fd-d013b18be70d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adeccc1e-897b-4932-95ac-23df16ada282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe709c7d-d08b-4b8b-af3f-2f2b4a6490c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f181c5a9-547b-45be-bbba-460531fd67ef",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2179a42c-652b-4ae8-b1a8-dc3a17420800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae7ce39d-c244-4cb9-8388-f7718fd81a67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf75893-d50c-4e14-b897-1ef2802ac6cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ef897cb8-c6cc-40c0-9368-44d64a266ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bd57da5-063c-4a93-90d7-6c476a79f043",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "529b8f09-6338-41d5-9cbe-2daa3e64a276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5a2ef51-4d24-46fa-898b-d50465b89fc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "891a8408-5e8e-40c4-bdf8-f957560f7be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b5ec78c-ffbb-46ef-bad1-42aea53fd1ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "740cff68-2764-41c0-81e8-bb0894c44680",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3492c264-9c21-4d3e-908c-6fd16a36aa1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83035ecd-55cc-4c4e-8c90-23d8f03b02b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "168ec8a8-d41a-44f5-a48c-b2387885eb87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a65371e6-466f-43b9-9664-706a3c57a129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22213bfa-935a-4cad-95e3-4192fc90eb4e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef4febb0-95f4-47b6-bdad-f52d3ee30226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cf8ba06-2f42-4007-98eb-259810ac507d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa50fde6-85ac-4e64-a359-7ed3f164b47c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eded35ab-d396-44a1-a9d1-c47c8d5394c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beec58be-c303-46f8-9f06-679f83d1c2ee",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf19200-5e24-4260-9fa9-7de7ec6167a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cbb55da-06a3-45ce-aa2b-d354ed10ecdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "671bcbdc-e8d6-4169-96f0-36fe546f1b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d322a5db-c236-4a32-b7e5-672451bb21fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ded29d4c-648c-4fed-9980-3a59e8decd38",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce28788-95ac-40f4-ab2d-aaed15a46259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e78d1ee-7a6f-48ce-95d7-0931edfaa418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "236dfbee-8600-4b5e-8aba-580815a4b3d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "daf2640f-e137-416b-b042-fbef8b36d017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb0af16-a1d3-4e06-acca-50d68b0666f5",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "333040ac-73b6-4de1-85a2-bc69a0ebec0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "423317f6-0162-4598-bf3a-da7e7d902006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce9ea1b9-ab17-42b8-8527-76353efaae0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "faffb024-d638-4400-84bf-0344590bf363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75a7a0cc-8ae5-41f7-98a6-1070e19e1a68",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c134593a-faf7-4c40-8587-6aaa3706a118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12d4c3db-563f-4a81-bbf2-8be6f0921932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "711bfa11-c596-4e11-8935-c8fb26429166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c93bf511-9861-4bb3-80ed-986c57758752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece183a7-69d8-47c9-82a3-d516bd13cfd1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dab3f79-6abf-4c73-b57b-31d8d24f5256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b40cc83-b208-42d8-946f-632e1bfddfe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f7a03cd-ac36-4297-97d5-f9b05c278bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a5a10ee-58be-44c4-aee8-bbbdea361e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "733dfa8f-90b3-4eb6-b9f6-0f463e320195",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18bf2b05-1507-42c6-8da9-922b80972a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cffabcc-38e1-4b69-8149-1414562cf681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b05a1dd7-f1de-48cf-bfca-66fb318a9b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "afdbf898-58e8-404b-94b7-627708891d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f94a8b18-48a0-46c9-bb09-be2e8f902d13",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d21a2f-9aba-462d-9db3-d7fc8165333e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13eb2125-20b3-4ba0-a2fa-4751d765d6e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a77aa1-e6b9-47b6-85d7-2e53253ed560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "571e4f54-5f80-4600-9ad7-75abe0fd83d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa0b92b-e392-4c11-ba96-3886b43f1899",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b922eac4-cdc2-410a-af90-28188d386b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5422c449-eacc-4551-a3ae-1c7b29e1f342"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41dcb5f9-a899-42f6-8122-e33c84eba93c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ae03b54-5acb-4782-8ee1-72ae9da4a8e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3445a949-bcec-4f1f-9834-9aec59291058",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "512bb64a-bdec-424a-b673-daf6481979f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "400695d0-7f40-4aba-9bb8-1ccac044b30f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5e6e392-92f1-4d52-969c-6a70a4a65dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f4cd3f3-e7ff-45b2-ad7c-c965d766f79f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "986d8750-ff4c-4d1c-bea0-da52833315dd",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b78e0816-eea7-4dae-8c19-00dc46d3af74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "134edbcf-c0b7-4364-ba8d-e2de271ceb19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76d626c-d71a-470b-85cf-b3a755b43648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6560aed5-1800-4cb7-b569-b1462da99081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dea1031-d19c-4c98-8eda-9224ab6912bb",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3faafd9b-ed90-416f-8e5e-bd4c6d6ad183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b18b188e-5c6b-44a4-8260-d003312b5b29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc307ef-bd27-44b8-8c51-d6e0498020b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a124b2f5-2276-47a7-9dfc-7285da7da0b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c1d58c9-2565-46e1-b9ae-8cab0d879005",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79146e9f-e301-4b10-b40b-46535b081bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "536c495c-38f7-4159-93d9-42446478a0dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "428b6833-37bd-4e70-9024-75b5f47016d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0fc0529-f2a9-4be4-a2b3-a9d1620505ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c809f4-0929-4e4d-bb8e-a2a9f2c008dd",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b92321-662f-477b-a79f-7271a5511cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e34ae5da-74c1-44ed-9bf3-ed88dbdf026f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd084b6e-546a-4e7d-a117-d9fec9de8096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1728332-3a20-43d4-a7fd-aab670717975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "744a25a7-34d7-4fd4-b007-f0b66427cb54",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd81991b-685f-49d5-9b5f-b727f84383d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "176b5643-2bd7-48be-bddb-729dfca4b9ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "651244d8-607f-4239-a662-c598a228d7cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "03540ea5-e51e-4890-b384-3e773029260a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a019e0-f310-46e5-8dac-be820062d630",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fdc0ca2-c064-4247-92e6-4a6601aa2400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c8fc03e-57b2-4c81-8e89-572377282c85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b11055-53b7-4446-b1d6-87cbfa7c55e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d08d348a-4b85-4d85-a322-1758053841a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "584e64a8-fced-47ff-a788-950c09d116ef",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c9592c1-caf8-44d1-90ad-4358ece521fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d2a4347-fe6e-4349-8de4-c2bc7334ceba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c91cac9-faec-4b5e-ba63-32b3fd244e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a8fecbd-a966-4d52-83d8-bba0c7463bae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c96a44e-221c-4461-be9d-dc283445f7d5",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fe82cca-90ed-4d36-bd8b-b66055d21bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3765f7a7-4750-4ec6-9510-d20d68e653be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a53749c6-a498-460d-9f58-5d82f0c55ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "94c94f46-ffea-4648-8e2f-244dba40239d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66271c9c-dffa-49cf-8fb4-dc1a83b46209",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58fedbe4-e7fb-44f2-a399-e202571c5682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14f42e09-833a-4e63-b9aa-e0607b8d62db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d198794-3cb3-4c45-9848-f1d4b5669ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "20f3fd49-a015-491a-95e7-1a57991c9c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a6ae54-403a-4034-910f-303b062060cd",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16b056d-365c-4643-a3f4-8a2e57b1dd0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a627f610-02b7-4977-a1be-199407111cd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd3828a-b8ce-4906-ab12-d9d6404352e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc8b76cf-82e8-4181-84a8-1e81fe21a09a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ba86932-054a-4cfd-ab73-7fcbfeab672d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca57faa-995b-4a4a-9ba9-ca474d3d4b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aefe59f8-11ff-4422-a5ab-d4a8f305c941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0354591-3c86-48f4-b563-052278f8858d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "84b4e0d1-120d-4857-8e41-bd0423131bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a6b6b8e-5bc9-4f2b-b2a1-ad7977332b32",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad60014-e5e9-4f8d-b9b3-4525dfae5e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c61c936b-b6e9-4cdd-9e55-6f6d9c3877d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d7eecd1-eaf4-4475-9d63-e840618dc268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1e4473de-0567-4c5f-b620-88b9ba146ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6914ffc2-de01-404d-b902-e94a25b60ae1",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0e63a15-c39d-4959-9ffd-ed8c80425497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1154f40a-3f13-4607-8592-5666d3efd16b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e6b4536-641f-4f13-874e-7f249fbdc92a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "58fb7b27-4df1-48b0-886d-87a8e18ed349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a41204-9082-4bfe-b9af-d8ed6da3004b",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa8d0f3-2253-4158-9558-8ed8f3fd70aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "821cbb2c-7652-4675-8b4b-c713ff447ae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32d9ffdc-4693-4d2a-9600-018233d64ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "843fe387-dfeb-493a-9c9f-a3fe0cb9e403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "211d724a-9b1b-4019-8e1d-3cecc31dcfba",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5943010-8faa-4f09-87cd-b46ec49336c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32df5745-13e1-4616-a760-0c0d6e6b3203"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f959bfc4-4de1-47f5-87b9-d07e9ead2605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "90d0c7e7-d39c-4736-9ae1-5ecccdb7eb41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "850c50d1-ef83-4b33-9fdc-b0acdc7f328e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c84989b8-4907-463e-9380-fda45b33d016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5d16234-e30f-4042-ae3d-b424a4b0ea81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c878414-2392-434c-bb71-03edae848613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fe37ace-5da1-497d-a3f6-f41a3812bb7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae0cc290-585a-4d7f-92de-2481c51e143c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47029e65-3624-40f4-b892-b88f76018a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09e47934-fe4d-4936-9646-321a76c4c3b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1cec1ef-ff77-4430-8cae-6e0ae8053922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "785b8c85-00db-4f76-8830-fe7853f7332a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8cf7cd1-dc33-4900-b808-5dc6ec15ffb3",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a66b688e-0429-408a-9591-40ac97cf8647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cb1236a-8a09-4ca9-9fcb-06728687f412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c8fb490-d8a3-414f-9ba5-60ba1e1ea80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d91cb6e6-a3ca-42ac-929c-2f53c023aa0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3197c90-5a5c-45c3-a211-bd0509e3b17d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32fd7290-6d18-4abb-aa78-dcef8d4ed077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4468818f-9729-44e9-b043-72656a0f1b86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ffba1f-6f35-49b0-b06c-e11ca8f305fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "18ed9bcf-65ce-4021-b929-922e4315f2df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc3ba1f-f18c-4196-819b-0d0c3ed734a5",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c75883-0d4c-47f0-9a66-e18dcc5b05d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e3e8c2f-129b-469b-a2b9-48972a7df17e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24fb3ffe-e48e-4727-9289-47f141a24052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aaed3e8b-6a3e-4e97-9efa-9b7e4a5686f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e72c157-3136-44bb-bacc-64bddcbc7d1e",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1519f87b-b93e-433f-9a02-66ec0396b50c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0346366e-59c2-43e4-91f0-36b91e26bf41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f46b2a-33e3-47f3-b0b9-c098754751d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9790437a-7d4c-4d00-a2c3-c4ee6764ec79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "227c4276-01ac-438c-b7f3-432f89709fee",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a750ad-18d2-4d53-bae4-84f209d7807c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6ebb678-97e6-4c55-a03c-94702842324b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e880765-0380-405e-9425-a0f0c1a7c5e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "29a279d5-2e7a-4495-96c0-d447d0908d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9a5d16-bcc1-4966-b98a-6fcaff19d8df",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07b2f97c-ff8c-44fe-b669-e8b0c8c6ced1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "168e8e69-8606-46c7-80fd-be6cf0885af1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8cb4ef4-88e3-48b2-bae5-ffc65f17d38f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f8be0cb1-d89e-4b2b-84af-bdeadcd1d56d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d17ee0-731a-4028-91fa-8ea728479e2c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c44d83a-3c74-4155-aea9-3759966f1f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6ccd52b-a0ca-4635-a875-55bf4e592536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5b866dc-6582-4c64-a410-4162c569a260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ebcf6aa-e216-4a92-a577-52f3d885133b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69823d66-17a1-4e8f-b0bb-d2136bdab6b6",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc4b019d-407e-43f5-bdea-f51a18fdc199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7309e2c-233e-40f4-907c-8b98bef57c6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6506b7ce-e805-4e66-97f0-e9535a78c793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5201929e-5850-49dc-8af0-3e9fcaa623a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30ea486c-352f-49ca-986f-351ff8d98b53",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f312204-f919-4af8-80a3-025263f4def5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "095eaeb7-af05-4161-8a2b-f5e756dd2cdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8fbffbf-7e82-471e-9d99-62a297f79108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "755b091d-caf3-4593-ba46-1232d0643f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a5c7dc0-2df5-4071-873e-d38d3df88770",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde78775-3d1f-4485-9808-e4683260051f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e087d8d3-6179-480f-8753-9bfe5cb4ee8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "185a5a22-ac67-4791-9db2-b11b3a98c902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "66720d3e-4bba-4900-b763-7e950407c916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1764eff0-15c2-4a5f-857b-a643439c67c5",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e5f626-1b81-4c09-a735-31f7d6c6f063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68ff1f49-5216-46b8-9b44-8addff4383e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38badb10-8add-494d-aca6-e2d538192da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "be2917ce-a154-4005-a4cf-a2f3c6fbeef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dedcdd1-4574-4f33-9004-623db032c4d4",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2cd1858-7e16-421d-adc7-afcece876966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c342de1a-f78e-40ea-ab65-84feb15c172f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f5bc20a-9c0e-4e15-991f-12ff055251ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "119c788b-3491-4b85-bc71-fec3890ac49e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eedbe7f4-caf4-41a7-8e59-e92e3cceb5ad",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "458a57c4-d414-407a-b7d1-bc5ed5b76e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7995ad9c-acbd-49d1-b410-a68100f24bbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb0502b-89ee-442c-ab07-2e0d6cc44583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "163f78de-4604-482f-ab8d-b76609984e5a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bc08b576-b191-462d-90b3-908dbe6e517c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6553552b-e07b-44e1-b3e9-d8e029966828",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da2cb988-fbf3-416b-a647-fee87754a65c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b6feb7c3-6dbf-4621-a66f-1897c102e23e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a390d8ed-e3e4-4e5e-89f3-81dccfc0cbc2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "411164fa-a548-4ed8-b7fd-b50f8132fb7b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e8727a8-45ea-4c00-b312-b8ca3d2dc2b2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "264138b7-4d59-47f5-919e-7eb41720d29f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "42f1fcac-a3cd-433b-ab82-32ffd71dfdb8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c51bf2f2-9dc5-42b3-89f9-f251d89865fd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "54d26a9a-5037-4a0e-96f4-f12aaf2d0177",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c0583a01-1281-4007-a951-c5cba49f9f8c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "22307f4b-6e6b-4370-9d77-561d7c1ffdce",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c2e18a12-6f49-42f2-afd0-ea0add0ac534"
                }
              }
            ]
          },
          {
            "id": "80f5c751-858b-4f95-8f29-9b7cd358cc07",
            "name": "Positive Testing",
            "item": [
              {
                "id": "18d91738-ecf3-4c70-a50f-c7ee5667a4a6",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "e46d511f-4060-4502-bf48-7ec14328f7e8",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef6fe8e-a81b-409d-8391-c417ea727a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c2a0aa24-ef7b-4f3d-b9ef-d3eafaaf5961"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5112c3a0-4b55-46b2-a938-d005a5b44d5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f292cfbb-f944-4c95-ab00-e3f50781bec4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "498c86ae-3a63-4437-8325-df16b2ab273c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bde633f0-dc3d-423e-8589-9566fc0e0390",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6c5854a7-8731-4555-9212-fe7610417600"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "821ff102-41a4-4cb4-9710-6924d9a2b0e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "eed1b7c1-60fb-4b98-887e-0ce9e4cad09c"
                    }
                  }
                ]
              },
              {
                "id": "29c03bf8-2c1d-4779-809f-aacd4b56eca8",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "978fad3a-372b-49f7-83c0-9c6ab0c3c8b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d7d3b2f8-cc8d-45b2-87cf-98457bec9466"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7f69854f-6ebe-4ee3-a2f9-0c941d0e418c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ae2d471f-1020-45b1-a90c-d0c1da102c16"
                    }
                  }
                ]
              },
              {
                "id": "a1439df8-5a12-4816-a3c9-1b03948db49d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1938c25-9e1a-47d1-83f2-2be24e4ccc31",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9d8e1b69-a4a7-4c31-a550-f8c7bd1c5a6e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47fefbf7-559a-4939-ac3e-98a1fbdc8a3c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0323fa03-35b2-4992-a613-62a46e63652b"
                    }
                  }
                ]
              },
              {
                "id": "36463793-682f-4759-b474-512681752f65",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0050873-4d05-4766-a9d8-1a44584d747f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "544deaf0-cae5-4b39-8f0b-b4df17cbff27"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1bbbc0fa-0935-4d3f-82ca-49f2d4fd961e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b4e86dc1-a844-4dc5-916e-f07d42dbd702"
                    }
                  }
                ]
              },
              {
                "id": "475a55b0-4ff1-469c-b6ac-491719501081",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b1a1942-ae25-4fae-82c6-cb487b26989e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f187f8fa-d774-4901-9b2b-c655f23b71ab"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4fc047d5-92cb-4ed1-a14e-23af68dd2a76",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "0886288e-50b7-4812-8186-4dcdd66ad477"
                    }
                  }
                ]
              },
              {
                "id": "b3e077b4-f9c4-4be7-8b4f-e427291d0bfb",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f18901f-3826-4e7e-9d5e-734dc76cacf4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3a715c4a-d5ef-417c-a949-1ac0701f870b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d168570-c91a-4d9f-bea7-cfeb6cef08b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7b8ed6da-76a5-487e-bae3-bca5dd95ee88"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8c5b122b-b55d-43d3-b414-be6e24f2c310",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "900f140d-0ad7-4bcb-a1d0-1a6a67d2d9bc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8a3f6035-137e-41b1-871a-4a68ab178b78",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "61752ccd-a12e-46dc-a6e5-1fb8d3ec14dd"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2389d0ae-847d-4251-9538-464dbb2ec1f7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "11c671be-ee55-46f3-baf3-a6cd44ae9972"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a56a7ea8-a80b-48fc-917f-f80c37badaf1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9385079b-15e2-4c9a-a919-3dc718ca10d6"
            }
          }
        ]
      },
      {
        "id": "7a2dda01-532f-4b2b-90f6-178bd1653830",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "cd3735be-d832-4b7c-9250-26d02c76d175",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ef9e177b-6332-48c6-b49a-8266e544982c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "afc9ab20-dc51-4785-b953-096bf38b17ef",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d72e16-0490-43ce-83a6-26c03992424b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e126d8b-0684-4023-8fad-97667b90fd53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c74b36f-8d84-4b77-ae35-1d34726eb868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed87033f-07ed-4956-af15-df7904e3e761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ebfc482-6eb0-4f1d-b08d-60be130dcf97",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cbffba1-b8b9-4388-8968-0562738ca54c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc342589-e7b1-40a5-9942-75dc953a2db4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13a30cf6-c161-4f4f-a449-42234f9c189e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ea13ce8-f578-40dd-8880-80c40242eaca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b707433f-aaaf-427f-9d1f-5eee4ac5c202",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bbc6cd7-1231-4da0-a6c4-3755d7735383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01e36125-1351-4032-b576-f6a5c1ed73d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd46004-b15b-4a60-8847-2fa70e689707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8132f0a8-a1d5-42e0-8a4f-213e39eeaf63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58aea066-06c9-43a8-8db8-799565e0c92a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2413756-78fb-4472-bf8e-ada36e83e30f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78a9443e-587b-4686-8a02-8296f381d108"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed4cd74-7f65-4d01-90da-8e420b941bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e3fd753-cc5f-4500-8fed-806873fc2e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "756d20e2-0c73-4bd3-be26-9c43c913fdbd",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb40676-9059-4e42-9df7-328bfca59d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "012efa16-cd9c-4c3c-8e1f-336d083ebd49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd1a133c-42cf-4f94-9c6e-fba806e9a38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a848724a-46fb-450e-9e26-4e2c4ef1c805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb77d0b8-80ed-4c20-881c-7f2698ff975b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a7f6ce-82c7-4cf4-a3c9-14f9eef987f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29599cf7-ff16-4214-bb66-37962e396154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8fd3180-b401-4088-9376-5961243864b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "76a87ebc-1c8a-46b1-bc93-139ad0502bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "936d282a-5803-4a4b-b46b-dcfd4fd6bb22",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d7d6dd-ba1f-4c8b-92d4-5bb84d2e2d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cfb6308-407e-4313-bffe-f339cb2e8c44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99327d5d-ac5a-48c3-917f-948968ce3968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b5e4117-4c6c-4df1-96c8-b3cd73a2b148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c428719-3eac-4042-a8e8-f8209b5fdcc1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0905df64-6893-4749-8bfc-3ddc1a6ead21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3589563-a91c-4dc3-8ec4-5242812f9e03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e25625-038f-436f-a1ef-287c3fcac122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "71d0caa8-d7c1-4bd0-b585-602b71e2f270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e341f8fe-d593-40b3-bbaa-0326fce1e905",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da6b1e51-1ac9-4f88-903f-36121b57ef15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62106050-4eae-4b2f-b787-e91109dd1f5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e211c673-daf9-4387-b02e-28cf6cb06036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "24cbdab0-81af-4452-8e38-11131bc3afc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6caa59a-aebf-47ba-b073-ec60c0ebe437",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d1ee1d-e827-4f5a-bbee-486223860557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "117f2786-d908-4cfc-9e04-2c35f7a4db7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b489d540-d20c-4246-be93-411a4ab2a097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6358a3e3-c45c-458d-86d8-a78ce16a313a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a35bf197-0650-4529-a320-8a8e75f16bd1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48406fff-0649-406b-a6a1-9a2434f4f78a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d252bd7-df27-466e-b4a1-f60f9cc44bb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f51cae-1901-4727-b099-98408ac3b398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "14491516-757e-4882-a9f1-dedebb4c75e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68268dea-87a6-48d8-8c15-1c1ff84067bf",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccfaf270-d554-4e07-bc83-d94c6805d642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "763665fa-65ee-4104-ab15-db7346e50ba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fa91156-e96d-4b1f-8383-fdf15900a03b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6cf5b289-1f16-4e24-a32b-240e6192db73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c212b2-2307-402b-a8a8-453edd6af38f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04362544-a81a-4638-a13b-74c593b1d3a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef14c2a1-57c0-4ecc-aa97-1313e611d8fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb8cc37-5136-41c3-9333-e701d432a348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2674daf5-a3f9-42a2-a8c6-f4838bdb563b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "479b128f-3b9a-4da3-8e73-e056e26d3ea0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "996c9d9d-70fc-4e3e-bc73-1137dc7b9194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b3bcac1-5c89-47a1-b184-8c6e339a46bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "337b2d8f-7e08-4743-974f-8882c3bec332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4577dc3-6ec8-4069-b039-5bdc20f2acbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b2f9cf-38ed-4992-b8a1-b7a7bc394418",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26cbc2bc-4f44-45c6-9850-138cebdb4904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb72e9f2-439b-4ff4-a3d3-71f5989f02c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3221a6a3-5ad2-45ef-8a3b-1f9fdbd6dd66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b68e921-34d8-4a9e-abe0-7b020b8f3cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b825a71-c29d-4e65-85b9-2080c78c4cbc",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "612de26f-1fa6-478a-b34f-e72d9c7e75f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9965e758-c32d-46e7-9970-4b8d71ce48ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5480ecf2-0610-4e12-8ce4-f1a84a9752fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "975102c0-1a35-41d4-912c-6d0c6f1a6288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80a068f6-c01d-41f6-9ff9-c024b56c2a62",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47692231-958f-4cad-a3b8-6585a2f496fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c46e6df2-fbb2-464c-beb6-bc43e5d9035d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00daab2c-b15c-4d91-b44b-4646fcc7a84f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "939624fa-ad6e-437a-8361-67091b27f0f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caeb8da2-f0d0-4f8b-8969-379c8569469b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f31af42-648b-42a8-81a1-1eb50c592ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08a004ad-7a1f-43cd-959b-6aa12f0b3a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6022c99d-b720-4ae4-9cc0-0dd9220150fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "81870ade-d9b5-417a-b9a0-ef010b586254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f88f299-79a8-4cb2-a342-7eaeffe16263",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6658b1-aacb-4425-b5c6-7ad238d8c5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d65f2ffd-f645-4339-b86c-1f60f8528fb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ff71779-b0a0-4c66-8bd9-d43b3edbaea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "366efd6f-ffcd-42ef-8998-835b5f93a979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b05e539-0537-4e7a-97d0-c58a98836979",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d9823e9-5943-4779-ae2b-84d57127b280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "474bbc6c-4201-4c4e-9fa6-20e8fa65bb21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4adb265-1f61-4cd7-8bdc-d49a0ebdbb95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9afced40-bc5f-4343-a36d-eba7cbdf62d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d913797-feb5-4618-a803-1f23eb7e6e15",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aadcd81-7e58-4cd3-a8ef-1d794f7c7dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aba4e23-9355-4412-933f-fb2e32449658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40384bd3-1e61-4cd7-bc6a-b229faffe05a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9e3252a-181a-4b84-993d-b9796a02ec08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c5fe85-1309-478a-b9b5-e4df79638ad1",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cfd64a8-7088-4f5d-a78a-1199852a84e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7508ab64-ab87-45cb-9864-a778eb10b2b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1015c7d1-eecc-4ff4-ab08-113649a64d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48531ef4-dfb7-4c97-aed3-b54227849906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb25136-1ed0-43b5-880a-f30b5bac0ce4",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15772633-fefb-46af-9fab-4bc44ef295dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa8d874d-fabf-4b96-9e21-1b762ae90b3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bff5235-38da-4c15-8748-e3f9e2cd243b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "635b7d53-17a5-491d-87b3-602e42186db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e781d0-c73d-4e24-8d8e-9d1f71656197",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d640ad9d-10f9-49e1-bfde-801676ef67a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da7c0135-21c9-4800-995e-83333a29ec12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52618036-986d-447f-9051-1755ee535143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0620d98f-58e5-433b-8cbe-09ff686fe591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e91c1e91-7e5d-48c0-b867-608bedfef41a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84d03095-48ce-46f9-a7f1-391f65521f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14d44b6b-0f96-4de4-bf0a-2668081ab5f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a07e5a85-fed2-49d8-9799-5989a3de768b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e84e1e83-dbe1-46ed-98e7-26cc225cd930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7caaebf8-0437-4b81-b87b-19c6cd530b2e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac49c12-1554-4cfd-a059-20973f5d681f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edcdd24d-cb82-4d51-a94c-1e76c7729454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d7a5dde-047c-4b7b-8358-9d836769c5a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6387af0-604c-42d5-9135-f2982f407702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca045f2f-0936-45f9-8519-826c8b4fd80e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4881018-c842-4f17-a11f-df67c26fac9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5461e4b-a6e8-4b78-b0a2-b45ff210b2d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9064f6c-94ac-47a6-81b0-e323fcd1aa02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c246ca5-43d8-4829-b961-f010ddcd9382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "931d8b19-fa73-4489-9371-950126fe6912",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6440c9f6-f934-4200-b9f9-604fab63be12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d0bb7fe-41d6-469f-8c25-564f8af88eda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec28a170-87ab-4ec7-9e70-dbf65512e468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10ad9784-0642-477c-820f-247d4c58dcd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d114644-f4cd-4192-bf88-cf5763fb6458",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a010466f-2513-4969-8279-1a2ce94ffdc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fab0a079-d1a7-4dfe-87d2-bdfd4b218903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61cbd822-62ec-4a07-83f6-313d7cec0108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91335a5b-64a5-47bd-9433-3d89827f9a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd8f8cbf-679a-4258-b357-149e48b4b1ed",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25838680-e1ca-4b41-8ffc-4e4e16fec2a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a77c8e18-19c9-4992-83e6-891bb7bb326c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6128f35-d0c8-44be-a48f-edb49fd8e915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cdedcd4-a4c3-4e57-8f92-5f1c6233353a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c548559f-2918-4b80-824d-0ae2ff2cdbb9",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40043c2f-b964-440c-8b8b-1f861ec9eaa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41db0b13-be93-40f9-aa71-9c8797414945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff43b63d-7c5f-4e2c-ab2a-330c6d102bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b96f7d8c-dad0-44e1-ae1e-9918d74563d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b355de1c-f57c-4925-8a70-913d2efb1ca9",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c2c593-012d-405d-8e5b-f25f6ab3c166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3131982-d93a-499f-97b3-d840e7dc21fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c30188e8-fdaf-404c-a54b-690212266770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74d4fae1-4a1a-4f96-83f2-fdd53961d0b8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "420f042c-5b93-4cde-a3fe-c515acd17def",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c41e1618-a507-4614-9641-863b8addbd8d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c919e7-2f47-45d9-80ee-56bc32a16cc5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ec798643-7350-4011-afe4-d588fd140d5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b4e1f0-7347-456c-8ef5-1d8e5b2a0e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc763d02-5423-40d2-bdb7-6952b2f75af0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "547d8571-f0a3-403a-958e-b30ac28ecf54",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d933061f-1966-49b5-ad40-bc55895bb7f6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f2454b9-8d24-4f79-97c3-0157aae1129f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec038cb4-c042-4f02-b65f-de62845cb5e4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cafe36a1-a500-4735-aebd-29663f82635e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e1ff3d37-699a-424b-b207-3d3ea045d24f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d85c3db6-6057-4b01-aa80-5bdd2741a2b7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "08f7b774-5bf0-4730-9064-171124a8a099"
            }
          }
        ]
      },
      {
        "id": "4b250ad2-6e0b-4034-8f41-d487b1194257",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "9b2bde1d-0ff4-43c6-be42-ad5d5b8cf573",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5927cd73-cd76-477d-b586-e1874def1656",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "445ac336-91b3-4981-9463-8ef71607df2a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "197c3138-7fd9-46f6-8455-c26b1c63ae01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8a9b919-8bef-440e-8f80-2bd47d8ccdac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e83a604-2100-4081-8a37-99664d7aff4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9026d6ae-09e4-4b57-aa29-fb7e21d49c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5024b293-0066-437f-940e-7b0dd26cefd3",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97aa6343-b09e-4d8c-9008-e88c4714303d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c8e051b-2507-40a4-b205-6f683c87e155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db5ccdc8-7a5c-4394-ade3-eed3e3d01e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9c309de-2f13-442e-889f-ce46ee33b05d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c7cee3-7440-46db-a221-92748e317f87",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15df4d77-7d8a-4ba5-9499-6fb034371a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ed18e12-00cd-48d6-8b88-b998799816ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e74db9-3da0-4052-964f-38b3e0e47977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea166239-f7ae-4858-a015-d445acd44e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef266973-8ce2-45d5-bf51-c51d88207746",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed1f44d4-d48c-4786-91fe-b71a3063ffbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0de13c93-8a88-4815-ae53-c4c1e18a67f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f4813fd-690d-4242-8d96-7ccde59d5a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "848d4918-9a50-4a4e-9631-7ab6130f39f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a70fadd4-fdd5-4f3b-b051-0545e8bf44cd",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1668c96-8a1c-4a24-962f-7c086238cda7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc7c0087-781b-48c9-ab03-71c6cd2721e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd0b69b8-d23f-41aa-85e1-3828713493d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a63029bd-425b-49b6-8686-52f9f3c1057a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a547727a-3408-473d-9fde-633ac1119363",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d86e8d55-3bdd-484e-abd7-5594804aece5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20b1c972-290c-4d71-b9ae-00079bb751c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1263e66-b3ef-4483-9374-c5d13b9c81ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f38debe-7493-4bce-bc98-01423a83e124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c25d3e74-787f-4056-afeb-cc8ff191c6a3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4851fa32-4d20-4cae-89a0-53896d7dd493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c060a6d-616b-44d6-a139-719bd0b5755f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ffd47a-d97c-4809-82df-c21ff3875238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b7c7270-5140-4ed3-a893-554839521ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f01c4ede-c5fc-4b86-be3c-79c6fd4b216f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a013269-835e-46e2-8718-5a714df60091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ad43e65-db5b-4819-94f9-93d9bacfd71f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "806b14e2-f9c1-47f6-acff-1d644b71b499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a55a2c6-75ca-47cf-89e6-0e4437af375b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb7d9354-e862-4e7c-8f14-716f2d5aa878",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5991c1cf-1931-423d-ac6c-4defae605ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d579d3a-fc18-43cb-bd06-69afcebbb73a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62dd36b4-1aa2-42f4-b9ff-7b5909329b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "39ebda61-bce0-473b-ab03-84b96f75b787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5870697-bad1-4895-924d-fcb79c17734b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ec43b5-e345-40c8-8669-1a3f1a35bbed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af6ce4ce-7eec-452b-a504-bb6c49b7f707"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7912168d-1cd0-4e4e-8939-718c77908300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3efc15ba-ffc1-4be0-b39a-a3f146b23d26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d68416c-07f3-4882-adf3-7d628495d1b8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e784e4-eba9-4e04-8d61-c6bbbb7900b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "305c698d-7db9-47db-b910-11957ac7790b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2e6291f-1320-44fd-9be8-c4a5458d6b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a4ed30b7-c735-4f2f-af9b-86e9a99355e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a2f7a1-cc4c-466b-ab97-42112f869cf5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f132122-9e6e-4e92-8287-ae8ef4f6883f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65aee5c7-c888-4c7b-9ee2-1f75a90cd06b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ce8703-1182-4c20-98f4-72640f444bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d825cc59-03c7-456d-ad18-2b0a54fc01a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34c5d093-82e6-49b2-ac7b-20f038fb2af0",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ccec1ec-4d4d-4277-8fe6-d561b198a2bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "decced03-3c51-4fe8-ac11-41618c6246c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ff60b5-4029-46b0-b867-39bede91d57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2304de64-5c73-4ae5-b4e0-91a644270391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f76415-8cb2-4ebf-8505-b2eb09ab785e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1451ee8-2a51-49cf-be97-4d4fc3a8b331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2f0cc8c-b2aa-4ae2-8b60-380b71864d17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b7a0d5-ae97-417b-912a-d0eb1d8148ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "194f373a-eb1f-4b6b-9e0a-6399c7ee10c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c490aa2c-1512-4ed3-ad31-f0291b3e852a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd616495-afa4-48cf-b90a-28fd38b38e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b221c772-d94f-4be6-a4b2-4c0ad9304e0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63bf6d5e-6e11-4345-a54f-caca2042826b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4367263-e919-464a-b549-751044eaf5b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41922481-0a1f-4c1e-ae6c-d0d7d3b158d9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31c7eba5-789e-4cdd-ac62-a4ffcedf0dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f791ee47-cb3e-48cb-8e56-97c5de1b143f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc2a4f5f-2169-486e-9f78-d22ce6377e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9117e4f-bca3-4794-919c-93a8852511e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2406197e-b2cb-40f8-a77f-051e78cfa4bb",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f75bc7cb-b368-49f7-80e6-2c1cffb10b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aa45e46-e951-4018-abd4-8c37832e40db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c652dec9-cb6d-4fea-b7f6-9833cc5c2307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d469bab-e4e6-4b71-840d-bc435d479726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2899127-e70d-4b6b-840a-ca69379c5364",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77512627-1f92-4a31-a2a3-53bb6ba04ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03e4d28c-7a6b-4edf-b9f4-706114d5018c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f6dd11-7e1d-443d-9766-66f321a67f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4ec7d89-5f2e-47f6-8cfd-b7bb87dc71c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3145746f-777c-4909-aa44-e5c550a777bb",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e08e9ce3-0b2c-4d32-b542-1931607b202e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84de1333-e541-4ad7-81c0-e6c4d30ae3b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e88b1903-1881-40a6-a871-8e12c0c37eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e7adf22-58bd-4e1f-a4a2-588a77118bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ff5717-8260-40c3-a30f-ed4ace041550",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c830658-9e45-48db-970c-784f0f0b05cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cebf99a-6c1a-4b35-837f-1db50311c363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a95a9a38-e328-4111-b044-a5c070ce53c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07a91054-fe6a-435b-8882-7d63330d78ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce4c0d33-f7fc-480a-a635-dbb1ca0000b7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5350b75f-3da9-4abe-a330-1f574dfe38cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "866c3302-f450-4ee5-9ec6-b02060373ffd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "547879ff-a7ea-4112-b156-6f5e129bd563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef17ee39-f77c-42bb-a044-e07b9d963c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1eac422-e374-4a4b-92e2-7071b3d1515b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad52b971-bb09-4094-b4ea-92603a974050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f42f21f-4130-4958-b2c3-9dc638eab52b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfad5f26-0387-41f9-95ff-e67a23ddcb7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "636e7162-c7c3-439b-a2a5-2f7228c6d6a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdadffa7-8e11-45ba-a601-ef807599ac03",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7678a3dd-3774-43f1-ac2c-9892111e3ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f245fed-3fe3-4535-b8ea-469d46a5a041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf341abb-caf1-4733-bc14-dff7f509709f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5fd40bb-f5bf-410f-a99d-b525e45e6e55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49e40dbf-d51d-49c1-b4b3-7f69a4aa5387",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bfb443c-b474-4799-b3f7-740c1c8c3dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddef6863-3d05-4ddb-ab7f-b8466348ff01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84855074-5c77-4426-b23b-f42ddabc3de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df405ace-ff92-44ab-a0a2-82459f716ab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c28500c6-ae95-4200-ba42-9f687935090f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9257b6b-8d83-4dff-a0a0-dcd91ba84756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ed64d22-c37c-4cca-b4ae-fb5818aa68db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f9ffcf-31db-4e91-8071-05b5c1b12c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6904ac06-6c47-47d2-ba99-f1d37cf75991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc5033f7-b4f0-40b4-a537-d3d5dd9eee9b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd78451d-299c-4ce3-a215-b41b087a89cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7afd592-f687-4c49-9ac6-9355065a4da6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3665019-60b7-4dd2-8182-911b48d76131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "453d78b7-9159-4c0b-8770-f33bfabaeb95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac2c7a1a-eb1c-4ea0-b2b2-de4a1690e66b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbef592a-06ae-4005-b33a-00deaaa521ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abe5cb3f-53b6-4d10-ab2a-d476c9821d57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "010c2fb7-5c9d-4a47-9523-150044f96246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bce357e-a749-4b6e-9195-9f047ad52ba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "021d1c2b-70db-446a-9163-e49ae43e0054",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e278f46f-c69a-4a38-bb89-26ef39742c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f558841-8f6c-46a1-b99d-68a0268a3301"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca33acc-3af2-4443-82e4-ce2da0d06f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b058ecb-9b33-400d-b2e2-0728f021572a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ddff64-c01f-405f-a6e3-46db1f9dfdc0",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae09ef29-e921-4b6e-a902-ea9ff186606a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af46ddb9-aca8-4055-a3ac-c1a981f16602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391ce7d5-1b3b-43f2-9404-89fbcf4ca9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86226ceb-e5b5-494b-a2c0-22024c8f358e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce1b66f0-9928-431c-8935-de935f3d0235",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "150c9ef8-cc68-413d-8a60-ab6955aa216f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac3b5575-ac31-40a6-b16b-9aef05ee5475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94491741-0332-4ba5-bf35-6dd7e982014b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e511e9c0-fc08-4783-b75c-9d6da392d5f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d67aba0-7d4f-4dca-b929-e973e11a82b8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed5b6a6e-0ba1-498b-8cf9-a4f5549e06dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b73af9f9-d18d-485c-9e83-104740149a9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1a2ac5-5ab3-44bb-8ce4-5f6a9ef135e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "147cfc1b-611d-4af6-965b-da5b35cb6fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd4cf295-6404-4b9b-9768-5c33036bb21f",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98756e16-99b0-48c1-ba53-a847f4f410f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c698ab2-288a-4644-8fc3-d15365564029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69425c4c-df70-4634-81ee-071de5786857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddd96abb-17ad-47ac-8ae4-043773d24545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e098d36-c126-45c8-9751-452d479e37b0",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67cbeb28-1542-47b3-8d0c-44055526b58c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd544d46-b257-43e4-a4e6-a4483489568d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c771e9-0556-4e6f-be74-652b675ec5a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97045e7a-03fa-4586-a406-ab85105e31b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c94bb93c-6279-458e-93c7-8810f7465b8d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c9a7eb2-67ea-4fa0-a934-80e00ca89aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cf95e99-22e6-4e16-807d-db1390af1e65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a61cb395-8926-418d-ba3f-c01562d20e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbd07d39-ac3d-431f-95d2-0489047b5c0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ef0c0f-6e15-4018-86f2-00aaf26d4065",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d0cb150-4b1e-4530-b2df-567fbe0656b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "005ce5b2-37b7-4b98-afd1-cea712ebf77c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b48e18-97a9-4390-bc44-047d77fbec21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76b4a719-f3ed-4248-919b-05bc134f8ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8478429-29e5-40be-80cf-5ff2b220c7a7",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55550a6-39f0-4bd2-804d-6814e67885eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a558ef5c-a6f5-4830-bf7b-5ea538d9f5c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "144d3957-72b9-4b75-9a9b-386926337b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d695449-a831-4fe1-8ea2-21dfe12c8c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "639199b1-5a12-495a-9f44-6944b1a049b9",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3773ea1-a739-4065-86fe-d67d1a728e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b220a68-245a-4634-8f45-cf6795cf3fc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c4a4a29-dbf9-4218-bc7a-06c0f0c524fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29bcc969-d78c-48ff-b0c4-605be8deb1fc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7a54c985-3389-402a-9077-aa0db1a09f0a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4a592681-0022-4ff9-8043-983c6eb747ee",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd48ce56-b470-4236-b01f-b677c97be798",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "015e31be-f303-4b9a-9866-ce2afca461e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b149450b-4e92-4c39-8c65-f07d1fd7f715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d04a4bce-1777-4b84-a1ee-fd5c6c0ca753"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "daff971d-b60f-43db-99b3-c2c885afca86",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "911780da-27c3-4966-990f-f9d01e9185e9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "786dabf4-15a9-465f-b1fc-eaa43d44b5bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "547de471-046c-4d7c-8ff7-82afbf3d38c8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "53b7b98c-eda7-44d5-b063-cb23b8474caa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7c828fc8-6702-4caf-8344-5789e87aa74a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ccd5ab6e-0d8d-451a-9c95-a525c4fcaefc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c04554d0-45f7-45c6-ac93-fc15554ef523"
            }
          }
        ]
      },
      {
        "id": "d35da694-ef38-478b-8642-74112444372d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d6208688-35d3-43fc-9920-e6857ae337b1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ff196743-b5d6-4e8a-a876-b0e40e91037a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "db41e3e2-371d-4e6e-b1af-3f7c5e707d66",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f2cb10-e415-4ec4-b043-994296cd7a0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a14bab88-7541-486a-a0a6-d5db380173d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "721cf307-be92-493a-8dbb-61dced6d37ce",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "452d8cba-9d36-4566-aa55-77a5102a9360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "635437d6-aff3-4e7e-bbe3-5411989f3eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da6f0cd-7bea-4ca7-954c-b0f46ff6c8f7",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f719ee4-4298-4fb7-8f32-61c24603ce91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54763231-7d2d-4010-b773-f6f0ea91d6bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98bbe048-1d9a-453d-b553-1fe62f90cbe8",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0977e6c6-2226-489b-90ff-9a767ab47a79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7e354f1-a83d-4e53-bc49-67947b66f7d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b070c4a3-6410-4065-a18f-fb722f59c469",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28baab13-066d-4d6d-a3de-0e2b4c7a8166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56f0429e-797d-4d8f-8169-b79955e9a351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b3bd07-2524-4fee-8a8e-0a0256f45005",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c3554f-370b-40c8-b48b-866e143bf3aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df1f5e67-091f-4d8d-a3f5-4ce3aa990f44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b8c2fc1-8f59-4067-b080-92cb0c072a45",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a8cbba1-5c89-4aa1-84a5-a8f226d20981",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd44f479-c9bf-4fd9-9974-36ff4fb2d671"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d93a201c-8bc4-4c33-9294-e3782b7263fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd345cb1-9436-485e-af2a-ec61171ee841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24c7d260-e69b-48ba-afc6-9ca37d1607f3",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "034865c7-2d67-4c6d-926c-e68b9792f7b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e657a71-aec9-4b4b-a46c-7bdec85131c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7520efa-4a88-4cf7-bb90-a5f9820ba383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5849400a-a30e-435c-81e7-91cb389998d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2fd1cf-d1ec-4d0c-b6cb-dee96440958d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d1ec75e-6892-4e6d-a255-df42c621c078",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7c1906c-f266-4a0f-863d-b98a5ce19c47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46eb9b18-732f-4621-83ab-facd5f303ef6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f48ce79-282c-4b93-899f-92b01ee61cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77083b01-5b30-4601-9dab-36862d50f3ff",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "455dd014-4080-4e1c-bb3d-0dce1656bead",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70684cc2-ec66-4c87-a117-36ca79787b29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e05a04d-1815-4699-a2b4-86ecb43c914d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1436c688-e8b3-461b-b165-fdd699338bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41535056-3a61-4b63-ae92-67f09d8274a6",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a079ac-5532-406a-9197-64d9d4724504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce6876e3-1749-44b9-a658-ed5c8c96f597"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9731b3-d8d8-4e0e-8c69-d97b07de950e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c45a731-76f7-4141-9e68-881e7c92fb3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4154e445-5083-4de2-8e1a-ae926fffc953",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae9a8f24-c892-4b9f-84c0-4d020d8fc278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73806e48-ae06-4053-9871-2e87e57697a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba424f7-83ba-468d-8673-03615cdf0eca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c494163-c0b5-452f-8516-d0f95a40eb31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f032d962-748d-4d18-ad40-bd057901d687",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a1b16e-c938-4672-be2e-cfa6ac5cda86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58cdf710-111d-4a7d-9307-fa830cd5c734"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b86162-8f53-49ca-ad0d-9b4132f43ad6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a29f7daf-8bcd-40e3-a810-bfa7a9aea4f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "756005fc-9dd5-4b3e-adb8-06d4d654db97",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f34487e-b9d1-4bf1-989a-0cdafbdf34d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0082f79b-3ad9-40a4-9252-133299e8c90d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e862d8c7-c697-4430-ad0a-9bf5d193c0ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94007dd5-2624-42f8-b7dd-e16c5a835ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d49aa4e0-6c93-4cfc-bf4e-a3f82ec1c0d2",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "268532bc-f309-4f64-b7d3-e6ac6bbeb91a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7136561f-0f01-455d-9212-0bab64da65ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "925e36ea-7805-442c-80eb-5552756c81ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3577febe-40c8-4ef6-962c-3161657bddd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e442b6-2eb7-4536-8ae9-a59f176bdd9c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a8acee-3272-4d6e-8058-42d349edfd3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51f8e164-ab70-44b0-954b-3a1c26a5c073"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b997b1-348d-49d2-b57b-b602c6905e2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29fa2f0c-2357-4580-83a9-d5c007bded70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac65983e-141d-4054-9907-055033f63437",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "378273a6-722c-445e-81e9-3393af46630a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67f4f3ab-d54a-4ac3-9b60-690533868164"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b2e707d-4f19-40fd-880e-aa51af82d4ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fe01375-7e90-4f81-902c-26c9f6701607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a24dc6c2-885c-4959-8c2f-466fd4bd28d9",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71853860-5e71-4bdc-adfd-01926599b754",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "409bc409-b6a4-42f3-b0ed-ed29135b0701"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d91a36-2d49-4d8c-b53f-1523635c4655",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9944ab73-d607-4d2c-b68f-2649e6834516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f37d2d6c-ed2a-4112-a6b6-9a84e0bae2a1",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c58fa0-6619-4e8f-a6d7-3d9af589112d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff2d7314-2169-4197-9ec4-01f530a7dc8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1edb145-bfb4-4db3-b6e2-8acf647ef584",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af12d227-90bc-4f87-bf94-abc03c9c3ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab0e45c8-79cc-4988-a663-c03dae8de308",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b5eb256-d2c1-4b56-986d-651b8057e490",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3c474a5-eeea-4a0e-bd9b-c2a89be7dfe9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff81804a-a87e-4712-88eb-604bd52316a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49f89618-7165-48f9-9e7e-835cf13f528a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4581eb5d-d786-430e-9e81-23ae7d49e6a9",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ed453d-4659-4531-ac7b-b4ec2708578b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a6713e9-3419-4974-9c1f-5cb6681fec75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d96f6251-a1b6-4d37-8719-40ee904ddbc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c6ee862-8bf9-4da6-a2ac-e51bb9298997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bed56e2c-fedd-46b7-9891-f925ee4467c6",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63274bfd-a50c-4b02-98fd-2fb33f1826ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ead7e352-0788-4099-91ca-3b0b6aa41f75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a477dbb0-9eaf-47aa-8614-7a8c856ca640",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f11ce98b-cbcb-47e2-8e26-5b073fed517f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe068f1-bb04-4fb8-9006-1b3657e42b2a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef3d66f-8c8d-4d3b-b6d3-726b1d95953a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9932d13e-5afe-40a6-a688-ac824ed46a91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a382953-0248-41c0-9ff7-8a3b5c5779e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ba1b379-2544-438f-b82a-d6581ed0d6ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78025b90-a10a-436f-b03b-8c3d190424d8",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbaac851-2819-492e-9b4a-c7e3bb213114",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d492c6a-05d8-48ba-b33b-4d5207b80aed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc04079e-9e6d-47ba-9c0f-c74c3a3ae8c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de9d9df6-69b9-4aa0-8da8-aab3764da291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d03dbf-d27d-4337-b6ef-bc6517c82c00",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f94c2ce2-e16d-4189-9e96-dd5675a21eb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f9a1b30-bfa7-4bf7-874d-9bef4ff12134"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d087aca1-59d6-433b-b769-4687a5a744cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ab53c10-a516-4a67-b3a6-8b373848eeb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b31da1d-c04a-4da1-a742-ab96bb20e004",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "755f8687-1599-4d2b-9737-402ff0e0074d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dc1201d-1c77-40f0-97f8-710f5732915e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e0a904-2f71-4f54-95d6-c446d40f906d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e2860e4-295f-4955-b39b-bdddbc9cf6e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "240c9719-65a3-4264-9c85-3af6e1103b97",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "effc344d-d2e4-4cce-a8b5-9db39b9cf440",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68814b1d-7726-4ff8-b95d-e803a04b5072"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a9ce68a-a2d9-4aca-ae36-8faef6fb42aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10c8f769-566f-4e0f-9443-a6107ac50df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "685ef100-499a-41be-b063-ec828df97e60",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ecd3e97-3b3f-4e68-98b3-9f7a95bdcff3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c30a1114-f7ca-4916-ab01-762d5673512d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "557f8c52-a497-48fd-8d18-5b7b901904a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3a80057-103c-46c7-a68f-8e854a67ce2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d6edbd0-0019-446c-8516-ac3c663b560f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "957efce5-e81d-48aa-afaa-03402ac8532b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8a52f64-2ee4-4f3d-94e8-3b3977136887"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "531b9613-9248-468b-a35b-e8abfd9d46e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e48c26a5-d0b8-4018-ab6e-7eec75e802df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa35adc4-32c4-4326-bc76-fcd1812e5d2e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1713166-e8b6-48a6-9317-83e37cc90163",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fd0a3a8-16b1-4fa2-97de-aefd3b1ff16f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e981a3d-f88a-40e2-a90d-808dcdec0ab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e76ee6ac-5c05-47d0-9cc5-1bd4e3e566f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a19dde-a901-41f2-95fa-c2aa6b2962ad",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a83a6d3-58a1-4ceb-a685-c02fe2b5523f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b122115-b4c9-4165-8776-7816d97d38e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "192eb3df-d5fa-40c0-a9b4-3f7d114308b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccb63081-17a4-4537-8e04-da1441dd3708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b910d345-3e7f-4cf5-b323-cd6033a71258",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f9d336b-503f-4a04-83d9-66d4c2ee44f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8453d1fe-f22b-4762-bec3-d4ff16fea446"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a48dcc-ea03-4106-9a87-02d6ef7d1378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd4592ab-1284-4d19-bda5-3bb937b41f9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eda1ab9-44d4-41ba-8fbe-510c81d567c9",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8ba0b9-4f8e-41de-b392-80febc5ba06f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71a6a556-9c34-40fa-8308-662ab02785d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51842e1c-e7c9-4387-b35d-2a12f3e86710",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a37ee409-272a-4431-be12-ce5abdee056c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcef9824-19ba-475b-adf5-8f2b09c2c6cc",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "965d7249-c6bd-489f-92f0-36a38b2cad57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "daedc29b-2512-49d1-a13e-321a5841c8a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "310bbde5-ff21-4b81-994c-1ef6102da833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21a35da1-83bd-4dd4-beb2-b3376568ea87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a6b8493-1cbf-496c-b57b-3ea504007bcf",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af614d15-1269-4234-a882-1b29a473020c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a69d49d-5ca9-4584-b32d-2fd8246a68ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d81358-820c-4f55-ab3a-433d391439f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df1b9397-ac9f-4e74-9b1c-b10e087a474b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ac0d67d-33f3-4319-bd1d-f96a55154537",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d19028-9a8f-4855-a52a-b1611da6f131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "481b2eba-1cc1-4041-9b20-6ec6ae1d745b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "020a8e73-19da-4567-ba64-ac1de04beeda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f590f09-9c7a-484a-b251-02e4b1b5092e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89f332d9-056b-45bb-9a81-38948213d808",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40607787-e3a4-48e9-a409-1e7ada64d058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "706fc27c-d469-4189-8613-8b8a54ff2c8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f580ee80-f093-4bd1-91c2-a63ab2844e25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a84468e-795d-4667-8b88-039a85196b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da4e6b07-f3f9-43a4-bc7e-09cc57dd7318",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab05753-ba9b-4561-b226-675caae06d42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c7467d0-023c-46f5-9f90-d21c89d65cd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "482b99d1-5e68-432e-96bc-194c1c394a07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b59843a-8ba2-42fc-95e1-0132e605da5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec28bbbf-9f62-4d96-9b72-defdbc556ece",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9135e2e-3874-41cd-9658-6c252f9ecc6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3694b4fd-0f4e-4b89-bf8b-3a8e573d04c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecdff597-9727-4fb2-9502-64bdc23d2937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dc58787-8607-4cb1-964c-0ac9141c527d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9921a617-b1eb-4d90-9177-d68dc4ae2d97",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec1f737-f0c2-42a9-b80b-5e7803e444a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dbcfb5b-fded-4b88-8794-0dfdc019301f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb0a1687-3b31-48bb-ac17-d77f885a68b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e410aa05-33a5-471c-b87a-0829157eb883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede7e600-0942-4e87-a124-e6338b98a9b3",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05092ba4-92f1-47f7-9488-68c1d8b2b8ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f724accd-9653-47d6-9f51-cf8c5f5d2b6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4159ccd4-11c7-43e7-8df3-d32fac2c71f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d5827c2-9a12-4748-9d74-08123795c990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d61588-ae8b-4113-9447-d7cd91e8520c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "740e6726-baf2-46bf-a930-34d025eb1129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "847747f7-455b-4dc4-aae5-bca71fa29cf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "315718b2-31e5-49e6-b2b3-c890785b3ec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d71d211b-f525-4584-aadd-fd7bea664c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "818ceaa9-b472-4f1e-b6e0-45b80bbaac56",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e6c40b-43e5-45a5-9a48-b3e24e1902f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ecbd554-ce26-489b-aebe-c5fe55e5d4c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cbbde2e-a3b8-42aa-8dd6-a057590370fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ba1af09-a8a3-4c6b-896d-1204dcd28cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f202eb82-8f63-4031-973e-c8252bc9790e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c77a356a-ccd3-49c4-883e-bbebc9563c28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61dbc100-d070-4db1-be89-5ec1e333a0a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc65e3ce-43ff-4037-9c2b-b05067190c62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "226d8338-7be1-439c-b31e-f8e3b96312d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492816c7-f2ed-4fb3-ab18-6ef2becb2a4a",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee2cb26-088e-4a55-b30e-a20dbe6eb54e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37a0f0ef-72f2-48d6-9613-370866af3c72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "233682df-021c-4fd9-8187-f268ad49934f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02dff930-948c-4467-aa3c-b06061a4e5f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcac74f3-8a15-4475-b90e-c19daa0a3f8a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7442d1e-c159-462a-ac7b-6eaa371809d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "560eb597-11d3-42ef-ba44-c070f4ae4c1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9d974a-052c-4220-84b0-3daf8dcb28cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc8c9698-e522-470b-afa0-1c515f0c377b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a457a967-7485-4ddf-b9d7-35312f70e04c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10df2372-4c38-411b-923c-51852ad3665a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b36840e-4d50-4bbf-93e7-8bbd93a1fa20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb276f1a-33f4-4e76-bf0b-8c863f570d4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dacd9b1-3faf-46ac-a04c-a4d32c7ed5ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "625ba003-b191-40ab-85e8-fe6943f40782",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "397f8453-449f-40b3-88de-3301b85b7d58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0111da40-7205-4e54-913d-495144714134"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b769aef1-e504-4107-9a2b-364107752fb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c69fb20-8868-45f9-af12-aed9f7beb34d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59beb7dd-5857-4dcc-a012-91aa21272127",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f1412f-3674-4829-b8d0-e2b732b962a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b3ee46a-b2b7-40e6-96f0-950575d8c10f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35333d13-13aa-48cf-a6a0-2df790858681",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eab14c8-68a6-4155-9731-3db50f62fcfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daad2f27-bede-40b8-b090-ddd521257f6e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "818731b3-badd-494d-8b73-1d5b35a75b9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c644f5d-5dfc-40c0-bcb8-246a1bd71a01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9bdd27b-33f1-4eb8-9759-28b02bddd869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92813a01-c503-4a73-95d8-bc2d1f4153b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83104f78-4874-467e-9a1e-0258d90e50f0",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c332be2-c1d8-4c57-b389-042f3b1fdd76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7a35e5e-b195-479a-a882-68e4856cc315"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1534d4d-b2e5-42e5-93c3-91ba2d6aed9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13ad619d-9f3d-4d72-b4e6-721a7e2902c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a908bd93-31ae-4da0-8122-02fc051616b4",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a947304-7199-4714-b454-28dafa4c67d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fad6f70-e343-4ecf-bcf6-fcea7eb9cba5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce8bc05-7bda-4754-8196-8c7a39f88950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c66804d3-562e-4458-af12-86daa70c9ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13db9118-7ecb-47a9-be6b-d0e851753522",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e9e6d63-d7bf-4142-baed-9a4e35e305bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e94e8a74-195a-4495-b0f3-5a698fdfd91f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca52d560-003c-4a3a-97c4-51199d412c0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "381119b7-bf0d-46e2-9bbb-69cb1183cab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c1fd21b-e01c-4f4f-a96e-e4a8463da63a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a372456-1d6f-436d-94eb-4adaeee6ff69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39a001c9-84ab-4a93-bdfc-7e152eeb217e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1155033e-01e5-439a-abfd-0d0e820f317a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "484732eb-37f6-4110-bf55-593e3cdc8472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a54d5c-9731-400e-b03f-eae13b8525f6",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cdabb3f-5429-4993-b538-48e7f9b3222d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eb5efbd-f76d-48a5-9bc6-2c815b4873f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f1dba6-8ab5-4599-9f78-dec65669db91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94983515-6daf-4518-a89d-d6056e3a76d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "583b35c4-6d98-40e2-9c92-77d660dca00c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cefc176-6aec-41aa-b483-1db0f86d3ffb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b48d4be6-20f8-4f11-85e2-f1c23000cdf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d066674f-ffb8-40e5-b304-4a23ac00e947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0af01ed-ddd6-4a2b-9bc2-79135623101c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30de2e6c-1072-4ef4-9b08-71478d32d3c7",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b99cb4d-be65-4a9e-97d3-4d7f079b4985",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98593b0f-1c39-4f20-a67b-5d8550a0202a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7e821b-a11b-4ec6-ac54-023989185778",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b53b15cf-0ce9-404d-b606-55e1794be6c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab18f7b3-ae35-4190-83df-facc2ff2b6dd",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1721c8c-3e8a-4fd3-a57b-fc16b751957e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e09bb15d-c8b0-4c98-bfc5-b0b73eacee2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c98e2e-deac-4c61-84ab-cf5a09c60146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff79961b-921f-47a6-8cb1-a378c297eab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "730dad29-527b-4bb8-8a5e-2432c03f1c83",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d9b9f8e-9f09-4128-95ce-0c91880fd44c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bd4c800-a5c8-49f9-9f62-53e7b352f9b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5908a52-866d-4d67-98df-9d778dd506ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa0eee51-4775-4b0d-a556-c05bdcde27ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c67eab-4c4e-4dd2-8473-d8f1b7af5984",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "205155ba-3075-41ce-badb-9f5c5e0c9bb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48734112-dd65-44e4-96b8-f279b613a730"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "295907ec-870a-4cca-a0e4-4b31320736b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3c1048e-1340-4cef-9861-8cb94c7ec21c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f4c61e-6fd0-4925-a599-0480f4fb3909",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37decf99-590b-4ac4-99f6-2909342c6426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f266303c-c355-4c69-8eb7-3b30615c47fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e20e5c94-b97f-4ab8-b6de-2eaec89d32da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e300a64-9497-4a76-b087-e00c80a9d3d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c25d8392-ef18-4083-ad57-d450f2316ac7",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "320a1209-ab6f-4fe5-a86c-0fd4d805b30f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1b63db4-0cf3-4b33-9189-d45a406834e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02c86718-8a5e-41a5-8282-b4d356850491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba11b1cd-8603-4a26-91aa-016ccf9ee2b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec41db9-2f6d-4a53-90df-1530b997bdfc",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03197afc-c488-4a99-9ee9-4813ad802ead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d9948e7-09cf-415b-b65f-a30c62a66578"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af13ff1b-9e82-4c22-a9d1-4a597aee68ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b5cdd21-860b-467c-bbd1-19c9e37eefde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94cc2cca-9d25-41a1-8d71-c5ccf6f49c8e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28cd4f76-3563-47f9-bc3e-78e832469e19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a1addde-b62e-4d98-8419-6f8cb5833cde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "786c5d67-6192-4d70-b447-f4779075a655",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2349efc2-2154-496e-9a85-14c2667d01a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "668d3a95-d612-4bbe-b917-71db872c6700",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a118654-d370-4491-af5d-cb072ecff480",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34ae34e8-66e3-4841-9320-c8b6fc909b80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "705b0e0f-c479-480c-b29b-0bfd3330d1a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bad62e1-f8d9-43e6-bfb2-29526e9c3a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37fa08e8-2daa-4c95-9288-f49397750251",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a004f2e-54c8-477f-b932-9afd867a6293",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "297ef75d-9eb4-4be0-b586-1b617f0416cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d90160c-6e5c-4745-a110-e541618eb04c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "675e2050-9b95-4733-aa4c-a74ad1ba896e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb77c4b0-67aa-4e01-a291-453d21768e1a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f67086-2413-455d-9adb-983b0a101901",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c47776e7-7860-4c46-86a8-6afac1335908"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e48256c-745a-499f-b0c8-9f9ad6a569c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc426c7b-580f-4140-af3c-f1b92b5efda7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c89bdff4-2cb1-46e0-9651-700a6297bb68",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "615f7123-acaf-4752-a10d-2813d981990c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecdafb53-d269-435e-8c20-075ce59ba816"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb139412-31d9-4931-b12e-f1d0523f2561",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c98d8883-7f92-46ea-b148-5c50c4126bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cbbcf6a-9179-48a6-857a-2ba5ea196b93",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48007f81-3e1e-4c0d-9460-2b89d9dfc18a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "061efb63-650b-46f3-9814-4365233bde24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe66bfb4-8ca5-4ff7-9058-1ca137a75815",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "985c57d8-897a-4218-9aab-54821f306f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c704d7bf-7601-4c8d-917c-be4bbd1ab731",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "382ff1cc-62b5-4d90-9314-bda7075f16cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "329e81ab-ccc7-4898-9c1d-de5fb713d7b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "661a8bc4-3512-46db-a62c-334e374a1da0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a142bdf4-fce2-4e86-9897-d19f31a5f992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "501adec1-b604-4b5d-b54d-92da3533843e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b6aad5-d728-4127-99b0-8b7b5621ea08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f6994dc-9c21-47a5-ad1f-e16cd5f29154"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "247b06f3-f45b-4770-8ab6-c443296886d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0d6d8ca-7dad-4b75-abd0-a4009dd30170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d4325b-c9cf-45c1-9145-f72498b86dc7",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76912e34-4aec-4430-ab9f-7342fb4311f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14a400bf-407e-4b42-b382-b5a766e578bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05851857-8ad7-4bff-bf94-911077c4d29d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16068cda-de20-43d8-b03d-045837e4f5b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "187dfb26-4753-40b5-825a-ff15d4f45cf7",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d7b906d-87cb-45a2-ab27-9c38d39544f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "605fdd9f-73da-4ebf-90de-f4a0737e8a64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b4d38b0-3c82-4f6c-a627-46e5a8021b2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "660f05e4-88af-42b0-af22-dbb6f2527c0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "043cdccb-e1b3-447c-8178-661c83fdad5f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a6f666-8089-4d95-8ad3-82c9429413ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78232824-1c91-454a-b7bc-e02d71a02a72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1713df3-eb88-48b3-918e-6ae61e47d79f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "185b0972-0db7-4a87-8501-f35f746ae4ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4713aaf-d7f1-4ced-a974-1195e0e922aa",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79415aee-7dcd-4325-be9f-4c4c9a69db07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1da6357f-832a-4433-9c45-2e606b77acc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b6b9325-dff8-4c5f-98f6-2cde6590dbae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00ee21e2-1da9-4edc-b7ac-f99cb18af698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "188d225e-a624-4d6b-b72a-674e0729ab2f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3355db5e-7013-4b97-b1d7-50785624d769",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce6b3c19-34b3-46c8-b76b-c0dbdb563107"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74af236e-552a-4c49-8649-c99c96a545df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3fcad28-f91a-46aa-81e3-8fbbaa5a8218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72060d9f-9e5f-46ff-9ae8-c54c608b79a6",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7745e4fb-0ab9-435b-8301-3300e5fbdbea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca92a959-f26a-456c-983b-03a267e0547e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c20d77d-61fa-4911-9da0-ec30b24b8987",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "505ca9ff-0d5d-46ef-b11c-dd8fe65859da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18e7e1b8-a3cb-461f-bda5-525d8852351f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de740f7-a0f7-4a29-9f4e-e8dd43db0b23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3e6dd70-e233-46f3-99d7-f18515708bfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92afc7da-dad2-4bfc-88e3-97388440548a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd145bd2-feba-4886-823e-786998df06c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f6126f9-b56c-4239-8ce7-f5ef5a397b28",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64935dbb-f46e-4df2-bdd6-fbce788e6ce9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aeae62f8-56f1-42ed-9c8b-8208938b90c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "607766e4-2d56-4e4b-a2a1-fff19a995dc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1e2c50c-57ea-4786-8d63-a31010495cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eae1090-c58d-4400-ad86-9fc0184708d0",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b8ad5b3-a544-4b63-8810-57464142aaac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43d81400-cb4c-4a91-b066-c4a0151bb2fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd21e6de-de80-4da7-bd78-da6c36379da6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e06ee309-74b8-4e08-917e-2154b50f1bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a4bf352-5c78-4578-b0b5-7eedf3ce509d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b3c41a-799b-4a24-91e8-a479fc0787ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "250f2efa-153b-4afc-a7db-bf8f8717045d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d23a6280-e8c8-45f7-b850-cf71c261706a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "088544b2-9420-4a59-ae6c-c3437074f952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa156b23-3bea-4713-acb3-81dbb45a7e57",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab2f19c0-9d1e-44ff-be24-d815b21cfb39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b52b8800-0f50-4125-8f20-cf9c61a02ea6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde8e9b4-8bdf-4739-a6fc-af37dec65a93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c95ff321-989a-47fe-8614-b06ca206b300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17840b9d-b809-4183-94fb-150f0a26b4d1",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3abfbd75-a1f7-49d4-b322-1a2fd739ce07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a8e61c9-ab15-4fee-a16d-86d2a7e7ec53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a1d0e9-7816-444f-b332-e2c1376bf4ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "571c7f28-f2bd-46ed-b8f0-7286b9d5a492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcfccf2b-53d7-4da8-a0f7-a5e41071f343",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e84b1a6e-d1bf-4f37-bba1-6e3e6fa54bec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d398f844-3723-43c3-92ee-e233eb7b2737"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70b7404-9dd9-42dc-9f84-0a408d78f201",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6f59ed4-1dd4-4b25-b2ac-1f10ab929e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7ab4497-70c9-4854-b3c6-dc96ba3caa98",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f116c59b-65b2-4389-bbe5-40386da8a011",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8453011e-1f43-4acb-9bec-98e368bd4526"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b23776e-05e0-4820-a08b-fef8e3959b25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34e55e7d-a711-42d8-b9d5-f6a830d46fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "935cfa9d-2720-452b-aa96-cbe7c38e8def",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "467bb9d8-4e1d-41b5-a32c-fb1496d4e80c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d91eb872-9364-422d-bddc-5259bf1fb185"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4240a93-b0c7-4559-ae76-ecde26e8250e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a0b6829-3736-453b-a220-5f0cb5a2e12b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a94c666-2bbc-4158-9520-7e0a9f20fdb6",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e85668-6fbd-4e4b-b5c2-8133a04e3539",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e66d9050-6868-4638-9380-05231a7f6500"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce9a6a4-b300-4afd-a682-c0c5140f9559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c94c0de-8bc6-45fb-814d-5190338b4763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c9a25c-95e9-4e91-be4b-bfe5b1f5cb85",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "958babb6-50bf-43b2-baf3-e112596646a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c91c0815-49d5-4754-ba28-e2589c83c30d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a34748-649b-44ac-ab98-9642a5b4a5b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c951a6b4-17c7-4fc0-a629-dfa5befeda03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e0b388-9f1d-4632-8348-548baff1e46d",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf4f3e73-1d0e-4af7-8b6b-b802fccb0ac9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9908716-85b2-4456-8fcb-661eb3a08922"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c32f54-b0a2-431f-a627-b8f601996e35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8ff0490-76c6-4832-866d-21f9068af155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5381949f-d1ad-4ebf-b6b5-bd8e48106726",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e15e873-819a-4c1b-89f9-eccff138df1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ec43f63-3cff-4a97-8fd5-f08f000f2f0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b3df72-76ea-456f-9377-3f2a10ee4a74",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36bcc411-6b04-4e6c-affe-95f6ea283b26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fda15023-08d0-4138-bb3b-34451e4806c3",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ecf8ae8-a3cf-4d8c-8439-52e6b8592261",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcaf7a9c-a536-4c44-a294-2677848fe9e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e2c94c2-d4e0-4fb4-8e69-4268c30eac0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25adbac6-a798-4695-b30e-c29bcc342f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a42e2d98-9b24-42a7-a767-2648c4fc50a4",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac86932c-c9eb-4c7e-b873-965be9494d31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abab3d98-bd60-415c-962c-49aed600d090"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f8ed083-cd20-4920-8631-3fb818eab3fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b078c2e-ceee-4c6f-9f60-85fe9dad5f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df57c39d-8470-4162-a951-ed06eedca91f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa1c0ed7-5f54-412f-9b84-6f4e93698e87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d2c4d89-3cfe-409b-8c99-334254759fe4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "766ea8b5-541c-4468-a8ee-e03f0f98e02d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37b4925a-5fd5-486a-a9fa-1ccd0e695887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a5d718e-2765-4f89-9249-5d95813bf38c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b77d4d8-3951-4c16-b3d3-cee4e8a9a9dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed8a38dd-0415-4f0e-99b4-79df4506feca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6732dcc4-eb46-4d07-97da-4fd78dbec96e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72693d43-1584-4e29-97c2-b8405bcbdf84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2570a146-0737-4c76-ad70-1640e1047a30",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d917d2e-b3ae-4825-8ed8-db249ff0e6d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8db4af26-fd9d-451b-a4d1-be2dbc0f89ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1356d6e-6ce1-40ce-bba2-58d3976b2b86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ab82891-5806-42bb-8f53-f261c7b7ef6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5680ae58-2045-44e5-86aa-459a9c0ccd18",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c65980e-87b2-449a-8d46-9313a8c4de02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7298a29-4531-4464-9eb7-468afa736f9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc432cfb-4a04-4751-a25b-1971c82804cf",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56f8f27f-f47e-4c7e-a03b-fe4df4e30b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a83b41-404f-4064-9c91-38b27b5df18f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aebdbf4-d736-4705-8b9d-d2bc3bcff8de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff8fe58a-c50d-424e-878f-4947cc35bb91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea4a06e-ac02-4f64-8902-fb24e4d3fbc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cea39127-133d-44f6-8375-3211b293b3d3"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e8eefd3-d666-4777-a774-bf75dc7c7593",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d1496d57-b179-44b6-b7a5-048bbba7329d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d56d4ba4-3af2-47d3-8f7e-0fe93ae66acd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d1b4c2a9-c87e-4084-a4cb-95f8b3d5a10b"
                    }
                  }
                ]
              },
              {
                "id": "bd1e2f7d-0e0f-4172-ab2a-ecb7596647d1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "122f4c86-78bf-459d-a9d8-a21a1b6254a2",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15a4e5ce-43e9-491e-89aa-ab38d990c1de",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "975feea1-4782-4b6b-bdfa-0a1d8fbcd1e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c42459-93da-4746-9e27-399924c561b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b01da9bc-3fa7-4a08-8404-3d900ef5ad20"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "02c1cf83-26a4-41e7-9275-f5e7e24f8f42",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ced8bfe-d50d-4dc1-8925-d1ad5d7e6f64"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b41a03d-c8e0-4d44-9e90-723d330ec4d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a98140c2-0df2-47ef-b8f7-c276aefbe507"
                    }
                  }
                ]
              },
              {
                "id": "d47085d8-03d0-485a-9096-b63c9b09e136",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "50dd2128-e298-4a88-b353-a17a02bc177b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "767fa638-29fc-4e27-97a1-ebd58f772c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "29140f26-144a-4799-95d7-66c0ca96482d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e1699f-6676-470f-ad1a-79a2f0f2c870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf40c680-550e-4f43-a5dc-e135172dfd4d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c2b5e16b-ce6c-4ac5-a3ab-249c0c3859b5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4fe3dbe3-9888-4a52-968c-d634f20fcd9d",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "82a35a50-9d0b-47fd-adc0-e8b7fd3da234",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "695d9630-9c8e-4bc3-ae62-69851ba92dd7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e56a674b-c955-4edf-b700-e1ed47366eaa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "06beab40-a34f-455f-be9c-5952af28f0d4"
                    }
                  }
                ]
              },
              {
                "id": "b55fc366-4746-4bb0-8525-5bee266a6725",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f3a87aed-7ef0-4dae-a862-818b32bc3757",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4b0ba5db-564e-4ea7-a825-a8c863db8192"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e97677f4-597f-4551-b57f-377493ab4145",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "601e851b-4bca-4fe0-8e5c-b566127cda09"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c442c8ab-e2b2-431a-bac1-f5ed75353a7b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "010b6278-5402-45df-a2eb-675a90b7abd5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b79f6c59-8580-4cfb-a1c2-97be4268d3ca",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "835e3a40-4dd6-439a-8c4e-a396483c4a5c"
            }
          }
        ]
      },
      {
        "id": "c3569503-ed9d-4531-9214-3e7468bd41fe",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "6a899450-f797-464e-a911-bd4f199144d5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c4be91c4-4cd4-4fc7-93d1-2cf1184eefd6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8cbaae50-75d4-45d0-b4a7-58444818e95b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f555838d-8ca3-4636-8ff7-45a197d0ebfe",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d9653443-11c1-4a62-af23-0b8ee3561ec6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "660cd7ca-483e-41ba-8f61-ce87b7fb9970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3a08eca8-a02a-4d54-8680-6123a8adae27"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd939a23-bfda-417f-80f5-49d882d4b0b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac97fdc1-e8f1-4254-adec-0ece130a70b7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f419870b-2478-423e-a024-89a943ae341d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5288673-6799-4aeb-8393-a5c187b2494a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "25558e0a-191d-416d-ae1d-b4d4687a48b0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ceb2d119-352a-49f7-b2dd-739db476b54c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dfe20b29-d495-4fb6-b288-a171bb01d163",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "02c66994-7cfb-4bf1-bc40-32fdbdbeee3e"
            }
          }
        ]
      },
      {
        "id": "aaef7261-c8f1-4ac2-a498-f65972f9c0fb",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "4863ca66-a726-4cf0-95df-5234b1643187",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7f924b33-de50-4b62-b059-d164f62ef526",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "05bac85a-89b9-4e8a-9838-78e43df1dd04",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aad6b3c-b239-4c07-aca2-16c2da68e1ba",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7893e4bf-0602-4465-8622-f518c51ea63d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d752723-8441-4173-976a-e5ecc85ea585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32d99177-7276-4049-a640-56b082923267"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "437c41a5-4872-4f11-8b80-99d453a0cc2f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "50efa74e-13ad-4e71-8026-83ede3173c0d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0bfdd259-df37-42bd-b905-7e53696f8a44",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "522a6ca0-74fa-4996-8567-e11e4188f18a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3356c539-9f2d-45b0-aa63-720417b315ee",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a4cc3407-6e33-441a-a2d2-697b808cfab0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "be7272dc-4416-49c1-a1c8-bc8f7da4cd14",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2c2add8d-fd30-49f8-9116-1b7f1753c99c"
            }
          }
        ]
      },
      {
        "id": "820f4494-0684-4fcc-b34a-e09bda55a6b1",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "8b8f54b0-14a0-4757-af69-3e183e5e93ab",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e0656f5f-6222-421d-8e87-6efc154185b2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ac2beed6-4d85-4491-9167-e2d08be8b39d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3506e59d-ac28-467f-99e2-3220c6ecf15c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c1267cd-d569-41f3-98bf-30dbc253dd20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eed951ee-30fe-45e6-82a8-4abb3c59a380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e3c6e78f-3e7b-415f-83e9-a47e2cba9841"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ea7d2dc-b127-406e-a268-3efa8d5f62be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "666b8d2c-691f-4b72-87e4-bd6f962997db"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0bb5b364-7962-4084-989a-79921a897a39",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "755a4277-2692-4133-b320-0ae105dabdae"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4c38c0aa-f98b-48c3-b2b1-84cb4241d4c7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2eefacb3-b0b1-47ff-a1cb-4675963475be"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "24ab348c-dcb7-47d5-800e-07a4a86a9577",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "df97c176-ec76-4afc-a035-ac50c77fb179"
            }
          }
        ]
      },
      {
        "id": "e451ff73-b3e3-4234-a92c-489228026a46",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6e6cbc5e-c1a0-4340-9824-66cc75b3d032",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "42dcb565-9326-466f-bdad-d696006bd2f2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "fc3af7e9-d63e-492f-9337-624b24e7cdcb",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0e591160-e50f-4981-a807-5453cf3d02cc",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4fc15043-cd0b-457d-8243-51bf066042b5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 141.4877192982457,
      "responseMin": 5,
      "responseMax": 2835,
      "responseSd": 327.7312399492276,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1704242121576,
      "completed": 1704242170935
    },
    "executions": [
      {
        "id": "af458f13-db63-4a4c-8594-5101fe61b1ce",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2d963f44-b99c-4eae-84b7-ff8c48629f24",
          "httpRequestId": "f79e7df5-67dc-4c49-9fc2-1c2d8aa0afac"
        },
        "item": {
          "id": "af458f13-db63-4a4c-8594-5101fe61b1ce",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d3586dc4-c727-44cd-a5da-15871d1157a5",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 0
        }
      },
      {
        "id": "30ce8e3e-1255-4347-b3bd-4228a362f7e9",
        "cursor": {
          "ref": "c2978814-c1b0-498c-baf2-01853fa9aadd",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f296308b-e1fe-46ea-ad3c-c66747e1c351"
        },
        "item": {
          "id": "30ce8e3e-1255-4347-b3bd-4228a362f7e9",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "25472bd6-4890-4008-96b4-2906bb7e6f93",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "f5db0079-896f-4ca4-9566-790d48197284",
        "cursor": {
          "ref": "76da8b94-7177-4058-b1a0-3ac91e264078",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "10e3e4e2-9538-45e3-a55f-f14e0603c202"
        },
        "item": {
          "id": "f5db0079-896f-4ca4-9566-790d48197284",
          "name": "did_json"
        },
        "response": {
          "id": "40645447-7a59-4ac3-8308-19ae4acb5957",
          "status": "OK",
          "code": 200,
          "responseTime": 604,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f903934e-4b93-423d-b38d-d422238787b7",
        "cursor": {
          "ref": "bad26e8e-b4ed-4445-9e73-cb59cd452722",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cbc3f904-e4bb-4a17-afa4-385c39c7beb2"
        },
        "item": {
          "id": "f903934e-4b93-423d-b38d-d422238787b7",
          "name": "did:invalid"
        },
        "response": {
          "id": "3a6b2951-8382-4e87-9bf3-e05e3bef19a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f903934e-4b93-423d-b38d-d422238787b7",
        "cursor": {
          "ref": "bad26e8e-b4ed-4445-9e73-cb59cd452722",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cbc3f904-e4bb-4a17-afa4-385c39c7beb2"
        },
        "item": {
          "id": "f903934e-4b93-423d-b38d-d422238787b7",
          "name": "did:invalid"
        },
        "response": {
          "id": "3a6b2951-8382-4e87-9bf3-e05e3bef19a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4faa08bd-3fc3-4c68-827d-61a2da7153c8",
        "cursor": {
          "ref": "24eebc31-d9b2-4f2e-a599-e1e0eec01e1a",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "9c87d42f-1330-480f-a416-f86f426f3919"
        },
        "item": {
          "id": "4faa08bd-3fc3-4c68-827d-61a2da7153c8",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6af2ea2d-1005-4e7b-bd63-9db17a7c4f4c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 186,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eebd900-6773-4c6b-8117-d91edb643938",
        "cursor": {
          "ref": "4056ac6b-1c48-46fb-bad5-cac99415146e",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "51803488-f28a-47b5-a9ad-6e5447320563"
        },
        "item": {
          "id": "1eebd900-6773-4c6b-8117-d91edb643938",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "441c73fe-2c73-4630-ad5f-761805e00d98",
          "status": "Not Found",
          "code": 404,
          "responseTime": 115,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d18931-a42d-4a08-99c9-be2bd8e60ad1",
        "cursor": {
          "ref": "31a6a0b0-2ac0-4a20-9b37-532d9052f2f1",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d00d652e-dee9-4e26-b83f-5926f86cca4f"
        },
        "item": {
          "id": "18d18931-a42d-4a08-99c9-be2bd8e60ad1",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "4576fb55-dc00-4aa2-b010-045fa4c0333e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 109,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2deab3e3-07dc-4ad6-8d12-b02e1c6e6f1b",
        "cursor": {
          "ref": "1ea383a2-2033-4ebd-a5ab-4f17ad22ba96",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3fd25d5f-d06f-4d6d-a02e-2914b1667317"
        },
        "item": {
          "id": "2deab3e3-07dc-4ad6-8d12-b02e1c6e6f1b",
          "name": "identifiers"
        },
        "response": {
          "id": "b8bc29aa-eb0c-4d40-924e-e24d26f7cdb4",
          "status": "OK",
          "code": 200,
          "responseTime": 380,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3323ccb-291a-4358-9148-fe562dbf4a8f",
        "cursor": {
          "ref": "522a5e52-cffe-4cad-afcd-95dbe8b4b7b0",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7dbb32ef-bd7a-4267-8a24-03814a555801"
        },
        "item": {
          "id": "a3323ccb-291a-4358-9148-fe562dbf4a8f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "23cbcbff-02ca-4b21-a059-b3d83e162307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d2e1d22-9e8b-4b33-a534-5599e861082b",
        "cursor": {
          "ref": "48f88a5e-16df-4a6c-8827-e5dd0e2bf455",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "db4d3fca-df5b-41a2-bea3-c6a07c079bae"
        },
        "item": {
          "id": "6d2e1d22-9e8b-4b33-a534-5599e861082b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ef3a6fa4-3dca-47ac-9fb7-df384ed02526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebee3988-d747-44c1-b75c-f72c2ac56518",
        "cursor": {
          "ref": "c096a85f-9ccd-47eb-91eb-5e5716907bae",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "7bfd7d52-5053-4e0a-9623-b8028fd09a31"
        },
        "item": {
          "id": "ebee3988-d747-44c1-b75c-f72c2ac56518",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "5b25ad6a-5472-494c-95e7-c2926f618d7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5edcde26-e35b-4cbc-83ba-2c12f394edc0",
        "cursor": {
          "ref": "0f59a6b7-bb83-4d5c-80e9-119732cc253d",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "bab39cc7-a484-4354-aec1-c32d0b087770"
        },
        "item": {
          "id": "5edcde26-e35b-4cbc-83ba-2c12f394edc0",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d7235f06-347b-425f-85c7-f4778fb2ca6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f853a575-9fa1-417c-adf5-b77d83fb4afc",
        "cursor": {
          "ref": "302b8650-b4c6-4e54-891f-e93fc07234cb",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6143d6cc-5969-4280-867e-0a08b71dfab3"
        },
        "item": {
          "id": "f853a575-9fa1-417c-adf5-b77d83fb4afc",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "fac13192-ed2c-4c2c-9266-4ee5af3d0dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f19ddf92-869d-49a5-9cae-fea9c49fc484",
        "cursor": {
          "ref": "f9b26ff3-d7b2-4b6a-908b-d029670b99bd",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "bc1ee08d-411d-41f2-bdd4-3df8ffe8b56c"
        },
        "item": {
          "id": "f19ddf92-869d-49a5-9cae-fea9c49fc484",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "077d15bc-f463-4baa-a59e-2b5da03cc600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559f500b-0fb8-4957-96c6-291a7cc334be",
        "cursor": {
          "ref": "1cebdc2f-fa57-4397-9169-8ce430f3ce25",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "33a926dc-a910-4897-8bfa-76eda0e8d5c3"
        },
        "item": {
          "id": "559f500b-0fb8-4957-96c6-291a7cc334be",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "fd8217ce-717b-4eaf-a659-8705ecee41b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e269ac0-6444-4489-afb7-dfb6b4e31f9a",
        "cursor": {
          "ref": "3edd2918-7eac-4699-a35e-99830dfb7f79",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "523fff61-7b72-4978-bf8a-f298c8fb0eba"
        },
        "item": {
          "id": "8e269ac0-6444-4489-afb7-dfb6b4e31f9a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "4a2078b5-8a17-4c1e-9bec-9807177401f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf973c5-e944-48e0-a60b-d8677071078c",
        "cursor": {
          "ref": "26ec7478-741a-48d9-a5a0-5ceac86e65f4",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "dc3c140a-918a-42bc-a2c2-868098f66d02"
        },
        "item": {
          "id": "fbf973c5-e944-48e0-a60b-d8677071078c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "3b3c725c-2379-4e7c-8d87-ed341d8dad8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3655e78e-0981-46e4-9db5-ddfbd5a2ef32",
        "cursor": {
          "ref": "77980053-5e3e-4c3d-9b13-8af617156507",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "6611d652-148b-4e1a-a4c9-f0301620a933"
        },
        "item": {
          "id": "3655e78e-0981-46e4-9db5-ddfbd5a2ef32",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "fccba1e6-3b2e-4423-b74b-b8409e155f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e43d56-6de5-47e1-88dc-ad59aeb30eea",
        "cursor": {
          "ref": "ca0afb76-d374-4a76-986e-2020a27d09e6",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3a880d39-bb37-4a49-8cf8-7dfc6cee1d6a"
        },
        "item": {
          "id": "c8e43d56-6de5-47e1-88dc-ad59aeb30eea",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "9afd801f-0617-4afb-a710-cc7d3cf85050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c43ce2-636c-4b4a-8001-c0f3cfe3310e",
        "cursor": {
          "ref": "c9107770-1d2f-4345-84f4-c50981b1033c",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "d1a16f30-425b-431f-b6be-2f479d9e220d"
        },
        "item": {
          "id": "48c43ce2-636c-4b4a-8001-c0f3cfe3310e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "10d50bef-7123-4fe7-b2f4-23ae75f23c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ebffdc0-9b7d-4689-bf82-bc3b23815b85",
        "cursor": {
          "ref": "94e440fd-b2f3-4570-8f63-70a86b9f0692",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "0edef699-213a-44f9-8cf1-5cce31f1e96b"
        },
        "item": {
          "id": "9ebffdc0-9b7d-4689-bf82-bc3b23815b85",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "cfffdf69-8744-4283-87fe-6722ce140358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61438bbe-91bf-405f-84fb-c1c1b2f2a598",
        "cursor": {
          "ref": "7ba984c3-5911-4cc3-acfa-21267c9e40f4",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "be51be62-1e65-410d-beb5-bbb4cb5fae91"
        },
        "item": {
          "id": "61438bbe-91bf-405f-84fb-c1c1b2f2a598",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "3d8df1a4-62f4-4d95-8107-8851465f5b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa78197-a02d-41c8-b4e4-51bf82a39f79",
        "cursor": {
          "ref": "5988eee2-9935-4cf9-8c17-342d0480e02d",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "2a0ca77f-d92a-4282-9a86-0c58086ebd7e"
        },
        "item": {
          "id": "afa78197-a02d-41c8-b4e4-51bf82a39f79",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "bb81d490-19e2-4cab-9341-de2458115810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b30f512a-ef8a-4f67-8e88-3c6629d9ccd6",
        "cursor": {
          "ref": "e7a31ea3-5535-4fd9-8930-9e44978b00b1",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "7056fbce-72b4-4d4f-bb14-e743c56ce0e8"
        },
        "item": {
          "id": "b30f512a-ef8a-4f67-8e88-3c6629d9ccd6",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "bd7298c8-4cc6-49a2-9f20-385930d9b20f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c05d93-25c8-4c18-80f4-29351ff4830a",
        "cursor": {
          "ref": "f179dab2-d093-412f-9d1d-338c65795f31",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c85d5001-a47c-4f37-9ca3-2daf4b123917"
        },
        "item": {
          "id": "c6c05d93-25c8-4c18-80f4-29351ff4830a",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "32603f80-4f6f-4862-a067-a609d5673a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2629f1cd-baf0-411d-85fa-c8dd64c8c961",
        "cursor": {
          "ref": "82b21472-7750-48a4-8c86-1a11bf6c61ff",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "3cdcaa27-74bc-47ba-910e-f46652a2d423"
        },
        "item": {
          "id": "2629f1cd-baf0-411d-85fa-c8dd64c8c961",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "71a6f212-85db-4769-be4f-1383aeae715c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55dd25f9-2101-4b24-8cbc-97990e5f3faa",
        "cursor": {
          "ref": "ea2cafaa-00f4-45ee-b883-56dc253b2c97",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "4a02a3be-bccb-445c-a70c-6fa9bfdea3b0"
        },
        "item": {
          "id": "55dd25f9-2101-4b24-8cbc-97990e5f3faa",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ffc29bc6-51bf-46c5-96d7-1d2ed457fee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce59954-60be-417d-9804-463c998b6a9a",
        "cursor": {
          "ref": "a5784327-2db5-480a-9202-dc92feca1769",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ae596560-a0dc-4316-b9c9-0b402a9f2bba"
        },
        "item": {
          "id": "cce59954-60be-417d-9804-463c998b6a9a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "9cc2933e-4bee-4e95-9de4-b8c35148d26b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdabbc8d-18f1-44c2-ad92-e8f48ce8e6ea",
        "cursor": {
          "ref": "beaa6b17-8d75-4307-ac5d-530f22bf7e18",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d051b635-3204-428a-aec3-67c64b74acfa"
        },
        "item": {
          "id": "fdabbc8d-18f1-44c2-ad92-e8f48ce8e6ea",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "2f3ba40b-8de2-47ce-9a42-4deeec498f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1b4d770-44c5-48a6-861d-55b6062936e9",
        "cursor": {
          "ref": "21ea7db2-b266-4cbc-9900-22cfb946f1d3",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d033b95f-1ab3-4857-b218-c03bf87e083c"
        },
        "item": {
          "id": "c1b4d770-44c5-48a6-861d-55b6062936e9",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "1df90763-6725-48f8-ba05-b3dbf91bb8cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3657f0-0284-4f28-96a9-0ca0513bbcc9",
        "cursor": {
          "ref": "31325285-824c-4c55-b2e4-ac8916c12a29",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2a3709af-065b-4682-aac8-62086c2dcfbc"
        },
        "item": {
          "id": "da3657f0-0284-4f28-96a9-0ca0513bbcc9",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "66c432a9-e1a1-42f5-a0d3-af2804607e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb3d800-9983-4fcf-a72b-5d188924fcc1",
        "cursor": {
          "ref": "a1d407eb-28d7-49af-ac7e-34963b4a64a5",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "66000356-2595-4107-8919-d52b9839285f"
        },
        "item": {
          "id": "ecb3d800-9983-4fcf-a72b-5d188924fcc1",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d3b1a16c-1b6f-4756-8c35-34642aee616d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69a706c1-92b1-41b2-b218-bd6453b3329d",
        "cursor": {
          "ref": "3afea455-4ae2-45b7-a068-3154372c83ec",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "06bc2506-43b1-4c13-a699-ae1550e190dc"
        },
        "item": {
          "id": "69a706c1-92b1-41b2-b218-bd6453b3329d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "dda1b42f-46fa-4e17-bd89-89ce97a8975f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "485a39ed-114e-46d5-949b-7fb0cc761114",
        "cursor": {
          "ref": "5dc3bf51-9430-4951-bd5f-e40814d572b0",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "32a9e027-b80a-4a73-8ac1-e45b1572936d"
        },
        "item": {
          "id": "485a39ed-114e-46d5-949b-7fb0cc761114",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "e2517516-c090-4268-b60c-a5578a5777d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b346d88e-a2bd-4440-be3a-28e8c4e6ba14",
        "cursor": {
          "ref": "ae23ea59-0ae4-4434-9a93-41f970e74832",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "8f812725-9def-4b46-b0bf-3767c7c0a32d"
        },
        "item": {
          "id": "b346d88e-a2bd-4440-be3a-28e8c4e6ba14",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "3ce17cb7-49d4-436c-9312-390e93ed6fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8596ec9-4fdc-45f9-b98a-74f90a48a77b",
        "cursor": {
          "ref": "5300ccb4-1cfd-435d-8d70-25ba85f8681f",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b14fd9b0-9108-4e54-b661-670b5219e81f"
        },
        "item": {
          "id": "e8596ec9-4fdc-45f9-b98a-74f90a48a77b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "fbaf0804-a757-487e-8cca-666b3ca48474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d07e07e5-ad73-4c5c-b6fe-cec707a257dd",
        "cursor": {
          "ref": "53f81036-020e-4f2a-b342-215a6f767001",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "478ba368-d8d0-49d6-955d-dea3a10bfdbe"
        },
        "item": {
          "id": "d07e07e5-ad73-4c5c-b6fe-cec707a257dd",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ea6567c1-801e-4b58-a416-512cc71f8c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62314925-b968-400f-b83f-2355f1f208da",
        "cursor": {
          "ref": "7dfba05b-02fa-41d7-a71d-3a6f3738e0eb",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "bf6fce22-c89b-41a6-b221-55964414d0eb"
        },
        "item": {
          "id": "62314925-b968-400f-b83f-2355f1f208da",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2bb6ed2c-aa17-4aca-9dbe-e2667e0a5a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e13334-d52f-4f02-9bc1-d7c69f15263b",
        "cursor": {
          "ref": "4f5e6f3e-7654-4121-b908-83fa719ff792",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4080a3f2-ef92-426c-9901-23233bc87fb8"
        },
        "item": {
          "id": "e3e13334-d52f-4f02-9bc1-d7c69f15263b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b2e1dd66-b81b-4365-9101-a8081e1e6b21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dda0157-c343-45a1-b75e-25e2c92b3c4c",
        "cursor": {
          "ref": "7ad8f2b9-a5ad-4f15-b5b8-7d9f0581465d",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "4ea7fa4b-4993-4be2-88f7-3fa47e29943d"
        },
        "item": {
          "id": "5dda0157-c343-45a1-b75e-25e2c92b3c4c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4de15b77-fdff-48eb-a727-ab88b74eca3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae9218d2-e8b5-41b1-9d0b-3eb533ed8d69",
        "cursor": {
          "ref": "3209de6e-4d33-4cee-a10f-19490bd8952c",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "911b0d60-d73f-456a-84df-06c0413afed8"
        },
        "item": {
          "id": "ae9218d2-e8b5-41b1-9d0b-3eb533ed8d69",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "33516af7-fc2f-4e91-9c1a-abe462258307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7864369a-66c5-4a5f-8041-2710113829ab",
        "cursor": {
          "ref": "bbb5c46a-1e2a-49a5-bed2-6e0bdf39f55a",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "5770c093-2ed6-409c-a5a9-74326a7d721c"
        },
        "item": {
          "id": "7864369a-66c5-4a5f-8041-2710113829ab",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "d3dbfe78-81d7-40a8-a312-2735d0457f53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc7ca8b6-3f44-4bee-8bfd-cc9f27ed098a",
        "cursor": {
          "ref": "98d5fb8c-4257-4164-a7b4-f406a6b6e760",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "057c4fe5-dee7-48dd-af45-0bf5d145fdbf"
        },
        "item": {
          "id": "cc7ca8b6-3f44-4bee-8bfd-cc9f27ed098a",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "f3e33bbf-2f6b-4b6d-87b3-22f6d9269a6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd86d269-fde2-4ff0-b6a1-04a35e811781",
        "cursor": {
          "ref": "d64fcbf9-93fa-41e6-9353-d23d812015a6",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e415dd56-00d2-4213-a515-caf7092f86d6"
        },
        "item": {
          "id": "cd86d269-fde2-4ff0-b6a1-04a35e811781",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d7df0c21-3f45-4ae8-8ca6-e39863715a97",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 351,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5edb86f8-a4f3-4c56-bb7a-8d56984c0064",
        "cursor": {
          "ref": "ae519a24-6fb3-4dbf-b382-2eb3dbc6787b",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "67b0ae10-16fb-41c4-952d-c7109c7f26b1"
        },
        "item": {
          "id": "5edb86f8-a4f3-4c56-bb7a-8d56984c0064",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a2f5d9c4-a8d7-4f08-8233-3c6da1b33c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f0c412-c275-4c13-80b9-8ae3736ec8f2",
        "cursor": {
          "ref": "0f6cf157-8cda-492d-944b-12357bfd7f39",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "26a05890-753d-4022-a1b3-803dfe5409ad"
        },
        "item": {
          "id": "e9f0c412-c275-4c13-80b9-8ae3736ec8f2",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "247e2fad-e378-4549-98b7-f676541fd7c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d7f34a-fce1-4f2d-a019-976ebfd9b195",
        "cursor": {
          "ref": "9d4de4e4-8754-4527-8716-17009c388677",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a43a90da-3561-4ba1-b062-1dfab0464b70"
        },
        "item": {
          "id": "86d7f34a-fce1-4f2d-a019-976ebfd9b195",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d0ab448d-c449-410b-93c9-84ad60629f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2483b50b-aa37-413c-ae93-6f2723b24329",
        "cursor": {
          "ref": "2ec6bd5f-2097-4069-ad5d-130e72090574",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d6dbe60c-27f7-4b20-867b-b62e73b8021f"
        },
        "item": {
          "id": "2483b50b-aa37-413c-ae93-6f2723b24329",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "7601f360-a777-4c9f-83f5-10b559920205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ceda95-8da0-4631-94d5-d2b4e5405296",
        "cursor": {
          "ref": "fbceaf4c-e0cb-4ac3-a748-afbb2210805b",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c4e2e755-5cf9-4b16-834a-1928b0ecc2d8"
        },
        "item": {
          "id": "57ceda95-8da0-4631-94d5-d2b4e5405296",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "236f43a3-fce3-4c07-b2c4-dc90ba1b4b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9204bcda-a1cb-4366-8b0d-1b027d47e2cd",
        "cursor": {
          "ref": "a78b1453-6429-43fa-8da7-f2ca32b21758",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "89c4acb2-ed0b-4def-bd71-a7376c24b782"
        },
        "item": {
          "id": "9204bcda-a1cb-4366-8b0d-1b027d47e2cd",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "38cdd7af-968a-4a65-83e8-977d059dad24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "406449d5-8628-42df-88f5-24bfb575572f",
        "cursor": {
          "ref": "e4425f9f-e429-43e1-a536-e606aa3aabb2",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ec820571-1d81-4874-aed6-c32389feffc6"
        },
        "item": {
          "id": "406449d5-8628-42df-88f5-24bfb575572f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2cfbe5fc-a8fc-4c80-ac77-0afdd32c968d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 355,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a5b6d96-9af2-44af-b9a2-1f5e48bdfcfd",
        "cursor": {
          "ref": "668e5c95-2026-4788-9af1-8c0c47b89213",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2c5723ba-93d1-4592-b9c1-41a4a37e9c8f"
        },
        "item": {
          "id": "9a5b6d96-9af2-44af-b9a2-1f5e48bdfcfd",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a187a081-3435-436d-8097-d5dac2f9384e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50004206-e4ac-4267-85d7-632b57e74795",
        "cursor": {
          "ref": "cfc5dbf0-018f-472a-8246-2513e09a2e28",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "5fcf173a-d29d-46ef-97eb-1436797e1239"
        },
        "item": {
          "id": "50004206-e4ac-4267-85d7-632b57e74795",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "8ccfe33c-3e88-47c5-b394-207ab53720bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29061838-15ec-4ab5-8434-f41f1d09b20a",
        "cursor": {
          "ref": "6e46a0db-db32-45bb-945d-6b5f7a1d42e0",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "029f6468-7e59-4b92-9fc0-d785d905bb82"
        },
        "item": {
          "id": "29061838-15ec-4ab5-8434-f41f1d09b20a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "6ded9abe-43e2-4445-a185-dc6da54670c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa11c660-b50e-4561-ab40-27f09f857d36",
        "cursor": {
          "ref": "789a2b5a-8b76-4724-9d01-20fbf33d97d8",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "77c3f18a-c913-4b53-970d-35608ff0bcf8"
        },
        "item": {
          "id": "aa11c660-b50e-4561-ab40-27f09f857d36",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "8c467958-e52d-46be-ad3c-67d578b14527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5b2af0-18be-49a7-b889-119303327ae0",
        "cursor": {
          "ref": "429fa965-bfc8-4308-8ce8-3df563437f82",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "268bc524-fcc5-4f84-bc5d-b306426255dc"
        },
        "item": {
          "id": "3f5b2af0-18be-49a7-b889-119303327ae0",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "31701850-d989-45ad-a922-5f90b54c11ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d75ee30-36f9-4712-8621-ad231f13e09b",
        "cursor": {
          "ref": "a64c49e9-19ec-4cf9-8460-51b418505387",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b17c6609-c3d2-4da3-ade0-08b672b3b867"
        },
        "item": {
          "id": "8d75ee30-36f9-4712-8621-ad231f13e09b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d2b89b78-e285-4e16-b8f4-cbd9f3fa871a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f181c5a9-547b-45be-bbba-460531fd67ef",
        "cursor": {
          "ref": "afb10310-3327-45fc-9800-9eb2b5a7cf27",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "43554446-ec49-487f-8552-d238bc1a49d5"
        },
        "item": {
          "id": "f181c5a9-547b-45be-bbba-460531fd67ef",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d2e2bf92-2f54-41cc-8c84-e14d51304543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bd57da5-063c-4a93-90d7-6c476a79f043",
        "cursor": {
          "ref": "995ed583-1b4d-4e00-843c-f80b993da791",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "84fc5e5a-95ef-4cb5-bd11-7105024f421a"
        },
        "item": {
          "id": "7bd57da5-063c-4a93-90d7-6c476a79f043",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "94d3d29b-b197-4f25-ac4f-d4dc6233e73e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "740cff68-2764-41c0-81e8-bb0894c44680",
        "cursor": {
          "ref": "a3cfd835-890d-4c4b-afde-49269d5b409c",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "8746dabf-ea8e-4e86-b5fc-2215bf2fc88d"
        },
        "item": {
          "id": "740cff68-2764-41c0-81e8-bb0894c44680",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "7f1db218-6889-47ac-9f8d-f2082f3acbe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22213bfa-935a-4cad-95e3-4192fc90eb4e",
        "cursor": {
          "ref": "c942e5dd-5d9b-44f2-b452-4b5423aaff26",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "18aaaf4d-2741-4aa6-ba2e-341db0c19332"
        },
        "item": {
          "id": "22213bfa-935a-4cad-95e3-4192fc90eb4e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d4ef9b7d-6e42-4e9e-9b86-6d5e38b9826e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beec58be-c303-46f8-9f06-679f83d1c2ee",
        "cursor": {
          "ref": "478b30bc-a4dc-4f25-b313-f05a3c5db534",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5d092d3c-cb83-49cd-b4d5-dd46d3370146"
        },
        "item": {
          "id": "beec58be-c303-46f8-9f06-679f83d1c2ee",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "282ed88b-91f2-4d5c-b418-97909b7bff04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded29d4c-648c-4fed-9980-3a59e8decd38",
        "cursor": {
          "ref": "b24da535-be55-4154-a090-b0de25a7730c",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "31ed345a-3454-4f5a-83aa-01a66722ea60"
        },
        "item": {
          "id": "ded29d4c-648c-4fed-9980-3a59e8decd38",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "383979e3-d651-433d-b7a5-4f65728df15a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb0af16-a1d3-4e06-acca-50d68b0666f5",
        "cursor": {
          "ref": "23346438-0b24-4452-89bb-c2dc80181dff",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "971fca59-addf-417a-be85-a8e3e76a1ca4"
        },
        "item": {
          "id": "0fb0af16-a1d3-4e06-acca-50d68b0666f5",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a7585687-3545-44ed-80c0-5d575ed39eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a7a0cc-8ae5-41f7-98a6-1070e19e1a68",
        "cursor": {
          "ref": "eaea3b50-a4d6-4cb3-9fd8-47c55aec25e6",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a007c2df-38f9-482c-b14e-f2b55db759c0"
        },
        "item": {
          "id": "75a7a0cc-8ae5-41f7-98a6-1070e19e1a68",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "ddb2c1e2-06f5-4d11-a22b-32898bff80a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece183a7-69d8-47c9-82a3-d516bd13cfd1",
        "cursor": {
          "ref": "f96f0f65-6860-415a-a2e6-54c8f7024b7c",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8461965d-22e2-432e-92cf-92be7d728212"
        },
        "item": {
          "id": "ece183a7-69d8-47c9-82a3-d516bd13cfd1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "46031451-213f-4264-aa29-ca97e07b7f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "733dfa8f-90b3-4eb6-b9f6-0f463e320195",
        "cursor": {
          "ref": "bd4b009e-26a8-4e25-84e4-52ad30c6be2a",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "8ab1b271-3584-407e-ba6d-b9e984d7612b"
        },
        "item": {
          "id": "733dfa8f-90b3-4eb6-b9f6-0f463e320195",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "9f061789-f7b5-464b-b50b-4fdca03dc0a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f94a8b18-48a0-46c9-bb09-be2e8f902d13",
        "cursor": {
          "ref": "efea65c3-303d-4fae-9bcb-25b6e6a9f1ed",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "9e0304c9-30ac-4ad0-85f6-31e5c902be6e"
        },
        "item": {
          "id": "f94a8b18-48a0-46c9-bb09-be2e8f902d13",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c619ebd7-e12b-4761-92a9-f318b7552fe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa0b92b-e392-4c11-ba96-3886b43f1899",
        "cursor": {
          "ref": "e46d8c63-1531-4889-9c00-dea42b2c30f5",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "be9a9118-4c0a-4df3-a6c6-911f36eb0861"
        },
        "item": {
          "id": "daa0b92b-e392-4c11-ba96-3886b43f1899",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6bb93ebe-956a-439c-8af0-93122649cd94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3445a949-bcec-4f1f-9834-9aec59291058",
        "cursor": {
          "ref": "ef093af0-b521-4fce-a82c-1f5776e7e480",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d761adfd-8563-44e0-9e12-f7e877b4a088"
        },
        "item": {
          "id": "3445a949-bcec-4f1f-9834-9aec59291058",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7f0bab7b-1ca4-4534-9fe9-1954b0799c1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "986d8750-ff4c-4d1c-bea0-da52833315dd",
        "cursor": {
          "ref": "efcb9e13-34fb-4a0f-825b-1837a565ba01",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "19052a57-f925-4b57-a593-d0dd4228bd3a"
        },
        "item": {
          "id": "986d8750-ff4c-4d1c-bea0-da52833315dd",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "66ef26d5-754f-4d7d-8756-1321c7e8acd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dea1031-d19c-4c98-8eda-9224ab6912bb",
        "cursor": {
          "ref": "f7507614-48c0-44ba-906e-fc6daab3f713",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "29a7b091-1e18-4855-b3c2-cfba1de5d8ee"
        },
        "item": {
          "id": "8dea1031-d19c-4c98-8eda-9224ab6912bb",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a9567f80-6932-44f1-8009-1d8a7d49cd28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c1d58c9-2565-46e1-b9ae-8cab0d879005",
        "cursor": {
          "ref": "a874fb97-2b7b-4513-8909-9994a7cd08fc",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "05887437-91d5-4df3-809e-66085fc7c4a9"
        },
        "item": {
          "id": "1c1d58c9-2565-46e1-b9ae-8cab0d879005",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f455915f-71ba-4356-a883-3927d0efd99d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c809f4-0929-4e4d-bb8e-a2a9f2c008dd",
        "cursor": {
          "ref": "54098a12-5312-4862-920f-9e3b973ca3fd",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "7799c962-46d3-4c0b-abd2-0c721512b75a"
        },
        "item": {
          "id": "a1c809f4-0929-4e4d-bb8e-a2a9f2c008dd",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "91d7b28b-7e2c-46ce-a96e-17360433701e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "744a25a7-34d7-4fd4-b007-f0b66427cb54",
        "cursor": {
          "ref": "533734ce-4cad-4c99-8733-1014e17090e7",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "d8c0c80a-42bb-477b-8ce8-40e93e3f747b"
        },
        "item": {
          "id": "744a25a7-34d7-4fd4-b007-f0b66427cb54",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ce7c2606-4c4c-47f7-81a3-b24c19e0af07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a019e0-f310-46e5-8dac-be820062d630",
        "cursor": {
          "ref": "8c5013e4-6723-424e-86a3-b2df265f25d4",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "cfb5f3ab-edec-456a-b58f-ca50e5274c0c"
        },
        "item": {
          "id": "b0a019e0-f310-46e5-8dac-be820062d630",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "3a48d50a-2000-449e-830b-26c14663683d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "584e64a8-fced-47ff-a788-950c09d116ef",
        "cursor": {
          "ref": "1715ce4b-cfc1-49db-8cfc-3cbdeb46a530",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d4029828-9aec-40e1-b987-8923c43e6c10"
        },
        "item": {
          "id": "584e64a8-fced-47ff-a788-950c09d116ef",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "ebf2e088-bdc3-4fa0-bde9-df44e32ceaf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c96a44e-221c-4461-be9d-dc283445f7d5",
        "cursor": {
          "ref": "8e23d1b9-4546-40bb-a9fa-b450622c5739",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "92a56528-e895-4de9-851e-6faf2ca1881f"
        },
        "item": {
          "id": "5c96a44e-221c-4461-be9d-dc283445f7d5",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "bb1662f5-b0d7-4712-9ce1-400c44edbd1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66271c9c-dffa-49cf-8fb4-dc1a83b46209",
        "cursor": {
          "ref": "e6254a82-d3b3-44ab-a60e-c2f0e8ff7036",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "aa07a433-9700-4e3d-af91-e09f3fe96518"
        },
        "item": {
          "id": "66271c9c-dffa-49cf-8fb4-dc1a83b46209",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a5500afa-0932-4775-a262-867cbe0a0b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a6ae54-403a-4034-910f-303b062060cd",
        "cursor": {
          "ref": "3ff01a25-e83b-41c8-a722-b610014dabec",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "abc634dc-697d-4ae8-86b7-3df64dca3b6e"
        },
        "item": {
          "id": "a5a6ae54-403a-4034-910f-303b062060cd",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "31e45ccd-ead4-4d0a-88b6-5d36b000e2d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba86932-054a-4cfd-ab73-7fcbfeab672d",
        "cursor": {
          "ref": "60670c03-13ab-49f3-bcab-4ad3109d898e",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0c3de2d1-0b30-405c-87be-40587098fd0c"
        },
        "item": {
          "id": "5ba86932-054a-4cfd-ab73-7fcbfeab672d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ba5e0ae1-fd75-4ff8-b66a-eec2b3d3f11f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a6b6b8e-5bc9-4f2b-b2a1-ad7977332b32",
        "cursor": {
          "ref": "0c631d3a-23a9-4553-9896-b3ef2a61d100",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3c34c565-fd54-47ff-a1ac-aa3f4e471fae"
        },
        "item": {
          "id": "3a6b6b8e-5bc9-4f2b-b2a1-ad7977332b32",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "4fc33be0-723c-49c5-bb4f-cdf708221938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6914ffc2-de01-404d-b902-e94a25b60ae1",
        "cursor": {
          "ref": "45347d33-d008-4af7-b89a-89ef84dbcb7c",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "4ec1a89e-6ee1-4b09-888d-9fcf872ed428"
        },
        "item": {
          "id": "6914ffc2-de01-404d-b902-e94a25b60ae1",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "fceaa94b-44ed-4522-9c2a-d73dfcc6cf23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a41204-9082-4bfe-b9af-d8ed6da3004b",
        "cursor": {
          "ref": "cd6d3fe1-06b7-46f1-9390-2fc3a73b53ed",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "f0711ffd-86e4-45a7-b086-066896274093"
        },
        "item": {
          "id": "a8a41204-9082-4bfe-b9af-d8ed6da3004b",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d3ec8c47-2b7b-4acb-af0a-c7c5a092f90e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "211d724a-9b1b-4019-8e1d-3cecc31dcfba",
        "cursor": {
          "ref": "d05b20cb-f4e1-48cc-b5aa-d2306098ef33",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "9179c0b6-de5c-46ba-8611-dbc5c492bd16"
        },
        "item": {
          "id": "211d724a-9b1b-4019-8e1d-3cecc31dcfba",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e00c57c3-9ef4-4b7e-b0a7-d145051b6bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850c50d1-ef83-4b33-9fdc-b0acdc7f328e",
        "cursor": {
          "ref": "96e294ea-73f4-4bda-856e-bb34709892ac",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "6cb5aa00-604f-43b2-8ff0-201fbce4f9e2"
        },
        "item": {
          "id": "850c50d1-ef83-4b33-9fdc-b0acdc7f328e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2ae81a84-9b8b-44c2-9922-a66e6569bb73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0cc290-585a-4d7f-92de-2481c51e143c",
        "cursor": {
          "ref": "77682004-0ecf-495a-ba5b-7a3dae8953df",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d3b89325-301a-4946-b7ae-be71f1831e04"
        },
        "item": {
          "id": "ae0cc290-585a-4d7f-92de-2481c51e143c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "037ca706-9e21-4467-9dec-2a25dab67755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8cf7cd1-dc33-4900-b808-5dc6ec15ffb3",
        "cursor": {
          "ref": "144843bc-2c27-4d09-b6a7-8f6f392d1aa0",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "33b29913-b7ad-43a0-9c7f-004e1a533a83"
        },
        "item": {
          "id": "d8cf7cd1-dc33-4900-b808-5dc6ec15ffb3",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b4ebedb4-9928-4ff0-88b0-17e22a0b968f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3197c90-5a5c-45c3-a211-bd0509e3b17d",
        "cursor": {
          "ref": "26d875d7-770b-4113-bf15-d7087b1a308b",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "221644d0-786f-49db-9e5d-fcff4d7d3ad9"
        },
        "item": {
          "id": "f3197c90-5a5c-45c3-a211-bd0509e3b17d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "9dff9693-cb4c-4fdb-92ca-974bcb055ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc3ba1f-f18c-4196-819b-0d0c3ed734a5",
        "cursor": {
          "ref": "fb8981a7-c87e-4dbd-ae14-35411ff3e8c7",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "fb9f8334-60d3-43d3-baf7-7708758eb6f6"
        },
        "item": {
          "id": "8dc3ba1f-f18c-4196-819b-0d0c3ed734a5",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "37e12411-acfb-453a-aa08-7aded2b95283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e72c157-3136-44bb-bacc-64bddcbc7d1e",
        "cursor": {
          "ref": "54e1d9cb-1a5d-4d25-ab14-5c4ab3605f3d",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "be495ff4-5429-4aa7-80df-8a9108654ae1"
        },
        "item": {
          "id": "0e72c157-3136-44bb-bacc-64bddcbc7d1e",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "43fb3966-da74-4234-946b-2c13f61f2e37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "227c4276-01ac-438c-b7f3-432f89709fee",
        "cursor": {
          "ref": "5d26be32-bfdf-4756-8941-49956d68b46f",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "3b4fb95d-e65c-460c-9927-dd45d3f8a278"
        },
        "item": {
          "id": "227c4276-01ac-438c-b7f3-432f89709fee",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "658f696c-bfa5-4c7e-a755-9698bd5413a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9a5d16-bcc1-4966-b98a-6fcaff19d8df",
        "cursor": {
          "ref": "c933283c-e8ee-4ac7-b9c6-e7e45ba70995",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "df7104ce-bb4e-44d9-a0ea-d835129ba468"
        },
        "item": {
          "id": "6a9a5d16-bcc1-4966-b98a-6fcaff19d8df",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "17d5f2d0-a7cc-47e1-9cba-fc90f735c0be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d17ee0-731a-4028-91fa-8ea728479e2c",
        "cursor": {
          "ref": "6c7f119b-5178-4547-aeaf-764db8edd08c",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "15f7a28e-5e07-43fa-a224-e72e3a04ce18"
        },
        "item": {
          "id": "a4d17ee0-731a-4028-91fa-8ea728479e2c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c87e594e-542e-4992-ae77-86fe9e59d94d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69823d66-17a1-4e8f-b0bb-d2136bdab6b6",
        "cursor": {
          "ref": "efff8c56-5c4d-4674-b02d-fa512bf816d6",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "8d848531-943a-4ab8-984f-3a1edb7d3ecb"
        },
        "item": {
          "id": "69823d66-17a1-4e8f-b0bb-d2136bdab6b6",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "cd482040-10b7-434d-be54-6574efc9de2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30ea486c-352f-49ca-986f-351ff8d98b53",
        "cursor": {
          "ref": "e903ccfa-7a98-4021-85be-b80826c6eda4",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "3640421e-89f3-41d0-b7eb-7e97496c87c2"
        },
        "item": {
          "id": "30ea486c-352f-49ca-986f-351ff8d98b53",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "37e9e66c-1464-4f94-9e66-c34e6181908f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a5c7dc0-2df5-4071-873e-d38d3df88770",
        "cursor": {
          "ref": "c71f2da8-0c70-4f98-8014-11c88b50f563",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "581aca74-2ab9-4db2-a7a7-c2769bcd7be1"
        },
        "item": {
          "id": "3a5c7dc0-2df5-4071-873e-d38d3df88770",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "cdf59350-95d6-4abf-8fff-0432a69a2080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1764eff0-15c2-4a5f-857b-a643439c67c5",
        "cursor": {
          "ref": "aa8e899c-0097-4f98-b518-d4dc2d437665",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "0839cc86-440f-4b0e-b55c-255d4748aae0"
        },
        "item": {
          "id": "1764eff0-15c2-4a5f-857b-a643439c67c5",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2f474fa0-1138-4922-8550-3af12196d17c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dedcdd1-4574-4f33-9004-623db032c4d4",
        "cursor": {
          "ref": "e1c75897-8370-4f47-a756-40717b7887f2",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "dc4372ae-b8d2-401a-bad9-fae82fa20fa2"
        },
        "item": {
          "id": "1dedcdd1-4574-4f33-9004-623db032c4d4",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "4de98dc9-8cad-413f-b5d2-9f8b912393cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eedbe7f4-caf4-41a7-8e59-e92e3cceb5ad",
        "cursor": {
          "ref": "af57a6f5-3f50-47dd-98e5-2a2b2fde0bbd",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "58e2b4a4-76ea-4167-ab00-9c3891ea8dd2"
        },
        "item": {
          "id": "eedbe7f4-caf4-41a7-8e59-e92e3cceb5ad",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d0b00a8f-1395-43e3-83d7-e9ee628b21ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6553552b-e07b-44e1-b3e9-d8e029966828",
        "cursor": {
          "ref": "75781798-e77c-4c56-84e5-4a486281656f",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "0711b6e3-b68f-4f11-9500-f1ebf0f59114"
        },
        "item": {
          "id": "6553552b-e07b-44e1-b3e9-d8e029966828",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "607985fb-934c-42cc-94c4-a7407bf344de",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e46d511f-4060-4502-bf48-7ec14328f7e8",
        "cursor": {
          "ref": "cadb324b-e909-4dea-9902-1cd536ffb87c",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c2f75739-292b-4f69-9ef2-d899edf03cf6"
        },
        "item": {
          "id": "e46d511f-4060-4502-bf48-7ec14328f7e8",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "48f243c6-819a-47d3-aab0-4e32fd3452ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "498c86ae-3a63-4437-8325-df16b2ab273c",
        "cursor": {
          "ref": "af67bd22-6a7c-4bcf-813b-97d0d3d6da3b",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "eed3fc4a-7dce-45b4-afdd-afbeb597e134"
        },
        "item": {
          "id": "498c86ae-3a63-4437-8325-df16b2ab273c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "0deb4889-b5bd-4dc4-b958-61b1105d3807",
          "status": "Created",
          "code": 201,
          "responseTime": 2835,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c03bf8-2c1d-4779-809f-aacd4b56eca8",
        "cursor": {
          "ref": "8d7003f6-5dd2-4288-8aa3-03633c3d2b58",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "74894729-bcf2-409f-958a-f38cf1934a07"
        },
        "item": {
          "id": "29c03bf8-2c1d-4779-809f-aacd4b56eca8",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "835577d7-57bc-4f6f-817e-6c37547f4077",
          "status": "Created",
          "code": 201,
          "responseTime": 2107,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1439df8-5a12-4816-a3c9-1b03948db49d",
        "cursor": {
          "ref": "bdf32c18-c25f-4c0d-bf53-138092aa1413",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "1b3e18c8-6a44-4198-aa9e-db2e2d210924"
        },
        "item": {
          "id": "a1439df8-5a12-4816-a3c9-1b03948db49d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "3cf9fe5f-300a-40e0-9c30-ff7e4f358fbc",
          "status": "Created",
          "code": 201,
          "responseTime": 2156,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "36463793-682f-4759-b474-512681752f65",
        "cursor": {
          "ref": "26962c51-845c-411d-83c9-45fb1ce05922",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "21f59392-8a9d-40ca-988f-50252744f3de"
        },
        "item": {
          "id": "36463793-682f-4759-b474-512681752f65",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "1fb1f735-9226-450e-9d54-fad1e6a83fe0",
          "status": "Created",
          "code": 201,
          "responseTime": 2780,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "475a55b0-4ff1-469c-b6ac-491719501081",
        "cursor": {
          "ref": "19c7c473-0b0a-4baa-8be4-5332391b53e3",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "5d24bb34-fe1a-4b71-8384-3f5febf38894"
        },
        "item": {
          "id": "475a55b0-4ff1-469c-b6ac-491719501081",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "52d23333-7d4b-4d48-ba4d-47058746449a",
          "status": "Created",
          "code": 201,
          "responseTime": 2106,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e077b4-f9c4-4be7-8b4f-e427291d0bfb",
        "cursor": {
          "ref": "4df667a6-670e-4379-9048-ad0df2e75d4f",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "7a700460-8202-4849-8e35-35d32d20b00e"
        },
        "item": {
          "id": "b3e077b4-f9c4-4be7-8b4f-e427291d0bfb",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b0586f7e-2a9a-4070-9b78-804111fa50cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "afc9ab20-dc51-4785-b953-096bf38b17ef",
        "cursor": {
          "ref": "ee0e3c7a-1315-430a-a96a-e8099de20edd",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b2fd9016-0163-4ed0-aa31-eed2f8eaafda"
        },
        "item": {
          "id": "afc9ab20-dc51-4785-b953-096bf38b17ef",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ec415edd-a4f1-471a-869f-80d2f6d2e53c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ebfc482-6eb0-4f1d-b08d-60be130dcf97",
        "cursor": {
          "ref": "672c434b-95a5-438e-8481-9f52e21cb2ae",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "1e2221ea-85e8-432f-b67d-441a8254db42"
        },
        "item": {
          "id": "5ebfc482-6eb0-4f1d-b08d-60be130dcf97",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "133c680b-11ab-424c-b2a5-2afe793dcde7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b707433f-aaaf-427f-9d1f-5eee4ac5c202",
        "cursor": {
          "ref": "717d35ee-e0f7-4119-83a9-acb453f22290",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "cdea9f18-ead7-4c39-93cf-dc1ed29c1ec4"
        },
        "item": {
          "id": "b707433f-aaaf-427f-9d1f-5eee4ac5c202",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "bc8eb500-7a52-4c19-af32-0c4b06b456c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58aea066-06c9-43a8-8db8-799565e0c92a",
        "cursor": {
          "ref": "5b68d4f5-faa4-46ea-9737-c33c265133d6",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "6067d46f-a8d3-4da8-98e7-5e6d01e1def5"
        },
        "item": {
          "id": "58aea066-06c9-43a8-8db8-799565e0c92a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c45dd06a-4a4c-4b20-b5c4-15f824ef8241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "756d20e2-0c73-4bd3-be26-9c43c913fdbd",
        "cursor": {
          "ref": "b1275b43-dcd1-4588-8b2a-dd66542bb367",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "259e7e54-0657-48f3-9f55-8537f76063a4"
        },
        "item": {
          "id": "756d20e2-0c73-4bd3-be26-9c43c913fdbd",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "540695d8-1cd6-4343-825a-84845cfcf48f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb77d0b8-80ed-4c20-881c-7f2698ff975b",
        "cursor": {
          "ref": "82d2706e-07d9-4320-a858-ad53ab24319a",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "9df52428-5e06-41e1-8f70-395f406bd79f"
        },
        "item": {
          "id": "eb77d0b8-80ed-4c20-881c-7f2698ff975b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a004bb47-67b4-4323-a990-ba728d4e438a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "936d282a-5803-4a4b-b46b-dcfd4fd6bb22",
        "cursor": {
          "ref": "36202d3b-6872-4551-82ad-a765080eaeef",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "fcebb862-e151-47fa-b238-ba7d9a2655bb"
        },
        "item": {
          "id": "936d282a-5803-4a4b-b46b-dcfd4fd6bb22",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a85205f1-c7d2-4c3e-a00d-d2f3ff95ed0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c428719-3eac-4042-a8e8-f8209b5fdcc1",
        "cursor": {
          "ref": "fa01a1a3-7b11-4adf-8a76-ed94d56ccda5",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "b1d33bdf-879c-47ac-90ff-33816059f561"
        },
        "item": {
          "id": "3c428719-3eac-4042-a8e8-f8209b5fdcc1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b2bee6e6-4a37-4a7e-84e5-a451ec50690a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e341f8fe-d593-40b3-bbaa-0326fce1e905",
        "cursor": {
          "ref": "5732cabc-792f-4fdb-afe7-a694ae922237",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "85a1ef2e-5c17-49e4-8f35-0777e73eb3d8"
        },
        "item": {
          "id": "e341f8fe-d593-40b3-bbaa-0326fce1e905",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d119388f-16de-4978-b54b-f277320485f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6caa59a-aebf-47ba-b073-ec60c0ebe437",
        "cursor": {
          "ref": "6da4aa3d-381b-414c-bb22-d28472367b7a",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "5c1a15ce-5c89-452d-a644-885e923e0434"
        },
        "item": {
          "id": "b6caa59a-aebf-47ba-b073-ec60c0ebe437",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "239e287c-d70c-4108-8064-7426c511c0c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a35bf197-0650-4529-a320-8a8e75f16bd1",
        "cursor": {
          "ref": "b96c682d-abf5-4119-ac92-d112c946ceb2",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "3b88bd14-18bd-4646-83c8-fe3667e6307c"
        },
        "item": {
          "id": "a35bf197-0650-4529-a320-8a8e75f16bd1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8e5ba4fc-4cb8-4bba-998f-fb09e44396cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68268dea-87a6-48d8-8c15-1c1ff84067bf",
        "cursor": {
          "ref": "3bf10f2b-18eb-422b-ab7e-c0cc75cfc69a",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "1a58e0ab-0566-4927-bc60-268c08a3420f"
        },
        "item": {
          "id": "68268dea-87a6-48d8-8c15-1c1ff84067bf",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8a75e1a4-8daa-44e6-bda1-ecdfcf31457f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c212b2-2307-402b-a8a8-453edd6af38f",
        "cursor": {
          "ref": "4807b526-4b70-4e6e-a03b-be3264137269",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "7e02d994-b317-4d19-9feb-732ca7670469"
        },
        "item": {
          "id": "73c212b2-2307-402b-a8a8-453edd6af38f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d3188c4d-0486-4362-af7d-b33e3c82f43e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "479b128f-3b9a-4da3-8e73-e056e26d3ea0",
        "cursor": {
          "ref": "213439c8-2c3a-4126-a3e4-937a1604fb66",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "64b9f8ae-ce13-442f-b0dd-54c1571ac299"
        },
        "item": {
          "id": "479b128f-3b9a-4da3-8e73-e056e26d3ea0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e0cfc1da-6749-4089-ad20-678e6d6eb6f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b2f9cf-38ed-4992-b8a1-b7a7bc394418",
        "cursor": {
          "ref": "eb8ae892-9d66-4794-8f25-540f51804553",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "0eb7d719-77a9-483f-a307-a8ab4902b569"
        },
        "item": {
          "id": "d7b2f9cf-38ed-4992-b8a1-b7a7bc394418",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9ff2ef87-1230-4788-a7e8-23496673559d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b825a71-c29d-4e65-85b9-2080c78c4cbc",
        "cursor": {
          "ref": "4b302d78-c4ab-4aae-a0c6-e811b99fd219",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "88fa0fd3-47eb-41fb-8381-c8ad15154123"
        },
        "item": {
          "id": "7b825a71-c29d-4e65-85b9-2080c78c4cbc",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9f311091-324e-4111-8f73-e3fe6d943055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a068f6-c01d-41f6-9ff9-c024b56c2a62",
        "cursor": {
          "ref": "ee6eaf5f-3222-4fc1-8a5a-00cf972f1260",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "000fe322-9f91-4582-bb97-c5c4b4c47573"
        },
        "item": {
          "id": "80a068f6-c01d-41f6-9ff9-c024b56c2a62",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9d4fa562-506f-487d-b5fe-9d171d115085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caeb8da2-f0d0-4f8b-8969-379c8569469b",
        "cursor": {
          "ref": "358f126e-dc8f-44ec-bb8c-dfb21f32e0e2",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "18fec5e3-5faa-4149-88a2-ac3218fcd83a"
        },
        "item": {
          "id": "caeb8da2-f0d0-4f8b-8969-379c8569469b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "84407910-6f2a-4975-bc07-1a7b0d2d802d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f88f299-79a8-4cb2-a342-7eaeffe16263",
        "cursor": {
          "ref": "af6c88d4-aa1f-406c-8c55-c6d69b4c6e04",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "72d7c96f-f622-4814-86a5-df9568f8a956"
        },
        "item": {
          "id": "0f88f299-79a8-4cb2-a342-7eaeffe16263",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "27db875e-33b8-430f-a6b2-e20a6551bdb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b05e539-0537-4e7a-97d0-c58a98836979",
        "cursor": {
          "ref": "0a57f48d-db26-4ed3-bf47-d3d668cfc478",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2b288666-4d55-4ff2-8a2d-4b3a8033fc4a"
        },
        "item": {
          "id": "6b05e539-0537-4e7a-97d0-c58a98836979",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8d18c9a6-a0ad-474f-a75a-8437499225dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d913797-feb5-4618-a803-1f23eb7e6e15",
        "cursor": {
          "ref": "8bde00e9-7a7f-4b6c-830f-fc6fdc457298",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "0db64ccf-7b2f-4719-8e0b-6666cac05406"
        },
        "item": {
          "id": "1d913797-feb5-4618-a803-1f23eb7e6e15",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e4116b8e-7d9d-439d-a008-7d8d9a8b71dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c5fe85-1309-478a-b9b5-e4df79638ad1",
        "cursor": {
          "ref": "825c4b0c-dc56-4c75-820f-2cfc6ad859b5",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "3cfb7d13-09ee-4223-85b6-303223b99ee5"
        },
        "item": {
          "id": "08c5fe85-1309-478a-b9b5-e4df79638ad1",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d0c0eb1c-7eda-4bda-a3f1-057182b6ddb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb25136-1ed0-43b5-880a-f30b5bac0ce4",
        "cursor": {
          "ref": "1e69590f-e98e-4f10-bb7f-a00c4bc61cdd",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f024180d-0dae-4f27-831b-bfaddbeeda20"
        },
        "item": {
          "id": "bfb25136-1ed0-43b5-880a-f30b5bac0ce4",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6f075bbd-7cbd-4f0c-90e8-f02ce3c5e6c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e781d0-c73d-4e24-8d8e-9d1f71656197",
        "cursor": {
          "ref": "fc945ab9-1e7e-41d5-8f96-b807d3972b68",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e8fc1b9a-4ee1-4d74-b2b0-07645bb091da"
        },
        "item": {
          "id": "04e781d0-c73d-4e24-8d8e-9d1f71656197",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ed7582aa-54fa-4d4c-9d9e-ead8281de1be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e91c1e91-7e5d-48c0-b867-608bedfef41a",
        "cursor": {
          "ref": "95e376a6-05da-4897-ba1c-239f525b1fa3",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f0f6d9da-f84e-4e4d-97c4-ff466e10f8b4"
        },
        "item": {
          "id": "e91c1e91-7e5d-48c0-b867-608bedfef41a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "cff3cbf6-3f8d-4bfa-a13d-a386d05f776c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7caaebf8-0437-4b81-b87b-19c6cd530b2e",
        "cursor": {
          "ref": "6ccf1d90-fa1c-4a94-bfa4-4d384bf096e1",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d25b6b60-6dd8-4ca6-8d14-97374a6de877"
        },
        "item": {
          "id": "7caaebf8-0437-4b81-b87b-19c6cd530b2e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "42508894-51ba-4c25-bf21-2003d1263c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca045f2f-0936-45f9-8519-826c8b4fd80e",
        "cursor": {
          "ref": "2b3e37aa-8ee3-4441-84de-e81107f5d0a5",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "9e1d7d17-e3fe-4dd3-920b-b4a48cffbc67"
        },
        "item": {
          "id": "ca045f2f-0936-45f9-8519-826c8b4fd80e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "62390ea2-f423-41c5-9190-dd646d1ee7d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931d8b19-fa73-4489-9371-950126fe6912",
        "cursor": {
          "ref": "854d2690-5144-4746-ada9-b10e418ef6ca",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "58cbe813-f4b8-450c-94c6-3ceb4690aa9b"
        },
        "item": {
          "id": "931d8b19-fa73-4489-9371-950126fe6912",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5e928fe8-2c31-4bad-b13e-8209516d362a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d114644-f4cd-4192-bf88-cf5763fb6458",
        "cursor": {
          "ref": "dfe3c7d5-118c-4624-81f8-c48fae353bc3",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "45fa1bd9-dda9-4399-bd7a-6e7cb31e7775"
        },
        "item": {
          "id": "1d114644-f4cd-4192-bf88-cf5763fb6458",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "abd29f83-07dd-48b2-8c08-28407a3ddc34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8f8cbf-679a-4258-b357-149e48b4b1ed",
        "cursor": {
          "ref": "6045465a-43ba-4618-a8bf-bc634effac3b",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f2f8c295-fcde-4a4e-97e0-fbd1077c3543"
        },
        "item": {
          "id": "dd8f8cbf-679a-4258-b357-149e48b4b1ed",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2b42fc44-8398-4867-a257-97c6b56d405a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c548559f-2918-4b80-824d-0ae2ff2cdbb9",
        "cursor": {
          "ref": "75eb7d6b-a1b1-4ab6-a2e0-4e1105243404",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "eb9e1e53-b599-461d-ba85-ea2d485a76db"
        },
        "item": {
          "id": "c548559f-2918-4b80-824d-0ae2ff2cdbb9",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d71ed531-35bf-484d-bcf0-098277ed4d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b355de1c-f57c-4925-8a70-913d2efb1ca9",
        "cursor": {
          "ref": "96c48158-370f-4328-95bf-36b64cd98044",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ddee8fd4-9332-4ffb-9a64-fd02d219783c"
        },
        "item": {
          "id": "b355de1c-f57c-4925-8a70-913d2efb1ca9",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "20486176-a34c-4f06-9ed1-0c112636c4c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c41e1618-a507-4614-9641-863b8addbd8d",
        "cursor": {
          "ref": "c8589aa2-9c58-4229-9535-a3143e4799b9",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "21f5a11c-ae94-4fd4-b2f0-c5c45836bd63"
        },
        "item": {
          "id": "c41e1618-a507-4614-9641-863b8addbd8d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "696ca2d2-cd75-4557-94e9-d0c622c09ff6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "445ac336-91b3-4981-9463-8ef71607df2a",
        "cursor": {
          "ref": "280c7a48-e440-41fd-86cd-ec80b631b8cb",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "33f85fe7-6556-41b2-8364-af6ce0becd80"
        },
        "item": {
          "id": "445ac336-91b3-4981-9463-8ef71607df2a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0e0d5b24-bae5-45a4-b12c-4360b7114b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5024b293-0066-437f-940e-7b0dd26cefd3",
        "cursor": {
          "ref": "caefb53c-6845-4f8f-a9d2-1a4a4751ca31",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "725d26b7-367f-4d77-a124-096f14f5ab64"
        },
        "item": {
          "id": "5024b293-0066-437f-940e-7b0dd26cefd3",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b5abeabb-4f95-4089-b185-f703fe914e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c7cee3-7440-46db-a221-92748e317f87",
        "cursor": {
          "ref": "51c99059-354a-43f0-adcc-0a955c75e291",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1a7b2656-9cdc-4770-8af1-3f40732ffa8f"
        },
        "item": {
          "id": "c2c7cee3-7440-46db-a221-92748e317f87",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "186e3e18-2ceb-49c7-bfcc-ab43f1179786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef266973-8ce2-45d5-bf51-c51d88207746",
        "cursor": {
          "ref": "34d2208f-a3f5-4927-a1b4-7b88cee8a0c5",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f1a2d305-dd21-4edb-a20f-0935e2f306c6"
        },
        "item": {
          "id": "ef266973-8ce2-45d5-bf51-c51d88207746",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8d4dd952-97ef-4292-abdc-135364322d08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a70fadd4-fdd5-4f3b-b051-0545e8bf44cd",
        "cursor": {
          "ref": "7384ec9a-f09e-423d-b92b-34af9f012df7",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "1f27370e-8853-46e6-b9fd-c0916e5b2007"
        },
        "item": {
          "id": "a70fadd4-fdd5-4f3b-b051-0545e8bf44cd",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d14167ff-3504-45cd-885e-e09a9fe867a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a547727a-3408-473d-9fde-633ac1119363",
        "cursor": {
          "ref": "fbceb874-33db-4fe4-9687-4d285d13645b",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3baaabc0-052b-4b7d-a3a2-28db7ad9fdd8"
        },
        "item": {
          "id": "a547727a-3408-473d-9fde-633ac1119363",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "262688e4-1c5c-4a51-ad9f-737d81a53362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c25d3e74-787f-4056-afeb-cc8ff191c6a3",
        "cursor": {
          "ref": "fd276013-43a5-4542-a231-96fc43969978",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "87768452-b2e4-4d43-ada6-c25f0a099913"
        },
        "item": {
          "id": "c25d3e74-787f-4056-afeb-cc8ff191c6a3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "bee416ad-42be-4dae-a4df-370698d182a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f01c4ede-c5fc-4b86-be3c-79c6fd4b216f",
        "cursor": {
          "ref": "3029435c-f427-44c8-b722-b16bc49288e1",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "da9ed95e-b025-4833-bca2-7a864a3cff78"
        },
        "item": {
          "id": "f01c4ede-c5fc-4b86-be3c-79c6fd4b216f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "af616313-2439-4b44-90c8-211f0c6e9f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb7d9354-e862-4e7c-8f14-716f2d5aa878",
        "cursor": {
          "ref": "280d551a-b1dc-4188-94c6-788f73a8078b",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "cc025630-a49b-4342-a696-a78589823b30"
        },
        "item": {
          "id": "eb7d9354-e862-4e7c-8f14-716f2d5aa878",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "088e31f0-259a-40e3-b717-a89333d81359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5870697-bad1-4895-924d-fcb79c17734b",
        "cursor": {
          "ref": "bd5d3a43-1e34-49d5-83bf-c17c079ebbc3",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e68401dd-f4d2-44d3-ac9a-043fa6c61c9e"
        },
        "item": {
          "id": "e5870697-bad1-4895-924d-fcb79c17734b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e55eae11-4338-4d55-b624-8ed4e6aa786b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d68416c-07f3-4882-adf3-7d628495d1b8",
        "cursor": {
          "ref": "d81a764f-dd93-4c28-8857-5aad2d151266",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "721e1f1c-c310-4151-99db-dd5989e9399e"
        },
        "item": {
          "id": "3d68416c-07f3-4882-adf3-7d628495d1b8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5da5d4d7-a2d4-4c20-bba4-5d6f79329c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a2f7a1-cc4c-466b-ab97-42112f869cf5",
        "cursor": {
          "ref": "ce24e5c8-6a0e-4509-852c-a65625687b0c",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "02c5f9ea-1090-43ee-92b0-e91f44d65612"
        },
        "item": {
          "id": "91a2f7a1-cc4c-466b-ab97-42112f869cf5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bec1c76b-86b4-4db5-945d-9adbaaf327b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c5d093-82e6-49b2-ac7b-20f038fb2af0",
        "cursor": {
          "ref": "8854bf3c-c4d6-4dc7-94f4-6cf421f154c3",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3228ccdc-3252-43b9-86c0-f73addb3c0ea"
        },
        "item": {
          "id": "34c5d093-82e6-49b2-ac7b-20f038fb2af0",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3d42e38e-4e28-4bec-a35b-de3425db4dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f76415-8cb2-4ebf-8505-b2eb09ab785e",
        "cursor": {
          "ref": "b65ee476-b4a5-47b2-869f-e5b17d0f12d0",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "671d16c8-8bd5-45c2-a806-15a5673027e5"
        },
        "item": {
          "id": "68f76415-8cb2-4ebf-8505-b2eb09ab785e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "cb2c82b9-cc32-4393-8d50-de896a6186f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c490aa2c-1512-4ed3-ad31-f0291b3e852a",
        "cursor": {
          "ref": "d2456b96-264d-43de-b61b-589c3b61fafe",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "65337383-cbea-4297-86ab-e7f91e3ade03"
        },
        "item": {
          "id": "c490aa2c-1512-4ed3-ad31-f0291b3e852a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "97b523f1-8aba-4176-b922-dd622125aa36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41922481-0a1f-4c1e-ae6c-d0d7d3b158d9",
        "cursor": {
          "ref": "893beb0e-f01c-4a97-81f6-a21bcaeda008",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "4035eed7-8d4b-4aa4-bdd3-7c3245d7736f"
        },
        "item": {
          "id": "41922481-0a1f-4c1e-ae6c-d0d7d3b158d9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "bbed649f-9928-4245-a412-7d0235005ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2406197e-b2cb-40f8-a77f-051e78cfa4bb",
        "cursor": {
          "ref": "4228b80e-a568-4d24-a976-e960476d752a",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "969f6a55-96ab-4903-9d5c-b7adcaa27ae4"
        },
        "item": {
          "id": "2406197e-b2cb-40f8-a77f-051e78cfa4bb",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7952c54f-f0b5-4f46-8093-52ab3322a6f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2899127-e70d-4b6b-840a-ca69379c5364",
        "cursor": {
          "ref": "30ba9950-45fb-45b4-82da-487971f3c8a3",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "4d2a79ca-704d-4bf2-a974-a6e488407c4a"
        },
        "item": {
          "id": "f2899127-e70d-4b6b-840a-ca69379c5364",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "fc06f2aa-9ae8-46ed-8f58-1916c3d90746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3145746f-777c-4909-aa44-e5c550a777bb",
        "cursor": {
          "ref": "391d02d3-41b2-4c10-bedc-76d5154a6186",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7068d077-dc86-4c83-9d5a-5e76763bfebc"
        },
        "item": {
          "id": "3145746f-777c-4909-aa44-e5c550a777bb",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "68bbcecd-c142-4cb7-a1d4-f9f2131745dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ff5717-8260-40c3-a30f-ed4ace041550",
        "cursor": {
          "ref": "25f2c7b3-0f55-4587-85a7-848044e7f54d",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "8e23c6ba-f037-43a9-a4c9-e46aaac6aba0"
        },
        "item": {
          "id": "49ff5717-8260-40c3-a30f-ed4ace041550",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e7749af1-24f3-4067-aa8a-914ea63a4c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4c0d33-f7fc-480a-a635-dbb1ca0000b7",
        "cursor": {
          "ref": "400fe670-8776-491c-a620-59ae2529eb59",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "a6ef7022-23d7-4900-8c73-6f19f7023b48"
        },
        "item": {
          "id": "ce4c0d33-f7fc-480a-a635-dbb1ca0000b7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a535020b-43fe-4b94-8181-3c0ca176dd1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1eac422-e374-4a4b-92e2-7071b3d1515b",
        "cursor": {
          "ref": "10cf335e-571b-43a6-a565-91bf7dceb065",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "06c2a1df-05bb-4d8d-82a9-972705a17dec"
        },
        "item": {
          "id": "f1eac422-e374-4a4b-92e2-7071b3d1515b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a8b4cd71-1290-47c9-9483-fefa5d979417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdadffa7-8e11-45ba-a601-ef807599ac03",
        "cursor": {
          "ref": "5028f14f-c782-4009-96ff-89e0e030df32",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "283ece7c-f5cf-4cb4-8719-2a15a57a1017"
        },
        "item": {
          "id": "bdadffa7-8e11-45ba-a601-ef807599ac03",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b417c4a3-fdb6-4edc-a2fd-28908ca66ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49e40dbf-d51d-49c1-b4b3-7f69a4aa5387",
        "cursor": {
          "ref": "b31e82a5-6843-4a12-91e7-66907bd5e98c",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "17073b1e-ebd9-4484-9c1c-4a6f49bfe497"
        },
        "item": {
          "id": "49e40dbf-d51d-49c1-b4b3-7f69a4aa5387",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0e6c32f3-a5a6-463e-a765-45f9ac157bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c28500c6-ae95-4200-ba42-9f687935090f",
        "cursor": {
          "ref": "bd38cabd-7e02-4c2c-9936-0a9338c47172",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8909ed5e-04fd-45d1-a25c-e9dfb4d70fd3"
        },
        "item": {
          "id": "c28500c6-ae95-4200-ba42-9f687935090f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9fb02fa7-eeb5-4bff-86b8-f7097ae0b7a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc5033f7-b4f0-40b4-a537-d3d5dd9eee9b",
        "cursor": {
          "ref": "8c3b6cf9-d59a-475a-8c96-0e237734264c",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "355dc39e-2bc0-4d4d-91a3-8c31a8fb32cf"
        },
        "item": {
          "id": "dc5033f7-b4f0-40b4-a537-d3d5dd9eee9b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1a5f727c-17a3-4588-b7f9-abbc841884bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2c7a1a-eb1c-4ea0-b2b2-de4a1690e66b",
        "cursor": {
          "ref": "b06ae3b7-5cf1-4439-97b8-7a3d2ac59910",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "18e090dd-5e26-42d0-b3b9-9f54f24382eb"
        },
        "item": {
          "id": "ac2c7a1a-eb1c-4ea0-b2b2-de4a1690e66b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "44ce1837-97ab-4cb2-8921-1add064a3d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "021d1c2b-70db-446a-9163-e49ae43e0054",
        "cursor": {
          "ref": "c8940eeb-d617-4d98-a8ca-214579ab8a40",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e98897d5-e4ee-492d-9f9e-619c906721af"
        },
        "item": {
          "id": "021d1c2b-70db-446a-9163-e49ae43e0054",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "72c7969a-1617-441a-984d-eb0dac83baa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ddff64-c01f-405f-a6e3-46db1f9dfdc0",
        "cursor": {
          "ref": "f44a8fd1-5d43-4c55-8c63-fbf622bb64cd",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "66f68a48-a875-4a6d-9b04-7d4434698bd7"
        },
        "item": {
          "id": "c6ddff64-c01f-405f-a6e3-46db1f9dfdc0",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3ef3155c-d2d7-4deb-8908-f6416dd221e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce1b66f0-9928-431c-8935-de935f3d0235",
        "cursor": {
          "ref": "9ac85ceb-5c58-4be0-a9b6-e4f454dbded1",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "7780168c-d746-4469-a7e4-3df146c373a0"
        },
        "item": {
          "id": "ce1b66f0-9928-431c-8935-de935f3d0235",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b243a40c-03b4-482f-8d3c-6940d0120a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d67aba0-7d4f-4dca-b929-e973e11a82b8",
        "cursor": {
          "ref": "882d7414-bc47-407e-8155-f361dfe6f8e6",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6414bb67-d1c7-42c7-ba96-90daa5c4e03b"
        },
        "item": {
          "id": "6d67aba0-7d4f-4dca-b929-e973e11a82b8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2c6e7732-a6f2-40c9-94a2-cc88ad9b1136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd4cf295-6404-4b9b-9768-5c33036bb21f",
        "cursor": {
          "ref": "83de3f1e-440b-49af-bc3e-fb531f148c83",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7e58fcc7-13ed-4c91-80d3-57528be96e89"
        },
        "item": {
          "id": "bd4cf295-6404-4b9b-9768-5c33036bb21f",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "1a045ef3-43ba-4918-ad74-bb218abbc723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e098d36-c126-45c8-9751-452d479e37b0",
        "cursor": {
          "ref": "90ab9ba5-3c22-42c5-ad38-b14e2849badf",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2d35b3fe-1a9f-47ad-9e72-3762dbc9c5fd"
        },
        "item": {
          "id": "7e098d36-c126-45c8-9751-452d479e37b0",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "1edf9965-7948-4b05-9180-577caa21d7d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c94bb93c-6279-458e-93c7-8810f7465b8d",
        "cursor": {
          "ref": "2675db5d-b839-465d-af38-685e3c7921c3",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "380bbb09-e903-4bb7-993b-a3e4740db795"
        },
        "item": {
          "id": "c94bb93c-6279-458e-93c7-8810f7465b8d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "6db91cfa-240e-4a6d-b63d-728dd8d9fe69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ef0c0f-6e15-4018-86f2-00aaf26d4065",
        "cursor": {
          "ref": "42d8c180-7ef0-4276-99a8-dde0a5076d52",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e4c53fff-42ef-4d5f-a93f-63667c2db825"
        },
        "item": {
          "id": "22ef0c0f-6e15-4018-86f2-00aaf26d4065",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d27af16a-6bdf-4eb2-975f-3a3180159a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8478429-29e5-40be-80cf-5ff2b220c7a7",
        "cursor": {
          "ref": "5c33ed29-9780-4fda-b5dd-6c10381e0f86",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d2c8639c-7b6e-4ca0-92d6-76474b358d3b"
        },
        "item": {
          "id": "f8478429-29e5-40be-80cf-5ff2b220c7a7",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f64a6097-4d8d-462d-b5f5-4f214750c2d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "639199b1-5a12-495a-9f44-6944b1a049b9",
        "cursor": {
          "ref": "aa2c7b70-f431-48cd-84fb-5adbc550cbb0",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "28a58b67-08cf-4ed1-9186-809f5f89f470"
        },
        "item": {
          "id": "639199b1-5a12-495a-9f44-6944b1a049b9",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "d8f79b92-1044-4d25-a1ac-01b135ca2ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a592681-0022-4ff9-8043-983c6eb747ee",
        "cursor": {
          "ref": "647dd4e9-8ad3-47ba-a518-6c6ac660c7c0",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "5eed9610-7a56-45b8-a7ed-f22a2d085029"
        },
        "item": {
          "id": "4a592681-0022-4ff9-8043-983c6eb747ee",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5d1f7885-d71e-4a44-a944-aca50c312e69",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 103,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db41e3e2-371d-4e6e-b1af-3f7c5e707d66",
        "cursor": {
          "ref": "0505e976-259c-4e8b-bfd2-f815ad777975",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "96e2c8f2-8b76-4e21-8271-cc34f1dc0ab4"
        },
        "item": {
          "id": "db41e3e2-371d-4e6e-b1af-3f7c5e707d66",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f9250049-d7f0-4ff3-bbbe-dfcd188fc2e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "721cf307-be92-493a-8dbb-61dced6d37ce",
        "cursor": {
          "ref": "c16d1a0e-dd57-44e6-8dda-be9cedfd743c",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "7bab9a56-7e7f-42a8-ae91-4767550a4454"
        },
        "item": {
          "id": "721cf307-be92-493a-8dbb-61dced6d37ce",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "48df49c2-926d-455f-93d0-f7b0ee2997ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da6f0cd-7bea-4ca7-954c-b0f46ff6c8f7",
        "cursor": {
          "ref": "f3027b96-ea7a-4612-9992-c3bb8877152d",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "282e9952-82be-45c7-ac8f-fbd2fe204074"
        },
        "item": {
          "id": "4da6f0cd-7bea-4ca7-954c-b0f46ff6c8f7",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "df3306f0-ed59-4404-8d72-48123be587a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98bbe048-1d9a-453d-b553-1fe62f90cbe8",
        "cursor": {
          "ref": "6949cac0-e854-426e-be55-6c5e2cab6927",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "9b66b8ee-6e4f-40af-bf2d-f031d4e5f2e0"
        },
        "item": {
          "id": "98bbe048-1d9a-453d-b553-1fe62f90cbe8",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "922a0ff4-95ce-46f7-bc54-ebf1f18b42a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b070c4a3-6410-4065-a18f-fb722f59c469",
        "cursor": {
          "ref": "9607ba9a-96f5-4f42-bdca-c3a6eab15377",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "dbade033-2ae3-470a-ab86-6abe583c6a9c"
        },
        "item": {
          "id": "b070c4a3-6410-4065-a18f-fb722f59c469",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ee5655e4-0d86-4340-bfa7-2d015b89418d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b3bd07-2524-4fee-8a8e-0a0256f45005",
        "cursor": {
          "ref": "83616a32-fc73-4b48-adce-af7c184c985a",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "193a529e-4d1d-4989-97b8-6987fed10d4e"
        },
        "item": {
          "id": "d1b3bd07-2524-4fee-8a8e-0a0256f45005",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "a76e4d7b-9251-4724-a270-eb2445b5483b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b8c2fc1-8f59-4067-b080-92cb0c072a45",
        "cursor": {
          "ref": "514f1123-164b-4cc8-8cc6-cd71cb89d470",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "797f67f5-da14-42a8-a2fc-4e19a4f8aede"
        },
        "item": {
          "id": "2b8c2fc1-8f59-4067-b080-92cb0c072a45",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b8e669fd-ec49-4e9a-9a31-fb084c85dd3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24c7d260-e69b-48ba-afc6-9ca37d1607f3",
        "cursor": {
          "ref": "1874d269-e08b-4428-9793-64af5b1f7cb4",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "95c8c253-e3c5-40f2-ade3-463e77caed52"
        },
        "item": {
          "id": "24c7d260-e69b-48ba-afc6-9ca37d1607f3",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "9d0e86aa-ec3c-495b-8f11-251e5fa96f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2fd1cf-d1ec-4d0c-b6cb-dee96440958d",
        "cursor": {
          "ref": "72f28315-af47-4245-b89e-18c76ef91304",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "90ff364c-becd-4343-a9ef-02e0eeeacb2a"
        },
        "item": {
          "id": "3d2fd1cf-d1ec-4d0c-b6cb-dee96440958d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "5282ef72-9862-41c9-8c49-976cead20c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77083b01-5b30-4601-9dab-36862d50f3ff",
        "cursor": {
          "ref": "be3dcdf8-8b42-4543-aa46-564893641f3b",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "5d046a83-a2b2-4206-b130-8be45c59a653"
        },
        "item": {
          "id": "77083b01-5b30-4601-9dab-36862d50f3ff",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d2d6b72b-d2a3-412e-828d-cb081210ff6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41535056-3a61-4b63-ae92-67f09d8274a6",
        "cursor": {
          "ref": "3cc3ca3c-ad57-4b04-b1d0-ffe39675cc35",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "3d070eb5-3182-47f5-ac07-c50c7263779d"
        },
        "item": {
          "id": "41535056-3a61-4b63-ae92-67f09d8274a6",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "57f429cd-437e-45b8-b11c-2e40ed9d863b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4154e445-5083-4de2-8e1a-ae926fffc953",
        "cursor": {
          "ref": "8cb18983-77ad-4d57-a281-58e3253aa3f8",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "acc371e8-623e-49ae-9961-61283e3d1899"
        },
        "item": {
          "id": "4154e445-5083-4de2-8e1a-ae926fffc953",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a0e8ca0a-df41-4125-b0a9-cf9384c228ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f032d962-748d-4d18-ad40-bd057901d687",
        "cursor": {
          "ref": "aed4a174-8684-41e5-b4bc-3c948d4159ef",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a591d87d-8b9f-4427-84d0-af318e219c81"
        },
        "item": {
          "id": "f032d962-748d-4d18-ad40-bd057901d687",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "634ead66-90f1-4590-b087-81cb0fec3b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "756005fc-9dd5-4b3e-adb8-06d4d654db97",
        "cursor": {
          "ref": "2403f692-58c1-486c-a87e-60b5ea9c39a5",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "71965214-7dd5-4a82-9aca-1bc98abfd879"
        },
        "item": {
          "id": "756005fc-9dd5-4b3e-adb8-06d4d654db97",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "0f7ce1a1-06b4-4fa3-924f-2e83fde2d0bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d49aa4e0-6c93-4cfc-bf4e-a3f82ec1c0d2",
        "cursor": {
          "ref": "81bdceb8-086f-497c-b474-6a443c3cd23e",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a3311fae-21fe-45fc-88b9-fe010db6b622"
        },
        "item": {
          "id": "d49aa4e0-6c93-4cfc-bf4e-a3f82ec1c0d2",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "857f7b6a-dc99-4f67-a48b-702c4559e931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e442b6-2eb7-4536-8ae9-a59f176bdd9c",
        "cursor": {
          "ref": "fdf5fe85-debd-4317-8631-d32e2529f0cd",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "af4ad749-2627-4bd8-a13b-3fb76d0229b1"
        },
        "item": {
          "id": "42e442b6-2eb7-4536-8ae9-a59f176bdd9c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f542ca47-9c81-4f2e-9f84-961a8da7503f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac65983e-141d-4054-9907-055033f63437",
        "cursor": {
          "ref": "910a1b41-e5f1-4bff-86d6-b29338217872",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "9892ec5d-1d56-4a81-9971-ba143f94de06"
        },
        "item": {
          "id": "ac65983e-141d-4054-9907-055033f63437",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "3f295adb-bd0f-425d-9d9b-2208d5aa5419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a24dc6c2-885c-4959-8c2f-466fd4bd28d9",
        "cursor": {
          "ref": "8477f5ea-10be-4410-9b3e-0a9f4a41797c",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "0e5a6fd5-8fe3-485b-ac81-f6cd3fb13f17"
        },
        "item": {
          "id": "a24dc6c2-885c-4959-8c2f-466fd4bd28d9",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "089f4d3f-6333-4384-bf7d-d2d4ecf78699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f37d2d6c-ed2a-4112-a6b6-9a84e0bae2a1",
        "cursor": {
          "ref": "256b8e34-bf75-4c3a-992f-37d78ae3cfde",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b412fe4a-2234-44af-90c5-e0176294220f"
        },
        "item": {
          "id": "f37d2d6c-ed2a-4112-a6b6-9a84e0bae2a1",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "14472f23-cf06-40cd-92ea-ca3ebb8e25dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab0e45c8-79cc-4988-a663-c03dae8de308",
        "cursor": {
          "ref": "388412ef-e735-4167-8d8c-fb2372f1ff62",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "12b90939-ccbb-4641-9d10-82fbd64be493"
        },
        "item": {
          "id": "ab0e45c8-79cc-4988-a663-c03dae8de308",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "9a9950d8-b94a-4396-b764-d68a808b6ac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4581eb5d-d786-430e-9e81-23ae7d49e6a9",
        "cursor": {
          "ref": "74ffcd56-418c-4e6d-9c94-295dd06c2a58",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ce1e4191-1429-430f-a823-4827eacb1f6c"
        },
        "item": {
          "id": "4581eb5d-d786-430e-9e81-23ae7d49e6a9",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "19b0af41-d750-4b42-a4df-f5c5cae3704e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed56e2c-fedd-46b7-9891-f925ee4467c6",
        "cursor": {
          "ref": "02709a46-5c56-43f4-8ce8-70b9fc8d3df6",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "cbb111e6-874c-4731-a273-fc61e0568483"
        },
        "item": {
          "id": "bed56e2c-fedd-46b7-9891-f925ee4467c6",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "db2e8c01-b328-481e-b576-5d130f38e774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe068f1-bb04-4fb8-9006-1b3657e42b2a",
        "cursor": {
          "ref": "f66492a8-b1f6-4d93-8cc4-a54ceea3ebd5",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "15e3e7b7-b4f6-4b6d-82c8-b1ab7f2e21cd"
        },
        "item": {
          "id": "3fe068f1-bb04-4fb8-9006-1b3657e42b2a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8600e4df-349e-44d9-9511-dda07f9c4219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78025b90-a10a-436f-b03b-8c3d190424d8",
        "cursor": {
          "ref": "fb16335c-716f-4f1a-9b8e-2d8ccdd67fb2",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5cbd71c3-556a-46b2-822a-43852be68454"
        },
        "item": {
          "id": "78025b90-a10a-436f-b03b-8c3d190424d8",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "8b1a1ab1-b31b-4401-bf6f-746d48771d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d03dbf-d27d-4337-b6ef-bc6517c82c00",
        "cursor": {
          "ref": "ec5aeb7f-06d9-4bf4-9ce5-9d3e6ceb4b0a",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "62d0e9c5-bc3f-4c23-a280-fe93a250d77d"
        },
        "item": {
          "id": "78d03dbf-d27d-4337-b6ef-bc6517c82c00",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "df9c9577-b330-4e94-a39b-54b7eebdb807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b31da1d-c04a-4da1-a742-ab96bb20e004",
        "cursor": {
          "ref": "721138d1-26c7-4052-aeb2-de58b8f463e3",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "acaba8f0-0084-4666-8f39-2de80dc69696"
        },
        "item": {
          "id": "5b31da1d-c04a-4da1-a742-ab96bb20e004",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "45c179aa-f69d-4ec1-b394-f3048e345a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240c9719-65a3-4264-9c85-3af6e1103b97",
        "cursor": {
          "ref": "3863d8f7-dbeb-4fd9-84b3-b13cc2773374",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "391ae78b-64e2-4438-bb7b-3c13f2dd115d"
        },
        "item": {
          "id": "240c9719-65a3-4264-9c85-3af6e1103b97",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "bba3d20c-1fee-40db-8160-03980513daa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "685ef100-499a-41be-b063-ec828df97e60",
        "cursor": {
          "ref": "684db78f-4774-4741-98cd-cc0bce9fe14e",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "526327e9-f355-4693-9217-6e69b48d8336"
        },
        "item": {
          "id": "685ef100-499a-41be-b063-ec828df97e60",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a3e7fe6b-1a17-4d16-9ffd-73984e6c9322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d6edbd0-0019-446c-8516-ac3c663b560f",
        "cursor": {
          "ref": "88e64b71-0d23-454c-85fb-6eaca2a7490c",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "fd520c53-df50-4113-907e-373f2b5f9b06"
        },
        "item": {
          "id": "4d6edbd0-0019-446c-8516-ac3c663b560f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a9cbf197-fee3-4e89-918f-8e16deed22f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa35adc4-32c4-4326-bc76-fcd1812e5d2e",
        "cursor": {
          "ref": "5e0abcee-d908-4bde-ab39-84747a7e0845",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "cea8aaf2-8f87-4c4b-9b1b-e8431bc99b34"
        },
        "item": {
          "id": "aa35adc4-32c4-4326-bc76-fcd1812e5d2e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "e574bc81-d774-40cf-9114-cc5505d1d5f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a19dde-a901-41f2-95fa-c2aa6b2962ad",
        "cursor": {
          "ref": "ba56d224-da11-4679-b376-4b0f74b3fb1c",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c9588954-f734-4c8d-819f-c3cea9c1dcf5"
        },
        "item": {
          "id": "09a19dde-a901-41f2-95fa-c2aa6b2962ad",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "14b73a0f-ebe1-4e42-8919-3e035c8c03e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b910d345-3e7f-4cf5-b323-cd6033a71258",
        "cursor": {
          "ref": "0a3bd4b6-87cb-4b48-9fb8-f0bee24bf644",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "cd6c6ebe-c6c3-48d5-b826-60dd0c7a50de"
        },
        "item": {
          "id": "b910d345-3e7f-4cf5-b323-cd6033a71258",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "2c8dc738-9f30-41c7-a8d5-09b7ba44b796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eda1ab9-44d4-41ba-8fbe-510c81d567c9",
        "cursor": {
          "ref": "59a973dd-cd82-4062-9f8f-488bd18c0aa2",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "81354b00-141d-4093-b152-ab28299ce6ba"
        },
        "item": {
          "id": "4eda1ab9-44d4-41ba-8fbe-510c81d567c9",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "bda00951-15b3-468a-94ec-fb1631150140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcef9824-19ba-475b-adf5-8f2b09c2c6cc",
        "cursor": {
          "ref": "5eb21f20-a6dd-4ca7-bb09-eea2104e575b",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ba3888fa-7266-4855-aa18-2253a5952605"
        },
        "item": {
          "id": "bcef9824-19ba-475b-adf5-8f2b09c2c6cc",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "9ccb1b99-3bb6-463f-a8f0-b5064550544c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a6b8493-1cbf-496c-b57b-3ea504007bcf",
        "cursor": {
          "ref": "5d72ef21-db65-4169-a559-bb3801f6a58e",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "334a0804-4deb-4f36-81cb-f6221dc91b01"
        },
        "item": {
          "id": "5a6b8493-1cbf-496c-b57b-3ea504007bcf",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b8db7448-a188-4fb0-bd30-1e582ea808f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac0d67d-33f3-4319-bd1d-f96a55154537",
        "cursor": {
          "ref": "bb0e232c-bd49-4216-b9e8-e13163bad1f8",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "fe868010-4551-4c2d-a259-acbdb370248e"
        },
        "item": {
          "id": "0ac0d67d-33f3-4319-bd1d-f96a55154537",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "7df034b3-07b6-4878-948f-f36390483f4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f332d9-056b-45bb-9a81-38948213d808",
        "cursor": {
          "ref": "af6a9fba-a447-4e22-acb1-be096791fe74",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2ccd76e9-0a03-43fa-8446-9eac6d8d9385"
        },
        "item": {
          "id": "89f332d9-056b-45bb-9a81-38948213d808",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "8fe6ca7d-955a-4d44-8a35-f91f0a74b25b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da4e6b07-f3f9-43a4-bc7e-09cc57dd7318",
        "cursor": {
          "ref": "1954ceb9-8102-46f1-be74-53994cf48fba",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f132a0bc-1603-400b-9f62-ccf512a0fb33"
        },
        "item": {
          "id": "da4e6b07-f3f9-43a4-bc7e-09cc57dd7318",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "747321d5-ea43-4a3b-9fef-f8aacee30b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec28bbbf-9f62-4d96-9b72-defdbc556ece",
        "cursor": {
          "ref": "1b1c89b5-f93c-4585-95e9-ee5b9f993040",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "10d96dec-7210-4f7a-a608-dff89c3e2091"
        },
        "item": {
          "id": "ec28bbbf-9f62-4d96-9b72-defdbc556ece",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "a8453a5d-f9eb-4c2f-9176-ae4596c0333a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9921a617-b1eb-4d90-9177-d68dc4ae2d97",
        "cursor": {
          "ref": "801f1674-9741-4ee1-8bc4-a0ef6419277b",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "da73e9ae-7f6a-421a-b06b-cd7f88205e9a"
        },
        "item": {
          "id": "9921a617-b1eb-4d90-9177-d68dc4ae2d97",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "61bab8ba-ba47-4d1d-82ba-0696f7d9704c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede7e600-0942-4e87-a124-e6338b98a9b3",
        "cursor": {
          "ref": "5b655867-0d03-4789-85ca-554217104e44",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f2e13305-e7f3-4da5-a9d0-3baff8b4d5ca"
        },
        "item": {
          "id": "ede7e600-0942-4e87-a124-e6338b98a9b3",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "cb652f44-1b20-49e3-ab14-6f4e1d9aba53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d61588-ae8b-4113-9447-d7cd91e8520c",
        "cursor": {
          "ref": "6bd941b5-f90e-4f4d-931f-55f751a5e02f",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "5d4ccb27-f3bf-4ef8-983f-575fbb5c8db1"
        },
        "item": {
          "id": "f8d61588-ae8b-4113-9447-d7cd91e8520c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "2955f679-64d1-478e-90fb-6a3a32b31358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "818ceaa9-b472-4f1e-b6e0-45b80bbaac56",
        "cursor": {
          "ref": "806941fe-fce6-44ce-9169-bd154638a8be",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "37410343-50f4-491a-8e35-7e69aef6c151"
        },
        "item": {
          "id": "818ceaa9-b472-4f1e-b6e0-45b80bbaac56",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a2803628-a58f-4e1d-b930-25546b3e08dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f202eb82-8f63-4031-973e-c8252bc9790e",
        "cursor": {
          "ref": "ccba93f6-e5e8-4d6b-8784-7cbc8cd5bd59",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e7f72888-7318-4c02-a718-55b74034cdd2"
        },
        "item": {
          "id": "f202eb82-8f63-4031-973e-c8252bc9790e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "63bb5449-7399-49bf-a634-41ec4be81e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492816c7-f2ed-4fb3-ab18-6ef2becb2a4a",
        "cursor": {
          "ref": "f88ed417-d3a9-4c3e-8da3-54947d826d92",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "4891f626-c8aa-43f1-88b3-d092a724ff3e"
        },
        "item": {
          "id": "492816c7-f2ed-4fb3-ab18-6ef2becb2a4a",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5d912fc3-ffb3-438f-b949-907beebb3426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcac74f3-8a15-4475-b90e-c19daa0a3f8a",
        "cursor": {
          "ref": "76d326b4-43c4-4c36-a56a-fa9463f43330",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "3fa6002b-c66a-4e48-8fda-855dc9400463"
        },
        "item": {
          "id": "dcac74f3-8a15-4475-b90e-c19daa0a3f8a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "5b6ba6a1-cf8a-4b7d-9276-44cdf1a308bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a457a967-7485-4ddf-b9d7-35312f70e04c",
        "cursor": {
          "ref": "48f60685-5bdf-441f-9783-309a4a5cfb93",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "0df54292-4b60-4446-9428-29f1d1e8e589"
        },
        "item": {
          "id": "a457a967-7485-4ddf-b9d7-35312f70e04c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "85e166a9-f758-4561-9416-235b4938deb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "625ba003-b191-40ab-85e8-fe6943f40782",
        "cursor": {
          "ref": "4c9c1a70-c7fc-4a6a-9763-0a54297b1fa9",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "6c3648e6-bfd9-43e0-b0d5-befc1d244458"
        },
        "item": {
          "id": "625ba003-b191-40ab-85e8-fe6943f40782",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "cc370d02-b7a1-422e-bf4e-fb7144e2d188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59beb7dd-5857-4dcc-a012-91aa21272127",
        "cursor": {
          "ref": "005d1283-e4b4-4371-b8e0-ca36ab02559a",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ea4aef91-7f46-4019-83c6-56d764a35f1b"
        },
        "item": {
          "id": "59beb7dd-5857-4dcc-a012-91aa21272127",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "7420cdc8-c22c-4386-aaf2-365c03113391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daad2f27-bede-40b8-b090-ddd521257f6e",
        "cursor": {
          "ref": "feb6f10f-393e-44cf-b295-d199dca693d8",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8439cbc0-2c98-4630-bec4-2f58ff0ebce3"
        },
        "item": {
          "id": "daad2f27-bede-40b8-b090-ddd521257f6e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "2ce27c8b-77c5-49f7-8afc-efcaac8749fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83104f78-4874-467e-9a1e-0258d90e50f0",
        "cursor": {
          "ref": "a69e995d-0d75-4cc7-9588-0eae3676e659",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c2dccd8d-b6cc-49d6-8b96-f99ca0044ce8"
        },
        "item": {
          "id": "83104f78-4874-467e-9a1e-0258d90e50f0",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e7613e16-bc99-4a01-9641-21d2810ec281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a908bd93-31ae-4da0-8122-02fc051616b4",
        "cursor": {
          "ref": "e71bbba4-6fee-4f68-bab5-fbaef7236d89",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "7b14aede-080f-4e0e-8cf9-9c177f29902c"
        },
        "item": {
          "id": "a908bd93-31ae-4da0-8122-02fc051616b4",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f56bea58-f87e-4f1e-9cad-2f1b99182639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13db9118-7ecb-47a9-be6b-d0e851753522",
        "cursor": {
          "ref": "9defa303-dfd4-4857-b710-62220b63ee4a",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2c7e2744-1430-4c51-9d5d-27b95d86295e"
        },
        "item": {
          "id": "13db9118-7ecb-47a9-be6b-d0e851753522",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e98ac7d8-b284-4fd1-8000-ee7cf29d9de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c1fd21b-e01c-4f4f-a96e-e4a8463da63a",
        "cursor": {
          "ref": "fb47f221-9bb6-45b1-abcf-920316013a5d",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "81a8c7ac-acaa-4bbf-9ec9-f5811603f585"
        },
        "item": {
          "id": "9c1fd21b-e01c-4f4f-a96e-e4a8463da63a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "75aa617d-4b22-4aa7-a2e7-56a51b53f27f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a54d5c-9731-400e-b03f-eae13b8525f6",
        "cursor": {
          "ref": "951a33be-364a-4b10-953d-315b94298c3c",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ea7d2032-2752-4015-b302-a3b0c08b6d83"
        },
        "item": {
          "id": "19a54d5c-9731-400e-b03f-eae13b8525f6",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "1b6104f9-2950-4e3d-8876-71b565082aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "583b35c4-6d98-40e2-9c92-77d660dca00c",
        "cursor": {
          "ref": "3701bb77-5f90-4555-8a76-f34bdd2b02b2",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "755730fc-a42a-4ecb-9c7e-edf1f334a04b"
        },
        "item": {
          "id": "583b35c4-6d98-40e2-9c92-77d660dca00c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "67619b4d-4217-4061-bf86-6c83bc583e1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30de2e6c-1072-4ef4-9b08-71478d32d3c7",
        "cursor": {
          "ref": "4017e334-4b7d-4926-a53e-e9aa0e14bd91",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e7686aca-edb1-47ec-be70-1a5ab0939e26"
        },
        "item": {
          "id": "30de2e6c-1072-4ef4-9b08-71478d32d3c7",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a824242b-2607-4d5f-964d-f854ac2e1a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab18f7b3-ae35-4190-83df-facc2ff2b6dd",
        "cursor": {
          "ref": "8502b975-22e4-447e-a928-345aa16e147f",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "11fc48ea-45f8-4ec3-b833-2b329395ca87"
        },
        "item": {
          "id": "ab18f7b3-ae35-4190-83df-facc2ff2b6dd",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4526fa2d-d222-43dd-8a09-8f72f78082fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "730dad29-527b-4bb8-8a5e-2432c03f1c83",
        "cursor": {
          "ref": "0cccf128-e0ec-4224-87bd-bc479f0cf53c",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d229c4fa-b4b0-4625-9d99-cd09b661a496"
        },
        "item": {
          "id": "730dad29-527b-4bb8-8a5e-2432c03f1c83",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f47c1d32-8e23-4111-b8fc-0b8d8393a870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c67eab-4c4e-4dd2-8473-d8f1b7af5984",
        "cursor": {
          "ref": "62d021b4-ae70-44e1-8518-3c65a6213919",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "7df42df0-6e03-403e-a6c3-45010d54fe43"
        },
        "item": {
          "id": "66c67eab-4c4e-4dd2-8473-d8f1b7af5984",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f01620ea-129e-4249-b147-6e6a42cb7fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f4c61e-6fd0-4925-a599-0480f4fb3909",
        "cursor": {
          "ref": "1575f0e5-9f66-4d02-888b-c5f1b1d9d2ed",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "719e33de-6549-4e8e-9de0-ef37754556d6"
        },
        "item": {
          "id": "08f4c61e-6fd0-4925-a599-0480f4fb3909",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "09c344ef-76a5-47d9-8906-00c65975e500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c25d8392-ef18-4083-ad57-d450f2316ac7",
        "cursor": {
          "ref": "c0aab833-5195-4316-a787-a90497be6665",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "39b5e331-7a67-4e2b-ba6c-3beb42c09254"
        },
        "item": {
          "id": "c25d8392-ef18-4083-ad57-d450f2316ac7",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "07a018a7-1944-4488-9590-fc2eaf6e02f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec41db9-2f6d-4a53-90df-1530b997bdfc",
        "cursor": {
          "ref": "0a38e464-07ee-4c74-a674-10bc0478e8e1",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "ad2ae6f2-8fe8-42b6-aa53-31cceb91010b"
        },
        "item": {
          "id": "eec41db9-2f6d-4a53-90df-1530b997bdfc",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2f383df9-1cfb-4198-85ee-0697771c3df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94cc2cca-9d25-41a1-8d71-c5ccf6f49c8e",
        "cursor": {
          "ref": "bfd87b9f-6ed5-46f3-8a33-0e82df3db9fc",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "97ae1533-1476-4994-ac5d-e4f39b2803cd"
        },
        "item": {
          "id": "94cc2cca-9d25-41a1-8d71-c5ccf6f49c8e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "5804fb94-6d3c-4165-88e9-6d5f895cb73e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668d3a95-d612-4bbe-b917-71db872c6700",
        "cursor": {
          "ref": "dda8b889-b04c-47bc-8f50-abd143b717f8",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "da0a69e8-09dc-4a5d-9e5a-c47042280228"
        },
        "item": {
          "id": "668d3a95-d612-4bbe-b917-71db872c6700",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "3c7dfa39-bed0-4221-ab2c-871ac6e297a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37fa08e8-2daa-4c95-9288-f49397750251",
        "cursor": {
          "ref": "f40d43cb-45fd-441a-b3d9-9b77dedb3673",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "25d556ee-0824-47f3-b001-188ebddfd85d"
        },
        "item": {
          "id": "37fa08e8-2daa-4c95-9288-f49397750251",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "6f49a849-1a20-46b9-8d47-ba3a84f0b29e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb77c4b0-67aa-4e01-a291-453d21768e1a",
        "cursor": {
          "ref": "7c3695ee-c647-4975-811e-93107661d187",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "42867158-86f9-485a-aa05-025aeef63869"
        },
        "item": {
          "id": "bb77c4b0-67aa-4e01-a291-453d21768e1a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "48d7d306-6037-4256-a4f1-018315f3722b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89bdff4-2cb1-46e0-9651-700a6297bb68",
        "cursor": {
          "ref": "f5403046-1e76-4cd5-aa2f-a67a4b10f5b1",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "0b3f3987-6c73-4b7e-b1e5-2c1e5f4ad0b7"
        },
        "item": {
          "id": "c89bdff4-2cb1-46e0-9651-700a6297bb68",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "eda003e8-c652-43f1-9a1b-3c7f9262c32d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cbbcf6a-9179-48a6-857a-2ba5ea196b93",
        "cursor": {
          "ref": "bb925060-1897-4ce1-aad6-cc4270e08fa7",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "effe7269-c66e-4715-abc7-5565eb23e13c"
        },
        "item": {
          "id": "3cbbcf6a-9179-48a6-857a-2ba5ea196b93",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "4d3d235f-5572-45d3-8c48-4dcd370b4309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c704d7bf-7601-4c8d-917c-be4bbd1ab731",
        "cursor": {
          "ref": "09a5901a-a8e6-4e24-8121-8fd3934a3f22",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "3baba33b-1f9d-4293-9961-e04ef08250e1"
        },
        "item": {
          "id": "c704d7bf-7601-4c8d-917c-be4bbd1ab731",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "4eb1ff44-2fbd-4aaf-bbd2-bc8ec4fa1401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501adec1-b604-4b5d-b54d-92da3533843e",
        "cursor": {
          "ref": "af174401-042e-4cb1-b252-731f70ab579d",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0c5ea82d-2a2a-4506-a23d-504a1ab5fe26"
        },
        "item": {
          "id": "501adec1-b604-4b5d-b54d-92da3533843e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "80a1e277-294e-48e0-8d4f-2afca6eb9f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d4325b-c9cf-45c1-9145-f72498b86dc7",
        "cursor": {
          "ref": "b5449b17-1c58-402d-a88a-680bebe165d0",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "76686808-1ea1-42a5-8149-cd967c4d23ec"
        },
        "item": {
          "id": "33d4325b-c9cf-45c1-9145-f72498b86dc7",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "9afa9764-e6af-4774-a93a-ea9c496b3228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "187dfb26-4753-40b5-825a-ff15d4f45cf7",
        "cursor": {
          "ref": "f96579cf-2368-4453-a997-8c13b7cd7989",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "fda0b048-966e-488e-9419-cf2e55bd8584"
        },
        "item": {
          "id": "187dfb26-4753-40b5-825a-ff15d4f45cf7",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "86c6d6fa-bb45-4d8f-bac4-68c0a431a71c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "043cdccb-e1b3-447c-8178-661c83fdad5f",
        "cursor": {
          "ref": "7cc5b596-7dfe-4ba2-890c-edd02a7af298",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "e0ceb421-904f-4346-afe4-e069859017c7"
        },
        "item": {
          "id": "043cdccb-e1b3-447c-8178-661c83fdad5f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f4c20d7b-ac91-4d8e-9dfe-1cd563f078cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4713aaf-d7f1-4ced-a974-1195e0e922aa",
        "cursor": {
          "ref": "2f29d766-da3d-4780-a1b0-30c60f14948a",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "6fbd6214-dcff-43e9-924b-7b9d950bf764"
        },
        "item": {
          "id": "c4713aaf-d7f1-4ced-a974-1195e0e922aa",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "731cc7aa-2ad1-4503-b107-ab5357539ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "188d225e-a624-4d6b-b72a-674e0729ab2f",
        "cursor": {
          "ref": "1c56c7d0-d3c2-47cd-aa7b-2fbb4f8b1441",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "911e3bc2-7817-456a-8de8-a72291f83a54"
        },
        "item": {
          "id": "188d225e-a624-4d6b-b72a-674e0729ab2f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "3787990b-0806-4df7-ba65-df865649ea7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72060d9f-9e5f-46ff-9ae8-c54c608b79a6",
        "cursor": {
          "ref": "e803fed3-ab35-4a80-a70f-fce05a1d7e69",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "52e355e1-f6a9-49fa-84c8-06da868b7de1"
        },
        "item": {
          "id": "72060d9f-9e5f-46ff-9ae8-c54c608b79a6",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "9a8e6af6-c32c-4ad8-a1bc-1978f9edad33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18e7e1b8-a3cb-461f-bda5-525d8852351f",
        "cursor": {
          "ref": "f50a1fe7-ba48-49ed-915e-939022c79d07",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "70e9da93-e86c-4d70-a0fc-4d9390494a67"
        },
        "item": {
          "id": "18e7e1b8-a3cb-461f-bda5-525d8852351f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "bdab1168-bd24-4ef8-8ede-30003d779ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f6126f9-b56c-4239-8ce7-f5ef5a397b28",
        "cursor": {
          "ref": "0c7c167b-db2f-4910-9020-232dfaa0b597",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "5885cac7-9c1b-4539-9b1f-18b70069ddba"
        },
        "item": {
          "id": "3f6126f9-b56c-4239-8ce7-f5ef5a397b28",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "799bfd7a-b910-41f4-87e3-012e5b06c1cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eae1090-c58d-4400-ad86-9fc0184708d0",
        "cursor": {
          "ref": "611537ff-71c4-4bfe-9808-cc1e3345751e",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "583759b7-14ff-4c55-a1d0-df75a93a4179"
        },
        "item": {
          "id": "2eae1090-c58d-4400-ad86-9fc0184708d0",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "48dd1780-3cb4-4280-b931-a1a0f7a69130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a4bf352-5c78-4578-b0b5-7eedf3ce509d",
        "cursor": {
          "ref": "d52238b6-8ae1-4cdf-9c3c-19453786d0da",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "ddd6a0f7-6546-4cd9-ba03-d5e695240d3b"
        },
        "item": {
          "id": "9a4bf352-5c78-4578-b0b5-7eedf3ce509d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e3742429-399b-4802-bddb-28b6549658ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa156b23-3bea-4713-acb3-81dbb45a7e57",
        "cursor": {
          "ref": "57ce50cb-fe3f-4425-8692-4ac6a2273734",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "9a571f72-2c67-4463-9d85-bebe2bbd9346"
        },
        "item": {
          "id": "aa156b23-3bea-4713-acb3-81dbb45a7e57",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6222f7a7-e38e-4e1b-a55d-ff9905bd6e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17840b9d-b809-4183-94fb-150f0a26b4d1",
        "cursor": {
          "ref": "d0c69933-6ba4-4aaf-bbb2-5782d4540622",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "10f4f6b9-c73a-429a-b868-8fe1c228e46f"
        },
        "item": {
          "id": "17840b9d-b809-4183-94fb-150f0a26b4d1",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "135ca8c7-2faf-4ad4-8642-2668c1e83526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcfccf2b-53d7-4da8-a0f7-a5e41071f343",
        "cursor": {
          "ref": "362b4559-3d70-45ed-919d-f23bba2cc967",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "94e4f982-f49c-46a4-9251-d2efcf19c580"
        },
        "item": {
          "id": "bcfccf2b-53d7-4da8-a0f7-a5e41071f343",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "720a7b9c-569e-4517-b5d7-26bba9c8177e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7ab4497-70c9-4854-b3c6-dc96ba3caa98",
        "cursor": {
          "ref": "406a21e2-4262-40e5-a805-e9cf846f6eb9",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "a23b95c9-e5a6-4607-8bd5-856199b4d5cb"
        },
        "item": {
          "id": "a7ab4497-70c9-4854-b3c6-dc96ba3caa98",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8a4eccfe-2b5e-463c-8836-141891d93c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "935cfa9d-2720-452b-aa96-cbe7c38e8def",
        "cursor": {
          "ref": "ae5021cc-1d2d-4bf8-a97e-1fd4b8f205ca",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "1fe69827-8fff-4f05-9335-34b2c1642a8c"
        },
        "item": {
          "id": "935cfa9d-2720-452b-aa96-cbe7c38e8def",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "1a524394-696a-4b1f-9c92-10e2d4126274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a94c666-2bbc-4158-9520-7e0a9f20fdb6",
        "cursor": {
          "ref": "197a33b0-9a3e-4920-aa2d-62317e2c860d",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "8f64f6dd-96f4-4e06-9a3f-02a57a194b51"
        },
        "item": {
          "id": "6a94c666-2bbc-4158-9520-7e0a9f20fdb6",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ceea51a8-d0be-472c-9e71-d14c2d3232e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c9a25c-95e9-4e91-be4b-bfe5b1f5cb85",
        "cursor": {
          "ref": "d17cebc1-fdda-4c2a-9c69-9948c6d48a33",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "8190e5bb-84a9-4bb8-8b7b-d7ff6701d147"
        },
        "item": {
          "id": "c7c9a25c-95e9-4e91-be4b-bfe5b1f5cb85",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f2e6cabc-d226-47bc-bf96-3891b2d58481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e0b388-9f1d-4632-8348-548baff1e46d",
        "cursor": {
          "ref": "a14cfda8-4516-41f8-916e-7eb1f2ea66d3",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "76ffbca0-97bb-4185-a924-5d80d608e061"
        },
        "item": {
          "id": "b1e0b388-9f1d-4632-8348-548baff1e46d",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "8eb99797-26b3-4161-9d9d-cc508d0c811c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5381949f-d1ad-4ebf-b6b5-bd8e48106726",
        "cursor": {
          "ref": "9d49f133-7934-4aa9-baa4-6c13f7743905",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "0efa6748-3a21-46a9-9d5c-4296a4b8bd72"
        },
        "item": {
          "id": "5381949f-d1ad-4ebf-b6b5-bd8e48106726",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "cf000b17-ca0c-4815-8407-22a1cf80c35a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda15023-08d0-4138-bb3b-34451e4806c3",
        "cursor": {
          "ref": "df178b07-820f-4c08-9874-52f9a20a49ef",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "93ffd838-39fd-44ec-82f1-88e859f61381"
        },
        "item": {
          "id": "fda15023-08d0-4138-bb3b-34451e4806c3",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "3c26b07e-35d9-4c01-bb07-568d1c3ae199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a42e2d98-9b24-42a7-a767-2648c4fc50a4",
        "cursor": {
          "ref": "7d45f4ab-dff2-4ab3-bdfa-908bc5829377",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "bd254630-8997-4e80-978b-fefb403a50a9"
        },
        "item": {
          "id": "a42e2d98-9b24-42a7-a767-2648c4fc50a4",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "3cbaa424-3284-45ba-85dd-602eb25e47cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df57c39d-8470-4162-a951-ed06eedca91f",
        "cursor": {
          "ref": "dc06441e-6b53-44ef-8e73-4bde6d39a9f8",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "2017f9ef-4575-4222-8d30-51a74eebae51"
        },
        "item": {
          "id": "df57c39d-8470-4162-a951-ed06eedca91f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "ca466963-53f4-4f9d-b16d-655fff0bf6a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5d718e-2765-4f89-9249-5d95813bf38c",
        "cursor": {
          "ref": "c7511f78-8bb1-437f-bbb4-11dae866891d",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "f6600048-193c-4051-8766-261e8ba20946"
        },
        "item": {
          "id": "5a5d718e-2765-4f89-9249-5d95813bf38c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1457d321-5af3-492f-baba-5bee2807fa2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2570a146-0737-4c76-ad70-1640e1047a30",
        "cursor": {
          "ref": "a6644b65-5b1c-4a6f-8bf5-fa313c049cd1",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "168cfa3a-f981-4efc-afef-32ea9e1c83c4"
        },
        "item": {
          "id": "2570a146-0737-4c76-ad70-1640e1047a30",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "39cfb8db-64c1-4e0c-81c9-af9777fe2bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5680ae58-2045-44e5-86aa-459a9c0ccd18",
        "cursor": {
          "ref": "889139b7-d460-491e-8874-443d4eb7b2c0",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "08d3fbc2-d06e-4951-9131-5895522cebdf"
        },
        "item": {
          "id": "5680ae58-2045-44e5-86aa-459a9c0ccd18",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c04a0af9-ec22-4f83-b8db-6287c964cad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a83b41-404f-4064-9c91-38b27b5df18f",
        "cursor": {
          "ref": "4e9c8180-6e5f-4163-8deb-5e352103fbad",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "fe45310f-e3e2-4375-9ec0-18b36e382428"
        },
        "item": {
          "id": "91a83b41-404f-4064-9c91-38b27b5df18f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b6178ace-a9f2-4b6c-a28a-2407c0d01aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "122f4c86-78bf-459d-a9d8-a21a1b6254a2",
        "cursor": {
          "ref": "a8508244-5a40-4c8b-b0b7-41c899f6c28d",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "e9cbc733-4895-4505-88b0-a2db49f966b1"
        },
        "item": {
          "id": "122f4c86-78bf-459d-a9d8-a21a1b6254a2",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f493e1bf-96be-410a-a319-5d1f4c1e06d0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 82,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50dd2128-e298-4a88-b353-a17a02bc177b",
        "cursor": {
          "ref": "f6584252-c65b-479b-a0e6-eaa101d44d25",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "3b770fae-6125-4957-b2e9-125973d30d3f"
        },
        "item": {
          "id": "50dd2128-e298-4a88-b353-a17a02bc177b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "8785da63-5f93-4cbc-893a-0e56b29b099a",
          "status": "OK",
          "code": 200,
          "responseTime": 135,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe3dbe3-9888-4a52-968c-d634f20fcd9d",
        "cursor": {
          "ref": "d0c97a4c-ac6c-4846-9ef1-35fe4af40b17",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "332a635b-38fa-4c25-a2ed-d0048e242e5d"
        },
        "item": {
          "id": "4fe3dbe3-9888-4a52-968c-d634f20fcd9d",
          "name": "credentials_verify"
        },
        "response": {
          "id": "98106ff7-9f16-4fab-a5b2-d6c18e5b8f83",
          "status": "OK",
          "code": 200,
          "responseTime": 1453,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b55fc366-4746-4bb0-8525-5bee266a6725",
        "cursor": {
          "ref": "6f9725e9-717c-4857-8f1d-aed6f2c713b9",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "14771c42-db8c-416b-b412-d00eb95c0c91"
        },
        "item": {
          "id": "b55fc366-4746-4bb0-8525-5bee266a6725",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "1a8a28d7-210a-4000-8470-e57e1f491006",
          "status": "OK",
          "code": 200,
          "responseTime": 1362,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cbaae50-75d4-45d0-b4a7-58444818e95b",
        "cursor": {
          "ref": "28e935a7-55aa-4040-832e-63b9f28f1549",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "37c344de-004b-44af-ad4b-982c4f2fd268"
        },
        "item": {
          "id": "8cbaae50-75d4-45d0-b4a7-58444818e95b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c27d46ee-22ba-40cd-b379-1ebccc622dff",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cbaae50-75d4-45d0-b4a7-58444818e95b",
        "cursor": {
          "ref": "28e935a7-55aa-4040-832e-63b9f28f1549",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "37c344de-004b-44af-ad4b-982c4f2fd268"
        },
        "item": {
          "id": "8cbaae50-75d4-45d0-b4a7-58444818e95b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c27d46ee-22ba-40cd-b379-1ebccc622dff",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05bac85a-89b9-4e8a-9838-78e43df1dd04",
        "cursor": {
          "ref": "e96c91d2-d1bd-44a5-9e51-3167ae04141a",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "8832de85-b962-463b-b85a-0df304c9d750"
        },
        "item": {
          "id": "05bac85a-89b9-4e8a-9838-78e43df1dd04",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "302e5539-d745-473e-8fdf-f142ad032c7e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2beed6-4d85-4491-9167-e2d08be8b39d",
        "cursor": {
          "ref": "d820f22b-8085-4e3c-a163-112104f5dc76",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "df51b288-5e7e-49ec-9d84-7c791417c897"
        },
        "item": {
          "id": "ac2beed6-4d85-4491-9167-e2d08be8b39d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1f194247-1b53-4d07-bece-9eb0eb7b0f4f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}