{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "875671d7-3d39-4e5e-b7eb-52907c3659b0",
        "name": "Clear Cache",
        "item": [
          {
            "id": "25c441a0-65a1-4e9f-a0cb-dba5f4e6b0fc",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dad4f403-72b8-4e3b-9cd0-70c4bdf5edbe",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cc0e5407-140a-4d0c-b522-721709b419f0"
                }
              }
            ]
          },
          {
            "id": "96df3b79-b080-49b2-a102-576c078d7489",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "45c86cbd-0b44-4fca-a5ec-e8604e6a4209",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5d4bd9da-828b-4da4-b05a-5aafaceb2bd7"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "619244e8-d342-42e3-8c4a-f7f52632b57b",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "2bc36a22-0ef5-4f2e-a204-44f76c1b6a7f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ddb1308f-79b8-4316-8da1-566068b983f8",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d64346cd-6ece-4c39-89e7-1a9099a5ccb7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "66189251-bdfd-41c8-a2a5-604f6af562d4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "209ddc14-a808-4f1e-8b28-887832495fc2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "17b99071-98ed-4d2f-8a5c-8a489579521b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c145fe2d-191e-431a-b3bc-fc4366ceec9e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "542b693b-1942-4528-86b8-1b5a6175ed4c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "78724897-3a03-4fd3-b905-37350802b59b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "96a898f5-0df7-409a-9eed-2542bcba8b85"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dd9bb181-e359-46f3-ad91-537642c24651",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "05de7e1b-d288-4c85-ac80-0b6fb77fe5da"
            }
          }
        ]
      },
      {
        "id": "8db027e9-0efa-4d93-aac7-f652a8a4fd42",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "4d52cd13-3dbb-4fda-87a4-c30fff54b667",
            "name": "Negative Testing",
            "item": [
              {
                "id": "179bc159-8e2f-4d62-a0cd-c6089b50e099",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "450e9761-7af9-4af3-970b-fb12e1f5887d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b8670a-9803-41b2-af15-af739e7ab65a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "62b2b1ec-de11-457e-932b-253013d27f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2cd37bd-65d0-4dc9-9bf0-60a4a9c8f892",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a008e3e0-b4b1-4eb6-9d3c-b3b55b1dd891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea3ec67b-9c1d-472a-942c-27dd90d126f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c7715e2-5ccc-4cc7-9c24-cfe9546fb89e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bca340f-672b-4a7e-97f3-3d6c0c5ea6c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f7d3774-3534-4d59-9397-5272d1ee1e3f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "25011a16-0258-4718-a95e-761613cbc8d6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "def4fc62-4478-43e1-88da-f68b7ff95830",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15010a73-b2c8-4f40-b107-e10a7576b613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bccd8c38-b43a-4f8e-966d-7814eb5a6a68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d9cf152-b512-4a96-a265-24fe90a7c45b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "601bafd0-901c-491a-9fec-726c53bdaec9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e93cbdfe-55a6-4b65-8c19-24de7ba14152",
            "name": "Positive Testing",
            "item": [
              {
                "id": "66300ac7-f035-41bd-8e59-1aaf7d3bf4b5",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc7934ea-17bd-4139-8fb0-054f8a3bf4b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "62a7d3e4-f8a4-4136-aec1-0f9b04c1329b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0051f4bc-02a9-4107-aa30-077c24c7c859",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "4e1540bc-d47f-4a2f-9f42-b1995c83470c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0bac847e-943e-405a-9a9f-4e32c177ee60",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "94cadecf-4088-41e3-9db8-0530fc79ae62"
            }
          }
        ]
      },
      {
        "id": "acd2da26-d9e4-4a62-a6d1-d3ac9337a3b0",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3cb3f46f-7fe9-44cf-95c2-df7d1fd3de82",
            "name": "Negative Testing",
            "item": [
              {
                "id": "34c45fb7-d914-4c3e-bda5-3c2d652325f5",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b2c68a76-7fd8-4d56-a299-9ba59db1e200",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7dccdf-95a7-4964-9a6b-f7707e495c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3efdd6e5-f184-4b15-b294-02994f920f30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "213a7d1c-30c5-45c3-9647-24aa935cd379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dbc4dde5-0d49-4b94-98bb-f806a1e82654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c4f2cd-d2cd-4c87-beb2-7d46bf125be5",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48fc4570-4b5d-4128-b794-1db4203dbb84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fa71cb9-d9c0-4f7c-913c-05a70d56da80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67d70e69-74a8-41a7-96fb-40b977994e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61bc3c76-cb7e-48bb-b1d3-eebcf220f381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc843bc-b077-4802-abb8-4de67165b519",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "977401af-c55a-4721-b816-7bd45bc19328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3b1d935-5921-48ff-81c3-49c88f117629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a58987-0d2f-436d-9544-9f86b6cb448c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e506fdc2-1ec2-4ed7-b176-b2081d7e1fae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84214c28-f75c-4f10-b52e-a19e02c42022",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22a33a94-3ebc-4e70-aa41-0fae00f19951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed1b0819-565a-44b6-aa82-5bfaf10cc430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed25d44-4ec0-4c06-81be-0a906394e582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8b88345-6237-49c4-91fb-ab83e13e803b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9effba75-42ac-45f8-a22c-c97adce90d1d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "012e44ae-94ac-42d8-96f7-4acb9881df59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4902964-efdc-41ed-9d7c-c3101e9b6e2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b1451a-2864-40fd-9941-460d0271f25e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea337c7a-1520-45a7-8674-09f18190c0a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a4cbe5-c842-4831-9ef7-78ad40f3517e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01285526-160f-4378-ae54-4310f41fd7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d828257e-876d-4325-9f0f-688d526223a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aacae3e-39bf-430d-94cd-c92d029a7751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f0d2cff-8a9c-4547-821d-2093b4c4265f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "640e9404-b2f0-4b4e-ab75-a165a76a8cbd",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a3fdf9-a224-4d42-be55-ebcebfc3b804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ab7c9d6-ba80-43d4-84ce-10d3463cd3f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "051e40a8-3e87-4366-8f83-c8c2a42212c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31cfcafe-c03f-4627-a1b1-32bc49a66b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a1d8cd-3b91-4af8-b649-896fb6425590",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27654545-573f-48cc-ba2c-43a9a26cf5be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a312e823-bc56-47b7-b26d-af2490d15a55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "117be932-44e1-4173-8689-85ad8124ab56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f259803-c400-495e-a005-a3c548a11f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c04b23-d87e-42f2-9874-4bb381b9d8da",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eae4748-db68-4b2a-ba48-2e49e503c698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15ada52d-be18-4f41-a094-6f965d266402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae524ce-92a7-4df4-a738-e9e7c14f42f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87a8b790-38fb-402d-afed-2558cbc53dfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97bdfcb-828c-40be-a2d7-95a17b9f7642",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f33bba-704f-40ca-abd4-71ccaab1f009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "873354d3-783a-4502-b7c8-77437cbda287"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c1e3762-ab5a-4410-b028-6dee331e1be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b7026f5-9c18-4f57-8de9-1cbcedd7a234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59dc207c-5024-4d67-9008-12ae43d3a82a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c69e7920-6737-4e00-816e-3d50787f70d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1ad3c82-f072-4219-be6c-19cd9d11882a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "374888cf-88f7-4231-a321-36ec62fbe0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "515c9439-4da6-4f39-ad49-c2b6cc623745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed4f2b0-c6d6-4c8f-99ba-e31d58b1b042",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da8adbff-15b6-4e6c-a126-f48d502e3f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74091539-0b81-43ae-8534-6bf9b43cb03f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66357f1e-41d3-4e4c-a510-374e51992511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b1d39d6-3f33-40ad-9e1b-9774401e40c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d471d86b-6c91-4b7a-81df-a60fd5abe5b5",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf505893-e5ab-43df-b31b-327b5a5b39a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e908b37-90ba-40c3-98e6-3558114584e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e4005c7-66a5-498a-94bc-b4f23f9c9af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2213fb9-906d-4b9e-9d55-75608eb34cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85bfc706-9e82-4576-980a-c9078139075b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e523887c-72dc-42a9-bb6b-d946b0902c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16eb08cc-1d4e-44a2-ab07-a732196372fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0490a7c7-3f91-4227-9bdd-e710dda9e80f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "235fbc25-318b-4c7b-9a00-d7b3f8811c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f227889-1710-4ae4-9812-2556b278604b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "779b0c82-a76a-4052-9d79-4515c490859a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "957a2f60-1c5b-44c2-b7ad-e28cb405d56a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1fa1327-7784-483d-a8de-8ce639907bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "49676f87-5e03-4ab7-ab72-6e1c36114f0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a0a6e44-74f7-42ef-9820-7e4ee3df1469",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34bdfdba-09b7-4b09-8334-da19616a9d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb2f81f5-10bb-4ddd-8ba6-67ec6e97deb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "249503a9-2600-4277-9944-9578065dcefd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca1dd125-9246-47a1-92bf-f584aaf29b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db3c286-a669-4460-9538-cb3f1a670445",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7711b03-02cd-4e57-a3eb-05eff219d64e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6388e31-7438-426b-a705-51ddd8240a00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc3ab52-d404-4fb0-9c7c-42059deba12d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "704d1125-e14f-4b72-b8c6-0ce06c58cb0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b23f0e64-631b-430a-9326-cb8545550d7d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca0b410b-43f7-48a9-9b86-b7fe711c95ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae46d4f9-6ff9-4936-8f83-c245dd6acd4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b341c08-ddce-40a4-9228-e71f34a58c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbeb5d1e-c721-4402-8b82-ba3ba6220d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f16f9c-3fd9-459a-8a7f-4208241dce2e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baccd7e1-05c3-4642-879c-92db694562c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "765af9bd-8b8e-4e59-9edc-aeadfa04e8f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b5a9b5-6919-4d6a-afa4-200efb4f9791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "54a2d611-e7f2-47e4-9a64-8cb533753eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa00f74-babd-49cf-a8e2-49ac44978005",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4de924b-1ce4-4302-a55d-e8cc9b441848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5564822e-8547-4e57-bd7b-8f8ccaf2d1db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34282906-ff7d-4cdd-969c-1cf4f04637a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "62938c8e-9226-4d84-ad78-220b771d7fa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b14a4075-832f-48d5-aa87-17c5cb40a475",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a50e2c4b-a5a8-4b98-8a28-bb24a1b106d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eadde7d-741a-4875-9db9-4d023fd41c40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a31159a-1497-416e-9140-d08209088454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d301723-571a-46ab-8a3f-b5832f77cdb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece9a965-3f82-4df7-afbd-8a80f80d4449",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "118cc284-299c-47d0-b16f-194fb820291b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cc3d379-e754-4a0f-b754-29cf8e47e2dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b72ca3a-52a6-451e-91da-b3530d5ff3ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd39c5e8-16c5-4225-8e8b-53c36982a344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d94f854f-0837-4fb8-817e-94c4bfa52f9c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab47855f-5645-46f2-b406-6184cdb7e071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "057b3bae-24b7-42e0-9b05-12c65546174d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37b7483a-2914-4a59-818e-2d8dbe9fc76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4c1eff24-44cb-4f2c-aa08-dac4470314b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce9ff8c3-c794-4190-abcd-d46a23eda763",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "906d3db6-8b8e-4a3a-ab27-abc2dbe89c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abf58938-a444-4f37-b906-5e39f0996f7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abda4228-f65a-48ea-bc29-adebb6451aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "65d917b3-9716-46e2-91d4-febc420b27e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ded0d7-a76f-48cd-a7d1-b24d36da543c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8920cd5a-2678-4ebb-89e2-8db3867f1310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "078e4d20-0df5-4536-a549-1f79d0d63f08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdcaebf1-8be8-4597-9593-e6f9c8405bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c14be009-f6c8-4b1e-bec8-833a3064b6ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eac813b-ca65-4390-a716-9c61da1e40bb",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88228580-c358-4c18-84eb-3a8ff8cfcaec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "179f286c-3c54-4d10-88b4-5a587b6b5003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "201ed886-ba0c-433c-a6dd-68f0358b04ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5f37112-c8b6-4164-91cd-c3e83ec2d06c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "387952b1-8783-45ec-b2a6-cf902e868282",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a87ffa6e-62e2-4796-b41b-2e5e719286af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33ae7930-c08f-4400-b61f-4f3ff6e8f6bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e385f8-27d6-4637-a224-985972b333c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dcbac18-77ba-4f9c-8ffa-1407387c3eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "269b5f3e-fa28-40b4-bd9b-1d2383e2aa22",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70810db6-de62-4f36-8216-405ebbc2bfa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4970efb4-3f0f-4b62-9367-7ea853c888df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0916193b-bbc3-4089-b9a7-2d7de2df82f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c844a52-1151-4991-958f-2c48170e0f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12056e6b-b337-4413-a26b-14d07abc0558",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d40f949b-cba5-42a6-888f-e4484279f412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70908161-552c-43ad-b804-460b6ef8b1ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1590faea-c8a6-46d6-8069-f3982350d268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e8d3768-bf9d-4622-95f3-0116ae3b98b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb04d7f7-f947-436e-91bd-1248737c29e6",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db6b7ab-b38f-4ae7-9afd-a68756c7ffab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ba2a8ba-14a2-4828-9a4c-89619f0cfffa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c714587c-ec8f-4694-98d8-70cea8750b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea6713ba-3587-4505-99ba-56bcebecc5ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c44e2be-7955-4c1a-8585-f50e1120ecba",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e21ace-f61e-4a36-91dd-7ec926d631df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46bfa320-346a-4bcd-ba92-d041a7a9ec92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e35547-8c9e-440c-890d-f9e383cc5e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6bc826d-5f4f-4cb1-8706-652dadb1c2f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f36d7a-7450-496a-be03-13e9ed2fab6c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c67a2bfb-f426-4d4e-9e76-93e52a74f750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9641560b-c2f1-40f1-b192-ddee17e99258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cbed873-ab51-4aad-a3ba-d4386b5bad5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5166e3c4-0cd0-48c8-89ac-38e5d94663b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c31a1ee-4168-447d-9e87-4daede547d83",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a1e026-4c25-4453-a91c-23186d73b4d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe930fdd-83e1-4dc8-88bb-17594bb80f23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97451d3d-0b98-4dcb-9bc5-df6ec4d0c7be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3aabe324-6dd5-4509-ac54-e9a61a116e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa661dff-6dcc-44ad-8b79-71519f1150e7",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf53173-d301-4962-ba13-5981894fbaac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0a845f1-6bb9-4822-9ffe-11b8fe794a38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92151dc9-d63f-4272-93c3-e32bfb6bfcba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a56c4d2-e097-4394-b110-c660f840f595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84b7a84a-3ce0-4fc6-9119-8f6a1b471eba",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ca777c-a3d2-4e4c-a339-45dd71966184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4e19716-b5ad-4055-ba51-9cb05c743090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c09e8b6c-ab96-45be-aba0-e6f3e6dc4934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "7884d4f7-9bdc-4be6-93c3-495f9e730a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c576d97-8e4c-4fe4-88c2-dd534efaced6",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ca97c66-5ace-4943-8c7c-dba1a02c04e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f26c0343-52f2-4d00-a3bd-9f279f73b124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0862427f-dbaa-40d3-bf47-9c144b75b721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f4c7edc7-b1e6-4e44-98e7-cbfa469a232f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a548f567-ebb8-4535-8789-2371a5dc868e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f948b3-ffd6-48aa-9a4b-9eefa673450d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "874c88b6-ebfc-4afb-96c9-114c7c59fcd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69e6038-43bf-4c3d-9799-4176e9c32662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ab458e2-5078-42c4-be6c-6e2ca136ffca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cacd1710-0597-4a9d-97c3-593fb4392d68",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "571150aa-2dc9-437c-b511-aeecaa3c3354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec059f9a-627a-4dd1-ab19-cd17c300667a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "653974ae-de93-40bb-a4c7-83a73ae516ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "529923c5-3ffa-424a-bf67-f96abf8ce4f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb1c1d3-0aaa-4cb5-961e-5e04461d15e4",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e3be92e-a48f-48a7-8da6-06663f7fda4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2579c0f9-c04c-4957-b80c-0f1402f6e1fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b971fa0-0952-4253-87d1-5e80a7afcb54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ce45789-a9ea-4357-8485-c1fbc73309af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8825e55c-2755-4dc2-9e19-20c782b6b653",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd9550a-6a86-4c89-90c8-ace94d5f64ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc9499cb-37fd-409d-bb7a-ec2b49b81e44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f162f2-c844-4832-aa76-923b4246dbf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e1e67a9-d85d-4716-8c81-bc70f9e3372a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4506106-681a-4299-b811-cb8d759d454b",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d26e43da-cbd1-40d5-abf1-7b1b1ccd3e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4fbf763-0967-4422-8f5f-00b562196c9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5fe80b4-e153-4c7a-86ef-eda21abba610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7feb436-3991-4524-8e12-dfe355ecf311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b68c5ae-637d-493d-9a43-43f20d23a433",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea5cfd2-3b94-4acc-aaba-442f391fcf9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e66340ad-0f89-4194-a00c-96148b3e4b35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f5790d8-f2f3-4eb9-938d-617d90b3ade2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "ca3da68f-f700-4ab3-99fa-60adc230d575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e58f4c64-026f-4cf4-b24e-fc6a1f1fbadd",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f2fba88-6115-4a65-8d47-f0106281dbc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1642cd56-975e-46ee-b344-2ee3c843d3c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c603ff55-4da2-4299-b265-7b6a63335587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "66d9997b-b5a7-4413-ab40-49d7f9fbb623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf734f0-27e4-465c-a217-374700e85817",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccdd84a3-4466-411b-949d-5e2319845c4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44f4d5a2-9aea-47e8-b1df-a4887e8b3fc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7408ff2-626b-4e4d-b2d5-920715d93a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b8d4f87-a36e-42a0-a103-2bf56c0baf4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28b1b9b9-7fed-4b60-a493-88047273a1c0",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00558e4e-2301-42f3-82ee-3b9252ce4de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "562cc312-1e9a-40ae-a2f1-28040c8af3f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e0b60da-c491-4c9a-8dcc-f9e121d16d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "10b761ec-4c75-45d3-bc47-88e7512f6803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fad7e98a-5eac-4b73-a0b2-8a63781cc037",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a00c892-d78d-46d8-9fa7-c96691abfceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6f9f3f1-e56d-4cbe-a75e-1e690ea4d85b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c4d8629-06cb-41a5-80bb-c87479008ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "105d4b3a-b469-435d-a263-3c7f66eb5783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "727a78e6-bb18-40c8-9de8-cc6066129e98",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21536bf-43c2-47ef-aaef-4e8caf3c53a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08679337-ceb4-4c66-939f-71cb70183b76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adcd2a1f-8a12-4893-acc4-26899134c0bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "85b3fdd9-b65c-4de6-b870-5716c2e1fa5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60bba4a0-189a-4cb4-b0a1-e37a68c7dd8a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb031ae6-5834-40bb-8b49-c558378e481c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "899ee27e-0240-4bce-ac8e-d4178617984c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c74105-87da-4127-b430-d264696b40be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "da130d4a-2520-4fac-8cd4-d9ee9d9f3690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "678c7ae6-3a03-474d-812e-b441a9069520",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23562864-aa40-4331-9e78-dde65e30256d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3ea0dc6-3469-4ec3-974c-d0456aad3e9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde3a107-a92d-4217-bc76-bce90e1dc0c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f45e4e5c-ef48-4ba5-806b-2056051e1871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88400622-0969-4d34-b070-4094fb4e432c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "765c872b-de6e-4839-8372-d26f1b8063b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "013ebb54-5f54-4385-abed-505af01d2d19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4975d784-1a8d-48bf-b7f9-492e0ccfa2f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0ff75cce-543b-4109-80e8-c609f4f36080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eefed17-2953-4d3b-8e2b-4c7985f0537e",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88871d8e-d7df-42ef-a83d-496191889788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56385d9a-520b-46e8-8fa7-0e33b27a5411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4869efb1-3b67-46b2-b6cb-ae9b4ab223b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "eaff7ee3-5aeb-4a87-93ce-578832dc02f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34010ce2-fb7f-4662-891f-84cc63b1accd",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f47ba9e-308c-4b36-aeeb-9e6e6e7a7fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6656c5f9-ba95-4534-b3e0-fb92976e121c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ce99c0-00d9-42f5-a882-752d651657df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8375afe0-7317-492b-9302-2d7ffa14099b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d134337c-9f54-44a2-8b18-b7037f966fdf",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f016ff06-af7c-4b03-85f3-03f9c6510fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d208519-a6d0-41d2-a256-769dbdec83b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93fa4e8a-bb04-4302-9ef8-4aa8445e0224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7d5bd2a-71e8-40bc-97ee-8a1649f97f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ae30f7-a130-4495-a586-df19cb10d99a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64c5ca86-f66a-4171-bee1-284956eca561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84eae3eb-ea91-4b2f-930c-cc78d106a3b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f755d44-3fd2-46cc-bacb-f3a5f329e857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c888906-ec35-495b-a1d5-7d1b3c5bde8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e52c21-e668-43bd-8049-8252d271cf8d",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6056920f-db3f-4045-b648-6d9f74db36ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bffedcdf-aec6-46c3-9010-5c59daf9658c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "361b0fe9-070d-480e-945d-68c7772615b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "60982851-4804-40a9-a249-396fe25036f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba58afb-a158-4b07-aac6-982c164dbf4c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "118967ed-7201-4c5a-a217-acf54c583730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdd04a07-12ad-43c7-88a9-2e4ed8c817a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecdde6d4-d33b-4950-9db1-dba2eb436b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5bde8663-a876-48b2-ad15-2ac072c536e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc0fe6bd-859d-4bbe-ac8c-05e6d07ee6c7",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9036809a-3f6f-4120-b19f-cab8319c897d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02a3b4d4-63e7-434f-ab20-8fcd4075c5bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a4068b-acc7-491c-98ec-5c39aa5c17e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d36c593-684e-4f24-927c-80ef868de5e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44ef36b5-4cd8-4b1b-b88d-1feccfb54532",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16601839-9c0c-4645-9124-8c8941ec1611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6243474-27a6-4cc6-85b4-45ff3882a7a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df7b616f-fd5c-48b7-81d9-a760dfe143eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "37dc9261-17c8-49aa-bc02-fda49781c08f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c0bbf71-4040-430c-87bc-7b9c72e08dec",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eaddcbc-902c-4fae-ba6a-75034bd914d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07cd5173-43a4-4b22-b2e6-6725883bacad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "854bd0dd-1f8a-46db-9b6a-2706141b898a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "43f2de9b-d37b-48b6-bc82-756a39b001f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d0472db-e05a-4fe4-ae3a-b0113b541081",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a40c91-d3c5-4de6-9b08-2f6973ffbb5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "367cb059-d931-4f5e-b711-5f49872b9c4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "181ef5c6-d25f-44e2-bffc-562eb938215e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2cb3a517-8daf-49fd-bc30-90e78f756df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa983c7-b5ad-4aaa-9816-be159865ee58",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "265d7e94-df05-43ab-b51d-1ceaf1c54775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42f2271f-d74e-40b0-9649-c01e081c9c52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5567a049-0188-4aa5-ad2b-7b2de7b1c86c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "725324f3-fb67-4cab-94d9-c5c3092d5bc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7894168-8c9c-4733-af2c-03ad49a313f3",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae003c07-cca7-4390-9acc-17d81249bf1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a451f929-eb52-44ec-91c6-0e03dd88013a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29ab111-5f32-441f-b63c-6bd462c0201e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "43843b8a-70c0-4b26-8e42-dfa9388d668b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "162c0154-7eef-492b-b673-557c400c50ba",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b301b0-6c98-4d53-aba8-ba780f9778b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77dadf89-08c8-487b-a13d-74e2cf88fdf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f26bb26a-b86a-460c-a36b-d449f960de17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2667a1e-eadf-4b4d-922a-33396a4f57bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b56b3d5-1660-49d9-b86b-f70aff6d2dd0",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05781b44-8b45-48ab-afc2-1c72649c715b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "100a2ad1-15d5-40b7-b54a-fffbad9d6a1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a79b7f01-1550-401e-b6ce-2dc4d2fb713b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "07c82108-ab6e-48f2-81dc-65f7171e760e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d773217-436e-4e7b-a9d6-7a7406781dfa",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec2cf82-7126-461d-932f-e3a3fe1f6907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "251b4991-fc75-42ef-961d-8cd95793526a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b0f1cbf-2661-4d84-ab92-ec35e3e452b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e36d212e-f159-41b3-b6dc-9adae967c180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba51c187-9bf8-4ccc-9aad-7f98c604b6e8",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d2a874-9611-4c33-9036-ea6724cae80c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d103d0c6-f10e-4440-8fe3-345dc4d83c5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80f226e6-64d8-467c-88c9-f3e8ca3e4bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb59ee82-461f-4ac3-bd96-cd3f35403ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd2e6551-730d-430b-ab04-924046d639bc",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99650989-442a-41cf-924c-ce8e5ab639f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1df81899-1b12-40db-b4c5-5b8d41ff5bde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbb8456b-374a-4bc7-857e-9561b8cfcdb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "80459b77-75cf-4f69-86ed-6cc45f519020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d55c6b-5fc2-4dd7-8747-de238f1d3a37",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf927ab2-2ce6-4a42-9a1d-43cbb87dd35e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2547c4ae-1110-493b-ab4f-b991dd0b973c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "535a1c63-227c-4a70-ad7b-0381f08c55a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7868da81-4f20-4166-96a3-79f9ccefa4d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5624091-31b1-4df3-b5e0-2dfaeff6d5b3",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c3606ea-bec9-48b5-89c0-0aead328b403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df828094-61e4-485a-8adc-09b518e4d56a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14cef31c-2593-4aea-bf10-538afff4af87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0b0e5e3-5688-4159-8ad6-20bfada625d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18544019-cb18-4911-a83f-58190e3cf0f0",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e7cbfd9-2812-471a-8867-48722c339740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "484abef8-896d-4bef-829d-c479559a3039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ca4fa7d-23ec-4f2d-bd72-2d608a773d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "108a9af2-82e5-4349-a867-e3840c47aa9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e088f74-5029-4920-a47d-ba677e66866e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aec205d-354d-4ea0-9331-46543169375f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "528918a8-90b4-492e-b9c8-c8b3b25a5ddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf31a1b-ee70-4da7-ae79-5927b7d8d436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb8cde70-bd15-42af-9fa5-7a2f54051438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e864714-83d4-4af9-932b-f6dd80a26628",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14e7d2f5-d5d0-412f-b559-9fd91467727e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0045147f-0117-43ac-9553-a81876fff25c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9751a449-0613-4bb0-8f02-997e2b22a600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "91568d2f-f2f8-40c8-a60a-ccfaabe80ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce2b454-a8a1-445c-8d75-1ef12d7d506d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db4585d3-407f-468f-ad16-84980efef8dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f01ec0e-0ff5-45d9-888a-60470d6c9bca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57cf97b8-b0e7-477a-9ca3-0ab2e2bc64dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5260fe3-580a-41c7-bd03-733eb688bfbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98af8c71-08a0-4ef1-adba-a2062bcba586",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c7d368-d209-4e10-9879-46919de243b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6172551e-6441-48cf-a027-34fef7b8934a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a12f42cf-c59a-457e-9a36-c9c64db0dce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "00c16b9f-6207-465d-9c3b-fa1ef88ad463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c53602c-03a8-45d1-8e8a-597793bb433b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce2ec390-ddb9-4857-8f9d-6d34f1ed4740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a19868c-21bf-4ba1-8d17-3c723394ca76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c731c779-5b66-4a21-8f46-5554d06bb7b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8e4b653-d75d-47c7-b676-e557e7b47fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b2ef25-ef58-45e4-84fc-7ef39ca232e6",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6cf8324-0c70-4800-b006-2d98d66facb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d5f108f-aded-4149-9c4f-4ac9c9e0c400"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286d7aba-777c-430c-972b-3f2b0b7aab47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cecccd74-4b56-4ba0-9bec-1619c3239450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2640c5a9-66d4-4451-b572-bac6c76f8e79",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc572d76-6ef5-4b1d-aef5-a8bc4559a715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c501d3b7-61f6-4284-a38b-74b40345fd63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03bc00ee-8092-4721-8488-827fc3417767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a224661-7485-49a9-be79-05810c247ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfcdf804-ceae-4cb4-b03e-05152b9beec9",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5a4cc83-4b4e-4d44-abdd-a9375f2a999d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b31a8e9c-d898-4cb7-a1ed-8474fd77a56e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f88fda-eab3-41ac-96c6-86d7c9b6b181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4db79d0-d21e-4d8c-bcb7-535ddb319730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f665ba59-c481-4ffa-b5f7-6b959c36ecc5",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aae7402-9d6f-41de-a743-c49d8b9a855c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4649874c-78c0-497e-a344-9e1200333f23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b9442c4-7aed-4d7e-8c5d-cd415e214200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "88046e02-53dc-42a4-8a84-1f3d1fd5efe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8abfb337-d1a7-47d1-baad-47e1bca26109",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b94d3c20-fe73-416a-99f1-36079e5f5028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c6e1325-8b59-4709-9ec8-f05518e7fb28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32ade017-ec76-4d68-957c-ec73f36bc327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "be3dd076-5019-4b96-a163-1b420c5318f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c00d63ad-e778-4d37-8793-75aae4fe4511",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5072d1ec-6891-441e-a7d5-a55e3f105118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6870cd97-01a8-4b4e-ab77-54f15dcc0394"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0457b020-65a8-4c0c-94d8-9319fa3b15f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "67d0899f-8150-43de-aada-27572a062686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd06157-f19d-4233-be1f-5738ec4d79fd",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe2330a3-7973-4fe1-808c-19d7065c5e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff88e3a6-1006-4e60-98cb-c301025d0c5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "403bdb15-1761-4500-ba2f-c993e35f1b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b30030f-d589-4d79-a9fe-94fdb7b87cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7604e9d5-2de1-4a2f-a5d3-2cb199261b55",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b42121d-551e-44fa-a8a6-412472c6cacf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cbbfe72-6c2c-480d-afc8-5efab8ba1844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfe0cd0f-1119-48f6-bbf0-50e48b91ef65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c375e660-4016-4426-90de-2f82e00c47da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "438a1c7e-3ddd-499a-a641-97b854a06c79",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f2b686-0790-4ab3-934a-11ba3f9a1881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "087842c6-2a39-4ae0-a701-5c57eb1f4059"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7396dfc-f942-4391-a726-35b79c0580c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "68e855a2-4a7e-449a-9bf7-2039302d9ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28cca574-2f3c-4d8f-8d23-e46a7b68b40e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b76ffe40-22d6-4a8e-9d0b-f02a1804b9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eca2622-87cc-4b87-8319-d84740bae75e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84869dd4-2116-436d-aa66-8b8842183834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8963981f-61cc-4af1-8fd3-21b198690d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572f7c24-5954-44cb-bf8c-4a28864870ef",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7724bc99-3d4d-4d40-9725-a7fa4705ddbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71777a1d-e7b1-45ea-ab75-d8ab02616454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30bcfe1f-41e3-411c-913e-55c4afa0bb1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3d83115-644a-4f60-a1b9-cd5c20a195d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a45f14a-43a8-49a3-8c6c-c98f32503b1f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6999a5c9-cc09-4655-aac3-4e2cf129b604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e7e8b29-c8ef-45fb-8c76-6ddcb7cf1a4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "962119b5-089d-476f-9214-2948656579c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1b46f60-9018-45c2-a761-6ab8c9ae362d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb6d734-ac7b-4aef-aadd-8ed67142506b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c261c22a-7b8d-4fbe-aa14-a744741893ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1305ec6-eb30-4a28-b525-e486b3c86831"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc01a53-0343-408a-8de5-51ea8be8f482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "67cb796f-8364-4258-a55a-554b37dcd18c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9806dd15-781d-4f75-9f1b-c2b738043c1b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30894739-9c1f-40ab-8baf-e9cf5da9edb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19bf19d7-c628-43e4-b946-78b91ce775d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb27f2c0-66df-4987-bbee-5f2fb3beaf1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b82ddba2-467a-4622-8ed3-7bd6cd17a2a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac002d1-f958-48da-b1b3-2b62a0e9684a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfdf4a16-b765-4068-ab9c-401470a40000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f06a7ec1-fd24-4488-be85-2a581bbe52e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee23de6-1ab5-4c01-9e44-3eae00567065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a00e1a18-61b6-4a6e-9f63-7e619a8c0c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2841207-8072-4374-966f-39f4712e304f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3929f5f6-ffe8-445f-b652-88da7ffbb86b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "887e066f-1809-407f-9a9e-9dc58a87ff20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc6b4a0-4b0e-4ac9-b661-08bbf294645d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd4da27f-21e4-473c-8a6f-95147774861b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52577304-c45c-4452-b7ea-cb0c90831b1e",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fa76309-a015-4e72-a5f6-bd5c687be62b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "15e8730b-010e-4a60-b940-c90da723b88b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47fd3826-5a99-43cc-b8c2-fc44ea3b91a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "20f55c25-e9db-4212-bcf2-1e6a8966a1a8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b8bff065-bdde-4584-8900-a5ff2b7fca45",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1ee4af72-26e6-4b04-a429-b96feea55a15",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e073c93-4d42-4ff1-8433-1b7960c79e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e98e27c-73b0-46bb-9af4-ac11ea776b5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4fd9e93-64f6-4bf1-a340-5d12675b8877",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "998160aa-afc0-4e5b-8070-7e7e1c85cfbf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6aefaa21-82d7-4220-8e4b-eb0b60692784",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "76be50ac-0a93-4f53-b416-a0480594e3f2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e16d3de-dd1a-45a1-a6dc-20428ee03f4c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d64a6687-ffb1-427c-a7df-8f4c5f29c883"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "efd19f4a-8cc9-45bb-9f22-07ee14fa9e38",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "889c2bb7-09f0-4ec8-8d67-58ed5db95aa8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f36402b5-1e07-4d65-bd21-22021cfe5bf8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "489e4a03-78b0-42da-b88d-8d7858e356e4"
                }
              }
            ]
          },
          {
            "id": "f7795d56-052e-45ad-873c-e9923e702a3c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c835c20c-d657-4dc6-ae86-abd63bd1e6e0",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "22221d92-4178-4484-be4d-ef9e3858f909",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63286895-9689-453c-8c5c-021ac1bbf6ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c97fd281-d1c3-481d-9812-cae30612ba03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "918b99b5-dc4a-4cc3-934f-d4f95e90bdae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9df255d3-4376-4f91-aa14-6f229636cac9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2bc13e55-fd17-471a-8ccb-9f2538402e9f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "057cfa72-43bb-4423-a315-c939d1059332",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "36d08fe1-2836-4f95-8927-bd7bf53e7e50"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "48ac8ddd-82d0-4cbb-9f86-2d76a871575f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ef3fb823-7159-4a31-aec4-429e42fc0b1c"
                    }
                  }
                ]
              },
              {
                "id": "5c4a2a37-d448-402c-a343-c6b36fb4a21d",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "036bcebd-39ec-4e7d-b855-6395e7cc23c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3ab1e3aa-d7fe-4d93-aaff-78949bbaaf95"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0873df0-466e-488c-84fe-cf4b462e8e99",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c02916eb-ec74-4116-a176-1e3a798c769c"
                    }
                  }
                ]
              },
              {
                "id": "653453c8-4070-47fb-8771-f14790da74fc",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "91432e3a-cca4-430d-9fa9-5aea52b55d0d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a2ba9d6b-564a-4682-b49c-d27c4877d81b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e6300cd4-2a5c-4cfe-baf0-a3451c40895d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fa0b9ecb-8bd4-4898-97fe-e5aafc8df137"
                    }
                  }
                ]
              },
              {
                "id": "c73db5cb-1039-4e0f-bd93-2d4da61a8e12",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "45ed1f98-e3da-4f9c-9b54-0cbe64918d5c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c1773424-4fbd-42c6-b023-f0f488db431c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c0cbc825-8aea-4136-a58f-3683c305daf8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "5cc1fdcf-8118-41dd-8296-7ed7bfd62f15"
                    }
                  }
                ]
              },
              {
                "id": "e9bdbdfb-f657-4a71-9860-9558bb62b41a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0d882c4-f805-457f-9486-bae89eb3d46c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c6b0de94-f8f4-438a-940a-ba1824faaa5c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7c00acc0-3d9c-47e6-aa9b-62f0c40d4f41",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e65546bc-be5e-48d5-b29d-2f7775a1103d"
                    }
                  }
                ]
              },
              {
                "id": "5c9802f9-355a-4c27-bcc3-84fdb8425cd1",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a7a8a799-ca43-450e-8abc-8fcf094f2c9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dd95b878-fb3f-48ce-ad5a-ac6eaae1d0d9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0aec214f-4285-4667-9d19-45ced197359c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b1b595b7-5eb7-457b-a904-274392d920eb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3cef56b0-22fa-4402-b6b9-75b5e1f17b1d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4e78ad84-ffa3-4130-a555-a33b4f7d3773"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "055007d1-4796-4fa3-89b8-302caa3db0dc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fa7c9671-b6b6-4f3b-992e-14cdb931226e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8ebdbc8f-c1e7-43d9-bdc5-77340915e5b4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "485f8ceb-d083-4147-9989-57425b89d6c8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4873d1ad-f788-421e-80cb-88ea8abdfa13",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2d667777-f6e5-4613-aa61-8fb1160661df"
            }
          }
        ]
      },
      {
        "id": "21e44629-cc1a-4d8d-8594-b0eae5426aa0",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f2587ee8-1ee4-4b82-a9d7-2957355e7160",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5bc58c46-0ea7-4b95-8ec4-9d3af931b75e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "582fe70c-205f-424c-8593-07d4be28d116",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7723328b-15a7-44eb-9f15-29e61d1948ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db8ba189-e7d0-4f55-844b-309ce7e39f35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ea1436-62da-4251-908d-dd09e6639b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e2e776f-52aa-46c2-9241-3c7dee274b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdeee6c8-cc2f-4cf4-9b37-ee0c3e41e44f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29395507-99d2-4acb-918b-d6a1d058e8a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e542f15-c630-46eb-94a8-8b31a774b00e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "201fe027-27b0-4a64-a91f-035f2c7dfe0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "09e56813-9c04-4596-8097-5ca8a49d11a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c4f27ef-2b3d-4f18-80fc-ad51afce227c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe43cc37-848a-49e8-9b25-79dc6f6942ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c85240f0-91ca-4554-aaec-be4f44e16fd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad49e4f8-93ee-4d50-a09e-86f3ce7992e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d2256b5-e9d7-40e7-b192-b2d811b82140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f6f045-324d-40e9-8b53-62a0c14005ca",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e00b21b-f0dc-4624-9a3a-dae80effdd49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "795caf0c-24b8-44cf-8bc4-0335a9fcbed0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97279969-2bfd-4498-ba09-2d3d42f9f2ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4cb2bb8-a6fe-4117-9d81-faee4db6e6df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d56cff5-d62f-4f3c-90b9-062874f43096",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c59b5c30-2eac-4937-9fe8-a0232b763392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eb7b3c9-8c5a-4bd3-ada7-1a480276cb98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1244bd5-6a09-4ea0-b310-4fb0a341465d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d07298c5-c63d-47c6-8e36-d4275e0069d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "045d5826-817a-4a70-ae56-29b5f57dd221",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef280cc-6714-4779-8c29-a0a8a7033f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20932685-adc6-421b-968e-eaf7857675f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c44f1f5-77ae-49f5-865c-bbc3706167ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "12c999d2-7d82-427b-89da-dbb931a9871b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4747b77f-ac02-4d23-8931-5f064c22fcf6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6763c857-15f3-48a3-adde-86ab930d8cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5e92a64-3604-4455-a632-4684019592a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d73efa-2bc5-478a-96d1-57945cf92f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cf65e9d-bda2-4698-9c5e-36204465712d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35dab6b4-4362-41af-8c29-186fc27e6a6c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77086528-5434-480e-9c91-7fc14c21203f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "799bdba7-1cc0-4324-8054-3645d84864a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0589c426-5016-4f59-8d40-3991065362f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d30cfb2d-bbfa-4d05-8815-b91b9f59713c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "296cede8-2d5b-4bb7-a20a-76f385aeed19",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e53f572f-2135-47e5-90d3-791f17ec0dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcdb4095-b4aa-4bca-813b-4a9ede075d6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a2638a7-efe8-4686-8cf8-a530b51cf8a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bfbdee0-2618-4ae4-911b-b4f85fbd722e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81af94fc-1067-464a-8087-9ec4b865b732",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d137bd0c-3d30-4509-92db-f5ed54d0ad8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f34f8df1-db14-41d8-8d26-ce03265aacf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8abb73-3840-4b8f-9bc0-0ff8a8c4ff25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3051b408-4fc8-46f5-abbe-26d0b43d8b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df3909a-6515-42b3-80e9-c1f7b013661a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e0353b-ce88-458d-b0d0-af1c307b2893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b593326b-6e59-4f3d-9965-7bd8d770ae5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f6c2d03-a082-4cab-be3b-41d119e54f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "bf4334ec-8ac3-41df-b558-ff8c698820bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25399b31-e34f-469a-8530-e8ea878f7bd4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b883bfb6-f6eb-44c8-8ee6-bfacecef8c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa83284f-bb0d-4711-9032-aa4beaf89296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c5c5aca-22fa-48e8-b265-6c0efb51772b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c369e285-fe15-4122-970a-2878d49844da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b2282d0-a8b7-407e-ab4b-7a4b2b0601f4",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a8f0a0d-35d3-44ce-a083-469a636f6ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cecc388b-d38f-4861-81e1-230ee83b8931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "babcbf95-f543-4b4e-9a16-25a1b8badaff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "88d2b7ed-8197-43b3-9d35-0a17a28bde74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "495fc507-ebec-4100-a94b-695805694ad0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda553c4-e074-412f-b1da-e377da257b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fed8a5ab-a0ec-4b87-9cbf-430a41fd71b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb045bc-fa8f-415d-8773-69bd1f5adf8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8ddc8bb-c01a-406e-ab3d-d22cb139f641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d14e0c6a-d8e8-4aba-9e51-d1cbe2c13a54",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6186d226-929f-4fe8-aa0f-3dcb93e7a128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2077f1c-3941-41fd-90e3-d0a5ed3308d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "477a85c0-85b9-4b15-973c-756496d92897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dbe1aa3-0a36-405b-8dae-7f8e0fd0be23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44ec40af-9748-412d-8a7b-38c4216b4e3c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "524fa1cb-7147-46b2-b3bd-f2ecbd9edbb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b7e60f-1e72-4a13-a921-491e6f7c3d7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93667f4c-66a1-4cd6-9a00-202efce7bbff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f27a7bb-734b-4a96-b1ae-6729a51cb8d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad89113b-dea0-4b34-90e8-cbdd416f912c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "032310d1-4699-433b-b396-83626fc9abd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bfe39d4-ef8e-4310-976a-d7f6d1ee0a31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d81ff4e-3336-4b77-b5a9-f65ea62300a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d9d26c6-aa62-443b-99a1-ced5b3441291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9760003b-a9a5-4150-9037-2b9eafcf6a8b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac4e2b4a-c267-439c-a712-cb44463af2dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bfab887-74f4-4180-afdc-768246d1e334"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb0b241-fb08-4f6e-819d-5ccc9315ede3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cda07e74-df96-472c-b4fb-1bfc191f89ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d3d0d2-8043-4856-8b26-395acd0c1ca6",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d2c24d-ee75-4446-bd0b-303e8505751e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b40ef734-9b62-4db6-a5e8-2150cde1127c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b11214e0-520e-4417-ad0a-d5147ee059dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8db81ec-bbb7-445d-80f0-0757d91b0dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc10c358-c7aa-4077-84a9-f5033b1832db",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7dee56a-52c6-415c-86a0-ce3681f926a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52ca2c63-ce6f-4e4b-8309-f16ab09a17d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e520e0-295f-4484-a407-856fbd7b5f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ade8491b-927e-4f93-99cd-ab85ad64a28c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c5d117-99f9-4b6e-81da-119dbcbd4bae",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "598bb72c-796c-4315-b59b-7818b72b8cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5516f95-8198-4ca2-822b-07139dcb6b95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f02977f-2e53-4bda-a49b-c070e963ac07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8b9b1a3-a0e8-4fbd-9eab-ec498fc4d1ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "003d53a7-dd2c-4673-8cdc-bbb653c3a763",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1ef8a7d-4a7a-41e3-a5b4-9fc4fc247b95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e61637e-4bae-42e6-b292-017277eb7ad5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a6a4f5-53cc-4de9-844d-9509774cb5ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1c206bb-e9f2-4e7f-9ecc-7256d8cd6c87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef13d28c-ca72-4a99-a466-91e7d7552f8b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "837b0732-19dd-4ff0-9475-e01f4cf9c867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7baf102-9d8b-469d-8782-519d01b7a37f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aea1de5-e563-4ceb-91ae-b4466e93dd25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06bbfe12-bdf1-44a7-b47d-7cf411a15d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "047d7f55-6746-4960-af74-d9657f4e5b9d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbc0b6db-710a-4bad-a469-9f144c8e87e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d07b844-58dd-4d96-b4f8-8131355f3e53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f301467-438c-4359-b0a7-086220d4650c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "057b566a-9a70-4d99-a2ce-539ab868da90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c87497e-0248-482e-93a2-6fbdf830f558",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff79120-6237-4579-a857-844ccdb46855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fd61815-f320-4806-a887-42219f3447de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a4a2a4-dd5f-43f7-827f-8a9fbac5eb1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15106fd1-ae3d-43f9-937c-d0d28d92ada4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d199bf-846c-4aa7-9bcb-972ab5eeffce",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c82bca-b230-4f1b-91fb-da6558139337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df73c298-8e0e-4674-84ad-b5dab1ac3659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b75f3c5-2e62-42b4-a28f-db345315a4e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ae45f0b-e027-477c-842d-dba78582588e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4fe30f3-c176-4a68-b5b6-f4f79cf27749",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9baf012f-2e67-449e-9675-3fd99f27aaca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf1f21e2-af96-4263-9e46-24fa8130bc11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a493e299-79de-4ac9-a1e6-3859fb8f9d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13db7b89-f2c7-4278-a8f7-8cab51c6b50b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b3ca173-d5ad-49fe-866e-aca4f0b24128",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56111996-cd44-4873-9219-30e834ae1090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1bbe55d-d7ad-4c81-97cd-d7d32cd19e12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24c7bc28-6da2-40df-ad4e-e7f3c17f5adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bae9e987-5917-4d3b-be75-58885465bfbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "638be6ca-9b42-444f-a81a-a350830220a6",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa8b0f7-2eb3-4445-8516-aa097505ccf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3703567-5e7c-4b7f-876f-fa1b25787645"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94ae1be1-794d-4a45-8424-4275b8a6ac17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0b30c31-b06d-4cab-bdf7-11990e7d9f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad127363-c89f-4f46-bea9-f5c2b28671be",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a5483b-c5ca-47c3-a99c-6481b52c50a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e78a625f-1dfc-44ab-a77f-467dd27d7054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a36322-e388-42e0-a40c-f0dcdc1713f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "849ae97f-3dc9-449e-b57a-c4b74e65b8ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e43177-06d5-41f3-9f79-ad1537b8e08e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab668c2-5e8d-4522-94ea-b60cc87f68a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d66bd93a-6827-43a8-9e7d-0d6605bbd542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbc19da7-4404-4eca-9991-8cc5a6506111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5411347-5b84-4b55-9a52-474d49402e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f0d6f4-d382-4635-bb2c-76aae0dd4620",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa1d6296-6cea-4ee5-b1a7-756d855e1232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8042eb0c-df41-44d6-a3b3-b7a77a4feea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "041c5346-f72d-4518-906b-7e1b7f57515c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c17caec2-9257-43de-967a-fdf68199c2d3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2acd07e5-2dd0-4e98-bf47-634310ec2701",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3fd0f494-f65d-44c9-88ea-4460223a2a41",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f540852-c071-413a-85b6-2a9ab04bbf69",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1efbeac9-9df9-4c0b-a90e-69cd845c517b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b90955fd-43ea-4f5e-94fd-941bb96792c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "669878cf-4092-4931-bce2-bc3238d56db9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "abe58cfe-97c9-483e-871f-d74253d5ffc2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3de38720-11b7-4086-b1b4-2b126663693c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e75aee58-6ecf-4287-96d3-d3359de45739",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb49a495-b9dd-4777-9c8f-d3482ac4ecad"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "129ae45d-a323-4ff6-82d2-38bedae9f850",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bed9801d-192c-4376-9907-40b2b0af43c3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ead2510d-4365-4403-be52-484080c8837a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e96896fa-efa5-4d38-9379-664f2ef6dc01"
            }
          }
        ]
      },
      {
        "id": "18e1d160-7642-4c4e-b128-9d898c72cac5",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "31bb50ed-a7a4-41b9-bf45-1fa250226169",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fca9f27c-28a8-43da-b192-7ae224978009",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "452f144a-4c49-4246-8802-7a327a9ba6ac",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a5ccfa8-66f9-40dd-9767-66d47a3fee83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e219acd7-8a30-49ca-aaf3-2731a537a3aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43dd085c-6afc-404c-a7f1-4a948425b9be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a9e7c6e-d6e0-4456-ba0a-bc9ad0aba219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "163b6db4-329f-40c6-a273-b78421d94f83",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93fa3732-4fbc-401a-bd97-bdede4953413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35918e82-3871-46f6-a246-40ec53c95f73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14017699-fe96-4c3c-b1e8-cc7008d97b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "77cf0b3a-fcf4-4260-8573-1210d9b57054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "184ae8a2-e814-4d9a-b178-8bd40c555fb8",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "646ead3d-acf0-4942-b597-b2ba28469259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4d7074f-3237-43b9-8349-a59354ccd205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b03c8b-fdaa-4deb-8313-e32461258b02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "be2a0849-0868-422d-9a09-d8dea73c315f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c82688ca-762a-4386-9a44-849da7563b46",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3747e16-e158-459e-8f35-b30aa14f8a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64b2db97-0050-4c85-a418-69efdb67d976"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2811e1c4-074b-412a-8115-208873186309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2cffadd-5d38-4391-92e0-148a78a4193f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6c3ef69-777b-4ef0-b3e9-f772e7d1c9a3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d7619a-7cbb-4221-9a10-cd5b0b185a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2b1326e-36f4-472b-b105-65de2d79c84c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e40622b7-064f-4934-91f1-0d3c6a74fde2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebcdb7e3-ea48-466e-897c-bfe7de5a5b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7562c02c-f9e1-452b-a99a-a5495ca3ba90",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b71952af-4d30-454b-abc4-5a134350ba24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88c6eaa5-419c-444d-91ca-3754135b444c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "126d8de7-f735-4975-80a5-624287d6cb1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea4cc494-c7e8-4c46-8b0e-0b89f4d40ebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98bfc4a1-0414-4866-b467-f6b58475e007",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bbb7ac3-7fb5-4799-8ccc-5a2081667f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6284347-51a8-4f8d-8311-d2874c6e7395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb892ca-f5e7-48c5-9846-412779cd7b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "23a1a989-0dc3-4345-b5bd-ee9b375050b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ed6917-0a4f-4eae-b9c1-67086b6188f3",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea457290-7721-4459-9ca7-a3f5ec1b312b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28785015-24bd-4868-8559-ca1fbfb6d27d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a43452-b6f9-4b15-a5b3-67f14b4e6f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f57c17e0-94f2-44a6-900f-c7cf9033f125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7305fb1-feae-4d97-9934-5d75a1bce9ad",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14559c89-7a70-4ace-93f3-e0086b3442ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24995154-b9c9-4258-990c-a1c39f4d3ab4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f3e286a-1ce5-4d87-84be-f6be630334e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "921cef01-2855-49f2-af3b-5055c3f53ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e96a7390-51e6-4c6e-b930-f28df1bc0d27",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd28afa7-64f4-4401-8b56-ef7705ef8f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1644fc00-fc59-4959-ad50-0a12f110dc64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f30497-9559-4719-b56b-a2d5fe16645b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "89e5ae05-c0ed-4101-bfb2-b78c1dadbf97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac2c057-92fd-4186-a1be-6917ab72645d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "775d567e-15b9-4cfd-bc7c-f00d9ca1d195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8b23f39-6c4a-4212-9820-08510f6014b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "714f40ec-6ecc-468b-8fc0-a3da8e7d566e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "229cd0ea-ebdf-4b5c-91e7-b251ac646a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69a236ef-ddc7-4319-aa4f-3a3b9b4c7320",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b7610e-00af-4840-a4a2-aeadabd64634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c509607-0551-47f8-9200-adb670b794d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d558bb3c-6dd9-4ad3-9c47-a9921c8a71d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "98906f78-4c31-48f1-a912-d5700c12a283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be21add-f465-4228-bb0f-bdcab15fe9b5",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f999d8-6ecf-43ce-9773-d28372af3f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0da8fe65-7e6c-4029-a8a3-7ffe89635814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "491727c7-094e-492c-af04-a8a961e0bd1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9381a481-e86e-487d-8640-c8662c9d0a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f5eb04-ad4d-472b-ab7d-325aec9a9ac5",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf35b0a1-22de-47be-b138-62d1c1cbbc3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59dcb580-8ca6-420b-8ee2-0a129ecc0215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c4a337-1e2d-47ef-8b8b-b9e862477175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "61800475-4500-4ccd-975a-b056745f0efd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "816031e3-05dc-4cfb-8a94-8e4e49cc9360",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b32c69-d83d-443e-8392-67450a2ae49c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a72c51e-cd55-4958-a06f-207724ade2e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "771e6921-d26c-4a67-aca9-ef60f0f36cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "fae25995-cdd1-4abf-b0d5-c539c081febb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc4fdada-c99d-41c5-b132-e547f0681557",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15e29cf-8eb3-43fa-b5e5-c24f89778528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7093450a-c82b-4ee5-81dd-c2b8b38a2b05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ba9d7c-72ef-4eae-92a9-395206e16aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4b15966-ed88-48e5-8234-3b900549e29d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e1084f-ef92-470c-9a1b-a953d499caaa",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d12755ad-4c54-472f-b8ec-037362fb8704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f88eee12-8b9d-4102-b6f8-2cd29fa47303"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9efbc14-706b-4363-a220-ab67998e4f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b004f318-855f-4255-9a2a-601e0e49eee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b36f7bc9-fafc-4615-9a14-ada3890ff98d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6274264c-73a5-45d8-916f-77c0e1f814b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9389142-6f96-4c28-ba44-58e659e7950d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2230ee67-a1f3-4da1-b146-64b575949b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f82e0763-2fc5-4b79-bc24-5a1ddd1c02a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca778798-d2f5-422c-8cff-3d1a91f978b8",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d2a80c6-2878-41bb-b16c-18a5e9a81802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "282cef86-7e21-4277-8746-cd598cf1dc3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a87df009-cf9a-48e9-bfe4-2e263ccf4fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60edb176-bf34-4876-bce3-4f52d4360df5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d77edf-d94a-4525-b46c-03b0e0ee09cf",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb2f2ed-84f0-490e-a204-0a495e72ab99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4292c75-268f-4618-bc9c-33567eaf60da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04ca45e9-8652-4c57-ae8b-0e951e7ac926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfe69721-d8d8-4dfa-a35b-721da8b0eddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a52690-ea09-412e-8576-0eca16b0ac77",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00129162-6b83-4886-ac3e-a5898700f57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5a62fda-812e-4bb9-bb9f-885d40737d6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6324673-c5ae-43a6-8df8-4b246b30bc8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c37543d2-bc25-4485-8739-020ec02ae195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9cc4e90-7e63-4b1f-aad0-4469b67c2c10",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6dc5823-3c90-4d6e-bf26-7381f476146f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b2dffff-72ee-49ad-ad0b-2fd1f893888d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7c88a82-67a9-4d73-afff-41d57c4b63b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "386c1bdd-f9c1-4c5e-971f-c9bf98c737b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3589c732-e8d9-4e55-be8a-cb8f5ae5d05a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e58bfb-3f04-4007-8e92-ca317ad5de50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "699de95e-50e7-44d1-b7a8-6a0a1a154ccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ff2c87-1724-4b0a-a098-231e30fb9ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40821004-dd02-4025-8aab-ee55de9fcaee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e97188b0-f884-420d-81c8-8982967bf72e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dfeb42d-5e2f-4eb5-9473-56a2e9efb7ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2708e36e-a07b-42ab-96eb-5f96ff946a3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2469e9ac-c3b1-4f2c-9084-c6148d3a6cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d923710f-adc9-4f45-883f-926e77475ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8f0f186-5876-44bc-9978-c69ceba46687",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ddbd883-b51f-45d4-95e8-33798ce7fcd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56855c9a-d97a-414d-8427-58b52a00bb85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ba6fcc-4daa-41a4-8825-c7c8f9d22e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78d3068d-eaae-4b06-9661-afb1f10f066c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd4a12c-8251-437f-9734-7145740aaa9d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4f668f9-9537-464c-9f4f-54da4ecae572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b02caa14-395a-4827-ae73-19b72988955b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db5cbc7-3483-4acb-b931-8e64493065bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f42a1ff9-4fbf-4675-9490-f895505b4b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a69462af-2e0d-47c4-9178-197ff17e557f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03632f87-3863-453d-aa06-dbf342a5f7ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "228f3e27-320d-491e-a221-f99251a85b58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd3849bc-a490-4605-a581-3330c9b3ff6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25039ddc-c5a6-40cf-ae81-9d7942df95b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3a60f8f-d9d7-4d91-9553-4c8f46fda7d5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "792dced3-0035-489a-8e36-0808b9e5b93e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac4ec3a2-93c6-4305-93d5-54406c04cc06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34b07d3e-f0c1-4601-983f-a4676e934865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab215e81-8106-4739-ae44-681e32dd1922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f08b3c5-b538-452f-8e4a-ebe85dea5715",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "090a7ced-7766-479a-ad99-f393afb7288c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8947fe9-7372-479c-9a4f-079bca336cf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1893aa90-c23a-40bd-8d3b-84231288eb3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "212b5326-95b2-4137-a37a-8e6a7adc1f21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac68e3b0-fa80-43da-b7cf-3ea32cba8eb6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d2c18d-60c7-462b-820c-69d4c82b7b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a50e839a-c2da-47a2-aa52-9a7207946087"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9fc51b0-6ea7-42bb-8cf1-02b576aa9114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96a773f3-65a2-4cb3-9f65-e035a59315df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b4f3f5-bc5e-490f-b657-1d8c0fca1385",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51eb7a2d-0995-4c75-96be-3344103bfdd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "906aad3d-5473-4369-ab2d-f9030c0bb84e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45bab544-20a8-4b03-8560-4e44a199c8cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82ebc0cd-22ab-40da-b4ce-00ba68b2ceba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c60aad9b-fada-4fa5-843e-7506df63e867",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f1d773-30ae-41b5-b5b4-68e3b3b23adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "920c6b32-d6d3-41bc-b488-a2ac041fb6e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e300466f-c869-43ec-ac12-d4ef48fe7849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc619bea-79f3-45b0-9fad-91d70c7016cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b190da9-b279-4a75-a88c-56674253cc9e",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "968dccfd-ec47-4317-9e79-93e5a416b1e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9569127-64da-4487-81eb-b05521dd98a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31bd9c5f-551b-49fe-b07e-73d94199221f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4835609d-cd9b-436d-8afc-0789cf018770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "049f362c-ac24-4c46-adb6-c73806664980",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8665349-8d6b-40c6-b1c7-a9458bbd5780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57d604e3-38b3-43fc-a950-cab008da1a8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e266d09-2919-4ea5-88d9-6224f71e4531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c15130f-a9dd-43ae-8585-96da1c8a4e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a3e0bc9-7eca-4c12-82a1-9b0df14e7621",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "804d5634-b2d6-4ed9-9d9e-ec0e096a6116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6e00812-72d6-46b7-97ac-5720ce112e82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "923e228e-a67c-4b94-8d61-dd2a85573876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea56a7b4-576d-4df5-8bd6-d88ca8acd62d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66732310-f0fb-45de-afdb-bc5fdf9f080d",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab3532e-3c28-45b6-96cc-1738b0712664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "714c3de5-6ec5-4b97-8679-0eab2606cb8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e8bf748-1691-450f-a955-a5b6e8805997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37e830fb-b28d-462c-92da-b842845568bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a20c096f-e58b-4205-88ee-d51b05021b4d",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c79b5a9-2a8e-4da8-bd9a-05b3e592d25a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a37fb5bb-9db0-434b-809b-c93feb5870fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a1e13c-b494-42ff-bf94-c2100bab887e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af313ab9-f6d1-4547-8288-6f3452ac76c8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c2c11eb5-5707-43a6-9994-29118c8751ce",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "598c741d-ab2c-47b2-83f5-fc38801a028f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12753a03-8cdd-4467-8645-6bb7e05cc65b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "76bf8d62-8525-4b29-9ecc-1c5157349e74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c50455-7009-454f-9a19-8701d58f2656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "48eccab0-b398-4448-9476-8354d20667d8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "98076122-0e79-4b95-b560-2d40e4165be2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0060858-22bc-4fd2-a345-d735e4481f78"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a9e3f5c6-6fac-4e55-81c7-91c58eacf92f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "178bec34-3e60-4fcc-898f-b1829d8eea3d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8defadb9-c746-4083-996b-cf75956d130e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2f358e68-8cb3-43e7-add4-838062bc42c5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f14f7334-7e8f-41a9-83e9-426451f66ea0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "507cc35f-dd27-4194-b2bd-88152d5821fc"
            }
          }
        ]
      },
      {
        "id": "00099a3c-d5ed-4c86-b80d-223b93d21dcd",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "df6d057d-0fe8-40ac-9c7c-7fdf005d4558",
            "name": "Negative Testing",
            "item": [
              {
                "id": "728a62b8-e360-4378-ae5e-6baf60c3a8db",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ff50049f-1148-4519-8f1b-e178f96196f7",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a63df553-3ea4-413b-bfcf-50c23f38e141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03c38d7d-6237-40a1-b35f-65e426d24c43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72f445f-5166-4d04-8350-d00236196e5d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "092da9ae-a471-47db-b46c-7b2079ae2609",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6124baa2-1e7d-4c34-923f-de394500bcdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c45373f-34a4-4143-88d2-e207a3b60d06",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33164feb-c7e3-47c0-937a-8c37566a98e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "215ce5c5-ad20-4825-a81e-b549c197f5a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0333832-68f8-4d65-b6e9-4e8016d11975",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cc1b1cc-e409-442c-a5b1-9776def234fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "408e3c2f-5d2a-4f28-a0d4-44ed5b33e012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de74214f-568a-4d1d-9591-fd8edffda77f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e569f91-d19f-4b09-905c-ec9c3b5dd20e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cc3d63c-84e0-4b4c-a79c-b3b0349301ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2154ede-faae-456c-8b46-3e5946a29115",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b5efd3f-81a1-4725-9ed6-129c5bf85aa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69defce0-4053-43d9-94e7-f981a3dfa799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04c0d82-5a01-4581-b1f0-069cfa758ef0",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef6790de-a71e-4ba0-ad01-2b4e127189ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e6e8917-2049-4ee1-b90f-8bfeb31474d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc4d7c39-f7d9-478f-9131-f95878b51bf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce238fb1-4a02-4ccd-ad3f-e6511f410919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c015685a-892f-48da-afa4-a940b00acf75",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4c1185d-d4c6-4794-a78c-4fcd1da8b173",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6923a9ae-fb35-4cd9-8bdd-04cabf9247c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c66ad2-c89e-4b07-862b-58fd004b6a87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23bfabd2-5afd-4b68-8694-e3ae32808370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d87a3451-c250-4b55-ac42-98f87188cce3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1053daf7-7371-4a36-8822-1170fa80b8bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a088062b-3a55-4885-9c73-8f5eff80cbb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f1cb17c-1343-4efe-ab23-89981d875c4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b600986-4fe3-482e-84b7-17725e2455d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6acae443-f134-480d-adb3-f7bc24e57758",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "196ac184-796c-45a2-9c93-e7c97d349392",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07c0cf3c-84c3-4f4d-94ea-a1f56da56052"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81087241-2ad1-4bc3-9770-d4fa84620116",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c13dca27-fe12-48ea-ba8c-8541ba7ddabd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f5ab258-2d34-4836-b786-4b86bd25242d",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aabe1892-57b8-4c16-acbb-5b3442fdc553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4499aeca-9871-4cdc-bd35-48024897db7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7702085-1ba2-4616-aedd-16936fde7c6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93e5a179-9ebd-47f7-a236-38770ab40434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd42718-cac5-402f-8fe7-7854096d9148",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ae3c81-4e6b-4a1b-8126-84b94bdd34a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2362c68-4c9d-4bf3-869c-6ec8b94f9ef4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46fc6024-de16-43b6-9392-f2b7b1307f6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "137581ca-6aca-46c9-8825-6ee66d4a3de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3fa837d-901c-484d-8233-cd45518104a3",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a60a7d8-85e6-412f-8cb2-b10bd34a600f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54997800-f931-4d1f-9cde-0b337cb20e6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9dbdcce-8bc2-49d0-b405-41aa5cc55922",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf1fecd8-d0b0-4991-8d23-5bf0b40ad6cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc1b401-a1ad-4afa-84b4-5d8d65b73086",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c19de83-4197-421a-808b-8a937e0d8999",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18369410-df3d-43f4-9967-4449793c4700"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db4b953-767f-49d3-99ec-33380fc80a5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c81085b6-cbe3-47e2-a43c-98c6e81c7eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af7b1e7-0f89-4a77-a7a5-247d269d5ec6",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad519a4d-113b-4120-8118-0763d7991186",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "821e4931-8044-4093-b2ef-4392c5c5a069"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3463b68-39b2-4ee3-96c4-b06a6d6f4f4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54eee963-808c-41ef-84c0-abe040ad9290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53cd20ea-403c-48f7-afff-0cea156d7cdd",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14aab98c-38a1-4d07-8e66-648cc607b105",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3eb2865-d34e-4777-90a3-7011d9e3dd90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05655da-7daf-484b-a3bc-d4c1442bfb89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6c0054b-996b-4bda-97e7-a3de261c9e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d10385-0326-44b6-8292-73e26fe00120",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e5e372-5b0c-4bc7-ace8-ee54f9c5e6e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d496d7fc-9ac4-470e-a93b-ebc437dd2bb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aff3ac2-d005-40f1-844f-93c14929c987",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88f5fb4c-b490-439a-827b-24abe4ba0e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e448a95-5302-4493-ae0c-f9d692ca2ea3",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fcbc2f8-de58-4624-b6fd-34608919c3a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3b07044-aa8b-4f49-937f-6de9bb224d52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cddc377-8739-4705-9773-8e16a739f3bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6191b0b-5561-40df-a48f-66b7594b7fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "742d6f4f-e354-4b53-9bee-d8bf589987ba",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bbcceb4-9408-4953-bd16-cf932f6dc992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57a405df-d39d-4276-85f3-077eaa23cd40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f9f56d-69ab-4936-ac80-21da906505cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1147f15-71e8-4ee1-aca7-8503afac1d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "792a90aa-2254-488e-a747-b4921524b6a4",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ed129c-2460-4967-9b0a-b1fd6df4eea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9016411-ee03-4f60-849a-88534cf625b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef129390-0808-4d2e-83cd-ac0a31ab660d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aada016-87cf-4687-b7bb-0686c3d10590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "670c872a-f5ae-41db-b734-f14a9aa3a3c5",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1106598-39aa-44aa-8b5c-a6cfb7513fc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e03a6174-cb00-42e5-90e9-44e92020002a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b8813ee-d02f-4ed2-ba6f-af140d26becc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1948e82a-b55b-4abb-bff7-00f72d3ef90d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e24a93-b70b-4f05-829c-0a499547a283",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6156f8a2-7c2b-4eea-be45-a65432fd837c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f72698c-9e74-413e-a240-d124c92c45b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ab7688-fa0c-4e59-a6da-5a1190e28fa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be33ad10-0722-4f91-ad4d-0f2901e74451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b372b4-843e-406a-9c31-22bc4b824cf9",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfe7f097-7473-40e6-853c-1a61fd5dbbcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35f45d94-9aef-418c-9199-a14e16f0d001"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a76d5a-ffd1-4c20-8180-98b1321e2a25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "976994e1-515d-4290-9ca8-d59005e037c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bed99848-3b2c-464e-8329-cc15a7ab8501",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f362202d-b721-4e28-9421-1cdc7953d31a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19cf0f09-0261-40a1-b83f-07c1143a1f4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f0a2ba5-76a5-421f-a900-803ef839cf95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f41d4ab2-7451-4cf5-b0f8-0cdc0894b172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf4cde3-a77a-4f17-a6c9-e295986c7aec",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f414e6-0985-49be-9ebe-c5028b5ece5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f951056-de5e-4b27-ba0f-da1fc0d645ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3e01e35-6944-457c-bde6-9dd96a5629f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eefdd5e4-a180-4db2-b241-f4d4325f5a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d1da887-cd5b-4134-9682-f1e6f3382646",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9703707c-6bc4-48d3-ac55-f7d30e8892fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c948c23-71ab-4283-a9e0-8bc22e771967"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd84e22e-b28d-4ef1-a2f7-f1684c23dff4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22dba570-5a9e-4cb5-a156-eaa029c11a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f934338-768f-4624-9bad-a27be4777810",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "738f272c-db38-4a19-8a61-c01093deadd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6aa663e2-2f95-45d9-9bcc-2f6351db2717"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "121246a9-6430-4ec4-885b-47e4991589dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a62c83c9-cae3-47e0-b2eb-0312602be670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "992cb08a-a4c4-468c-a7a6-87f8162b297b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0805e9a6-30bc-411a-8bd5-b46e1548e97e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f14aa83-b1a9-4ced-9cfa-c1461116b641"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe07df17-18fe-42b3-a744-f1267259c75d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23e29233-1b19-4df2-abdc-93cdc229515a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0d25d9-5cfa-4373-a2fd-d55c1fd5883a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e29d6d9-5da4-4e84-8f70-300b0d51aa12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4887f1cd-a81e-43bc-9193-bbe5263478ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e312fc72-76e1-4aee-bbfa-9eb9d3d007d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab0dfb0c-bd08-441e-8f7c-ed4b9891c244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b04a8e-e6fa-44a2-8e07-99c780f5fbab",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e5f78c-5c2a-449f-84f8-de0033aa6a4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "578ec3a9-1463-4062-b510-de8e63e96c53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "369894e6-bf4b-48a6-bd50-01719351fcb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "905e05c2-28dc-4172-a42b-5a9dd1c672e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "329103cf-b8af-4452-81af-054682fe5b44",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d634e51-fadd-4204-af65-0391232c470e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39b0d633-4494-46d0-959f-bf6461213b69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a65a7db-a8a1-4bfe-b64b-b5cc855fa968",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55941163-392e-4fb8-83bc-a95710a745ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca755d6f-8a85-4df4-bc56-b85af9c8a498",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "333dae89-b520-4c15-9b3e-32e8d9b8aec0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3c4776f-5f90-4a07-a5e4-b582555fcd42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "534f8a86-2d6e-4992-ab69-26fe245f85ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29ea472e-4b66-4b1c-ac67-bc5ac9277b35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58a93ec0-938f-4039-bb85-505b31dc1daf",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36dc02c7-650c-4477-8318-d46258fab9b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7870504b-b182-4799-8110-4bf01f9fe2c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dba0989-c3a9-4d4a-8c73-b37c0c211011",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfea4c13-f974-4368-94cb-887ffd0e19b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c1ec73a-ad42-4f92-a3ee-6a9e05806a6d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0af5b58-7050-40a5-8c1e-da460e530383",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e68a442e-f22f-4b07-82c6-9250bcd58793"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "231acc26-8dca-4a21-ba9f-4691f93698f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f00dca2c-65f3-4006-ba34-969579594dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a480e6e-6d75-46ee-83b5-3dc7143f1a01",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88bf9955-7579-41e4-8026-d8445a521a07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0c0513d-fab2-4e23-ba36-5cf0ee50c874"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5610afd-44fd-4819-8634-73d722c8403d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69fe2c2c-823f-4c26-864b-4e836245f74a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6fc3985-f2fd-4ead-aa06-ffb9a0f82c0b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b257f435-2507-4310-9ef4-08e441699893",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17807b32-617c-4527-8912-541dccdc0d18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1916d38c-85f5-45c9-8610-5fa2980f84be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61b0008a-9e4c-441a-adfb-a1d41ba561dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "680c8aac-d778-4273-90f5-a8268c009074",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab8db9c-bb1d-487c-af67-c6fb49b32698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02896b11-207c-489d-a14a-b358498caf53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b27473bc-54c4-4d39-afae-0f3a90115e45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c474797-4405-49e5-8690-67a9cc881547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f05b7e9-cab8-4201-9d11-c534379419c6",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c7d45ae-8777-471d-b3ba-7be8b7cab2bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "865c289b-6aa3-460a-a48a-110979ddd900"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2586f8b3-2b7b-42f5-87ec-be12df8b53de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7db914d1-91c8-4304-83ce-e3fea495c399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "620eedb8-fc98-482b-9f5e-eb8f79810c6e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1537477-368d-4e98-93e7-9eb4f1a0a905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82353354-a4e4-4345-b9bf-e37a08580c7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b252fa-5d19-4bf8-a2d3-631ff381ca91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "270b8bcd-2a87-4bd9-b4cf-2f0005ba1e8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423f7d50-15dc-4dec-8a2d-b698f52237d5",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dcebf3c-ace9-45d9-8754-628d072614d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcefdcdc-c182-43fb-922a-8aeec38ae90a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d87dcdba-892e-4dd8-a6ab-e3696ccfe712",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f324bcd-8cca-4d11-a350-df3ea7d6aa96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f6a0e5-c280-4ed7-9c0a-f31bffecccfc",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44bbeb9d-5042-4757-b515-d77db7035904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38c9955b-d9a5-4b1e-88ea-5a9123c07b96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45e386a-25ff-40f7-b161-15c8ab853ab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d445ea0-e8aa-4576-a378-5c9083a86d7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b02287-7a45-45ea-9eaa-7009a43ccb2e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bae3b438-ab13-4aaf-907c-1a947eb1595b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc2dcb64-5c8d-4eb2-8db1-355490710155"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed759f12-cba1-4e2b-8c65-bfb9c0c88267",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4a28965-001a-4491-96b5-bff8919e471d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b74ce3b-342e-4528-ad73-8004c16ecaf8",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f7d6bfe-0587-4843-8022-6918524f085a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "116d02c6-f856-4724-ad5d-b2c3f89324d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34e578ef-74ad-481e-95a0-ed3f1695fca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dae0dfa-1e04-466c-a82c-bf4dd3d314e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "512d991d-f5dc-4371-9899-35cf5dd8f734",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d244aa37-d9c1-449b-a9ca-7a26a8afec20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c135f05-50df-4467-aa7a-223c9986ca16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea3e9c3-f880-4557-abdd-cd00a8963e73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31a7ace4-e2ba-4b2d-9738-5268bd4b3dcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "066fea84-c3fc-4f2c-a9d6-4dab8da68c4e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a022ca06-d0be-4e6a-90fa-73bf6bd51fb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18dd37c8-c571-4d86-adfd-6bcd9e93b35d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab399f3-515d-45a6-ac27-ce3a34380c19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d9895dd-b1a9-488e-83f1-173da2a742f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa474f7-9fe9-41fb-a0b3-cf0abc509abf",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3af46c75-c122-469e-a7a2-9949fc9c366b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f28635d-fe9e-4d7d-ab27-422b959cdf74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71e3ab43-3491-4cd5-bd0c-2b876e03e3df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "459a983a-d0a7-42d1-aea4-f652ea7a150d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d65ceb8a-6758-4df5-8346-3a8d6a35d5b5",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7161734-147b-4f33-bdc0-db72cddb8c4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0f5171d-6379-4693-89a7-27dac7ccae66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a140d979-140b-45b8-bbbf-7fcb9c9798c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daa2b1ce-0d50-48e4-9bf3-4833a3836144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c8f0e99-265c-4157-a3bc-dbcf46cb4bc3",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b41654-22d3-4e70-9a31-056901f841ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b0a1137-9e33-4b26-9d35-c2a0765865cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31c1f6de-946e-4d13-bd87-025d56ebd6f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01997e9f-f106-4dbb-b228-715209e56b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d1e1f7-bc82-443e-a7e5-5ad83da80f4b",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e8e64e-97ea-4a2a-a37c-2c510c5c8081",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "385620dd-c1c7-4f18-bcf7-f6a042713ff2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d20b0d56-a1f4-4503-a5d8-b169db2ad8d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27862886-7781-4cdd-a423-2ffdd2437c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad6aecee-e323-493b-a619-b64d1d449cd2",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b7d7636-1b8c-4c40-a052-94dc3beaf26b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc717d8e-0055-4383-97d9-9dae68efe3aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b9d900-734f-49f0-90b8-2a32ac937e31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a9a9e52-5a28-405d-9c70-eeaf59776eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0926f5ae-ddda-493c-8d83-a2e495e63988",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f557b783-1f51-404d-97f4-f9f4d8c366af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22bcd299-3154-4ced-8eb5-d753a5e3a527"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de98836b-fee4-470b-85e2-0d3ab25b7f21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9db4cf6a-f60d-45ed-9919-9986e5498150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f709420c-ca5f-4ab3-976a-79309f21ec77",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c7e4e0d-b8e0-477a-a4b4-f0f493618ca9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2476740-d5bd-456c-b891-6021924c0fa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db3924d-bdd7-4172-ae11-f0b30eb98b9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecbd1556-d6b9-449e-ab54-32a59d4ec422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7087f4f-685c-46f3-9d5e-18ed696ae384",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e22ae1-4bf3-42a1-95e8-b4bd7686fefd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "008d4c49-1993-4412-a850-b932b34e1053"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "270f4ae9-f736-47fa-834a-8e196e74fb72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2c37044-a19a-4724-81aa-d95d9b0c6daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edda6872-9070-4c3b-8e01-df0386a0920b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "118c6437-590f-44e4-b338-62eb309ff8db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c84ba36-7201-400c-a5c8-a9b8dd946d88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc2e8ee-d4c6-4fe4-807b-996cbc04e714",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52446c2c-6175-4005-8b91-770d919e20b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a00e25b-0479-4c50-ac4a-6c074e42e6cb",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d4cac7-fb9c-4bff-866e-437b5c16462d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e898d05-25a0-4dad-b8db-cb88c73039ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f6925f-c46f-422d-a3a0-096e8a7cdcfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70013015-3ca2-4bcd-b737-ab3e63e65816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8313e1cc-caf9-41cc-ae60-709840f1d8ea",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c20caca0-1a13-490a-b084-cc05f40458b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e24c9132-ce01-4210-ad9a-c314714c5e42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f95d42-0d44-4d11-94df-18778dc27c2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb0019c6-7cfa-4de9-a316-da97d62e2752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96cf5eb2-3c79-4475-9181-0637863770c1",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c835c4c-0593-43be-9738-66dcdb401b59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df5e1a53-e4c9-4ff7-824d-b7e07606add5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dadf1ebd-7482-4779-bc35-a69d47b8d4ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fff6b22-69a3-4b72-9353-046529166457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a2778c-c1ea-4c96-b5ac-e23ccb0e1add",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f14e8eb8-0f29-4c1e-aea2-1e1b3652cc12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf3ce4ae-7b11-42c1-993e-b3c6f1330bb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ae30bc-e8f7-4867-b664-a6a596de2242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6610d90c-7a1d-4c2a-942f-f66b3828b6c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dda92b8c-a5ba-47bc-9ddd-e5037e260277",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb9d500-d4a2-47f8-b982-b5895c569d6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dd86657-efdb-4121-a5d2-90ce0670ff2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd53e49e-cfee-4404-835d-618d9915b9f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "097f5bff-7db2-4cbf-9ff2-d7fcc4f7d844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05eb435b-e8d3-4776-9ddd-c0d76ede5b7e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4b9fdbb-40aa-4d29-8a57-9e9929d35769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a197e974-f868-484f-838c-d49749b5fe72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a24544c9-e940-4ce4-8a13-e6e6021028b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdd3904d-55f8-4e84-8147-1a9205b8548a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a757c1e-3b3f-40d2-9732-babc0b5ea606",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c01e7db3-aadc-47db-b3c9-df18814ae642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "755aa10a-2045-4491-8287-ca9128f6919c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b97ab8-a594-4dc5-aa6e-24558458dbc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37f51e2b-390d-4994-9a9c-04a27345ded1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f74919e6-6c13-4095-87e0-f18cf1a3053c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6afbb70-1bdb-4593-a34e-3c044e62a8af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3bae48b-84e2-440a-983b-035d3cdf0cc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a6638f-6b69-4422-953f-b8d4007b0a65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0a9619b-dfff-436e-a61e-f6fcc5d53626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f8a3280-d805-46ec-abcc-a0d4685299d0",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6024d962-8b3f-479b-9378-24b1e2322d08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd0bc779-4ee6-4803-9397-49cdcb3300c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9637c368-19a5-4adc-a189-e4db3a937770",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "021d5027-0d8f-47b8-a303-7f4f9c8e2e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd94807-edde-4c2d-9846-a24b2e46a360",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d944d6a8-dc12-4164-8564-b5ec18ca491d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8762270-0b5b-452b-9697-b2f88f53711b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9dafc4d-8861-4101-b076-20a8be723419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e463cc51-54f3-4ac0-a3ad-bf5aa5d804df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d03a3557-b68d-4cfc-beac-f008f46328c6",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6360c6de-a089-481b-a23f-21ae456e9bde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61bd6cba-56bc-4f32-b64f-22477c22f60b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec5ebbb-a3f9-4e7d-afb3-3e05650ea88d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "923bd5eb-1157-4413-9e67-6d7e278cd0e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d644de1-4fa5-4f7d-a9b0-71355c21bef7",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a7d066-fbc8-49d9-a017-924b12ee7e7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3a2e65d-53ad-4fa0-a01b-532d0791537d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e708202b-8402-4aaf-9e72-33b889aeeae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1559f296-9788-45eb-bf2d-ce473120a41a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "936cc57a-04bf-4d30-be6e-d81dcbabbc00",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2db496b0-5b4b-4ad9-ad5c-c7bb8bb5324b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc316ed7-18d5-4241-b77d-a4f1f4e79e71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "760b47dd-1966-4810-9d5a-61c2ee7076be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4de111be-f04e-4944-9816-0218387b526c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3722d8fb-c1ef-42ea-a5b9-0f86d7a1e81e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f74f29-f1b3-49c6-938d-a79d16209ce5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dfde785-72d7-4530-a67f-a1c589fe15d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be1ac88-1b9a-43c0-8283-a0faf3fb82ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f707d5a5-ef22-447d-bd86-bdf2a8632b0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "112bb51e-e516-47d0-bc5e-838d844f4fd9",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c02f823c-4ef5-4dfb-86bf-51d3154aafe2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcb1ee31-43a7-449f-a259-910bd8e44bb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7039c8e-5875-4749-9b20-c08c30574a50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25996f80-645e-4376-b609-eb47eb922f5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "201a8068-87f9-46e4-aa50-7f46789cea3e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55a3abd1-f24a-4aa0-a5d2-b1479a9e1a75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04b42573-690b-4c76-8a20-b6b7abd40e51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4fd95f-8ed1-42b2-9669-302dd52853ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03e30033-61de-4c93-8cbe-1e9ab4f41745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd46b8a-09f1-40cd-ab1b-6dfaab61f2e6",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9158bff3-f105-46cd-949a-9a15254ef804",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "566a7ab0-2e0c-4721-9b16-55d5d2bce894"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff502cc5-607c-4667-b094-673562c5eebc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbf5de3a-3316-4272-8f30-9a6868e72d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "104b9511-143e-4b56-b90b-d4a74a714bf7",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deca80c8-c85d-41e9-8f95-9e6552330de1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f63344f6-5e13-4530-a4a0-94c3f7dc9966"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b50fdb43-e5f5-47b1-be71-e345ab7e79fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d662cd9-a025-457c-ac8b-b6019aaea245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35b71f5-126d-4221-b210-473d3e4fd7a7",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e4cd7c8-3bca-400a-944d-cecf215cfa17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9211528b-56c3-4e0a-9e84-a63768c8c784"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c84e299-9150-4bd0-bd77-09b612a5b89c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69924502-fa39-47c6-a5e1-b0705898075e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0676084b-f683-42de-82d9-3780cd274a13",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "672eea0c-81c5-4776-b8a9-dfe7c459d2d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7742798b-5ccf-4262-9c06-7b646bc3d191"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e5ff12-c529-4644-aaac-ee7c6dba2509",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9afa2fb-e49b-4980-9035-bdb99d05ade8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b8cd9e8-0a19-411a-b2fa-4033fe9f9c49",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ae6280-e565-4525-98c6-71767a30cc5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cd15f14-9e68-4487-a2f6-debd317089fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa979dc-ca70-454e-9a3d-03c44af0af7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a02f9321-87e8-4243-90be-220a53fdf0d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "595b4fec-9b94-406e-9c4f-2d7e0851b8a5",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b63561a7-2e52-48ad-ac6f-6976e03d0527",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d274302e-05bd-46b2-baf1-5f0676da29aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb714e29-1b45-4f4c-9a92-6fff90f6603a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec9f9598-9c23-4059-8a1c-a1ebb17839e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ebf2e6-1fdb-4386-8277-17cf895b6bdd",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da6d9e49-ee62-4f3d-a8df-ac262115add6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54c75749-b9da-4ec7-b384-db3c2bab3e01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "885abb2f-4a51-4e08-8bf2-788146f0bb56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43ad29f4-d918-42d6-8399-6f29aca4b08d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fb5711e-6507-4b6b-9692-5475d383b224",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "311d82a7-81a0-4aba-8f05-a55d758e8018",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa606641-b0c3-46e2-a381-15ed5cbb6a93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6eabf66-d2d6-44c4-b7c8-966726d98378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6109afc-20ad-4318-97ab-36fa015eb045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7bb4b45-adc7-45c8-a374-e9ba1d47f246",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f256a4e-6f53-4af0-91d3-18e610a5ae12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9adea968-cb54-4c21-966e-9932f784bca0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9841c7c-0634-4356-8853-a759de7681b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfa7ffeb-06ff-4294-b064-97be96412887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "694cdd29-01a7-46ea-8b00-f79e06a2bcb3",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd48422d-ca80-4626-9543-0c6decdcbbbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f6bd749-ea97-48db-93ec-03a30ee557c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6173889d-a972-483b-bba9-2c7d304c8c88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64816d98-3bff-42e4-aa2f-9c5a3d49400b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a37f46-f07a-433d-9a9f-17552e46e0b7",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e39c28-0f89-475f-9130-7e5b44077562",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0f7bb6b-be21-4fef-a4a6-1e73a00c0dec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0480cab7-276f-46ca-845f-627326f5a34e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e15b15a-a6f9-4495-856c-dfd1dc695653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82cb4c0b-73a4-45b2-8ed6-baa9b8ca357d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4546a351-5e1f-492c-9e87-8f54d5046469",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b10e934b-6e4f-4e2c-a4ae-3d8e17b3df6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fad846df-2c07-4b9c-8d9e-64514013e643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d2eaaf0-d02b-47fd-a887-54059a4ba1b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1ca4181-f147-484f-913a-2fe27df10c7e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d09b41-a865-4913-965e-6c8ad5722990",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e32bdf5e-e8cb-4f78-9d13-609461a0a709"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "682cacb5-37d2-4a79-8a62-602e581ad87e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d717d704-4d49-4e07-837b-541f1ebb39bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c895631-7b7e-4c2b-ba45-c00497596840",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed50de9e-2ca2-41b5-80a2-4cff19810f16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "654a84bb-8447-4664-9c6f-63bb411ea2b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08af725f-2c7b-4bc8-a9f1-6f149d8669ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0abdac68-6fca-4c59-a23c-a0ee3bd58273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2ddc164-052c-48e1-8b46-d5e2450de190",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef6e73b-18a8-4047-b2dd-0c5aca51f42e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db5cb534-9f4e-43c7-9077-136530ae26af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ffff548-66bd-4b76-a695-84fc7cc5ba6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42a20c81-2655-4aed-ab1f-39a6e27e41d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ae2b1e-3933-4ebe-b7f3-26650ca80ad4",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "501ac1fe-58f7-447e-9bf1-c9c0680cb08a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1a0cf04-234a-4998-be74-7b707dc22290"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41cd56e0-7e31-46e6-80fa-e3f01c2e47d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea1c5e84-c13d-4319-8c5e-f8591b83833c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f4a917e-684b-4a08-b3dd-e520705e9953",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "043759ef-c593-4cd3-80bc-f5cd943860cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66cecd1f-cd86-4bc7-abb7-00eb38ddfc17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb6eb7f-f98b-4c54-b1c9-f2d07efc387a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "092656fd-0427-44d0-9bbb-c9eed4fdf1e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32c4a693-4cf3-45b7-9199-dd7ff926be57",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f44a74f8-0cfb-45a4-aba6-78d14c558d0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "103b416c-de32-4893-b37b-7a7642a8abfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3262163d-58de-4593-ad23-bb3dd7237c9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65a1e760-373a-4f02-b7fa-fe139628fa6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00736857-7f69-4d8a-8da8-6bdd89d60d8e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb4e18f1-fc97-4f0a-bab1-6bed3d5ff62f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fdf448b-90af-4eaa-9617-f893fa924a81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a10a4d-ca75-4228-ab9a-f1322c49fba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7ffba2f-0f4a-4ef0-887a-3fa8d6a9df0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23cf220e-444f-46ba-943e-67f11778b6c0",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ba0074-8a5a-487d-a1c1-90f84e29c58e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2aa04d40-739f-4ca2-bf6e-2b6e40000212"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d68617-4636-4259-912a-91a3d2ca76ea",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb79df05-f262-411f-bf49-c367aac595dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27356b5b-763d-438c-a088-2678e6089a94",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f279f78-1633-40cf-8f73-395eeca79318",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "524944e5-54f4-4adb-8cdf-2c8bd1805354"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05c5a36a-d5ca-42ef-a98b-1fee00dce9b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84a8a07d-6d4c-4a5f-9b12-4fb76ac5b68f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "774b0213-6786-430d-a6a4-f0735579d79a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "078be41d-f511-464d-af6e-cb6850a2374e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2835061-1bb2-450f-99bd-e8ee470022dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77f4ba4-cae4-4bc5-8d03-4ed3026873a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc76ccbf-e940-481c-8f3b-735f992a5998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bfce6f4-9d30-45fa-8e6e-16631fc75ea0",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f23bb471-d022-43c3-ae99-31ef9ad0e7f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcb9a9a3-88b7-45ac-b54e-98d7205517b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe6ad158-2cd0-4abc-af6c-06699e428790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84ff4289-8777-42ac-8062-93965f8bee03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc18fd84-8e49-4a6e-9dad-b4fc7e740175",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "722e1c8c-a74c-48cf-8811-797ec21c9c43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd51412f-bb15-48bc-b017-9b8f7d8f8ed4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67295d04-1c6c-4527-b1cd-4b020db9648d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89c026fe-7011-4b73-945f-5966f8ceccc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "348af72a-81d8-4bd6-aa1d-b8257986f157",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be74ef24-7a84-4e7f-b34b-f5c6f3460aa0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58eacb20-ec3c-4eb0-b6b4-e20baffaa352"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad5c1995-96f7-4776-9c6c-bea176114fe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e468338-658c-4d83-ac77-73c04fcab492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b45bca0-7ad5-4109-8e4b-dc9d53a6b3bc",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8aaeaa7-1171-462a-91e3-eee16fc79a3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cff04208-b837-4726-b0ac-139184b1f37e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6beb47bb-ea91-4ba5-8c84-b4efb374117a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77719332-ccf3-4f89-9199-c95f09981d9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa062c8-54aa-48e3-b86c-13a4b144dec0",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adbba783-18ad-47c1-8d73-b8745bfa2ac2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a09df76e-52e8-443d-af55-88a5edee852e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c48e542-71b7-4651-a728-4d084ef03eba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03803243-eec1-4f60-9a3e-d9613a2f396e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68bc8b6b-11b4-4187-b8d3-3642b1f2f4c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b70126f-c1c6-4a1b-ab82-e6d8d878f2d7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "94399629-7b82-4d02-82fc-3233de29688f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c7702a22-6d20-4abd-9630-8724438d0af0"
                    }
                  }
                ]
              },
              {
                "id": "19829a8a-1000-4d6f-9721-3e2ba9d8240b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0f8fb4b8-2437-4ce2-b9dc-129c1f22b143",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df8dc665-1d38-4ca5-b801-81063fd2395c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "34fef6d4-6cfa-4588-8410-e4067af22126"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db1aec65-3aea-4d4f-881b-2a8d2bd698d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c3cc2fa5-827e-4546-8069-c20744bee610"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c3b3beca-8888-4e9c-a862-f04580429dec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a6127078-1947-4a37-ad6f-93d2b306d164"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bcd2663d-0629-4c11-bf82-4dd96085dba2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fbe64df7-e506-41dd-99f5-7dbda7611b52"
                    }
                  }
                ]
              },
              {
                "id": "e0dc32d1-d8aa-4a03-8c00-cdcba74a02b1",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "13ecec5a-c7c7-4020-92be-a331bffe4d8a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60a54cdb-eb9b-4b10-9280-99b1b1eca402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "595ee1c1-7131-458d-8c9c-a60b3f3b5bc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b55a9061-4cb8-4c33-9660-d7f68f5afc55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8538f106-4635-4725-ac3b-b75c01430e59"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6b96b81e-5b0f-43c5-ab41-a72d8ff797cb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "70cba3cd-77a5-46c7-bb84-1ea3b8913360",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2253dc0-f8b0-4d63-86a8-a315c7560c54",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1642d6e2-a136-4310-b0da-2f4dd531bfd3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1f7a4b2-7c9b-42ea-a1d1-61393dad3c28",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c014f5cb-7144-404b-8cc6-c0c0d23b946f"
                    }
                  }
                ]
              },
              {
                "id": "9fedec34-de62-4433-a5dc-37c3dcffa098",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b913978-4a12-4345-a97b-3960cb52b289",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c70dd0d5-78ef-406d-8f83-f1b2de2732f1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a2b24ae-5f62-4cc7-a873-c8c633737c58",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3476d900-6489-439b-9417-1050b471feda"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5bb9c0d9-744c-4324-882c-0dbb687b6ffc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "0c32435f-fc59-4a80-8c2b-651415bef133"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0931d9b6-4051-4a1f-8f99-efa80a01c961",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eff24568-fa6d-44e1-ad66-e216e8141187"
            }
          }
        ]
      },
      {
        "id": "e51fa98c-db07-40ce-ad74-a78881c43b0a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "14b58af9-3850-436d-bd0e-9384f2c7570f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ab72cf32-8352-4d0b-8e4e-7cd59fc275ce",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1276c592-673c-4ef7-b1ae-a2122ddcc434",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83191f09-7acb-4f5f-8fe6-05764d327685",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "398a4645-b045-45d6-a822-2f3ecaf348b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "992f1f3d-b6a9-4b5f-a8b1-c1d154e25474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a144da2b-b3c3-474b-bcd9-3ebd4cd82c85"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "96e0dfae-6978-45b4-9bed-b1d91853abae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53bedb72-5d5b-49b7-8e2f-6bb5454d31c5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "29e89421-c8d8-488f-bf28-14593fcbdd60",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ceb3b9e6-9638-4ee2-b1a3-802d53223760"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "196f5fcc-6ded-48f5-be88-e85aa39692e4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8773aa58-2679-4813-8263-404586a541af"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d45a0050-f707-4d15-9ae6-f17ae12df203",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0d8728c4-fd34-4e96-8ed7-8552e04158f4"
            }
          }
        ]
      },
      {
        "id": "4a531967-6bef-4646-bdf6-1e1354247d03",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "3363d0d6-a5ca-4e2a-998a-cd4c22f173e5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "75d4de96-e032-4819-bc96-ed4159bc7330",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3325892d-f7a1-4f44-aa42-55cfc707cdf5",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d03707-0470-4414-a0af-f53c2a5cbd96",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11ac25f0-8709-4785-a1bf-b70311841566"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee534069-4f18-45a0-a6b9-d4de18c1da25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d4b9e9ff-acc0-4d00-912c-14440187217a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1de56509-efe9-4afd-b918-0bb8b90d2375",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "14e56357-3900-4924-affb-2b2d4d4e478f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c44dce10-462d-4b16-8c49-2af9299ca87b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "416a7a95-eec5-4187-b313-faac297af16a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8bec0337-dcb4-4e10-bd37-e6efc60b809e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d95de2b6-ac4b-44d7-8844-a98e894a55e9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0c724184-193e-422d-a8fe-488ea7b615ee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "30c53520-f8d1-4672-b8c6-797ff0c036bb"
            }
          }
        ]
      },
      {
        "id": "53ab7daf-a46c-4baf-ac6b-bb3eabf61d72",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "603bc75a-8afc-4f9b-bef3-c8ce62e95c38",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e1635d49-0a94-4b5c-93c7-878cc9c93b83",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "19e9bafd-7f18-4769-9b80-4dc3001caa98",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5354e61-b0f1-4de2-96f1-7b88e28e16ff",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2136f2f5-4ade-470e-b2a6-36aedea59c31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ede8119-bd02-498e-b8ca-6359068c7056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c0c25e38-d9cb-4c42-abe4-75adb9be062f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9cbd4917-2271-4c15-9405-109cba8e6979",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "110e609a-af9f-4271-bb5a-df67aeb8cb39"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d7560c42-4acd-46e2-b8f7-202e1e9bb318",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "474b6188-8435-4627-83b9-99918d90054d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "49977578-f097-42e8-ab38-36426feab8dc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2eeb4b09-4b54-415b-b76a-1878e5cf0d80"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "40d9f564-341c-4158-b7ec-3a4207d552cf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "81cedba4-8120-4120-8e96-fdbf1bac09ce"
            }
          }
        ]
      },
      {
        "id": "e9f54cfa-f9bf-4d5c-ad8e-9f70cb25f518",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bafdfcde-7a01-480a-a322-05ad4ac6c139",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "213cf33a-661d-413f-9078-c92cb18d2fde",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "9acf4a58-68b3-4723-90c9-7672f8a8bd67",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cef7d8af-21e0-4543-b729-719c294be4c4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "99794ab5-59cf-427e-815c-372c84ff02cb",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 61.5157894736842,
      "responseMin": 5,
      "responseMax": 5636,
      "responseSd": 396.27869503249525,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1700959074128,
      "completed": 1700959100939
    },
    "executions": [
      {
        "id": "25c441a0-65a1-4e9f-a0cb-dba5f4e6b0fc",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "077e8aca-93d8-444a-b2c8-cdd3ca155db6",
          "httpRequestId": "5be51134-138f-4f6d-93d4-1e348574f40e"
        },
        "item": {
          "id": "25c441a0-65a1-4e9f-a0cb-dba5f4e6b0fc",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "88adf65f-d8bc-4cf6-8b5e-2c4a24ffd4cb",
          "status": "OK",
          "code": 200,
          "responseTime": 43,
          "responseSize": 0
        }
      },
      {
        "id": "96df3b79-b080-49b2-a102-576c078d7489",
        "cursor": {
          "ref": "e5272ba7-3d85-47ba-b03a-98aba4f8f02f",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5cd33353-6fe7-4917-b8b2-b84318345d0f"
        },
        "item": {
          "id": "96df3b79-b080-49b2-a102-576c078d7489",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "20c58823-da48-473d-ad46-3f202c567eb2",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "ddb1308f-79b8-4316-8da1-566068b983f8",
        "cursor": {
          "ref": "b457c947-a76b-44c3-8cd8-1e735ebbc027",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "74207a56-8ace-48ca-b4c0-7165cc4a56c2"
        },
        "item": {
          "id": "ddb1308f-79b8-4316-8da1-566068b983f8",
          "name": "did_json"
        },
        "response": {
          "id": "0166b769-d8b1-4a5c-8b90-ea8fa09b5b03",
          "status": "OK",
          "code": 200,
          "responseTime": 194,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "450e9761-7af9-4af3-970b-fb12e1f5887d",
        "cursor": {
          "ref": "15d22d47-65c8-46c7-a4d5-51398555fef3",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c71aa334-2654-4557-9bd7-473ce1ef67f1"
        },
        "item": {
          "id": "450e9761-7af9-4af3-970b-fb12e1f5887d",
          "name": "did:invalid"
        },
        "response": {
          "id": "6ffb3e91-f02d-43f8-a12a-29f27c3ce0fd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 767,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "450e9761-7af9-4af3-970b-fb12e1f5887d",
        "cursor": {
          "ref": "15d22d47-65c8-46c7-a4d5-51398555fef3",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c71aa334-2654-4557-9bd7-473ce1ef67f1"
        },
        "item": {
          "id": "450e9761-7af9-4af3-970b-fb12e1f5887d",
          "name": "did:invalid"
        },
        "response": {
          "id": "6ffb3e91-f02d-43f8-a12a-29f27c3ce0fd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 767,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2cd37bd-65d0-4dc9-9bf0-60a4a9c8f892",
        "cursor": {
          "ref": "884694e8-499f-4f02-801c-6d908bef64be",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ad5e9545-a493-4074-a1d5-c75f681db7a3"
        },
        "item": {
          "id": "f2cd37bd-65d0-4dc9-9bf0-60a4a9c8f892",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "a04b2b8c-6209-4449-b2a6-3fc25218e29f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 27,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7715e2-5ccc-4cc7-9c24-cfe9546fb89e",
        "cursor": {
          "ref": "b98754d5-31a6-4939-8b3e-c22ddc740522",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "90391f88-26cf-4619-9e16-9d93f599e295"
        },
        "item": {
          "id": "5c7715e2-5ccc-4cc7-9c24-cfe9546fb89e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f92677bb-d848-42ba-bd1a-9f85fcfcb4be",
          "status": "Not Found",
          "code": 404,
          "responseTime": 12,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def4fc62-4478-43e1-88da-f68b7ff95830",
        "cursor": {
          "ref": "6e7f5195-da7b-4296-b7e9-bd461f461011",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7d1cce5d-69c2-4464-9ea7-d212ee887237"
        },
        "item": {
          "id": "def4fc62-4478-43e1-88da-f68b7ff95830",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3b5480c8-f913-4603-b4f2-b01f41b1c3e7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66300ac7-f035-41bd-8e59-1aaf7d3bf4b5",
        "cursor": {
          "ref": "9af2cb5f-a512-420f-b137-3eaf12631da6",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "0c3ae323-fe3f-4138-9e70-bca9583ec41d"
        },
        "item": {
          "id": "66300ac7-f035-41bd-8e59-1aaf7d3bf4b5",
          "name": "identifiers"
        },
        "response": {
          "id": "312da1b3-00e9-4ba3-baeb-1f05669267ad",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c68a76-7fd8-4d56-a299-9ba59db1e200",
        "cursor": {
          "ref": "345e55d7-4c56-48d2-bca9-285d6cd4ab6e",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "cf64c585-3f29-431c-8c49-5fb0db67dc64"
        },
        "item": {
          "id": "b2c68a76-7fd8-4d56-a299-9ba59db1e200",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "aff9f288-f28b-4714-956f-85cd231b50d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c4f2cd-d2cd-4c87-beb2-7d46bf125be5",
        "cursor": {
          "ref": "cf3ffcb9-c9d9-4c1c-ac1b-b7876acb9a63",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "fec1547e-3c05-40ab-8b8a-f0c83588f2b1"
        },
        "item": {
          "id": "e2c4f2cd-d2cd-4c87-beb2-7d46bf125be5",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b2862b8c-8823-4336-8195-17be22ac654e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc843bc-b077-4802-abb8-4de67165b519",
        "cursor": {
          "ref": "dbfe7a18-ae14-4c04-a223-a38158a0960c",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "83f96b35-d91c-4dc1-ad42-9648dbe0b2a4"
        },
        "item": {
          "id": "6cc843bc-b077-4802-abb8-4de67165b519",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "64f7522d-2413-4a2a-bf02-ef2a1471b8ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84214c28-f75c-4f10-b52e-a19e02c42022",
        "cursor": {
          "ref": "d2b4d91e-ae7a-4800-99ca-df296f2bc564",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5b6d88cc-37ce-46de-9080-3f44321ce9e3"
        },
        "item": {
          "id": "84214c28-f75c-4f10-b52e-a19e02c42022",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "1a7ebb40-79cc-47a8-a94f-2df2e98ea72f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9effba75-42ac-45f8-a22c-c97adce90d1d",
        "cursor": {
          "ref": "af317f42-613f-4a0b-826d-06a8556081be",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "1fd05a86-ff2c-4a1d-bcb8-11ddc0881cb6"
        },
        "item": {
          "id": "9effba75-42ac-45f8-a22c-c97adce90d1d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "d76186dd-e710-4df6-9912-abd79ac9853b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a4cbe5-c842-4831-9ef7-78ad40f3517e",
        "cursor": {
          "ref": "4cd35215-b8e1-437b-8b8c-0885bc4d0472",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b0ecfa11-35d7-43e3-864f-e0697fa53d9c"
        },
        "item": {
          "id": "40a4cbe5-c842-4831-9ef7-78ad40f3517e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d0c7210a-696c-4750-a677-c201693d52f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "640e9404-b2f0-4b4e-ab75-a165a76a8cbd",
        "cursor": {
          "ref": "6842dc3f-dc49-4386-892f-5c072555fa8b",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e7db7bf7-cd86-4a96-8e3d-a45b07d2a3f1"
        },
        "item": {
          "id": "640e9404-b2f0-4b4e-ab75-a165a76a8cbd",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c205fdfd-84d9-4247-a1ea-504b07d7d13a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a1d8cd-3b91-4af8-b649-896fb6425590",
        "cursor": {
          "ref": "4728f145-2e95-45a1-92e2-0191b9e511a9",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c78966fc-21df-4cee-8faa-7efa8eb0275d"
        },
        "item": {
          "id": "92a1d8cd-3b91-4af8-b649-896fb6425590",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "386031f5-dc38-4c4f-aafa-a5532e08459c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c04b23-d87e-42f2-9874-4bb381b9d8da",
        "cursor": {
          "ref": "a8afeead-7dd1-402d-970d-4f850f57d90b",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "319d78c7-4abf-478a-9a12-c9211842b5d3"
        },
        "item": {
          "id": "d5c04b23-d87e-42f2-9874-4bb381b9d8da",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "1b2fd7e8-eb49-47b2-b7ff-10dd9cb92e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97bdfcb-828c-40be-a2d7-95a17b9f7642",
        "cursor": {
          "ref": "6cb681e9-2505-48f1-8cf7-fc5c1a18e5b4",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "637c6a08-4988-46c8-ac8a-0cb0665b7d3f"
        },
        "item": {
          "id": "a97bdfcb-828c-40be-a2d7-95a17b9f7642",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ff94a89d-3ef5-431f-a44d-5f8a87a35253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59dc207c-5024-4d67-9008-12ae43d3a82a",
        "cursor": {
          "ref": "65538e91-a384-4ab8-a947-ca216a48cfc1",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "23bb7d04-8ca5-48d0-8975-acf4ca2369a8"
        },
        "item": {
          "id": "59dc207c-5024-4d67-9008-12ae43d3a82a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d8c53b66-9119-439e-9155-a11eb6cc2be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed4f2b0-c6d6-4c8f-99ba-e31d58b1b042",
        "cursor": {
          "ref": "708d4640-e3a4-40b3-8b3b-911c648cc988",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f21f128a-0323-4fc3-a7ce-ce87d1e61c8c"
        },
        "item": {
          "id": "2ed4f2b0-c6d6-4c8f-99ba-e31d58b1b042",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "141dcbda-5a8d-4e20-ae3e-d83913b32c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d471d86b-6c91-4b7a-81df-a60fd5abe5b5",
        "cursor": {
          "ref": "af08c406-e278-4ace-9f97-3ee9d84ade5e",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1afc6e00-1009-4c63-8950-776395ea57c6"
        },
        "item": {
          "id": "d471d86b-6c91-4b7a-81df-a60fd5abe5b5",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ce4caf98-f0eb-41b5-a085-7c8260d11182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85bfc706-9e82-4576-980a-c9078139075b",
        "cursor": {
          "ref": "c0af4929-3c7a-41de-89aa-9119c341f833",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d0c1ea68-700e-4b4b-ac08-ccd2e743a9ad"
        },
        "item": {
          "id": "85bfc706-9e82-4576-980a-c9078139075b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "4b7049e9-7b43-4f37-9a16-3a91218356c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f227889-1710-4ae4-9812-2556b278604b",
        "cursor": {
          "ref": "d27117f5-ca42-47e5-9093-574105ec7923",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "557b7d90-59f2-4761-b4f5-b72628537ee9"
        },
        "item": {
          "id": "6f227889-1710-4ae4-9812-2556b278604b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4e5a8fbf-4c6a-46d9-a105-62dd5c061c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a0a6e44-74f7-42ef-9820-7e4ee3df1469",
        "cursor": {
          "ref": "e08ae94f-aef0-4704-8d5f-c0fc007ab83d",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "5ed01db1-83ab-47b3-b054-50b7fb2b3a72"
        },
        "item": {
          "id": "8a0a6e44-74f7-42ef-9820-7e4ee3df1469",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "7a60e6e3-9b0f-408b-97c5-c633551d2d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db3c286-a669-4460-9538-cb3f1a670445",
        "cursor": {
          "ref": "299acb78-192c-4800-b73f-ea092e3602aa",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "07901174-05b6-4f2d-85a9-e7a546ffae89"
        },
        "item": {
          "id": "2db3c286-a669-4460-9538-cb3f1a670445",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "bf9a5392-9fac-440d-869a-e8e2ba74f2ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23f0e64-631b-430a-9326-cb8545550d7d",
        "cursor": {
          "ref": "565b5b82-e707-49d9-9b39-fc5e4a21770a",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "543b57d5-f76c-45d3-9741-2f56bd00a33e"
        },
        "item": {
          "id": "b23f0e64-631b-430a-9326-cb8545550d7d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "fd48af76-d778-46c7-8fc4-ce5d71ac885f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f16f9c-3fd9-459a-8a7f-4208241dce2e",
        "cursor": {
          "ref": "47fd9b07-ec1b-4570-8494-bdcf32fd0b27",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "59f174f3-2856-4dac-bf9c-79211b3ce620"
        },
        "item": {
          "id": "22f16f9c-3fd9-459a-8a7f-4208241dce2e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8682f385-ed73-483f-8fc5-a14d64d31146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa00f74-babd-49cf-a8e2-49ac44978005",
        "cursor": {
          "ref": "a90a9795-e2b5-4b74-92aa-8ffeea474d8e",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "dd15be18-ceff-43a9-bee9-8de8d0a983b5"
        },
        "item": {
          "id": "7fa00f74-babd-49cf-a8e2-49ac44978005",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "25af4eb7-d29c-4aa4-a4ff-7d38bb906200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b14a4075-832f-48d5-aa87-17c5cb40a475",
        "cursor": {
          "ref": "f0e42a3a-b1b6-4899-964e-39d4df7ae92a",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "5105f783-f902-41d7-ae61-98cb40585bbe"
        },
        "item": {
          "id": "b14a4075-832f-48d5-aa87-17c5cb40a475",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "dd3a4052-08aa-4b01-a075-0f53a5c2448f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece9a965-3f82-4df7-afbd-8a80f80d4449",
        "cursor": {
          "ref": "ef421cd1-919e-49d0-b600-4688aee0a91b",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "31f80954-e70d-4a04-b997-784000feabcd"
        },
        "item": {
          "id": "ece9a965-3f82-4df7-afbd-8a80f80d4449",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e6e266e5-87e3-4a22-a541-cafddd50df78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d94f854f-0837-4fb8-817e-94c4bfa52f9c",
        "cursor": {
          "ref": "9510d995-ccba-4c65-b462-ad4d279d6325",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "0e13199d-bab4-441b-9546-179b2556eeac"
        },
        "item": {
          "id": "d94f854f-0837-4fb8-817e-94c4bfa52f9c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2e394332-7432-4238-85f7-f665e72eba8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce9ff8c3-c794-4190-abcd-d46a23eda763",
        "cursor": {
          "ref": "ea395d6b-7c31-4c5d-9bba-5b002b9ad1dd",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d80fbc14-47a2-4a46-b21b-b39b3f0645e6"
        },
        "item": {
          "id": "ce9ff8c3-c794-4190-abcd-d46a23eda763",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e8593ab7-f79f-41c6-ba43-98299cb8e61a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ded0d7-a76f-48cd-a7d1-b24d36da543c",
        "cursor": {
          "ref": "10f8ef23-94fa-4770-89f8-c0c29a16c41b",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "4cd313bf-6803-4703-9315-72402957cbb7"
        },
        "item": {
          "id": "17ded0d7-a76f-48cd-a7d1-b24d36da543c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "dc555db0-81b0-41cf-8cd1-90cf37a44c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eac813b-ca65-4390-a716-9c61da1e40bb",
        "cursor": {
          "ref": "194cd71b-5983-45f7-b967-5d54a9db6059",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "24dc21db-3c16-4abe-9c04-c6578ff9eb60"
        },
        "item": {
          "id": "8eac813b-ca65-4390-a716-9c61da1e40bb",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c7cfca34-19e9-47c5-aafd-929b84cb2b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "387952b1-8783-45ec-b2a6-cf902e868282",
        "cursor": {
          "ref": "bea406d4-0ee4-4394-b2a9-9d8811ec24af",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "79065316-ca97-4eef-9f6f-db9714c2f0d4"
        },
        "item": {
          "id": "387952b1-8783-45ec-b2a6-cf902e868282",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6ecd12df-cf33-475f-bd01-70a1043ea30b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "269b5f3e-fa28-40b4-bd9b-1d2383e2aa22",
        "cursor": {
          "ref": "b7f2c956-497c-4c25-944a-956d1193bb70",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "902d2d8f-94f7-4ab4-8935-785eddda7f67"
        },
        "item": {
          "id": "269b5f3e-fa28-40b4-bd9b-1d2383e2aa22",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e65a12dd-26ce-4869-b1a8-7d0a01d785a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12056e6b-b337-4413-a26b-14d07abc0558",
        "cursor": {
          "ref": "2d9891e8-69b0-4b26-9111-9c3f536fb648",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f8d68866-d4b2-473a-a08a-0558b56160f8"
        },
        "item": {
          "id": "12056e6b-b337-4413-a26b-14d07abc0558",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "41ba7539-a8b7-4cfb-a56e-72944099507c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb04d7f7-f947-436e-91bd-1248737c29e6",
        "cursor": {
          "ref": "67c75c6f-ed3d-4189-91d9-4459e21d038f",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "60b1fed0-b79e-48c9-8ddb-1993213897ee"
        },
        "item": {
          "id": "eb04d7f7-f947-436e-91bd-1248737c29e6",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "918c1b7e-814c-46c9-baa5-8cacac6d8f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c44e2be-7955-4c1a-8585-f50e1120ecba",
        "cursor": {
          "ref": "102ceef6-460d-4565-8050-5cb64076fab0",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "07f6e76b-aaf9-4440-9209-6057008a0d95"
        },
        "item": {
          "id": "4c44e2be-7955-4c1a-8585-f50e1120ecba",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6865ea52-51d8-46be-8234-da0a5e16eabc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f36d7a-7450-496a-be03-13e9ed2fab6c",
        "cursor": {
          "ref": "ecd7f913-6977-476d-a3b9-5193d204e5e7",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e51584ce-25d3-403f-b227-bea5c053123b"
        },
        "item": {
          "id": "44f36d7a-7450-496a-be03-13e9ed2fab6c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3df4862e-21db-484f-a86f-e6d082556ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c31a1ee-4168-447d-9e87-4daede547d83",
        "cursor": {
          "ref": "aa5a136e-e3d0-41c4-8ec0-82a9719b85f5",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "194a79ba-f64b-453c-b075-535a91ba4c23"
        },
        "item": {
          "id": "3c31a1ee-4168-447d-9e87-4daede547d83",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "dcd25ddd-5879-48bd-b66b-088a9d134517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa661dff-6dcc-44ad-8b79-71519f1150e7",
        "cursor": {
          "ref": "8e8ff549-a8e5-4e45-915e-e057d54ce571",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6c8678aa-c3f6-43c4-9912-1125cc965e84"
        },
        "item": {
          "id": "aa661dff-6dcc-44ad-8b79-71519f1150e7",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "16d6df51-4fdd-455d-838f-a10830c90b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84b7a84a-3ce0-4fc6-9119-8f6a1b471eba",
        "cursor": {
          "ref": "381e0569-0448-4d46-ae9b-4b220ee4c405",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "3a559775-69f6-42cc-b1f2-185550d0deb3"
        },
        "item": {
          "id": "84b7a84a-3ce0-4fc6-9119-8f6a1b471eba",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "eecabd93-93b1-4336-b83f-1cc0f8abbfad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c576d97-8e4c-4fe4-88c2-dd534efaced6",
        "cursor": {
          "ref": "abfb7c2a-cc16-4bc8-8062-67ef3a233a50",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e129c5f1-c84a-4aab-bdc6-91147e1b3bdc"
        },
        "item": {
          "id": "9c576d97-8e4c-4fe4-88c2-dd534efaced6",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a3c55d93-58a3-4c47-96c8-c60bd5b17995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a548f567-ebb8-4535-8789-2371a5dc868e",
        "cursor": {
          "ref": "028c7d29-ff88-48d9-b648-c2833140d5fe",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "4bd466ff-39ab-4f3f-b81d-81f0e0937547"
        },
        "item": {
          "id": "a548f567-ebb8-4535-8789-2371a5dc868e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b7072163-834b-437b-8a16-ad1196bbca66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cacd1710-0597-4a9d-97c3-593fb4392d68",
        "cursor": {
          "ref": "a7ff160e-15ce-42d5-8230-b5022e641c2b",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "004f95d1-9914-47e4-ba74-44f4e475fe0a"
        },
        "item": {
          "id": "cacd1710-0597-4a9d-97c3-593fb4392d68",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "17b2f01a-8cf3-4b86-9926-3062d1a381fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb1c1d3-0aaa-4cb5-961e-5e04461d15e4",
        "cursor": {
          "ref": "54f74b4f-3ceb-4ae3-b58f-346f3c555f83",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "7d51a6c2-aa8f-4378-86be-4729d3f13ba3"
        },
        "item": {
          "id": "abb1c1d3-0aaa-4cb5-961e-5e04461d15e4",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "57dd49dd-55f3-4ba9-8a59-96a75f752e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8825e55c-2755-4dc2-9e19-20c782b6b653",
        "cursor": {
          "ref": "69ccbdc5-4c19-4d21-b844-bda3ffaf0203",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5386b320-e375-49de-aef2-7e756418a1e2"
        },
        "item": {
          "id": "8825e55c-2755-4dc2-9e19-20c782b6b653",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "add5dbaf-1785-4d7e-9cf1-be43d751cf5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4506106-681a-4299-b811-cb8d759d454b",
        "cursor": {
          "ref": "eb9b1263-17d7-462c-b773-5463cfa38873",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7948a62e-0f3a-49e1-a2d6-e5b32bad5cb6"
        },
        "item": {
          "id": "b4506106-681a-4299-b811-cb8d759d454b",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "2c85d080-e6c6-47f6-95b9-71d73f39df3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b68c5ae-637d-493d-9a43-43f20d23a433",
        "cursor": {
          "ref": "82034bcd-f1da-475f-aad3-e9fb88550bd6",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "17950784-7de6-49ef-b498-a866c380378f"
        },
        "item": {
          "id": "4b68c5ae-637d-493d-9a43-43f20d23a433",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "35eaa6f0-c261-4c7a-b458-ebc12a4757dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e58f4c64-026f-4cf4-b24e-fc6a1f1fbadd",
        "cursor": {
          "ref": "263fdea1-8fb8-408c-8f52-270f4641063b",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "20e5397f-7778-4298-b517-eb5f005d085b"
        },
        "item": {
          "id": "e58f4c64-026f-4cf4-b24e-fc6a1f1fbadd",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a132ddff-1d1e-4f7d-8d22-68f4d887a0aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf734f0-27e4-465c-a217-374700e85817",
        "cursor": {
          "ref": "1573f472-32f6-464a-bda1-d33fe45bf309",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d24f4da4-57c2-4526-ad1b-c52214ecc619"
        },
        "item": {
          "id": "7cf734f0-27e4-465c-a217-374700e85817",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "02eee79b-0e5b-4a44-83f9-3cfffe2c9d11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b1b9b9-7fed-4b60-a493-88047273a1c0",
        "cursor": {
          "ref": "f9ff817e-d2b4-4771-a4fb-25525f93323b",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "02ba23b3-fa54-4a15-8528-9e4c66ed64e3"
        },
        "item": {
          "id": "28b1b9b9-7fed-4b60-a493-88047273a1c0",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "dd01ffa1-9c71-474d-96c7-cf48c57ad3df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad7e98a-5eac-4b73-a0b2-8a63781cc037",
        "cursor": {
          "ref": "132142b4-6890-49ff-b790-b83bc9d5ea5f",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e6ef6667-24f1-4ce9-9022-d89d0b22a74c"
        },
        "item": {
          "id": "fad7e98a-5eac-4b73-a0b2-8a63781cc037",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a5f80f91-c9bc-49d2-ba9c-46969944c386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727a78e6-bb18-40c8-9de8-cc6066129e98",
        "cursor": {
          "ref": "fbc934ac-469e-440b-90e6-dde6b2627371",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "8b043882-1de1-408a-9217-8d056c11d012"
        },
        "item": {
          "id": "727a78e6-bb18-40c8-9de8-cc6066129e98",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b490c893-4c8e-46f1-b91e-f5094714f156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60bba4a0-189a-4cb4-b0a1-e37a68c7dd8a",
        "cursor": {
          "ref": "cb093746-6f49-4a00-a3ba-9f6a62e98f80",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "22c6fd1a-d2b6-4f56-a49b-05addae5701c"
        },
        "item": {
          "id": "60bba4a0-189a-4cb4-b0a1-e37a68c7dd8a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "699b32c2-ebc5-4f2c-b24e-5518e755ba0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "678c7ae6-3a03-474d-812e-b441a9069520",
        "cursor": {
          "ref": "f1c023e9-5d91-4b28-940d-90f05008205d",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "5d0621b1-4765-44bb-a093-5157b2f8e38c"
        },
        "item": {
          "id": "678c7ae6-3a03-474d-812e-b441a9069520",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "81b5211e-95f2-4c74-aaaa-0002ce90e343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88400622-0969-4d34-b070-4094fb4e432c",
        "cursor": {
          "ref": "e633b92c-7be0-4fd7-9415-24c524fef03a",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "cde4348b-e724-4276-8145-eaa85fd163ff"
        },
        "item": {
          "id": "88400622-0969-4d34-b070-4094fb4e432c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4431e1d6-421a-4c89-baea-57e0867b4b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eefed17-2953-4d3b-8e2b-4c7985f0537e",
        "cursor": {
          "ref": "47a68d18-cdb0-49d3-8f52-6d7b856d2db2",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "43211640-a0a4-4ded-829d-20847e9e042f"
        },
        "item": {
          "id": "6eefed17-2953-4d3b-8e2b-4c7985f0537e",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "1c81c3e0-6b75-4026-9a7a-4add0ad3d3a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34010ce2-fb7f-4662-891f-84cc63b1accd",
        "cursor": {
          "ref": "101a6948-5a13-459d-94b2-34ddfb73e970",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "809bc6ad-11a6-4b03-b0aa-34a06071eb96"
        },
        "item": {
          "id": "34010ce2-fb7f-4662-891f-84cc63b1accd",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b4782ece-221b-49f7-9e76-8a2cf537c9f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d134337c-9f54-44a2-8b18-b7037f966fdf",
        "cursor": {
          "ref": "c7ce4fc8-7595-4f59-ace1-bbc27997f016",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e77918de-8447-4e5a-abad-024c486d8e2f"
        },
        "item": {
          "id": "d134337c-9f54-44a2-8b18-b7037f966fdf",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "6e1e7be9-0d8f-4f68-8dfd-89f12d26bcc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ae30f7-a130-4495-a586-df19cb10d99a",
        "cursor": {
          "ref": "d616c187-548c-444d-ae01-7a7ff62fce6f",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "60bb40e9-f78e-4352-ad07-16418482ea8c"
        },
        "item": {
          "id": "e5ae30f7-a130-4495-a586-df19cb10d99a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f914a084-9330-430b-817e-40ebb23c2aee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e52c21-e668-43bd-8049-8252d271cf8d",
        "cursor": {
          "ref": "801f5ca6-565f-41ef-88b4-f3593431b591",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "4411b111-4b0e-4d3f-b162-0bb35722ae90"
        },
        "item": {
          "id": "a9e52c21-e668-43bd-8049-8252d271cf8d",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "43ee5a9b-e3da-4ae1-9838-b22ec14d8c3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba58afb-a158-4b07-aac6-982c164dbf4c",
        "cursor": {
          "ref": "1ba5d107-a98c-4a16-9821-d1bdfa2360e0",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b70a5dfb-d924-4014-b015-3136d71de6b1"
        },
        "item": {
          "id": "6ba58afb-a158-4b07-aac6-982c164dbf4c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "3ddc0839-cd9c-4985-97db-3125515018e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc0fe6bd-859d-4bbe-ac8c-05e6d07ee6c7",
        "cursor": {
          "ref": "8f920264-25b0-4b64-84f0-77ca2074b043",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "6a37ef9d-1bbb-468d-8ed8-3ebac7f579a7"
        },
        "item": {
          "id": "fc0fe6bd-859d-4bbe-ac8c-05e6d07ee6c7",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "bbde5583-8916-4a6e-9df3-8e2af3a6ac47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ef36b5-4cd8-4b1b-b88d-1feccfb54532",
        "cursor": {
          "ref": "a411ae96-c39c-4469-9c4d-133c36c50253",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "82890981-fe3c-41de-a512-25d3fb198a94"
        },
        "item": {
          "id": "44ef36b5-4cd8-4b1b-b88d-1feccfb54532",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "bd0a5822-d931-45cf-b976-1a553ece5b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c0bbf71-4040-430c-87bc-7b9c72e08dec",
        "cursor": {
          "ref": "39868765-690b-4101-8f86-0c6510843d1d",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "1a0d503a-6f07-4767-933d-1fe04601f4e9"
        },
        "item": {
          "id": "0c0bbf71-4040-430c-87bc-7b9c72e08dec",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "2620415d-7b59-4fed-8db8-030ca14d234f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d0472db-e05a-4fe4-ae3a-b0113b541081",
        "cursor": {
          "ref": "cc726c49-5ccc-4b8d-9f24-23762e18ebed",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "fbe976d7-4e30-40fa-b0a6-8b3c401b53ad"
        },
        "item": {
          "id": "6d0472db-e05a-4fe4-ae3a-b0113b541081",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b17bb8f2-0494-45d8-91c2-ef05c85cf9b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa983c7-b5ad-4aaa-9816-be159865ee58",
        "cursor": {
          "ref": "b9dcab5e-dd5f-409e-a79f-b7c864dfc08b",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "2a6b75af-9dbe-4c19-a4b9-d9a281e3aa16"
        },
        "item": {
          "id": "caa983c7-b5ad-4aaa-9816-be159865ee58",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6d283a58-20d0-4797-be5f-5ae7342b46c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7894168-8c9c-4733-af2c-03ad49a313f3",
        "cursor": {
          "ref": "f112d801-9342-4c5a-88a6-1b5d9d1052a2",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3bf14732-03d9-4b6b-aae2-de24d4ad6dfb"
        },
        "item": {
          "id": "a7894168-8c9c-4733-af2c-03ad49a313f3",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "8f544675-38d5-483b-8ef5-175d43792e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "162c0154-7eef-492b-b673-557c400c50ba",
        "cursor": {
          "ref": "4d9a33ed-7c7e-4d60-b875-774ff87aa036",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5cc79a48-cb35-423c-b205-cc285c59b3be"
        },
        "item": {
          "id": "162c0154-7eef-492b-b673-557c400c50ba",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "756dde34-c75b-44d4-bf2d-ffed82f62ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b56b3d5-1660-49d9-b86b-f70aff6d2dd0",
        "cursor": {
          "ref": "6bbabe46-c235-456d-960e-7f2ad83d27ec",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "05c422a6-81f1-4354-ae3a-5b2c286b7081"
        },
        "item": {
          "id": "5b56b3d5-1660-49d9-b86b-f70aff6d2dd0",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b7ab3db0-0c7d-4442-9743-3d833fa1a34c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d773217-436e-4e7b-a9d6-7a7406781dfa",
        "cursor": {
          "ref": "b1b8399c-90e7-4d2b-86ae-628de2a44604",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "1a6e24e2-8f5e-4826-a7c0-ad60d2d79dda"
        },
        "item": {
          "id": "5d773217-436e-4e7b-a9d6-7a7406781dfa",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c675fefd-df9b-4aa8-a168-9c6831c17c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba51c187-9bf8-4ccc-9aad-7f98c604b6e8",
        "cursor": {
          "ref": "4a667a25-969d-4d75-902e-7f6064834eb8",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d40d8d9c-9d61-40e1-b5c6-5384032b0800"
        },
        "item": {
          "id": "ba51c187-9bf8-4ccc-9aad-7f98c604b6e8",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "43080936-bb91-4709-9e47-910651a2fa22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd2e6551-730d-430b-ab04-924046d639bc",
        "cursor": {
          "ref": "7710c997-b16b-4a59-b259-5f46b1dc1343",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b2b68ac1-01c5-421d-a518-ae00c9ba9b45"
        },
        "item": {
          "id": "fd2e6551-730d-430b-ab04-924046d639bc",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d88f4cbd-daa9-4fbf-bb8a-10af8b5cdc06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d55c6b-5fc2-4dd7-8747-de238f1d3a37",
        "cursor": {
          "ref": "7876dbf1-07fd-4f62-a0bc-5386d7d116a4",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7a499b5a-bad0-470e-89e8-ded2bb388293"
        },
        "item": {
          "id": "22d55c6b-5fc2-4dd7-8747-de238f1d3a37",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "db92b7a4-e0d5-48f0-af2d-9c446ad298a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5624091-31b1-4df3-b5e0-2dfaeff6d5b3",
        "cursor": {
          "ref": "9df2799d-b484-402b-bd6d-94e990321157",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a4abc1db-8c80-4095-82a4-16464a5f042d"
        },
        "item": {
          "id": "f5624091-31b1-4df3-b5e0-2dfaeff6d5b3",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "133246be-a757-4b3b-bfca-92043657ad05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18544019-cb18-4911-a83f-58190e3cf0f0",
        "cursor": {
          "ref": "194aebed-623c-4ddb-ade1-66724818334d",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b28ee2d4-e9a2-42a1-b911-93ed5dbc9a8e"
        },
        "item": {
          "id": "18544019-cb18-4911-a83f-58190e3cf0f0",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "80d6378f-a42e-4d3f-b1ee-da07be6cdb66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e088f74-5029-4920-a47d-ba677e66866e",
        "cursor": {
          "ref": "d6bc33b3-5db3-492d-9499-b8c67f65e2c6",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f21c5374-e7ae-48de-b84e-d08448ed9ba8"
        },
        "item": {
          "id": "7e088f74-5029-4920-a47d-ba677e66866e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "425b53fe-5f28-4fb4-8e3c-f1ae70fe8d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e864714-83d4-4af9-932b-f6dd80a26628",
        "cursor": {
          "ref": "a67ee960-95bd-46be-94f8-1d2cc60fc8e0",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "6be6b166-dc01-4a1e-beb4-339610e0bf4b"
        },
        "item": {
          "id": "2e864714-83d4-4af9-932b-f6dd80a26628",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "bf3a6a60-1ac6-4586-b460-0da1816e1789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce2b454-a8a1-445c-8d75-1ef12d7d506d",
        "cursor": {
          "ref": "faa83b4c-9c06-42fe-ba26-efded6e6d254",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "434e3c35-09c3-44dc-bf5a-10bec1c51ecf"
        },
        "item": {
          "id": "9ce2b454-a8a1-445c-8d75-1ef12d7d506d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f16612f8-2545-495e-9e8e-f1385ec490df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98af8c71-08a0-4ef1-adba-a2062bcba586",
        "cursor": {
          "ref": "62f31994-ebf8-4776-b910-79cc1c9f210a",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "e2703535-761d-40a4-8027-7d6f04740c28"
        },
        "item": {
          "id": "98af8c71-08a0-4ef1-adba-a2062bcba586",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "dfefb486-a8b3-45b1-9fab-f07da9248039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c53602c-03a8-45d1-8e8a-597793bb433b",
        "cursor": {
          "ref": "e5300012-2aa4-4cb6-8b65-9c5c37abbaa6",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "7dae1c34-c227-4c8b-aa2a-e9b45be6c619"
        },
        "item": {
          "id": "5c53602c-03a8-45d1-8e8a-597793bb433b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "873dbf4e-91d0-4207-9e9e-57577c80e4af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b2ef25-ef58-45e4-84fc-7ef39ca232e6",
        "cursor": {
          "ref": "f3fd850c-d466-44c3-ae00-81dd63a01e61",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d2eee3bf-3091-4de7-ae9a-3ffc864e6078"
        },
        "item": {
          "id": "08b2ef25-ef58-45e4-84fc-7ef39ca232e6",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "9c45391d-89af-4b5f-bddd-780642c0e11b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2640c5a9-66d4-4451-b572-bac6c76f8e79",
        "cursor": {
          "ref": "01ecc0a2-024d-4e6b-aee4-ebc07c5eb94f",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "eeef5040-a57a-4960-8988-3adb09921723"
        },
        "item": {
          "id": "2640c5a9-66d4-4451-b572-bac6c76f8e79",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "348e23ea-008b-461f-ab7e-4d28bc20c2a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfcdf804-ceae-4cb4-b03e-05152b9beec9",
        "cursor": {
          "ref": "0969d04c-23a6-48d0-b8d6-62ce958be685",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "aa9eb14d-5b76-43f3-ad63-03c91b7e179d"
        },
        "item": {
          "id": "cfcdf804-ceae-4cb4-b03e-05152b9beec9",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "87e73249-66ea-4567-a40b-6a1b60a33b01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f665ba59-c481-4ffa-b5f7-6b959c36ecc5",
        "cursor": {
          "ref": "cb7f635d-6c99-4c3b-8833-572db7bcb5ed",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "776521a4-aea3-4a4d-b9c9-c9283dd0a4fc"
        },
        "item": {
          "id": "f665ba59-c481-4ffa-b5f7-6b959c36ecc5",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "838a3bb1-c009-48a9-955a-7cfcfbf388e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8abfb337-d1a7-47d1-baad-47e1bca26109",
        "cursor": {
          "ref": "1c98312a-997b-47c0-8a4c-a858b0cd00e7",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f60d1380-b353-47c8-9d72-09537b289631"
        },
        "item": {
          "id": "8abfb337-d1a7-47d1-baad-47e1bca26109",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ac206d0f-79c6-4f18-9c3a-d98a2cc3b0f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c00d63ad-e778-4d37-8793-75aae4fe4511",
        "cursor": {
          "ref": "31323acc-056d-4a6c-9a7f-1cf4bb72d988",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "95f7b487-aed7-4601-ad8d-50a38eccf6bc"
        },
        "item": {
          "id": "c00d63ad-e778-4d37-8793-75aae4fe4511",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "5ebd05d3-b9d7-46c8-84fc-5859fb7821e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd06157-f19d-4233-be1f-5738ec4d79fd",
        "cursor": {
          "ref": "b2e4007e-02d4-4eb7-bde7-6a0c1e9cd85b",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "52f0b85f-c8a1-43ea-a8c7-8e46a8a16ce7"
        },
        "item": {
          "id": "1cd06157-f19d-4233-be1f-5738ec4d79fd",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "961b22e0-cf2d-4095-ab77-a60ee87754ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7604e9d5-2de1-4a2f-a5d3-2cb199261b55",
        "cursor": {
          "ref": "27b031be-1701-4e25-9fa5-842ac9a4a236",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "39eb125f-1d4f-4098-957f-119ac1881b64"
        },
        "item": {
          "id": "7604e9d5-2de1-4a2f-a5d3-2cb199261b55",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f9f8cbef-0c7f-48c4-94c2-ce8f1e794d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "438a1c7e-3ddd-499a-a641-97b854a06c79",
        "cursor": {
          "ref": "d8f054b6-3331-4398-b14f-0db4666c8d05",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ee6c0b86-acfb-426d-bea4-f3bb4b1d034d"
        },
        "item": {
          "id": "438a1c7e-3ddd-499a-a641-97b854a06c79",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d299bf3e-9eb4-414c-8acc-19438c41a38a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28cca574-2f3c-4d8f-8d23-e46a7b68b40e",
        "cursor": {
          "ref": "4cf93056-ed4c-40e8-9a53-01056f84edcb",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "49f9bc20-0bbf-4cd2-9e6c-c0dd8941b5ff"
        },
        "item": {
          "id": "28cca574-2f3c-4d8f-8d23-e46a7b68b40e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "86804df9-24b4-4671-81e9-447449713f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572f7c24-5954-44cb-bf8c-4a28864870ef",
        "cursor": {
          "ref": "b5c3b0cf-0627-4c50-8f20-1416e18d943b",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "cef29812-9d85-4e74-a93c-0622e5e9142c"
        },
        "item": {
          "id": "572f7c24-5954-44cb-bf8c-4a28864870ef",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3d4eea77-3d1b-4a50-b38f-a5803ca170b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a45f14a-43a8-49a3-8c6c-c98f32503b1f",
        "cursor": {
          "ref": "40fbd7dc-2820-41d5-82c5-a6055c5d14ca",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "5fed41d5-cc97-465c-adb5-f72bc91417b6"
        },
        "item": {
          "id": "9a45f14a-43a8-49a3-8c6c-c98f32503b1f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "3e5c9057-fcf2-40d9-a439-18098d92b04d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb6d734-ac7b-4aef-aadd-8ed67142506b",
        "cursor": {
          "ref": "d225686d-b1b2-4ed1-af05-ebe6dfd286b9",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "56532fb7-80bc-4585-b26f-e8910ad26291"
        },
        "item": {
          "id": "dbb6d734-ac7b-4aef-aadd-8ed67142506b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "b48afb60-fae6-48f6-93a9-5fd9d1fda7f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9806dd15-781d-4f75-9f1b-c2b738043c1b",
        "cursor": {
          "ref": "d561985e-b0e0-4c97-b08b-7fc676947dd0",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "528c663c-d9d4-4b58-b78b-60b3e0542709"
        },
        "item": {
          "id": "9806dd15-781d-4f75-9f1b-c2b738043c1b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "16bc8a75-17da-4cee-986d-72f9c37684a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac002d1-f958-48da-b1b3-2b62a0e9684a",
        "cursor": {
          "ref": "aa34f40b-3c36-4e2b-ab66-a9b7aa382b8d",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "b8483858-e973-4787-9ec2-324a43137fe5"
        },
        "item": {
          "id": "9ac002d1-f958-48da-b1b3-2b62a0e9684a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "c8848bd2-20a0-48ed-91d5-b03a35595525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2841207-8072-4374-966f-39f4712e304f",
        "cursor": {
          "ref": "41d4f2a6-e187-4b49-94ed-0eab6fbf17e1",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3ce5065d-bd49-48fa-8013-6a2471659b40"
        },
        "item": {
          "id": "a2841207-8072-4374-966f-39f4712e304f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "86a8b943-e99b-43a2-a58a-228b83ed920e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52577304-c45c-4452-b7ea-cb0c90831b1e",
        "cursor": {
          "ref": "dce1e78c-9376-455d-923c-48e4542591b6",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "8ae2c637-eec6-4b34-9b44-7a1f6a096082"
        },
        "item": {
          "id": "52577304-c45c-4452-b7ea-cb0c90831b1e",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "236224c8-ad54-4091-b294-c36f714a0856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ee4af72-26e6-4b04-a429-b96feea55a15",
        "cursor": {
          "ref": "95ebaecf-0a52-48b9-bcfd-5da91c8bea3b",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "e532421a-58b4-484e-b42d-7bf3eac9cc0a"
        },
        "item": {
          "id": "1ee4af72-26e6-4b04-a429-b96feea55a15",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5c8f8fc2-1b86-4a6a-8153-85bfb7a2a85e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22221d92-4178-4484-be4d-ef9e3858f909",
        "cursor": {
          "ref": "18f2540f-f70b-416c-b958-797fc0724859",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "aebe5f8b-f95a-49d0-8dd3-e1723171e794"
        },
        "item": {
          "id": "22221d92-4178-4484-be4d-ef9e3858f909",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "a3453fa8-f99f-46b7-a398-c841d923e707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "2bc13e55-fd17-471a-8ccb-9f2538402e9f",
        "cursor": {
          "ref": "4d8af38e-b89c-4b41-91ba-109e78f9d4d6",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "516d0267-17df-4a42-97d6-865156a27158"
        },
        "item": {
          "id": "2bc13e55-fd17-471a-8ccb-9f2538402e9f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "8e9ac4e1-78ea-4568-84b9-050ca0dc49c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "5c4a2a37-d448-402c-a343-c6b36fb4a21d",
        "cursor": {
          "ref": "36d6955b-bc17-4631-a08e-2506104067cb",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "8d82c835-93e9-44b7-8782-b675fe68d21b"
        },
        "item": {
          "id": "5c4a2a37-d448-402c-a343-c6b36fb4a21d",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f7f4b4dd-b782-42c7-bb66-9e4ead5f6b01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "653453c8-4070-47fb-8771-f14790da74fc",
        "cursor": {
          "ref": "63b5bfc6-0ab9-4472-962e-eb09a0f80f6c",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "dec5b010-de2f-4c4a-87b2-04fc58512417"
        },
        "item": {
          "id": "653453c8-4070-47fb-8771-f14790da74fc",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "8ed3ed41-27e5-4463-bd04-57982432ed7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "c73db5cb-1039-4e0f-bd93-2d4da61a8e12",
        "cursor": {
          "ref": "90226fec-6b1c-4f42-8898-6fcc1f949186",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a2506d79-0bf0-4eca-9746-4a12ec668ab6"
        },
        "item": {
          "id": "c73db5cb-1039-4e0f-bd93-2d4da61a8e12",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "64c3bfef-b9b0-41ae-bed4-8b4fafddb446",
          "status": "Created",
          "code": 201,
          "responseTime": 5636,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9bdbdfb-f657-4a71-9860-9558bb62b41a",
        "cursor": {
          "ref": "5ed04c50-2b40-4b4a-85f9-99fbe09fdc46",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "0d476e4f-2678-4e83-ad29-02ab4f79ca08"
        },
        "item": {
          "id": "e9bdbdfb-f657-4a71-9860-9558bb62b41a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c96dd0da-5c27-48cf-ad44-0b777d4eb838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "5c9802f9-355a-4c27-bcc3-84fdb8425cd1",
        "cursor": {
          "ref": "edf04cda-e1f1-4c7f-8ee8-188874d1bc7e",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0957b2f8-4419-4025-a04f-f1c57ed58154"
        },
        "item": {
          "id": "5c9802f9-355a-4c27-bcc3-84fdb8425cd1",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "3e2d0679-d0e5-4b9b-b94a-5a93f4940428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "582fe70c-205f-424c-8593-07d4be28d116",
        "cursor": {
          "ref": "fef6224b-c3f7-445f-8ad2-517a549da5a3",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "0c671623-fc10-4954-833d-d91e9e6f8589"
        },
        "item": {
          "id": "582fe70c-205f-424c-8593-07d4be28d116",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "74f0a980-acb2-4e11-9a51-e8291ed81aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdeee6c8-cc2f-4cf4-9b37-ee0c3e41e44f",
        "cursor": {
          "ref": "35429ca8-51f0-407c-bb86-ab162a2dd4f6",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "549fa8e0-5ed1-4d29-b6bf-b792e7beb3fb"
        },
        "item": {
          "id": "bdeee6c8-cc2f-4cf4-9b37-ee0c3e41e44f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "92a5eee7-5489-40e1-a710-7b10745d4055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c4f27ef-2b3d-4f18-80fc-ad51afce227c",
        "cursor": {
          "ref": "be36f366-6343-46ae-a911-7ae9c0592ccb",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "28f22500-fd0f-4147-9af3-ccaf0ecd2da5"
        },
        "item": {
          "id": "1c4f27ef-2b3d-4f18-80fc-ad51afce227c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "10cd7c2f-7234-42c7-9b84-a3ea29620236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f6f045-324d-40e9-8b53-62a0c14005ca",
        "cursor": {
          "ref": "97a55bd7-6f1a-4b22-b751-185fdf6b81d0",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "3b4051ed-43b7-4415-b32e-984ad8f2656c"
        },
        "item": {
          "id": "d0f6f045-324d-40e9-8b53-62a0c14005ca",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0240d1ad-943b-47a2-bbbc-b216573e65bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d56cff5-d62f-4f3c-90b9-062874f43096",
        "cursor": {
          "ref": "01acd293-ad69-4854-80e2-5018d9eda83b",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "50c507b9-6726-45a3-bae4-e1dcfa411361"
        },
        "item": {
          "id": "9d56cff5-d62f-4f3c-90b9-062874f43096",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "36b31349-6c70-4c88-a08c-47ef550fb489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "045d5826-817a-4a70-ae56-29b5f57dd221",
        "cursor": {
          "ref": "ee87c21b-508f-4c62-8bea-fcc59d6fd571",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5f7289f8-b637-4eb4-9844-31b7fd184e8d"
        },
        "item": {
          "id": "045d5826-817a-4a70-ae56-29b5f57dd221",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e86a3291-87c4-4c8c-8048-70ee53f8dc62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4747b77f-ac02-4d23-8931-5f064c22fcf6",
        "cursor": {
          "ref": "0d7b0ed9-0526-48c6-901b-b4ba3c2c5e54",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e8614e08-35c6-47fb-9363-58c5c264d451"
        },
        "item": {
          "id": "4747b77f-ac02-4d23-8931-5f064c22fcf6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2d381692-4646-4fc4-ad7c-d7fbd83c362f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35dab6b4-4362-41af-8c29-186fc27e6a6c",
        "cursor": {
          "ref": "1c1321ff-8296-438e-80ff-3c7f1a43b24e",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "3d506d87-3647-437e-8486-f78afc0129b6"
        },
        "item": {
          "id": "35dab6b4-4362-41af-8c29-186fc27e6a6c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b3b997b3-0d03-4d33-82b1-44fd7a810eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "296cede8-2d5b-4bb7-a20a-76f385aeed19",
        "cursor": {
          "ref": "a6780b2c-0f89-437b-834b-50ebd51a255a",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "19986861-d1dd-4ccc-b9e3-bf093ca6af1b"
        },
        "item": {
          "id": "296cede8-2d5b-4bb7-a20a-76f385aeed19",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8fef2c59-0996-49d8-adce-8b1867a17270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81af94fc-1067-464a-8087-9ec4b865b732",
        "cursor": {
          "ref": "472bf252-ab76-4496-b00c-3e23c8b3c4e2",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "1b4fcf38-ac14-4531-a60b-22fa3b52d4c4"
        },
        "item": {
          "id": "81af94fc-1067-464a-8087-9ec4b865b732",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "64598bdb-db8b-47ee-8720-e762f9d6e050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df3909a-6515-42b3-80e9-c1f7b013661a",
        "cursor": {
          "ref": "16f46584-cb2d-4cd8-b49f-f6fca2512008",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "3ad9fac8-6af8-401d-abeb-ac91e19ffb12"
        },
        "item": {
          "id": "4df3909a-6515-42b3-80e9-c1f7b013661a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e55b51bf-2136-4680-b699-8bcd90f2840d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25399b31-e34f-469a-8530-e8ea878f7bd4",
        "cursor": {
          "ref": "bb9cfdc7-1602-4a7b-bdfd-3e780439d469",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f072a88c-0821-4683-a62d-74fb7e2f9118"
        },
        "item": {
          "id": "25399b31-e34f-469a-8530-e8ea878f7bd4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "fd42389e-8244-490f-a1ee-117418d239b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b2282d0-a8b7-407e-ab4b-7a4b2b0601f4",
        "cursor": {
          "ref": "4d354cff-a912-4033-ae56-db7e3b22bc71",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "db3bc84a-7117-4591-88a2-83511be28253"
        },
        "item": {
          "id": "7b2282d0-a8b7-407e-ab4b-7a4b2b0601f4",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3f1fe726-aae2-4a24-9248-0133471586d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "495fc507-ebec-4100-a94b-695805694ad0",
        "cursor": {
          "ref": "547fe807-0979-4fef-9f81-e5c1357406b1",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4ce11bbb-2818-4ccd-917c-d9124f02cf94"
        },
        "item": {
          "id": "495fc507-ebec-4100-a94b-695805694ad0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9f0b259d-2484-4967-8c1a-7d0a315f159d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d14e0c6a-d8e8-4aba-9e51-d1cbe2c13a54",
        "cursor": {
          "ref": "cca2e50e-6eca-4794-b2bc-2fa747087b6b",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1e95d73b-d8d5-43d9-8693-a3abb275c25e"
        },
        "item": {
          "id": "d14e0c6a-d8e8-4aba-9e51-d1cbe2c13a54",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "40326ec3-a91b-4443-99c5-30d6c72bcb9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ec40af-9748-412d-8a7b-38c4216b4e3c",
        "cursor": {
          "ref": "2847522a-8c2f-4a7c-aeb3-986bc159c11c",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "89b55730-4900-4cb9-aa52-9b6c8a8cc3d3"
        },
        "item": {
          "id": "44ec40af-9748-412d-8a7b-38c4216b4e3c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d5f9c49c-e0df-4c9d-ac08-5150566cab45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad89113b-dea0-4b34-90e8-cbdd416f912c",
        "cursor": {
          "ref": "cdfa493c-85a0-48fa-9339-f37348048919",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d95ebec1-2432-4585-9da8-b5527aa52029"
        },
        "item": {
          "id": "ad89113b-dea0-4b34-90e8-cbdd416f912c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ffcd423f-8730-4839-9c2e-8690f62cd713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9760003b-a9a5-4150-9037-2b9eafcf6a8b",
        "cursor": {
          "ref": "468bb0fc-7bdd-4def-9a87-be1bdbed4d2a",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "7371e65f-06e6-4e45-84c5-0a24aa985444"
        },
        "item": {
          "id": "9760003b-a9a5-4150-9037-2b9eafcf6a8b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "86e9aed7-fbff-441e-97d5-5cfdf6b0c7db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d3d0d2-8043-4856-8b26-395acd0c1ca6",
        "cursor": {
          "ref": "bfe14c79-0880-4bcc-a811-487991386878",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "7109bca5-a577-4af0-8048-7ac41c7104d8"
        },
        "item": {
          "id": "c3d3d0d2-8043-4856-8b26-395acd0c1ca6",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "bdf16548-759d-40ba-b68d-58efc69adca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc10c358-c7aa-4077-84a9-f5033b1832db",
        "cursor": {
          "ref": "3ead5e17-f8d6-4b31-b006-8577467f9500",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "99e213cb-3a88-442f-bef0-4f30fc9a2543"
        },
        "item": {
          "id": "dc10c358-c7aa-4077-84a9-f5033b1832db",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b687b0eb-89d1-4443-bf6f-a6631d348038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c5d117-99f9-4b6e-81da-119dbcbd4bae",
        "cursor": {
          "ref": "aea479be-da94-4ca9-a359-d89e3408b691",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2e6a1956-fcf8-4a40-a73d-0f24872e07fd"
        },
        "item": {
          "id": "86c5d117-99f9-4b6e-81da-119dbcbd4bae",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0c0a5bc4-5d1c-406b-9991-37ee74b6d71d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "003d53a7-dd2c-4673-8cdc-bbb653c3a763",
        "cursor": {
          "ref": "3b1eb299-5718-45ce-8cd2-9e93ba63d260",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "23760d90-498a-49d7-b915-5d77aee60403"
        },
        "item": {
          "id": "003d53a7-dd2c-4673-8cdc-bbb653c3a763",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c51a1441-2e29-4ca1-a3b3-c118efd300e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef13d28c-ca72-4a99-a466-91e7d7552f8b",
        "cursor": {
          "ref": "1d0c48a0-6fd5-48d1-8634-58321806c2f2",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "8599d749-224a-4203-8d92-72f30811442e"
        },
        "item": {
          "id": "ef13d28c-ca72-4a99-a466-91e7d7552f8b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "05890a8c-04b4-41ab-aa1f-6b458558907c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "047d7f55-6746-4960-af74-d9657f4e5b9d",
        "cursor": {
          "ref": "b1e22500-f7ae-48a2-a826-a0da7fb9550d",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b2d7dcc7-02e9-4005-9ddb-2d662526d344"
        },
        "item": {
          "id": "047d7f55-6746-4960-af74-d9657f4e5b9d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "fd23c17f-8540-42ea-b9ba-1e34fe694c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c87497e-0248-482e-93a2-6fbdf830f558",
        "cursor": {
          "ref": "6189aca5-df5a-4ee4-a36a-5fb281df2fbe",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "63cad8ce-a798-44ae-a924-d7b785168c48"
        },
        "item": {
          "id": "2c87497e-0248-482e-93a2-6fbdf830f558",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "999196ba-e37a-48c2-83ff-c8f396e95b4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d199bf-846c-4aa7-9bcb-972ab5eeffce",
        "cursor": {
          "ref": "6b4c8a84-f555-4b4b-aa2d-c07b61162437",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "6db7b2ba-f932-40f1-99ee-e19e6a63ce5e"
        },
        "item": {
          "id": "86d199bf-846c-4aa7-9bcb-972ab5eeffce",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "149bface-76b4-422d-94b5-81cb57c642c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4fe30f3-c176-4a68-b5b6-f4f79cf27749",
        "cursor": {
          "ref": "858b77c7-e3c9-4479-ab9c-a9c7e3295d99",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "637f9fc7-83fe-45d6-91a5-958d15b137c6"
        },
        "item": {
          "id": "c4fe30f3-c176-4a68-b5b6-f4f79cf27749",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "85fdbf84-6eca-4959-84ab-e4d32d9eb88d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b3ca173-d5ad-49fe-866e-aca4f0b24128",
        "cursor": {
          "ref": "8547db5c-66ff-42af-9e70-7f6ad51a6176",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "95c77a6d-4669-4823-9347-5dd6e45d9ce1"
        },
        "item": {
          "id": "0b3ca173-d5ad-49fe-866e-aca4f0b24128",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d0a1e1c0-ce8e-4c02-88af-c2377a137a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "638be6ca-9b42-444f-a81a-a350830220a6",
        "cursor": {
          "ref": "ba3445bc-b6c6-44b8-bc2e-0d974773d17d",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9ff857f2-cdb3-4dcd-9278-3efda3b4c3e7"
        },
        "item": {
          "id": "638be6ca-9b42-444f-a81a-a350830220a6",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8bfaeb33-b2d8-4771-9a23-abf4cd85ab3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad127363-c89f-4f46-bea9-f5c2b28671be",
        "cursor": {
          "ref": "e94c2d59-24e8-4bed-b6c1-dee1837f4d5e",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "4cb90998-70ee-4602-9e43-1d4026bd2d83"
        },
        "item": {
          "id": "ad127363-c89f-4f46-bea9-f5c2b28671be",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d59f0d0a-ed95-4275-bf38-26fdcd43e63a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e43177-06d5-41f3-9f79-ad1537b8e08e",
        "cursor": {
          "ref": "800982ca-55e3-4487-8fa6-57aff90b9a34",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a12f5d08-8d62-4a40-a594-70af658fec37"
        },
        "item": {
          "id": "96e43177-06d5-41f3-9f79-ad1537b8e08e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5c9a748f-9b8c-4374-9b7c-3a56d95ad7dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f0d6f4-d382-4635-bb2c-76aae0dd4620",
        "cursor": {
          "ref": "8e844111-4444-4f64-866a-3ac358e7c0c5",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "37b6434e-31db-4635-9a3b-d277fb422254"
        },
        "item": {
          "id": "35f0d6f4-d382-4635-bb2c-76aae0dd4620",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "1590645e-5014-4895-af92-5d28dd693d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fd0f494-f65d-44c9-88ea-4460223a2a41",
        "cursor": {
          "ref": "7e854e08-096c-448d-9681-7092f03243d7",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "65fb0c51-5a55-4ad3-84f9-4fb7791a0dc7"
        },
        "item": {
          "id": "3fd0f494-f65d-44c9-88ea-4460223a2a41",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "fd734d06-2dfb-4d9d-8405-46ef4ecf101f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452f144a-4c49-4246-8802-7a327a9ba6ac",
        "cursor": {
          "ref": "f3032d5d-e7ed-47a2-aa32-83ded76ff426",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "3fa7cbf1-106a-46a5-90a4-924bd8aac254"
        },
        "item": {
          "id": "452f144a-4c49-4246-8802-7a327a9ba6ac",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e87228f7-537e-419f-91ae-23931d86ccd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "163b6db4-329f-40c6-a273-b78421d94f83",
        "cursor": {
          "ref": "31f2aff7-ec5b-4105-9afe-0a8ea7b28e8f",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1b16dbe3-6849-4ae2-8935-7de9dc808344"
        },
        "item": {
          "id": "163b6db4-329f-40c6-a273-b78421d94f83",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e43a3102-f550-4654-a86a-2a0a01f905ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "184ae8a2-e814-4d9a-b178-8bd40c555fb8",
        "cursor": {
          "ref": "6d03c7d0-d26c-4195-99de-891607e159e9",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "43111ef0-b4e6-457d-8a36-1637fbcf1c50"
        },
        "item": {
          "id": "184ae8a2-e814-4d9a-b178-8bd40c555fb8",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "8a19766a-d4b7-4f93-a63a-804e7974cfc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c82688ca-762a-4386-9a44-849da7563b46",
        "cursor": {
          "ref": "2dd69669-2aad-442f-a591-367b0c7c2282",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "054f7b2d-6d96-43d5-961d-0dd83ffcf646"
        },
        "item": {
          "id": "c82688ca-762a-4386-9a44-849da7563b46",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e2e69049-05d0-4b46-89d2-3c3fdc69d9f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c3ef69-777b-4ef0-b3e9-f772e7d1c9a3",
        "cursor": {
          "ref": "ce17d19e-deec-45b9-835a-1c7b2306a3f5",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a1b7f2da-6697-415f-893e-fd17e1efd948"
        },
        "item": {
          "id": "d6c3ef69-777b-4ef0-b3e9-f772e7d1c9a3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "00e66bbd-9160-4580-ac57-06caf91e46fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7562c02c-f9e1-452b-a99a-a5495ca3ba90",
        "cursor": {
          "ref": "6f50913f-69df-4da7-9ea9-8e8a4c071e19",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "06d209e5-721b-4c1a-9e6e-b26551910ab4"
        },
        "item": {
          "id": "7562c02c-f9e1-452b-a99a-a5495ca3ba90",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0cc2f798-873e-4826-a4ea-521b26ede55a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98bfc4a1-0414-4866-b467-f6b58475e007",
        "cursor": {
          "ref": "92695e2b-1435-44a9-93e9-1364fbfcb228",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e9e8c338-bbb6-425d-b114-ab5aeac6c2c7"
        },
        "item": {
          "id": "98bfc4a1-0414-4866-b467-f6b58475e007",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "68c06eaf-c1d1-40fc-9388-5b14d8a22e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ed6917-0a4f-4eae-b9c1-67086b6188f3",
        "cursor": {
          "ref": "3d4615b8-39c0-4ef9-867f-7e481c7082a7",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "bd10a099-de1e-420b-923f-6e038c0e2a92"
        },
        "item": {
          "id": "03ed6917-0a4f-4eae-b9c1-67086b6188f3",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1aab6699-e0d9-4755-ba1a-8b64bd06ed76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7305fb1-feae-4d97-9934-5d75a1bce9ad",
        "cursor": {
          "ref": "c7852b69-9e18-41bd-9ad3-901d88ca78e9",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f9741539-33ad-4da4-b161-27743e9c6fdd"
        },
        "item": {
          "id": "a7305fb1-feae-4d97-9934-5d75a1bce9ad",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "51238adc-db71-45b8-96a9-c63b03085d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e96a7390-51e6-4c6e-b930-f28df1bc0d27",
        "cursor": {
          "ref": "322d6e75-be6f-4225-bcea-3867c69dbf6d",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "326a6efa-1456-43aa-9988-b1d10ae84c3c"
        },
        "item": {
          "id": "e96a7390-51e6-4c6e-b930-f28df1bc0d27",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "61d8f6a7-ab37-4c21-b800-65f3633dfeb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac2c057-92fd-4186-a1be-6917ab72645d",
        "cursor": {
          "ref": "dabdfe37-1c9c-4d6b-832c-4dba95803fdc",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a256689d-dacb-4ab7-ac66-da397b627240"
        },
        "item": {
          "id": "aac2c057-92fd-4186-a1be-6917ab72645d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6a4365fe-08eb-4d4a-8fe5-20b4c8c226ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69a236ef-ddc7-4319-aa4f-3a3b9b4c7320",
        "cursor": {
          "ref": "f7a899dc-89a3-462c-8e3d-1846ec54aefe",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "47de036b-0936-4ab7-9c8d-79570e9a44e9"
        },
        "item": {
          "id": "69a236ef-ddc7-4319-aa4f-3a3b9b4c7320",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "959ff2e4-4eed-4620-a5ad-552bb7e6593f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be21add-f465-4228-bb0f-bdcab15fe9b5",
        "cursor": {
          "ref": "b8104540-dd6e-4859-949b-dd7bda0529c2",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "89f7f2b4-549e-4372-8e08-fd71aa195506"
        },
        "item": {
          "id": "7be21add-f465-4228-bb0f-bdcab15fe9b5",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c36845bd-e37b-4240-9986-19957f1ca34d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f5eb04-ad4d-472b-ab7d-325aec9a9ac5",
        "cursor": {
          "ref": "b35eaa4d-9712-40f6-8429-a4dd36e6a974",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a2ef21ce-c9d0-48d9-a7ce-a251f3865b68"
        },
        "item": {
          "id": "25f5eb04-ad4d-472b-ab7d-325aec9a9ac5",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9c325eea-fac7-4014-80ce-778876f4ab61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "816031e3-05dc-4cfb-8a94-8e4e49cc9360",
        "cursor": {
          "ref": "840646c4-eada-48b0-9536-83c79dbf1894",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "846d56ab-0452-4065-a2ae-37a6a22300ce"
        },
        "item": {
          "id": "816031e3-05dc-4cfb-8a94-8e4e49cc9360",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2b4460af-7ec0-4a42-b617-9a7da09e5764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc4fdada-c99d-41c5-b132-e547f0681557",
        "cursor": {
          "ref": "fe0fc0cc-6dd8-450e-8ec3-19b1c9cd8dbf",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "81966612-74cd-4db4-aeed-4232fa7fd4e9"
        },
        "item": {
          "id": "bc4fdada-c99d-41c5-b132-e547f0681557",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ed4947f0-ff0d-429d-9813-c7b24a62d439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e1084f-ef92-470c-9a1b-a953d499caaa",
        "cursor": {
          "ref": "2069d344-4693-4cee-824a-252e9ecded67",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "41b91468-5b9d-485d-b714-1f6a8b714fcf"
        },
        "item": {
          "id": "02e1084f-ef92-470c-9a1b-a953d499caaa",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "39bc7ead-d0b9-4367-befb-c41d33d88ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b36f7bc9-fafc-4615-9a14-ada3890ff98d",
        "cursor": {
          "ref": "c34b8bfc-4438-4a03-a9b6-3107a6d5d8ac",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "16a332d4-935d-4673-93a6-95f4c750888c"
        },
        "item": {
          "id": "b36f7bc9-fafc-4615-9a14-ada3890ff98d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "bd8aeabd-1015-4910-9870-16613d6df9b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca778798-d2f5-422c-8cff-3d1a91f978b8",
        "cursor": {
          "ref": "227b21f9-0a7e-47d2-bf3c-574540815ca1",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "fe3d6e9e-e73c-48c7-b469-3af6fe26ecf5"
        },
        "item": {
          "id": "ca778798-d2f5-422c-8cff-3d1a91f978b8",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "cf602d84-ef7c-49a0-9abf-82d80c5c0ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d77edf-d94a-4525-b46c-03b0e0ee09cf",
        "cursor": {
          "ref": "9e71fd8d-ffeb-4ebb-afa9-8ead69b525db",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2f15b316-04e0-4270-9088-74650f2bc4aa"
        },
        "item": {
          "id": "17d77edf-d94a-4525-b46c-03b0e0ee09cf",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "36691a14-363b-4da5-a7e2-2328d1b11868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a52690-ea09-412e-8576-0eca16b0ac77",
        "cursor": {
          "ref": "d2c69834-1a9f-4454-a271-54102ad4ab94",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9429b4bd-6b04-45d3-832f-745616bdd12e"
        },
        "item": {
          "id": "21a52690-ea09-412e-8576-0eca16b0ac77",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "683b0e9f-8f26-4d69-a72f-043f8e72e1ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9cc4e90-7e63-4b1f-aad0-4469b67c2c10",
        "cursor": {
          "ref": "f091f9ef-5335-4f93-a306-1b770cb9969d",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a6f17b63-5eeb-49b0-8b8b-1e3f2eb25cbc"
        },
        "item": {
          "id": "c9cc4e90-7e63-4b1f-aad0-4469b67c2c10",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8adde8fa-d11b-4fe0-bdea-ebac098345e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3589c732-e8d9-4e55-be8a-cb8f5ae5d05a",
        "cursor": {
          "ref": "f46362cc-bba5-441b-98e8-63400820bf57",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a73d473f-8942-4f7c-bb25-c6d5dfd40563"
        },
        "item": {
          "id": "3589c732-e8d9-4e55-be8a-cb8f5ae5d05a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c18d53cc-8fa3-4286-8337-34b2e72f945a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e97188b0-f884-420d-81c8-8982967bf72e",
        "cursor": {
          "ref": "081ffcae-83e8-4f07-8bd3-9b9c4bc5d10e",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "6f4bf9db-749b-4466-bfe8-12c80b92c7a9"
        },
        "item": {
          "id": "e97188b0-f884-420d-81c8-8982967bf72e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "571e1e61-eeb2-4772-9c80-59ab1d55a8c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8f0f186-5876-44bc-9978-c69ceba46687",
        "cursor": {
          "ref": "9b8e4ff2-f68e-4c03-b950-cafebe916531",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e56f23ab-2e9f-4adf-bc67-0107d8753f2d"
        },
        "item": {
          "id": "e8f0f186-5876-44bc-9978-c69ceba46687",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "73461c25-6e6d-4ae6-9228-fd3c9435ac9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd4a12c-8251-437f-9734-7145740aaa9d",
        "cursor": {
          "ref": "a629206c-a034-435b-98fe-5229202dcccb",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "5fb4ccd3-accf-4ea1-89b0-87afc4025c38"
        },
        "item": {
          "id": "6dd4a12c-8251-437f-9734-7145740aaa9d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2177eb42-bab4-4084-a2ca-5046645cce0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a69462af-2e0d-47c4-9178-197ff17e557f",
        "cursor": {
          "ref": "05e998c7-5d19-4f0e-a739-883ca5df80e1",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "79471890-63f5-4091-8209-d63479a17b1e"
        },
        "item": {
          "id": "a69462af-2e0d-47c4-9178-197ff17e557f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "08e2fedb-3907-4254-800e-78db7f63ce97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3a60f8f-d9d7-4d91-9553-4c8f46fda7d5",
        "cursor": {
          "ref": "a6637fca-c221-4565-a1cf-ff524527f95e",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d497e947-7693-45b2-99fe-afe6103b6fe1"
        },
        "item": {
          "id": "f3a60f8f-d9d7-4d91-9553-4c8f46fda7d5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6436d904-735d-48bb-8c5a-734cce08999b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f08b3c5-b538-452f-8e4a-ebe85dea5715",
        "cursor": {
          "ref": "a02be70d-4f30-46bf-b7e8-262459936d5b",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "3b69068c-413e-4f7e-ba27-d7ddd5e7d6d7"
        },
        "item": {
          "id": "8f08b3c5-b538-452f-8e4a-ebe85dea5715",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a7ce58b9-d32a-494a-b1f4-91f9cffd8f73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac68e3b0-fa80-43da-b7cf-3ea32cba8eb6",
        "cursor": {
          "ref": "c9061d42-4504-4813-b164-f834280767cb",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "00a4728f-f352-4ea3-9122-2930a6a9b31c"
        },
        "item": {
          "id": "ac68e3b0-fa80-43da-b7cf-3ea32cba8eb6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6d22caf3-2faf-44d1-857c-3f3e3756b27c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b4f3f5-bc5e-490f-b657-1d8c0fca1385",
        "cursor": {
          "ref": "e38eba29-31f0-413a-998a-81656bb94db1",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "13bc1805-4c5a-49c9-a7ad-ab6013a33721"
        },
        "item": {
          "id": "21b4f3f5-bc5e-490f-b657-1d8c0fca1385",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "02ee7b87-2949-44bb-bf41-a75b052a4c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c60aad9b-fada-4fa5-843e-7506df63e867",
        "cursor": {
          "ref": "3b6192a4-ef6f-4651-a9d9-a53726a932fc",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ffe788b7-4ccb-44ee-80ee-260bd57785b3"
        },
        "item": {
          "id": "c60aad9b-fada-4fa5-843e-7506df63e867",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "caed0546-977d-43fc-a561-ad3ca8dbd834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b190da9-b279-4a75-a88c-56674253cc9e",
        "cursor": {
          "ref": "5ea2e15d-3c51-4af6-9cfe-f432b9db79fd",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "feda3c00-33b1-472c-9747-c84be7bed57d"
        },
        "item": {
          "id": "5b190da9-b279-4a75-a88c-56674253cc9e",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "3c66ced9-8221-4489-b6f9-ad512212ed8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049f362c-ac24-4c46-adb6-c73806664980",
        "cursor": {
          "ref": "588d9e93-6127-45e1-9372-f696e516b21d",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d55bc9d5-4702-43ba-98ad-1122b4d1e2eb"
        },
        "item": {
          "id": "049f362c-ac24-4c46-adb6-c73806664980",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "cca4d811-b8e7-48d9-8bd1-eae8a219412e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a3e0bc9-7eca-4c12-82a1-9b0df14e7621",
        "cursor": {
          "ref": "0f685339-daed-4e2e-89cf-a4468d79b1f3",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "763c3cd7-e620-4e60-a01d-73c1c08e6049"
        },
        "item": {
          "id": "8a3e0bc9-7eca-4c12-82a1-9b0df14e7621",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "6528d784-66ca-4dd8-99cf-4bbe29f211d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66732310-f0fb-45de-afdb-bc5fdf9f080d",
        "cursor": {
          "ref": "980aa819-a818-432c-9be3-56d738fa3b68",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "86349d38-1833-43f5-b732-92e9af03d583"
        },
        "item": {
          "id": "66732310-f0fb-45de-afdb-bc5fdf9f080d",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "cd93d0a9-634e-4c9d-a0ff-2318c5ea293b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a20c096f-e58b-4205-88ee-d51b05021b4d",
        "cursor": {
          "ref": "29b5c5c0-4b9e-48b7-b3e0-abeb14068e06",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "afedc7dd-97a2-4a98-9fa4-66293cec0988"
        },
        "item": {
          "id": "a20c096f-e58b-4205-88ee-d51b05021b4d",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f68eb975-5684-49fa-92e7-8595208c8566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598c741d-ab2c-47b2-83f5-fc38801a028f",
        "cursor": {
          "ref": "d83d3bf4-161b-43f4-a4a4-3aed745268bb",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2d3e0962-0662-4889-9531-8024af0e1305"
        },
        "item": {
          "id": "598c741d-ab2c-47b2-83f5-fc38801a028f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c319d2d6-4de4-40a7-b884-f78164ff288b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff50049f-1148-4519-8f1b-e178f96196f7",
        "cursor": {
          "ref": "7a8a7614-8f5d-4517-8558-59acf5e4c316",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "22b57da6-49e8-4262-af70-6259236465b4"
        },
        "item": {
          "id": "ff50049f-1148-4519-8f1b-e178f96196f7",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b3fd2d1a-688f-42f0-9f92-6eca4d72db55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72f445f-5166-4d04-8350-d00236196e5d",
        "cursor": {
          "ref": "abf223a6-ad4e-4f8a-86e3-c408f4b6dec8",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6275d1e9-91bd-4ea1-a14f-c8a01e60c0f2"
        },
        "item": {
          "id": "d72f445f-5166-4d04-8350-d00236196e5d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9533433d-d241-48b7-a99a-7775c0c778ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c45373f-34a4-4143-88d2-e207a3b60d06",
        "cursor": {
          "ref": "b365e75e-a1c2-4b20-ba49-4c89462d2d51",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "10cf291f-cedc-48b7-a1f1-5ca5602cab43"
        },
        "item": {
          "id": "7c45373f-34a4-4143-88d2-e207a3b60d06",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c2044a89-a9c2-468e-bb39-6f3eca9c2548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0333832-68f8-4d65-b6e9-4e8016d11975",
        "cursor": {
          "ref": "837ec781-6384-41ed-8e1e-e5ed24af1487",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1370dd9a-5622-44b4-927c-86e853857569"
        },
        "item": {
          "id": "e0333832-68f8-4d65-b6e9-4e8016d11975",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "9de29224-74e0-4edc-81c4-362f1e6cfb3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de74214f-568a-4d1d-9591-fd8edffda77f",
        "cursor": {
          "ref": "7a87758c-62fd-4bf9-86b2-715e5b00c80b",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "13ce6fe0-8836-4dd8-b9bf-844a33636e8a"
        },
        "item": {
          "id": "de74214f-568a-4d1d-9591-fd8edffda77f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "93bb5305-bbaf-4d1c-9d4e-e93a6323e665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2154ede-faae-456c-8b46-3e5946a29115",
        "cursor": {
          "ref": "2cbe8c66-fe7f-496b-b34e-f246e9430648",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "66c7381e-5e7a-455c-a9c9-71058b53a6da"
        },
        "item": {
          "id": "b2154ede-faae-456c-8b46-3e5946a29115",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "88ab1fda-63de-4867-964e-d85da38efeef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04c0d82-5a01-4581-b1f0-069cfa758ef0",
        "cursor": {
          "ref": "43c1251b-07c0-4525-be6b-540c4e2b8140",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b0c03ed6-71d1-4dee-9374-447fb26e3343"
        },
        "item": {
          "id": "e04c0d82-5a01-4581-b1f0-069cfa758ef0",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e0bbcc71-671e-49cd-967b-4c1221a303f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c015685a-892f-48da-afa4-a940b00acf75",
        "cursor": {
          "ref": "03e6baad-37b9-44a4-9626-fee44d09f082",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e3f7dafb-5494-4f54-bacd-beacf0cdaa0a"
        },
        "item": {
          "id": "c015685a-892f-48da-afa4-a940b00acf75",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a4a013da-1e12-48fa-95ff-78f3e382ff09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d87a3451-c250-4b55-ac42-98f87188cce3",
        "cursor": {
          "ref": "4ee578fd-bf2d-4c03-8c73-01978a334041",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "fd3b4534-e328-429e-bfda-d0abb80523f8"
        },
        "item": {
          "id": "d87a3451-c250-4b55-ac42-98f87188cce3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a64bd0ba-dbec-40af-860f-71d4039c66a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6acae443-f134-480d-adb3-f7bc24e57758",
        "cursor": {
          "ref": "8614c8a4-5513-48fc-8fcc-eef8146da968",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "859fb4f7-a565-4f3d-81d3-a33951d40d49"
        },
        "item": {
          "id": "6acae443-f134-480d-adb3-f7bc24e57758",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c4d98f4b-6d5e-4a5a-932e-a9ab0d82fc20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f5ab258-2d34-4836-b786-4b86bd25242d",
        "cursor": {
          "ref": "055c719a-9199-4969-8a55-ee14992d7b86",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "de53d6a2-8359-4777-a37e-28edf9fe1192"
        },
        "item": {
          "id": "0f5ab258-2d34-4836-b786-4b86bd25242d",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d149ac22-a876-4944-ae63-da60d1eb028f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd42718-cac5-402f-8fe7-7854096d9148",
        "cursor": {
          "ref": "929e48f4-7bee-4236-bf4f-cba98e9d931e",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "0853b9c3-853a-4242-8079-35d61ed8a57f"
        },
        "item": {
          "id": "5dd42718-cac5-402f-8fe7-7854096d9148",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "bb0c89a7-b891-429a-abb8-96c5339b8aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3fa837d-901c-484d-8233-cd45518104a3",
        "cursor": {
          "ref": "1dd820e3-f940-4729-85a1-b6ac8237a104",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a0a34f4d-731e-40c6-96f0-c8e1abda9347"
        },
        "item": {
          "id": "f3fa837d-901c-484d-8233-cd45518104a3",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "8dd0ec79-582f-41b5-9a10-8c88daa81cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc1b401-a1ad-4afa-84b4-5d8d65b73086",
        "cursor": {
          "ref": "e704aebe-e49e-45c0-8816-879d186ed591",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "19c7fad1-0b90-44b6-9dc1-11378e51fab4"
        },
        "item": {
          "id": "2fc1b401-a1ad-4afa-84b4-5d8d65b73086",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ed0726ef-802c-41df-9d36-3258c21f0eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af7b1e7-0f89-4a77-a7a5-247d269d5ec6",
        "cursor": {
          "ref": "8766b2ac-b7f3-49e1-a348-e4df5551f490",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "737ddf6a-c875-4365-9939-9a5c1f89f6fd"
        },
        "item": {
          "id": "3af7b1e7-0f89-4a77-a7a5-247d269d5ec6",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c51b0974-65a8-40ad-a23a-39b457b74c56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53cd20ea-403c-48f7-afff-0cea156d7cdd",
        "cursor": {
          "ref": "e5c09cf1-b17d-4a54-ad37-7a82dbfd03d4",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1ac48878-26f2-4b66-9cb9-de00f7c511e4"
        },
        "item": {
          "id": "53cd20ea-403c-48f7-afff-0cea156d7cdd",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "46bc197f-1c82-4e75-be15-7af750ed90d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d10385-0326-44b6-8292-73e26fe00120",
        "cursor": {
          "ref": "c243529c-6906-410a-ac89-6a5a1d1ea2cb",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "16de15a8-7090-4ec8-9b0a-83be376e51a3"
        },
        "item": {
          "id": "98d10385-0326-44b6-8292-73e26fe00120",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0be075d9-95de-4c7c-88f9-a62295a77703",
          "status": "OK",
          "code": 200,
          "responseTime": 69,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "0e448a95-5302-4493-ae0c-f9d692ca2ea3",
        "cursor": {
          "ref": "410eb29e-c59e-421e-8d71-e23f8736e303",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7a1f5ae7-5997-48d0-aaec-329f859a73d5"
        },
        "item": {
          "id": "0e448a95-5302-4493-ae0c-f9d692ca2ea3",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c73d1355-ca1b-494b-8336-9c4e6df7dcf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "742d6f4f-e354-4b53-9bee-d8bf589987ba",
        "cursor": {
          "ref": "ddc236ab-6049-44ad-a044-016dc48db29c",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b7bfb550-970d-4e24-9067-65846f7bacd1"
        },
        "item": {
          "id": "742d6f4f-e354-4b53-9bee-d8bf589987ba",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "6982d2e6-5fba-4059-bc57-9099766a40f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792a90aa-2254-488e-a747-b4921524b6a4",
        "cursor": {
          "ref": "0f392cae-12ab-4949-bc03-61834c2c0ac8",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "00a25165-4350-4d54-83b0-5d5404bc834d"
        },
        "item": {
          "id": "792a90aa-2254-488e-a747-b4921524b6a4",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8b0c93c3-7c4c-4185-98a8-de54c2fdc332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670c872a-f5ae-41db-b734-f14a9aa3a3c5",
        "cursor": {
          "ref": "67961b12-d3cc-4985-a961-6001efed65f6",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d77e2e21-1726-47f3-b5e1-ed60051960b9"
        },
        "item": {
          "id": "670c872a-f5ae-41db-b734-f14a9aa3a3c5",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "0a87cabe-fb11-400f-8a4f-89a6ca3a12fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e24a93-b70b-4f05-829c-0a499547a283",
        "cursor": {
          "ref": "956c79f0-d2c5-4971-ae86-425402b7b10c",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ed2d799f-5275-422a-93d4-5134c1cd3e5b"
        },
        "item": {
          "id": "78e24a93-b70b-4f05-829c-0a499547a283",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "5bae3852-719c-4ec0-be1e-d46f836bcdcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b372b4-843e-406a-9c31-22bc4b824cf9",
        "cursor": {
          "ref": "ab55575d-4c1c-4bd5-99dd-45e8f56d9635",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "4c48b11b-6554-42d8-98fd-4d57cf64f8bf"
        },
        "item": {
          "id": "94b372b4-843e-406a-9c31-22bc4b824cf9",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "126302ba-1632-42ec-a3e0-58251254c443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed99848-3b2c-464e-8329-cc15a7ab8501",
        "cursor": {
          "ref": "54959323-70d9-4b91-aaf1-0b08c4c5abdf",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "84310ffe-8d60-4a9f-b1e7-2986c1a4a84e"
        },
        "item": {
          "id": "bed99848-3b2c-464e-8329-cc15a7ab8501",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "fd462579-b54f-4d62-89b5-2d0751e60ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf4cde3-a77a-4f17-a6c9-e295986c7aec",
        "cursor": {
          "ref": "f9e6d3a1-727d-4b20-8102-0fd53ccb18f2",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "9ad16093-d332-45ca-b0e9-362ddc2c27d1"
        },
        "item": {
          "id": "aaf4cde3-a77a-4f17-a6c9-e295986c7aec",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d481c068-e73f-4621-942b-e9a121382a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d1da887-cd5b-4134-9682-f1e6f3382646",
        "cursor": {
          "ref": "7da541d3-9246-434c-942e-cd019cd12595",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0c3fac3e-8436-4ce6-9e0d-39d7e43d547e"
        },
        "item": {
          "id": "9d1da887-cd5b-4134-9682-f1e6f3382646",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "89e82dfd-26ce-4e30-b2a3-499848497b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f934338-768f-4624-9bad-a27be4777810",
        "cursor": {
          "ref": "f82d238a-f86c-4808-a8a2-a2af1503185d",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "eebf0af7-e861-49e5-bc99-7e984e406b7e"
        },
        "item": {
          "id": "1f934338-768f-4624-9bad-a27be4777810",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "723fc006-1f8c-48a0-8c89-a441c3a14e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992cb08a-a4c4-468c-a7a6-87f8162b297b",
        "cursor": {
          "ref": "2a34c4c3-ae0e-4730-b8e9-b77c995c8178",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b04aec62-be4a-457b-9240-eb34bfb33195"
        },
        "item": {
          "id": "992cb08a-a4c4-468c-a7a6-87f8162b297b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "aaaebeb8-fe8c-4492-92e3-fb32456f8551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0d25d9-5cfa-4373-a2fd-d55c1fd5883a",
        "cursor": {
          "ref": "f9650a64-793a-448c-b5eb-ccb2b31460c3",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "3d07a9b9-e20f-43ec-912c-f4bb9b55cfea"
        },
        "item": {
          "id": "6e0d25d9-5cfa-4373-a2fd-d55c1fd5883a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "bcdb3cf1-8c79-48be-980c-067328a1872d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b04a8e-e6fa-44a2-8e07-99c780f5fbab",
        "cursor": {
          "ref": "8cdf7b2d-74f5-4869-aca5-8993282ecdc2",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b2a0b7c5-d4ea-4bd6-8b81-2882c14c3d91"
        },
        "item": {
          "id": "78b04a8e-e6fa-44a2-8e07-99c780f5fbab",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "0fb7dd5a-f078-4fa7-abf6-06812f5187d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329103cf-b8af-4452-81af-054682fe5b44",
        "cursor": {
          "ref": "f51b73f3-3e1a-4aec-92f9-b99efd51828c",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "15448fe6-a7b3-4c75-bfe1-2a3d508d1360"
        },
        "item": {
          "id": "329103cf-b8af-4452-81af-054682fe5b44",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "0c63de40-f751-4dc7-8caf-8fa69844a751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca755d6f-8a85-4df4-bc56-b85af9c8a498",
        "cursor": {
          "ref": "eafbc68a-4a4e-42da-8eeb-3374b20aeaa3",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "594d6675-b8a8-44d3-9401-b0dff289dcdb"
        },
        "item": {
          "id": "ca755d6f-8a85-4df4-bc56-b85af9c8a498",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3dc16d06-c151-4cc3-9d62-62300bc27db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58a93ec0-938f-4039-bb85-505b31dc1daf",
        "cursor": {
          "ref": "a8bfa899-c819-4c93-968a-72a2948bf712",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0f4b003b-be3e-4cd4-89c4-8004339d3d5f"
        },
        "item": {
          "id": "58a93ec0-938f-4039-bb85-505b31dc1daf",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e6bf92c0-7668-4841-84ae-af5ea175bb2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c1ec73a-ad42-4f92-a3ee-6a9e05806a6d",
        "cursor": {
          "ref": "5557b579-49c4-4783-9f43-a8efa82284a1",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "aef7a7fe-ab32-4284-aae5-102b54cc1b9b"
        },
        "item": {
          "id": "1c1ec73a-ad42-4f92-a3ee-6a9e05806a6d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a9d90e05-c29d-4e59-8f6a-be86033ea423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a480e6e-6d75-46ee-83b5-3dc7143f1a01",
        "cursor": {
          "ref": "f866fdcd-9c2f-442c-b2ad-a3aee970a5d7",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a593e47a-96a3-45ad-8a38-0577b5e464c0"
        },
        "item": {
          "id": "7a480e6e-6d75-46ee-83b5-3dc7143f1a01",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f533488c-610d-4ed9-b8b0-d6a01c8499c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6fc3985-f2fd-4ead-aa06-ffb9a0f82c0b",
        "cursor": {
          "ref": "503d2395-bacc-4da8-972a-30ee5070f6d8",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ce69c5a2-60a9-47ce-85b3-25cd1b033eb6"
        },
        "item": {
          "id": "b6fc3985-f2fd-4ead-aa06-ffb9a0f82c0b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "da2fa5a9-273e-4c91-b87e-a1e18c77392a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "680c8aac-d778-4273-90f5-a8268c009074",
        "cursor": {
          "ref": "f3676a83-e32e-4c0c-b1b0-a9e89d59472b",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5bf55220-af07-4a5e-b7d4-1ed429c00568"
        },
        "item": {
          "id": "680c8aac-d778-4273-90f5-a8268c009074",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "950ba88d-33c7-416f-a88a-527a5f852cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f05b7e9-cab8-4201-9d11-c534379419c6",
        "cursor": {
          "ref": "7b9e7970-16de-4580-80db-cd2647f9f0fd",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a3521180-acdc-4efd-9582-302d565cf032"
        },
        "item": {
          "id": "9f05b7e9-cab8-4201-9d11-c534379419c6",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ad07445b-1006-4fbe-955a-db5b1aaf8ec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "620eedb8-fc98-482b-9f5e-eb8f79810c6e",
        "cursor": {
          "ref": "43f92cdf-4d4b-43d5-8c2d-7c72f9540c02",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ef4cbfba-c98e-4197-973c-10fb0f0e81a5"
        },
        "item": {
          "id": "620eedb8-fc98-482b-9f5e-eb8f79810c6e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "28a19e8f-df34-4332-a2d5-ab2138004f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423f7d50-15dc-4dec-8a2d-b698f52237d5",
        "cursor": {
          "ref": "eb647165-6e88-468a-ac9d-a3d74829669d",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d15a22be-2c01-4a19-92a6-e866a34dddb5"
        },
        "item": {
          "id": "423f7d50-15dc-4dec-8a2d-b698f52237d5",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "0436e5cb-e52c-4a5a-b5c6-9243614015de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f6a0e5-c280-4ed7-9c0a-f31bffecccfc",
        "cursor": {
          "ref": "77fa9aaa-eed4-4e18-ae30-9febe13f875e",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e99ffb7f-703d-4691-8409-caaa90a0852b"
        },
        "item": {
          "id": "a7f6a0e5-c280-4ed7-9c0a-f31bffecccfc",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "041ba593-8c5c-42e1-a2dd-20b003a88945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b02287-7a45-45ea-9eaa-7009a43ccb2e",
        "cursor": {
          "ref": "d8ebf590-8d22-4250-ad8f-d4a7455f138b",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "5311b725-2cd4-4ba7-ad52-64d9229b1b4c"
        },
        "item": {
          "id": "e0b02287-7a45-45ea-9eaa-7009a43ccb2e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "aa73ae9c-fe9f-49bb-8c47-f5721df75d64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b74ce3b-342e-4528-ad73-8004c16ecaf8",
        "cursor": {
          "ref": "e07674f4-b72a-47b7-a68d-097e41405ffe",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "4f708a6d-bdfe-4c31-95ed-7b36dbbd21db"
        },
        "item": {
          "id": "2b74ce3b-342e-4528-ad73-8004c16ecaf8",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "97246957-dcf6-467b-aa35-c7c869a7df9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "512d991d-f5dc-4371-9899-35cf5dd8f734",
        "cursor": {
          "ref": "0c63184f-12f0-4853-b4bf-3bbd01b37922",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "13ec7892-3509-4073-917e-0190707dad5c"
        },
        "item": {
          "id": "512d991d-f5dc-4371-9899-35cf5dd8f734",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e58b6045-5573-47f7-a1de-139f24cda6bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "066fea84-c3fc-4f2c-a9d6-4dab8da68c4e",
        "cursor": {
          "ref": "10a4aa91-dc98-4e0b-a646-47757ff176cc",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "5614c53d-949d-4003-8462-26db62eec73e"
        },
        "item": {
          "id": "066fea84-c3fc-4f2c-a9d6-4dab8da68c4e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "051b2ab4-d936-4e08-8ddf-e889bf025482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa474f7-9fe9-41fb-a0b3-cf0abc509abf",
        "cursor": {
          "ref": "37dd8dc6-f4bf-43ca-b2d4-2cc9d4adab0e",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "7b21fd96-f41f-4993-9d9a-79c5d6432acb"
        },
        "item": {
          "id": "0aa474f7-9fe9-41fb-a0b3-cf0abc509abf",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "29219d0b-9d76-4791-be60-86906e929637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d65ceb8a-6758-4df5-8346-3a8d6a35d5b5",
        "cursor": {
          "ref": "ead94a66-eece-4c8f-b199-decd2a0d00a1",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b7be9bb2-5dc4-4d24-8de4-1522ce63bd80"
        },
        "item": {
          "id": "d65ceb8a-6758-4df5-8346-3a8d6a35d5b5",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b941ca4f-2298-431f-a513-239b524c7948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c8f0e99-265c-4157-a3bc-dbcf46cb4bc3",
        "cursor": {
          "ref": "329a0808-c1d1-406d-9394-c3ad6ff50ac3",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "55d79c8c-f5ff-4d6b-8194-52b6eb7e7fa8"
        },
        "item": {
          "id": "3c8f0e99-265c-4157-a3bc-dbcf46cb4bc3",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d5567efb-9ee6-45ab-9075-e407a1a846cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d1e1f7-bc82-443e-a7e5-5ad83da80f4b",
        "cursor": {
          "ref": "2edb3dd6-137a-44e5-ac0a-6a14982eb679",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "0a760928-21e0-4f15-8b2e-79247699d958"
        },
        "item": {
          "id": "35d1e1f7-bc82-443e-a7e5-5ad83da80f4b",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "45fb6f2c-46b0-4253-b912-6b0ff670696a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad6aecee-e323-493b-a619-b64d1d449cd2",
        "cursor": {
          "ref": "a3c56c4c-2e26-420a-ac19-2808d3aeb882",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ddcbd40e-e4a0-4cd0-a755-032e26418e2e"
        },
        "item": {
          "id": "ad6aecee-e323-493b-a619-b64d1d449cd2",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "a141a634-94f0-4828-840a-8d2e7e6f6d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0926f5ae-ddda-493c-8d83-a2e495e63988",
        "cursor": {
          "ref": "35ef2f40-11bd-413d-9e1a-a786cf10629a",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "13289d5e-510e-49c7-adfc-2b6cf8f758f1"
        },
        "item": {
          "id": "0926f5ae-ddda-493c-8d83-a2e495e63988",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "9b424d2f-700a-42a9-af44-c0645e51761b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f709420c-ca5f-4ab3-976a-79309f21ec77",
        "cursor": {
          "ref": "7aa63cba-3e45-4237-9010-9587cbd3f293",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2df1a565-9fab-4ec3-b16c-bfecf545f47f"
        },
        "item": {
          "id": "f709420c-ca5f-4ab3-976a-79309f21ec77",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "4d67577c-2c9b-4a1f-b64c-303a3dfa116d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7087f4f-685c-46f3-9d5e-18ed696ae384",
        "cursor": {
          "ref": "42c70c51-7028-4fa3-b442-0f6a4d937b67",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2dad222f-f771-40d9-bb28-a130349b1acb"
        },
        "item": {
          "id": "d7087f4f-685c-46f3-9d5e-18ed696ae384",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b2e7ff9a-6f1d-4743-94b9-0463351eb7d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edda6872-9070-4c3b-8e01-df0386a0920b",
        "cursor": {
          "ref": "8aae42d1-eda8-4512-9892-87f103b1fb51",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d5167fa8-3a3e-4504-9634-e8c3278efd1f"
        },
        "item": {
          "id": "edda6872-9070-4c3b-8e01-df0386a0920b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "0df6b68a-b4c5-47fa-bbf9-43a9b408dd24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a00e25b-0479-4c50-ac4a-6c074e42e6cb",
        "cursor": {
          "ref": "6d9c18b6-22ac-48e1-b373-cd2fdd64beb9",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ee9b09f3-9a57-42a4-80de-6bcfa01be392"
        },
        "item": {
          "id": "0a00e25b-0479-4c50-ac4a-6c074e42e6cb",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "81ba9801-16ff-4eca-b80b-877ae304009d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8313e1cc-caf9-41cc-ae60-709840f1d8ea",
        "cursor": {
          "ref": "5d17a3e1-95ee-40c1-91c8-3d4c0d33dbc6",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "5fb0c703-76f1-4e4a-ac5f-aa752bd22a89"
        },
        "item": {
          "id": "8313e1cc-caf9-41cc-ae60-709840f1d8ea",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "40bbec88-1133-47fd-8cbf-42661a08a118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96cf5eb2-3c79-4475-9181-0637863770c1",
        "cursor": {
          "ref": "539c38ae-f06d-42dc-8200-b70c316fb93c",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e12fdd52-6ddd-4b64-873b-c4eb4ac962d7"
        },
        "item": {
          "id": "96cf5eb2-3c79-4475-9181-0637863770c1",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a548870b-3211-45fc-9fa2-e1ec318970ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a2778c-c1ea-4c96-b5ac-e23ccb0e1add",
        "cursor": {
          "ref": "6250867b-e015-457f-ac11-953e30b7a4a4",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "dfe4745e-7565-442d-af9a-5d43ebb43ded"
        },
        "item": {
          "id": "41a2778c-c1ea-4c96-b5ac-e23ccb0e1add",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "997ffbcc-756d-42c7-941e-12ba2279dd8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dda92b8c-a5ba-47bc-9ddd-e5037e260277",
        "cursor": {
          "ref": "93678ee4-2c02-4e3c-908f-2bcb965f0a1c",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "4718d895-11a3-421a-968d-10767e64d51c"
        },
        "item": {
          "id": "dda92b8c-a5ba-47bc-9ddd-e5037e260277",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ac503c69-a128-4d23-80da-7cd91b84d769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05eb435b-e8d3-4776-9ddd-c0d76ede5b7e",
        "cursor": {
          "ref": "fcd85335-43ec-41c4-9b7d-c3ad10693079",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "edbb33ba-6761-4030-987c-c398052fab9d"
        },
        "item": {
          "id": "05eb435b-e8d3-4776-9ddd-c0d76ede5b7e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3cc61062-6aef-4a45-b301-f1694018372b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a757c1e-3b3f-40d2-9732-babc0b5ea606",
        "cursor": {
          "ref": "dbe39e31-bc2a-4d2e-80cb-cf53c917e2c0",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "fd383655-39bd-45a2-a6fe-61bddf7b8248"
        },
        "item": {
          "id": "7a757c1e-3b3f-40d2-9732-babc0b5ea606",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e3a5267d-2aba-4df4-9da9-5d5ef661aa1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f74919e6-6c13-4095-87e0-f18cf1a3053c",
        "cursor": {
          "ref": "33bbb163-0d61-42a0-941f-06bb74b9b6f4",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1456f27e-8055-4e36-b200-9f4c0fd0fd7a"
        },
        "item": {
          "id": "f74919e6-6c13-4095-87e0-f18cf1a3053c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b8d996e7-bd12-49af-ac7d-48b015168aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8a3280-d805-46ec-abcc-a0d4685299d0",
        "cursor": {
          "ref": "e7a072a5-bddb-4012-84ef-a6739b038eb0",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c5ebbecc-08e1-4af4-9df8-26dce5dd4fa7"
        },
        "item": {
          "id": "0f8a3280-d805-46ec-abcc-a0d4685299d0",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "43042c97-6e77-47e7-852a-4bfe27caf689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd94807-edde-4c2d-9846-a24b2e46a360",
        "cursor": {
          "ref": "37b4d902-4614-4059-9cd1-899adc69a2ca",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f4f56f56-ceb7-472b-ad34-019d890478c5"
        },
        "item": {
          "id": "dcd94807-edde-4c2d-9846-a24b2e46a360",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b99c1447-b1ff-4d56-be5a-655350f270c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d03a3557-b68d-4cfc-beac-f008f46328c6",
        "cursor": {
          "ref": "acf56f6c-b7b2-4074-aa98-231259d5f428",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "907ef343-5644-4e2d-83f9-e61e8bcab44b"
        },
        "item": {
          "id": "d03a3557-b68d-4cfc-beac-f008f46328c6",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "7f866dd8-f83b-4b5c-b206-22fd757d5f72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d644de1-4fa5-4f7d-a9b0-71355c21bef7",
        "cursor": {
          "ref": "97183c78-232e-41b8-971d-8cf3e267cb4c",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4e76e03d-cc26-492a-84aa-cb487cd7656b"
        },
        "item": {
          "id": "2d644de1-4fa5-4f7d-a9b0-71355c21bef7",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "867a0526-b1ad-4dfc-ba16-2031d12a546d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "936cc57a-04bf-4d30-be6e-d81dcbabbc00",
        "cursor": {
          "ref": "9398103e-787c-4cb4-8f9c-9418d2a16732",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d1d2eb9e-ef2e-4bf3-8a09-11bdd5b9bfd0"
        },
        "item": {
          "id": "936cc57a-04bf-4d30-be6e-d81dcbabbc00",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "5e60696a-0e7f-4d26-8eaf-2ea981905ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3722d8fb-c1ef-42ea-a5b9-0f86d7a1e81e",
        "cursor": {
          "ref": "6463b56f-d055-448a-837d-c916d41fecc5",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "142ae0f8-2d8b-4b58-b96f-b1fef4503702"
        },
        "item": {
          "id": "3722d8fb-c1ef-42ea-a5b9-0f86d7a1e81e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7b22e82b-91d4-44f3-9dde-aceb0857bc16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "112bb51e-e516-47d0-bc5e-838d844f4fd9",
        "cursor": {
          "ref": "1564489b-c837-4b0a-be3e-7a57d5869860",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a53c6549-7f94-4861-bc3d-8bdf1eb739e3"
        },
        "item": {
          "id": "112bb51e-e516-47d0-bc5e-838d844f4fd9",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "bceadf1e-ef0a-4226-992e-847d44292f21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "201a8068-87f9-46e4-aa50-7f46789cea3e",
        "cursor": {
          "ref": "deda363f-abd8-4955-a188-818f6b12c033",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "77857a17-bf68-4481-a685-224fa08ca390"
        },
        "item": {
          "id": "201a8068-87f9-46e4-aa50-7f46789cea3e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "aba68ec7-759c-437b-bb90-9266aad827d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd46b8a-09f1-40cd-ab1b-6dfaab61f2e6",
        "cursor": {
          "ref": "97a5205a-e5f5-420e-b872-1146cf660229",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "af409520-d24f-47e1-8a52-4db9ccab21a9"
        },
        "item": {
          "id": "9cd46b8a-09f1-40cd-ab1b-6dfaab61f2e6",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "8011fa45-8922-4d3b-a4b7-f73db1c1dea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "104b9511-143e-4b56-b90b-d4a74a714bf7",
        "cursor": {
          "ref": "f74a193a-f427-4b91-8b14-df35ce7d9c48",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "7921fbcf-5e61-4870-be48-6615f0397eba"
        },
        "item": {
          "id": "104b9511-143e-4b56-b90b-d4a74a714bf7",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "2f754865-60c2-47c4-b831-6071cf385747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35b71f5-126d-4221-b210-473d3e4fd7a7",
        "cursor": {
          "ref": "d4765128-6849-4fc8-b2b2-eff48f7fb327",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "e42d3983-82bb-4370-af94-990ee73c65a2"
        },
        "item": {
          "id": "f35b71f5-126d-4221-b210-473d3e4fd7a7",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "22bfacb4-63c8-4f55-a06f-6a3f03ad9253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0676084b-f683-42de-82d9-3780cd274a13",
        "cursor": {
          "ref": "67103c37-14b4-45a9-ba8a-c3491652328e",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "42207a3b-5c4f-4518-8057-83ef7a5a8667"
        },
        "item": {
          "id": "0676084b-f683-42de-82d9-3780cd274a13",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a1e7b709-c856-4131-a032-00ed8b9fb2cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8cd9e8-0a19-411a-b2fa-4033fe9f9c49",
        "cursor": {
          "ref": "ee957ec5-c51a-456c-841c-149eda694f72",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "f1412728-ef01-44bf-a320-3d6c8f964d28"
        },
        "item": {
          "id": "6b8cd9e8-0a19-411a-b2fa-4033fe9f9c49",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6e3a5222-6d08-46f9-8692-399f504fceb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "595b4fec-9b94-406e-9c4f-2d7e0851b8a5",
        "cursor": {
          "ref": "da323c91-1948-4671-8c1d-92257462def2",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "ea5d5ea3-0a08-411c-8d16-8d2ef9335450"
        },
        "item": {
          "id": "595b4fec-9b94-406e-9c4f-2d7e0851b8a5",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f2943a04-a980-4477-9a3a-f172d14884df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ebf2e6-1fdb-4386-8277-17cf895b6bdd",
        "cursor": {
          "ref": "1400cae8-0015-4775-bf29-75693583979d",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "0af17f2b-18fc-40bd-9d80-cf59bc980686"
        },
        "item": {
          "id": "08ebf2e6-1fdb-4386-8277-17cf895b6bdd",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "31cc50e8-fde4-4b4e-a8a4-34b28387eece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fb5711e-6507-4b6b-9692-5475d383b224",
        "cursor": {
          "ref": "c3068e46-e1db-456e-a583-5f5c6ce34e2d",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "474fa811-9a6e-4345-aec5-dd34b34ffb7a"
        },
        "item": {
          "id": "2fb5711e-6507-4b6b-9692-5475d383b224",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "06e3b25b-a5a6-49d5-9cca-962d3ca3422d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7bb4b45-adc7-45c8-a374-e9ba1d47f246",
        "cursor": {
          "ref": "3a5ffe79-31f1-4ee4-8c0e-a998ef5bf33b",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "0cd5b737-f8aa-40e6-b2da-da6d0c36a424"
        },
        "item": {
          "id": "a7bb4b45-adc7-45c8-a374-e9ba1d47f246",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "be615ed0-5ec7-4c20-919f-c3e679b17d68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "694cdd29-01a7-46ea-8b00-f79e06a2bcb3",
        "cursor": {
          "ref": "9aa80cd1-6119-404b-b642-a3c2dbb4acd2",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "92599e7e-617c-467c-bdb1-1b6c7ee5be6d"
        },
        "item": {
          "id": "694cdd29-01a7-46ea-8b00-f79e06a2bcb3",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9fb1bf6a-02ae-43ec-ab8f-4f5c68f7e9cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a37f46-f07a-433d-9a9f-17552e46e0b7",
        "cursor": {
          "ref": "12e973d7-2ea6-4ef0-9cad-b419cdb771dd",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "b37c2ff7-3d42-4a94-afca-1e21fbae4531"
        },
        "item": {
          "id": "d7a37f46-f07a-433d-9a9f-17552e46e0b7",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "aae65522-3009-4c31-b8ff-fbcb38216587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82cb4c0b-73a4-45b2-8ed6-baa9b8ca357d",
        "cursor": {
          "ref": "462ec79d-9e87-45ce-b084-d09719adfc69",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "85b5bea8-d80b-48b4-b11d-2d1fe601bde0"
        },
        "item": {
          "id": "82cb4c0b-73a4-45b2-8ed6-baa9b8ca357d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "5ef16106-88de-42fa-a39d-dc16e7eae33d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1ca4181-f147-484f-913a-2fe27df10c7e",
        "cursor": {
          "ref": "05d9a1c1-fd14-4129-a3ce-754973f42f9b",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "81c76aad-fadf-40e3-83b1-bf6e5acfa071"
        },
        "item": {
          "id": "d1ca4181-f147-484f-913a-2fe27df10c7e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "8e8309aa-674c-48d0-b12f-aa58d2faea1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c895631-7b7e-4c2b-ba45-c00497596840",
        "cursor": {
          "ref": "294667c2-a33b-4294-9bce-5db943c0da1c",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "f5598b09-109e-4452-a523-8a43d3859b28"
        },
        "item": {
          "id": "3c895631-7b7e-4c2b-ba45-c00497596840",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f4e9edba-a438-489c-aa38-bae447caab79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2ddc164-052c-48e1-8b46-d5e2450de190",
        "cursor": {
          "ref": "c70ffc09-57f8-4bf4-952e-1d85542be6a6",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "9e2c7545-2cfd-4046-a427-b2ca47d25ada"
        },
        "item": {
          "id": "a2ddc164-052c-48e1-8b46-d5e2450de190",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "20648876-8363-4335-b8e8-8c4e865f528b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ae2b1e-3933-4ebe-b7f3-26650ca80ad4",
        "cursor": {
          "ref": "6c4c5b51-6fed-44ba-927e-87ec069d8b76",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "2e8703c4-9815-4c7b-ae6e-931f9f89cf45"
        },
        "item": {
          "id": "f6ae2b1e-3933-4ebe-b7f3-26650ca80ad4",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "6debf440-cba3-4ea5-bc61-331d19e7d2cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f4a917e-684b-4a08-b3dd-e520705e9953",
        "cursor": {
          "ref": "582726cc-8ead-48de-b9ef-e864e0e822f3",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "8369f8be-a9e2-4bcf-8467-77c4cf4e8110"
        },
        "item": {
          "id": "8f4a917e-684b-4a08-b3dd-e520705e9953",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ca788550-4170-429a-830a-ada962a261d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32c4a693-4cf3-45b7-9199-dd7ff926be57",
        "cursor": {
          "ref": "38e65c2c-d5e9-4fc4-8135-028adc5da9be",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "9f51fb86-fd4b-4245-9508-875bcec19a24"
        },
        "item": {
          "id": "32c4a693-4cf3-45b7-9199-dd7ff926be57",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "656b8ee3-2a4a-4f45-8073-eed62562039f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00736857-7f69-4d8a-8da8-6bdd89d60d8e",
        "cursor": {
          "ref": "87160891-7979-4409-9bec-4583b61701ab",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "d1522d27-2b3c-4564-9a81-25a8c42e321c"
        },
        "item": {
          "id": "00736857-7f69-4d8a-8da8-6bdd89d60d8e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "5d6094f0-c2a1-40e2-95ec-3ca140c7b842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23cf220e-444f-46ba-943e-67f11778b6c0",
        "cursor": {
          "ref": "fca7c0e6-887e-48bb-960c-1613392da1a8",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "77c57731-3bc4-4f0b-910a-9f9ac8c5b155"
        },
        "item": {
          "id": "23cf220e-444f-46ba-943e-67f11778b6c0",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "525ba46e-8002-485c-88f6-a92bb64a2b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27356b5b-763d-438c-a088-2678e6089a94",
        "cursor": {
          "ref": "df57f7ce-79cb-4a80-9eee-208ce456ba87",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "0409492b-87a3-45c7-bb56-a1de82e22125"
        },
        "item": {
          "id": "27356b5b-763d-438c-a088-2678e6089a94",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "165a1b49-ed3f-43b4-98c6-51d3db308061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "774b0213-6786-430d-a6a4-f0735579d79a",
        "cursor": {
          "ref": "4609fbc2-2969-4279-b8cb-ebcd71b84602",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "a8b5faf6-6a7e-4cba-ab16-f7db737539d9"
        },
        "item": {
          "id": "774b0213-6786-430d-a6a4-f0735579d79a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "4a391087-7ab3-40b3-8e61-8d9a425ca8f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bfce6f4-9d30-45fa-8e6e-16631fc75ea0",
        "cursor": {
          "ref": "cdeafa69-f2da-4d3b-ae23-63d4827f2bb7",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "3c6dc5ae-ba47-4842-a598-b192a397f538"
        },
        "item": {
          "id": "0bfce6f4-9d30-45fa-8e6e-16631fc75ea0",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "87fa6099-6348-4c06-8deb-91a552178261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc18fd84-8e49-4a6e-9dad-b4fc7e740175",
        "cursor": {
          "ref": "5e8af99b-c674-4072-b941-e13a6fd203bf",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "289d22a1-3b68-4d71-9fcd-fa1905cdcf98"
        },
        "item": {
          "id": "bc18fd84-8e49-4a6e-9dad-b4fc7e740175",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "3aeecd0f-0726-4eff-95b3-79edf7bf172e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "348af72a-81d8-4bd6-aa1d-b8257986f157",
        "cursor": {
          "ref": "94c86329-af78-4f6b-8d53-2003182a8ba5",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "37b75266-e1a3-4d2d-a367-cadfd9aa0eba"
        },
        "item": {
          "id": "348af72a-81d8-4bd6-aa1d-b8257986f157",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "3747e6ac-d20f-4104-9b7b-8253f90cd234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b45bca0-7ad5-4109-8e4b-dc9d53a6b3bc",
        "cursor": {
          "ref": "6079d9eb-5839-4da1-98ab-37856d4023c9",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "6324ff3d-cf3f-425c-bf95-8582fd93aa1d"
        },
        "item": {
          "id": "3b45bca0-7ad5-4109-8e4b-dc9d53a6b3bc",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "14d84c69-e60f-4923-9bb5-23e063dd73b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa062c8-54aa-48e3-b86c-13a4b144dec0",
        "cursor": {
          "ref": "c0cdb0df-942f-4a2b-83e5-5b7986500a0a",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "86a42918-e4ee-4f30-bf59-8624d83fee71"
        },
        "item": {
          "id": "9fa062c8-54aa-48e3-b86c-13a4b144dec0",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a067ba8e-ee1a-4769-9640-afe5b6a0541d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8fb4b8-2437-4ce2-b9dc-129c1f22b143",
        "cursor": {
          "ref": "64eb9203-0c6e-4e13-a10f-2de037471404",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "83e5b973-7fc0-4c74-91f6-dce605e4fa42"
        },
        "item": {
          "id": "0f8fb4b8-2437-4ce2-b9dc-129c1f22b143",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "365f41e0-3788-4f4a-8572-e526ceb4aeaf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ecec5a-c7c7-4020-92be-a331bffe4d8a",
        "cursor": {
          "ref": "43fb428f-8ea3-4399-b969-5d379b502601",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "fdc5489a-b1c0-489e-bc81-3a6630da55c3"
        },
        "item": {
          "id": "13ecec5a-c7c7-4020-92be-a331bffe4d8a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "e99b8156-4db0-4773-b231-68c2fbebf850",
          "status": "OK",
          "code": 200,
          "responseTime": 30,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "70cba3cd-77a5-46c7-bb84-1ea3b8913360",
        "cursor": {
          "ref": "17689a21-09c8-4272-b135-ab70368ab36e",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "37b62748-22cd-43c9-9ae2-8a5901260a67"
        },
        "item": {
          "id": "70cba3cd-77a5-46c7-bb84-1ea3b8913360",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f01279ab-b8cc-42b6-8414-766cd96a6bd6",
          "status": "OK",
          "code": 200,
          "responseTime": 2502,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fedec34-de62-4433-a5dc-37c3dcffa098",
        "cursor": {
          "ref": "65d48ea6-93a4-4339-b82b-b9e60fb0ed38",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "6802b0d2-2425-4f68-b04b-631ef454a09b"
        },
        "item": {
          "id": "9fedec34-de62-4433-a5dc-37c3dcffa098",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "cf1f9ea9-b6dc-4a2c-83a2-4225b1a4fd78",
          "status": "OK",
          "code": 200,
          "responseTime": 2459,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1276c592-673c-4ef7-b1ae-a2122ddcc434",
        "cursor": {
          "ref": "e27bd357-7ba7-4add-beb3-3bc41854213b",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b24b124c-4322-478b-8ad3-69b62ce879a9"
        },
        "item": {
          "id": "1276c592-673c-4ef7-b1ae-a2122ddcc434",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a92cb8d0-ac65-43f5-bdd0-9dabe44b3bcb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1276c592-673c-4ef7-b1ae-a2122ddcc434",
        "cursor": {
          "ref": "e27bd357-7ba7-4add-beb3-3bc41854213b",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b24b124c-4322-478b-8ad3-69b62ce879a9"
        },
        "item": {
          "id": "1276c592-673c-4ef7-b1ae-a2122ddcc434",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a92cb8d0-ac65-43f5-bdd0-9dabe44b3bcb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3325892d-f7a1-4f44-aa42-55cfc707cdf5",
        "cursor": {
          "ref": "5f137787-5328-432a-b5ca-6c3703b62117",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "7f7c68b2-ccf2-49f9-9215-ff894063265d"
        },
        "item": {
          "id": "3325892d-f7a1-4f44-aa42-55cfc707cdf5",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "aa61487a-fbcc-4aae-94eb-f97e165f4105",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e9bafd-7f18-4769-9b80-4dc3001caa98",
        "cursor": {
          "ref": "ca1f2d59-f9c2-44c0-8a47-6679d473f13a",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "b852ab43-1c4d-45ea-98a7-7ac99c02ccfb"
        },
        "item": {
          "id": "19e9bafd-7f18-4769-9b80-4dc3001caa98",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3b1ccc32-aecd-4244-adf6-fd5d2b9cfe6c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}