{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "78539b33-009a-488b-9cec-6ebc8e4fe1b5",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8b2b693c-eeb8-46f7-a4d2-899c649474fd",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "abe83f2a-0e7c-4c76-b9cd-486e51ad2960",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b3c5dab3-0942-45eb-be72-c0d2fe73b6c3"
                }
              }
            ]
          },
          {
            "id": "2d5a36d2-fe5b-4448-ba8d-6bfa42d66766",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "86490c74-cf4a-497a-99bc-7f3ac92d501d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6558cda5-45c6-475b-8d5e-8fedcf149e31"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "7b72b738-1186-4074-93f4-54074c7b426d",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "515a6c06-9cf8-4239-933c-5ef972b256ef",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bae6a2c7-0af9-4901-8041-63376b788520",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b98a565f-0379-439b-aecd-74c7888fdd15",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c6a9158b-5015-4f78-ab23-77d07dc7de96"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3bc0ee37-0fe3-48c9-9e8f-452d9d64b77e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9e31f2ae-8620-40bf-8b92-f674bb4b8e2e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "61e6c4db-2491-4b5e-b5a5-90407a6f9538",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e09a8286-4ea0-46e4-a792-84151de5e638"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "25a52c69-911a-4b33-bb03-405fd1ebfdea",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "886adb4e-76f7-48a3-a8f4-a5944350000f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "96aba05d-03a7-4dc1-91e8-271de42d93c8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a32c2c97-c805-47c7-84cf-5d6101dda204"
            }
          }
        ]
      },
      {
        "id": "9af3cd0a-33eb-41e3-9c3a-a6dc75fb9980",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "8662d2cf-aa83-4a07-832f-6e30902e7639",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a35f3745-a060-4163-872d-b5d3c1b5b811",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "32e7cc1e-9e4b-4f4c-bacd-263a3c308139",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba555039-6b39-4701-9e19-b9077caecd92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "26100d49-000c-4c1d-a1f1-50a8fd71481d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b76d14d-3ecb-47d0-b03e-401ab9852065",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "629f9b0b-4c45-41c6-84e6-b388e2beb8ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a4c17f6-19b5-4f72-b532-0fa5383ed103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91649ec7-6881-4cf7-be79-f5de4410e6f6",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f4df3d-71bf-4ab2-a583-6001a68188ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1734ffc3-93a9-4a04-9df5-34484c17602b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b3058963-56b8-4b80-aed5-31d36bec40c5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a0a725e3-74e2-4303-b26e-3286142b3d77",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e01979-c0c6-4157-affc-3e4e94c9cff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e7d1c2b5-1a89-4408-bbb9-1b856f18d363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70f68a96-25de-4f31-abd4-efcee2328a7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb3fe374-ee50-4f37-a252-b354d7ba1e3c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c08283da-3d2b-44fa-8e76-06f57fa2ba53",
            "name": "Positive Testing",
            "item": [
              {
                "id": "21d4c5e2-da8a-4018-9234-68af39acd585",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1477b64-7e04-4509-9d64-92ca558b684f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ed09e560-9595-4a88-beaa-712c50b24148"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c7b26551-d8aa-4a8c-bf37-2219695edb03",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "6f1cd411-919a-4cbd-9f88-9f85559b3524"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4699dcdd-a9fa-4e23-a202-f1591a4ba674",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "af77b577-75df-4268-8b70-f3aebce9edc9"
            }
          }
        ]
      },
      {
        "id": "ace92dd2-778e-4a8b-aa4c-799f3cd08d23",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f8d84f04-bd9f-4700-b70a-78bf51c9f2be",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bde34ba5-beac-4db6-996e-adc6c31510ad",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "437dd558-07bf-4ccb-aacc-8a19cbd790d4",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c47ec1ed-f5ff-448f-a53d-6fbdc68d28c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dabe318e-6f44-4f98-81bf-69e775306833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3073fc90-3c48-491c-9374-157b55e6a5d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "264de81d-53db-43f6-96a3-b9f915d9be24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e362e29-2a8a-40fb-adaa-a77254be32a1",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4846048-cd73-4633-af86-58d715856902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab8229d9-d5f1-4d5b-8231-2ee194760fad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2e7fae7-72a4-43b6-831b-6006a9c2ac2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "08fdd874-30cc-4b07-85eb-0e98ff39c26c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c080c8-8666-4899-9881-8592b125ed9d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d3f892-e528-421a-9ea4-f0be91f90987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d63ddce-3872-4490-8ab6-251c8001e680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba57ce7c-aaed-48e5-8631-7e3bd017c3c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3ff2565-f1fd-4bf7-97ce-585ac5aac282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6deb9ff3-c5c0-4997-907c-255a36533830",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b551eca3-6d28-40df-9a23-8eba9ac57d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81fb74a8-3828-471c-bc70-de58e2d67169"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ed2237-d5fd-4e69-8ced-518f6e9fb0eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4da8c826-1586-4d43-9fbe-9aedbea6870b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c14046-c896-4ac7-bfc6-4bbe7ee318bd",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "315d1ea0-1ba5-4b69-b147-4e344fde8b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db60a5dc-16fc-4b7a-bc36-9828786dec77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b64941bf-fdca-4f36-b153-d7b80f77a286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92286dfd-9765-4ae6-9799-ab0f92e94540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36245dec-f109-4f4d-8f8e-ee4dfea53e11",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4acfd533-2017-48c9-afb9-057ba10f390c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a5fcf10-9dd1-4015-a3aa-bc84d0ba33f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dabf871c-1228-4607-8fe9-3d71e584ee1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ebdf20d4-cc4b-4d89-9e12-cbfa8dad144a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10cab76d-6bc9-4826-9863-7259048c4985",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a7c7898-d477-416f-82d4-43d7ec244db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "033894c5-b393-456e-8eb5-146993638c94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "758383fb-04f0-494c-9c48-030ef8bfb39c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45c4a0e5-bfca-451b-a8b6-678cbd6ac629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c972b858-42f3-4bd6-98c3-6b40afa84882",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a74e835-e78c-4fca-ad22-3b18843dfb71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e536a6c7-0a8b-4a22-8fee-cd5e2f61c18b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39e9eed5-f0b4-4543-8c44-009c6c681c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b6e5cfc-f766-42ad-8d0f-aa6ddcb97978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "664da859-93e1-4b26-b51f-ed02822f3f02",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "303e08dc-1559-4eec-b915-b809b6a200c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fbf9b9f-7612-4ee9-9ff2-97f40e93d093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b21ccd7-b7be-4d86-9291-80257e6c9b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1ba905a-5975-4fda-a5b5-e19b9123cc42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97d04b2-a86d-47b7-b028-61f09728a846",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73cb2729-7d3f-4d4d-abef-828942c4c80a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce557a53-6b9c-482e-bfb9-44e55a1fe060"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe121de-264c-401d-a686-78b2fd38becc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19efeb5a-3459-4d1e-84d9-7e1f5aa8d215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d30ae33-7737-44b2-bca2-a58263041ffb",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be87d086-aa83-4c52-bbe1-b6b91bf3ee1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "452ef63e-01da-4299-af05-610b72705631"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e22f24f0-372f-4f19-8911-99e8b88d0116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6279f567-8af3-42de-8fe4-84c1b35bbab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b031e0e6-2d8e-490d-b3d9-1b96c56bdbe1",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "404e8e8f-2cf2-4bff-b8a5-9b80a5f62bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e06c6305-5eaf-4c73-8b06-318278d57644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ceaf3b-0b3e-4bb4-9673-fe2197e2f134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "847deb19-d735-4b65-be33-a192b4120a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba8deba0-70c6-4f55-9c24-b75a8a0fc2e7",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a92d4c58-e7e1-4663-adb5-74396a7dc3c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb35b2e0-c011-463d-abb3-419952577c94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f841651e-841a-41ca-9cfb-ee3debe2e843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83fa0868-775c-43e9-8b07-7900677123f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b004c8-5315-43c0-8efd-a411cb0cb295",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "672379b9-f576-4aa3-82df-a4df37b3451f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61cbaa20-8b0c-4af9-ae53-8115e836dc5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2596223-56e0-411c-a790-bd3ad990ede7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb33b1a1-9df7-4d65-b3bc-dc3d848002e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a8a22c5-d339-4941-a991-e4f015bcd9ab",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead48f10-0cfd-4fa3-b5d6-f242751d2850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05734181-ad00-4736-937d-a91f6dc2b16a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e818a7-e05a-4f45-ae5e-c80615e0c9f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3cfb45e9-c034-493f-82bf-6b29454237ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdfbdec6-63d1-4cbe-8321-f2626344321f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f20007-dd0d-4a60-9f0c-ef7234806e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13d229d3-9abc-47f2-843e-dbc0926f92da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ebcc88-ac0d-461e-87bf-63ef9b843cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d5035b7-a9cf-4930-87d2-545a997da273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "214890cf-cbf5-4717-a4a1-4789f01f8489",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc58fc5-2d8a-415f-8b2b-942175e7e0f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93da9186-c2d7-4dc1-acce-a7d878d17d85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de929fba-584b-4b05-9198-05c43f308656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fcdf4ec3-41db-4ff0-a382-3deff2e8ab8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b86fb890-9ded-4ccd-92f1-efe38a976656",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea7dc3a-c246-4b91-887b-7d108eee2c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56b8a17d-9489-4c97-8241-4dccf2c2ef65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d82b848-6a6c-4e0f-a564-308a721c84d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce8d1a41-9308-4fa7-8c88-161894c57302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "436ee370-b1a3-4245-8d60-8d9e21434a01",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bdcbda9-ecef-42e2-883d-1227b97e6041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e0845f2-7db7-420c-9299-4f8a4bd17a31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea7e524-f028-438a-9b39-cfc5c4e412ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ebb5025-fb12-4b3c-bdcb-830b0b83a555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5057a9e-60ff-4eea-89b0-2021ed70716a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbcba74a-3506-4a02-8648-14488500425e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6467b85-a952-4b60-87db-b96c964dfb69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d17d5bfc-2488-4bbd-aacf-ea4e4477ee0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "985c8381-7fb5-4e35-98bc-63f5d9c911f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa9fd06-3450-4514-bfff-45c685f27a90",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34512bb0-63a4-409c-9c77-8ae8b511c2b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51e8e91a-c0e2-4ded-b284-10eb2b3b512d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3483e3cb-6131-4d1a-bfa2-fbb3fb4a15dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "55437c0f-654b-4b9c-9efc-b5063b4f3faf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c6aff5d-6973-4668-9cda-50639f14bcb5",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c20405a-e237-4491-b942-4f9efb18f48d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5f50329-1f24-41c5-955e-f4e2cf9e0212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0901fd0-a4ea-4c58-9f03-cb3213595fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5efd935-fcc1-4b6c-bad2-85e6b1519ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4228d5c9-3ecb-40cd-aa4f-1b25c5b09a01",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdcaa4fc-0fb6-4a7b-9229-48963d590673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a22d2ee2-f262-412a-8e7c-a08339e0ee07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75505d24-d406-458f-8c2e-1940742e7609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bedfa122-37d9-4544-8b5e-82e6534c9510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c31ac2b8-453b-402f-b763-3aebe62a54b2",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "911f2406-a16f-4bcb-939a-0050c324e4c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06b623ce-3c85-4146-ae41-7c1778564e78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df3abbe-a253-4776-a12a-0b856db798d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2b49645-30d8-4767-a01a-20f1d0112fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79cf9762-6e18-4adc-9a9e-6cde99ca6f26",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c5c4a8-678f-448f-b1a1-bc875e9668c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6a0d628-fb4d-4471-a9db-324fdb0d4500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7929b67-2e97-47f8-b3be-d569fc20d5ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "79fb97cc-446d-45a8-814b-65461a24cb14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b9ab14-a7ef-485c-9404-7e2448b868ae",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e604188-6285-4542-a430-b247766782a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "802c16dc-8f76-4c82-91e0-a55e6ceb8f05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f838fe1d-9b98-4113-a524-d825d396e309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b2e1ffc-6326-4645-8514-33c694652bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e32288e-775c-42bf-a00a-bc3a765d5223",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa2d639-2a19-4ee4-a506-f87205a5eae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e573e8c-6520-4afc-a6d0-4bac7d5a2fde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f8e2514-1ec4-417e-b993-390319edb555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd27bc47-b0aa-437e-ab3b-e411d6778dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeaa9008-8863-46c5-85dd-bb722628387d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "665249d2-8ee5-4cd6-b62e-f0c3f4d45cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b963299-6ffb-4470-9f24-1307f0f5e1a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb6c2759-f3d3-44bf-9878-2b6c5bb14698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b5425a3-859b-408c-9f25-536f3a1b5ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef6b1e0-7266-40a4-aec4-448d4e7dd769",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e4ceb9-0291-41ee-b914-ae045622aa5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaa1024d-9ad7-4bec-907e-e77666d2955b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31dd7513-76c9-4f13-93d7-dd017b04d7cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "357f5180-1b8b-47ed-a86d-be2b501af4f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "093468a1-9173-4367-8d66-2d6750d0a319",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fbd0331-3cb9-4a44-8d4e-969298f448cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59ac47f1-d611-4a9b-a223-63151e7c591b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d86c85f-b9c2-4bd3-9c6a-ee0eb4ae5b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0b17b85-61c4-40a7-a33a-8359350af339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e69d1e5-07a1-4036-ba67-3cd303fd24dc",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1dc4f5-f31e-4853-9ec2-c838c04a36f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec72a818-b008-4147-a158-6c02397f49b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277717e3-08ff-4994-a238-5a6f35977e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a72f2bb3-c2b9-4573-bf58-4782ced7bff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c0f486a-1e1f-4e6b-8eb3-2f719098d40b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "537831cb-01a5-49c5-95d0-09ca70f32df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ee845df-efb6-47fb-b3f9-36f915e09b22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e83110-d018-4f05-b81a-a83d665bd5f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "685dd25e-ab5f-4a3c-bcce-e4cf78938f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f9d4a8-668b-48f2-ada9-ddb157b847a5",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e001f00e-3839-488d-a407-99fa9edd4c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc56c4e0-632c-4853-a065-366c8f0ec685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ea6b65-aa0b-4620-8e09-b029c08f4983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5583225-3e15-4b88-8d46-838671dc4c5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3f5bb5a-62fd-46a3-b0f1-4adbec6d8006",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a764c22-0b8a-4f3b-ada2-c5c31b8d4498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09adf08b-4d9f-45db-bc44-46d897ab71e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24905030-1b9a-4fab-9a65-65756d0a2d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "068a837d-cf29-4367-a444-7c30b8b469e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d78b18-6974-45a0-b6a6-724c6099540e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b630234d-fd6a-4914-9aa2-ab889147e47a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e1f3e6d-d72a-4cc6-8349-b98f7732abb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a889e8-2dc9-4a6c-be42-280d984aa2a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c0cfb5bd-af6d-4506-8e65-8a4e07a94cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0aed0dc-82fc-4309-9c01-9eedef7f9e15",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d154af00-6d87-4734-b1ee-9537f51b5798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2057a985-2f8d-4c2e-9043-92e3ee323a79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf1936bf-81bd-4129-a556-f78554f6cf95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f4200dc3-3ef9-46e5-934a-897b812f7748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "558ebe35-4721-4c2f-99ac-46e3110eec8d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44369fa8-f183-4e8d-acf3-750b5b1a85b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fc7b018-f8c3-446c-969f-9dcb08f6697a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a0d7d2-2247-462e-9d53-92b68b2cfe64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f53c50a-6467-41be-a470-d4144e3c8638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c49c7e0-bd68-4b75-85ae-ffea05006426",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baeef918-2284-4f2f-8b13-332e33a74bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84a495b2-4713-4c4a-bbe9-201d558cc0b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e39cbadb-0ff1-4ea1-a04f-52d6d1e7cf13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6534e918-8b2f-43ae-9a5a-fcd9cbb7d868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca71852c-9fd7-4081-b746-4a78e56ac45c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65eefe96-3621-4395-8997-e09597abbc6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2812c5b5-e3d3-406e-96cb-620963a1cdb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c668b9-8849-46b3-b68d-17da4c5d644a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2e53430-8ff2-4528-b41f-befc7a47fc7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bcac69a-2231-4693-9de5-7512a745cea1",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8674c4e6-5f5f-4f60-b238-759851a58c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5343f5ba-2c00-4516-baff-08a181153c55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3de1e68a-b1dd-4b6c-bcd8-7708e5b32da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "de60b568-788c-4990-9ba0-b47a9f61717b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a391705-311b-4d95-b151-055d7d81c4ce",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a21e51f-d105-434f-8780-dc6d366f8933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd46b35b-6d72-4a55-8e9d-d43084dc11f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc29497-be67-4a6c-8c80-58004daef4b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "03c2362d-41ee-464c-9dd8-d7ec1a986f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f26b644-fed8-4665-be05-3f4da8b58586",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6195de55-0462-4bdc-ac8b-a3188b2ba1ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c33703d3-7a2f-42bc-9a17-009fde5e72a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ed23e06-9570-4a44-89ca-3f2a9a8cd4e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3c02edb0-c60d-446b-b4ee-d358e11df593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0b04f74-90af-4a46-9733-2d491ac1e348",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6fbdd8-79cd-4789-9f74-a76d02d84916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1636b7ce-c6e4-4cc7-bfe4-074eabea4381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f137c1ef-18cd-45e7-a8ca-a5b68ed9d6bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f74d1837-360a-4905-938d-fcbae030af79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "588ab82b-ee9e-4ee1-9cb2-1d3525ddfeb2",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3ee6a0-2c54-4035-a8c9-aa555f804128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a006bf8-5b9a-4f92-aa7e-3ad15463bb08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a47f92cb-1cad-4b08-8309-ed366749f890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a87f4d09-7dd1-4f84-a41c-189d4dd31ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41398518-fe27-4fb4-b7ef-4ea4f161beaa",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b54135e-2bcc-4784-8dfb-6f964b5face0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da04e4d5-b93c-477f-bbb1-eaed5fed9044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3dff329-0eed-4217-9834-2161bf293fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d72b8f81-38f3-40c8-aeea-90eb5e8d30d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecbd1c16-9985-45fa-8847-935c89d9ad45",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "026ad163-4843-4fd9-a9b7-72d746ef8f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aadd6699-ee14-4f77-8e52-7c130836cefc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c122cb99-7bb0-4cf8-995f-5a8d72ba1549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ef92b9f-dc33-4032-830d-4c4f2d2e90ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b6fac0-9c08-44ec-99e4-ae6935bec997",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae597e7-81e8-4a24-89c1-631f5a2bd214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b0a3275-13ef-4049-baff-222cec222d14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ec4728-49cd-4830-b645-f36f41252a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e6dc2fb-2882-453a-9e40-5d09a2f231e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68416e18-8a96-45f3-9337-68abf51c8dd1",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "accfa143-171c-40e4-9017-5645b7e9ea1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70cb5d05-d5fd-4df0-bc2c-5dce70e79973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6b96e1-0be6-4e81-8775-68bcc68f6834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "778ae6b2-b93d-465a-b6f0-ab706a0a2f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b90dbe0d-a926-4e90-8325-2802d54450da",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab2af73-cc34-4daf-bd30-aeea442a502f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3095b17a-e216-4752-97cc-191c567c8495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d90325-1a4c-4e64-915b-6a513d72438a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d04fab7-1d9a-498b-92f4-fae32ebf4a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0255c36-db6b-49a6-b40a-72478a29eded",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5b1b5e-715b-43ff-8ef3-c6400df8d4cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "642d9324-7445-4058-b29d-a4da9b3c9558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce2b93bd-c49e-45e5-bf09-6b829951c80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a91883b0-5b66-428c-9478-6996cbfb7e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6df1c47-fe19-4ba7-8a70-b29c83adda5a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac9b980-d919-49b9-80b2-ade5028991f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74f4a1ef-29c9-4863-a4d9-bea51ae11a83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ba1921-08e9-4e4f-b771-48c6d9775e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "db67dcdc-8a8d-43cd-9f44-b59f9484053d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e1e0537-1681-465c-a466-f6b0312869d8",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8ae91bc-a74a-4edd-a0a2-9019b46c9e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc9f15e7-e3b8-486e-9863-b72c933f2762"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb062eb1-6082-43e1-8954-9a2d423ad8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "72a85b8b-4eed-48af-bce5-4e6dc4c32119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2afd9b53-3e9b-4594-b76b-9fdb3e5d4b97",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "707e4632-f9e2-44a8-b157-8ce415c0b749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8106a0c8-e025-4e7a-bc37-012507ca9cea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c03991bb-db9f-47d0-bac6-a2203f0cf923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc8fada4-21ce-4137-a7f1-5689b79896b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eba1e0b9-c6a4-4ec9-83d3-3a54fe3a69a1",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf99a0e-15b2-4988-9a0f-dd2c66ffb430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff4c7186-fa39-4047-a26e-e9739bc19235"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e93db70e-40bf-43dc-b1f0-77912a36a608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2979a41b-2f83-4b95-9e97-a1ab3c7a7c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28990ce-1db9-4872-ac27-19e7415f5b94",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15135f93-80c5-4e0d-a83a-54fa61baff02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a9a5b94-fa48-4d51-8b62-bb516bd92c69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "027cd86e-fa10-4ea3-b9b6-d1781e22f112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8795e3f2-0022-4bb8-ae8e-3517db5027eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fdcd469-f498-4cea-92eb-33a62263b8a6",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa0303f-0957-4019-a85b-8952be27ecb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da38e72e-47c1-4e88-8a3a-91fbbb72a1fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0010b8cd-5734-46f9-b863-c003423fde8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "6ec51896-300e-45de-bb96-29017c3e564e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d79a360-0d5b-424b-8714-2e7db0620652",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a4f11a-9eb7-4186-9cff-0eafa9bdcba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f521b20-8187-4c44-a1eb-9739e2b6024f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2adbb7b2-e68f-425d-bc3a-cb17ae7b6883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d530a604-3e67-4342-9691-040bcc165b45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "880464c2-f620-4482-bc70-cadcdec16a63",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f2c64a-f0fb-4a54-a8c2-ea35f292688f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc8c4c15-1e11-450d-81f3-256985ecddc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6693da93-8af4-4ac7-9fc8-349a27edb372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "03f5bf5c-327a-4872-a194-40a280b01989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88ac6ab8-885b-45f4-91aa-dce20ade6e29",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f53b1d91-ec7e-4e06-ae01-aca40503f5b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27d00324-2792-407b-8ac1-bbc890f20e3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a58f8d-5a1c-4ea0-9cf5-d6410a721c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9ed0212-16fe-4cf0-96b5-0183cacab3d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "344469b8-a309-460d-98cd-e4eae9ea8e46",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c50324-a702-476d-8f2c-3a07c4d69636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47183f4c-9dc8-4f71-99f8-2dbdee2b9498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "973aaa39-8445-47a4-977a-7d21d3f467ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "598e6536-217d-4496-8407-893b92b80f0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faad4c6c-1de8-4351-8b9d-72adf84ca5ec",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d0a0cfb-1395-4896-9000-aea63e291872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e41398c-b7ee-45e0-944b-0ecfb2d9e407"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c074422-81b1-4162-8a1b-1f6de4486b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "449b0efb-19fb-48c0-8819-795233300afd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eae46b5d-5f56-49d3-81a6-fdb1a2794dab",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b5c6b7-7c38-4f68-ab0d-abe28a15b8cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8968d108-2c19-4970-803f-6f2d00725a9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cace8947-f2f4-401f-8954-7e33ec3630b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "758fae0d-2244-46d4-a2c8-70e418e38b7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da236846-9cd0-463e-9d99-2fcc78640044",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48822ac4-bab9-4157-be01-defe187ddd9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d21a253-3ae1-4290-aca0-ed60c80fe779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f4ae4a-57b1-4eeb-937d-c6662b8652f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b459a515-64d3-4017-9ea1-22d0eb27fe2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e9c0391-009a-485f-94e4-a2bad915511c",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0775a5d-1522-47f0-9d77-729d722c6445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5869b6f-b9f3-4208-9c6d-1d3dd61e8a6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f8c5966-bc99-47c5-9f3f-8998d8d9c9fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fad4cb0-89b3-46b7-9972-33c76401451c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b4c1014-34db-4f37-889c-6605bc57ebc5",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f6a8d3-55fc-4a54-82e2-2fb8227ceb3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e650450b-fd85-433f-89ca-f7c20f371ed3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d2de05c-fd63-4c94-b129-4e0930edd1ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8896fab-2210-4944-869f-90654cafcf24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd77768b-ea4b-4725-9388-80affff1a679",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f20617-531b-494d-8a6f-6f52f7670165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af257935-e42b-4524-a884-f4ed06166e17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c32a4df6-85ca-44a6-9169-0c3a4bbe2ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a35a42e5-7ace-46e0-96cc-c43b88601aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8a3fa69-e52e-4262-86fe-864ab465ce89",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06e320f-f219-45e6-a2db-bca153915da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2dfa868-58f5-40af-96cf-240ce98dc8a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e97d186-dde0-4d0d-b908-089ff0b33898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ac1e62b2-797e-4c01-8f64-a235e4fd6143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb6d40b6-4218-4cba-8212-f561cb80365b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "975a9a62-54b6-4359-bfa2-2dd7ace889c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "091ee32a-59bd-4c31-afda-92e2a1c3626d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "917d8a17-1000-4e93-8088-a8e0beff26fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e60bfdf5-54f4-43c3-97eb-fadf8ce7b7ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "670e30de-2021-446b-a2c9-db835a0df838",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b572a73-9bde-4417-a9c0-8209f4672d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2290922f-1a07-463c-8208-6a77f3518418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b75815e2-2bfa-4d71-9965-62eefb0da690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5b0f1dd-96dc-4760-926f-c9198ee66cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2dc4811-0c94-4c8c-a763-0689e519cadb",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb11021-b207-480c-9d97-fd210c9ba3ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "266eab02-6b30-4da4-ac2c-74809e30e0f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74087ddb-33ab-42af-b3c0-7afd6ff4791e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f97b8b27-6abe-41ad-8e85-b0e379ab11bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e49654dc-eb5c-4957-b880-3963dcbf42c6",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee1c233-ecfb-45c0-84fa-32a9422d8a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b01583f-3463-40ac-a188-210bfeff9f8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae8728b0-8809-43de-b4ef-c72fd06150e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f3b9e38-214e-4a6c-a52d-44ae09c05159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a845750-6765-4992-8441-12ef759967d7",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a81651d6-bd4d-4afc-a01e-f50e1e5ec6a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39371da0-339c-4881-8cdf-cc7ae88b1dd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af7344ca-944c-4041-a7d0-5f130f1891df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "be71b544-13a2-4eba-b102-13f11e98d707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ea787c1-0a40-4c74-9902-2f1d341ae70d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb3d42f-2b70-4a8a-b60a-3db01689856e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d5e327f-c8c0-409c-8234-8d6f5da5e8d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "514d1b28-9bab-4683-b908-4d0459badc38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef678fa4-689f-4520-bcc6-a860ba63a662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffab9f91-3eb0-498f-8b33-9d1a5716e63b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ead273-4704-4662-ab30-799da1c340b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "817cca1f-36cd-47ea-8607-1c240dde87ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86c9e356-d5c8-4e9d-9ebf-4b8afaa1648a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3a834a0d-ed94-4b5b-a32e-697aa050f80d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413a33f9-1a3a-4818-8fc7-bcdfcd9a4a8c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e81ff27-553d-48ac-8a9e-dc5a88bf65a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e764c61-3ddd-4092-894e-66384bb44f31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a930c1-4b15-4383-bc20-4bb429d82499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b325d6e-bd86-4964-bb40-f4f04c1c7d92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d8af36c-f2d1-4aa1-a9ca-76842c08a8b6",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca62515-e6f7-4175-9b79-9d2c78dcee7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14dd05fc-8d1d-4030-a1eb-530219a87d7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1c76555-2027-492c-9cee-bcaf5f905bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5eaafbb0-d59a-4f87-a270-d776f6b21cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1397cf54-9e75-4460-b3b4-0f6fe30cf052",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76dd22f0-c358-4009-9b73-243e3f0522cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3866222b-593d-4a68-819a-960b8bebb585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "778d1e8d-d933-472b-b425-9b46c9b60d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf44a015-335f-4622-94f4-c704be7f0171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af2a97e4-6c23-4528-bcd3-b041cfea19b4",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b783ba4b-a804-495c-a72a-6ebcee0fadb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfeae352-aeb3-4137-be82-e54be210e510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f5a984-13df-4fe5-9ef7-e76bb28f6756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cafa9dd-8693-487a-8c48-af715afc118c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a369777-4de1-402e-9067-5e7c898f4d0e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c36ef0-2fc6-4c71-a866-0ad3d9b90d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef9a6332-a28b-4c12-b85e-d6fc062ddd35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5563b2c-ad46-4514-9656-1d81dbb5f2e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "38db48f9-0b67-42b2-815a-c7e9cd918839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6dc148-93ac-4141-bdbe-98556d691488",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab703c0-a5ef-47ae-8e12-2cfd7891ff47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dec78ff-bb97-420b-af35-892a78550ed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79eeb347-83d1-4cae-801b-549f75c49a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "01fd9992-b659-405c-a052-db0d8dd73a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "543f72ce-a50f-420f-81f5-871baf50e9a0",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec458c8-7f8a-4622-82b3-eef35b033a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0efd7839-227f-44a6-8751-c88567f0f4b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba00dd0e-c45a-4e00-9acd-97404347da9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "09e6252e-8b5d-47f4-8f28-04f5ec3c2ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28209fe-4ba6-4ba1-9c03-8113f2a8d5f9",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9993097f-31f9-4c42-b7a2-5cd8d9292e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4d0ee67-6b45-471b-8e2e-82df9961abcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a428f01b-93fc-4647-a918-2c4c48934ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "829f368f-1928-4c34-8a4f-c1ef25c841d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "882f634c-5461-4b12-868a-42cb9707ddfe",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "147dcf14-574d-4161-955e-3ea999b88f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed591374-da51-4a4b-8457-7ccfa62ed3e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61431bee-c58b-466e-b838-df8b88a10eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "109eeb3e-31ab-4bad-b83f-20d0c8279ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "393e1c1c-ceac-4b98-bc75-de1575d163aa",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd6f0142-e073-4493-874e-49de5adcef9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75787089-0768-4409-86c5-d19e7a64ca2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a5147ff-a7b3-4676-8c68-81d3617fb486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb42fbea-0f0c-4a49-89c6-77e851ac7e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf52216-f05e-478c-b5ad-bb1158ecc5c8",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac0cb001-e605-448c-a471-288f932f05c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "624bb8c6-a7ef-4e1a-8aba-3661b35521ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e263f2bd-0e06-4b49-a279-8c8f1060fba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e45e6611-4b59-40c4-a434-34a494fa0d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a25c453-b92a-4c00-81c9-a97679f3530a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5a85a43-ffea-4a25-a8e1-8644c2109b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a411b626-d904-4b38-8c3e-451ad90561c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d9a437-040e-4547-b9e0-e76d8cc83b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e82397e6-9a77-4254-9e72-cae5eef0a18a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc94a5a-3e22-41eb-899b-e3ccde6bded4",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e6dc81d-e165-407e-8e34-051772b99ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de2b33bd-8cf3-43cb-9824-6a99c4186539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e678eb90-28e0-4db7-8076-2f3aa32baf04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "34942373-2207-4dc4-932d-1b01f72b0393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd7c280-c2f8-4ae1-8185-dd266bb7658d",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e3dd701-b9de-4490-87cb-95c1123d976d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0db7fe9-4b79-49ed-8533-77127733cc46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "514d249b-a043-474a-87af-c1508b789cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c550a46e-ce67-4722-9b1e-5d08bd5b45f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c4883e3-89ad-4254-a6a2-64d089360c69",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73064895-08eb-4928-9273-c3b43be08bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c7e016d-b15d-41ae-9941-1bcfceae3c00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f90701-037b-4c79-9c42-0a2d34438277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed03b1b1-5e05-49e5-94ab-df861a08cdb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f3ccdae-0642-42dc-9020-3ace33952e54",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66bcf267-beb8-489e-bd9f-5b72eb3a7767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "908c1aab-a05d-4dbd-bdc0-34ddae5988cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd17945c-2308-4028-8ae7-a4e4a9eae66f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2610802-6f9a-489e-a70e-6299c9fefc09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0dd1269-679e-45fd-bf15-93bd9bffce31",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16693bcd-02b7-4f68-93ed-46274e4f5a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a806d044-b2f7-467c-805c-0e39cabcb660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce6e9de-6183-4258-af3a-39e78d99d1e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "15c4dd61-9815-482a-a7a2-d73c174b038e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d1ad5c-bd0d-4884-8126-a60ea44dc42d",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb4fe21b-fd0b-4030-9b73-e62824d15abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d65d4a5d-bf7e-4040-a816-8c19f71907af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d3f1f33-0a16-40e6-ac90-8410eedd1de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fec43ff2-9adb-4e24-9f9a-51d648648cb7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "695d81e1-e33a-4a4d-b3af-671b7ab78ae4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5216d572-dc83-46ab-9838-fd25363ea510",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12782b15-8f55-40b3-a7f7-2f73f1334ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "68882443-7fe8-4e69-9f39-1104aa1ecbf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "099a8679-5ccc-4796-9676-811c83443ebd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1bd4ff3f-874b-4049-9fb5-4e8cc78af029"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a0026d1-6e8c-4abd-9e60-0ee6265d3229",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e622a8d-5557-49f9-94f3-29dfa733733f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a1d4a57b-7072-4ac3-90c2-c6f78f1a1abe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28e415fe-d6ee-4e5a-833d-6c591b4b67cd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3857192a-9849-4ad0-b163-f755e6564772",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5e013b04-f4c4-4423-b909-27013943b778"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "104b1da3-66ed-46cd-8db9-c642b7e19cd4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "098a3319-77dd-43f2-98fe-ffc2492e9311"
                }
              }
            ]
          },
          {
            "id": "e47a6631-8911-4125-9e72-6acbe116958d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "53c163f4-e18b-40ec-b79c-800d243a21cc",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "752efa06-d446-4db2-93c8-2fb180e1fdfc",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "223beed2-9747-4680-be76-8e24842cc659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2b8bca89-90fe-4eb6-9805-254fc34295cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "688b54a2-6cce-4778-89e6-80be24d55cb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5745951-803d-43aa-8366-ddc3d4e9f8b7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "df4d687a-07ad-41f5-9c86-b3e67c9b7d1c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1571527-d401-43f6-a6cb-bdc7ca0453fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "faf75642-c3c4-44c1-973e-dcc208fe0d0e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0746c47a-3bf9-4e12-8903-cb945e900e46",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5de7bf06-9154-42d5-abd8-dc5ba25aac2e"
                    }
                  }
                ]
              },
              {
                "id": "b1bf39e8-c0cf-4fd9-98c1-ac54d79b867a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad46565e-2e70-47df-949d-c61a49109902",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d113abc0-9e93-4b50-84e4-dde4c0a66200"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "085ddc7d-43db-407c-a8a4-0aed036859be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4458d851-aa57-4a15-9873-8417411c025f"
                    }
                  }
                ]
              },
              {
                "id": "8b97dec7-68cb-4e22-82f9-777be883f9be",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "704734bb-14c5-4e10-921d-fdd289f21dfb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a1b8e6cf-21e8-4d38-9aa9-d551881969ea"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92d1432b-ac86-45b7-8a72-dd415b23df5e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8e8679c0-17a0-44f7-b8ed-85933e93ea15"
                    }
                  }
                ]
              },
              {
                "id": "3aa8faec-7617-4a73-9384-9ff2c6725048",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "07a8a248-1253-4bb3-bdb8-1118edbab62c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d2b944c2-baf4-408e-8833-108b21c59b67"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "830bd619-adb9-4b66-8ef4-b53403f63d8a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "61eb91f3-83d6-4e4d-9676-1031ce0ec531"
                    }
                  }
                ]
              },
              {
                "id": "4722c193-38f2-432a-92f0-5b5230412f13",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "26c04814-5fcf-45c4-a6f1-5b00f4a41f87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5a28f79e-95d0-43bd-98c7-e82ad58d985c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e5d780dd-0c4f-4f6d-977f-8432b42c4b9c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "a10c57a6-0293-46a1-b619-f14b43caade7"
                    }
                  }
                ]
              },
              {
                "id": "ac97cb56-83d6-4b4f-b01e-e51e1a8368fe",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8bc1bf73-4e3b-4c34-999a-707751c249d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7cdb84cc-f005-4877-8308-c960d4549a31"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b904ad91-90cf-44a0-adb7-2005a5722ed2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dd45f025-73b2-48fc-8157-c53eb86dd5d7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d20915ea-36f9-4e02-bebd-c2b9aaff1039",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5963b566-f3b0-4be0-a9a3-ab5087755176"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c3e1218e-cd79-427b-81a6-c96fd85ec4de",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "71bb5481-ebd0-4e24-a065-517b93e210c8"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4b5860ba-f926-4c09-b73f-fcf6752e5a5c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ba8ba56d-2961-437b-bfb0-7e0e88b83762"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "72ea6b9e-507a-4fd8-b2c6-ecf2f26ee43c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2b9a9e1c-f28c-4681-a97a-6b50ca5b2dc0"
            }
          }
        ]
      },
      {
        "id": "5255cc83-7d69-4283-ac50-7fc348db6aec",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7afcf849-a142-496f-9742-9c4c77773cce",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2c5ac8bb-6cba-4103-8a02-d5595389bd3d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f3a78007-ac1d-4c01-bdc7-7907217dbd45",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f387f9-0987-443a-8641-9c9c1d338854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6e4b7ab-23fd-4430-91c5-9e26039974cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c28892e1-648b-4538-8038-604186dfb1d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "93d41ae9-4a9d-4ddc-9873-f7442db2b633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d549ebc0-f2a7-414c-813e-2bba5f4c1919",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba6568b-dd5f-44a6-928b-0f19acf2f796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dcf0905-513d-4c52-839b-238e4f7a4ff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a39fb40b-01e4-4669-8596-0d77f255f2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d062d86-89d9-451f-9573-a8ca0f605ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c22e2494-313a-4b93-84e2-ca63010f6f91",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5527a94-e734-4dbe-9ecf-253744dbc011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ac24f29-45b8-43e8-8761-870222415f83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f69c61-4677-4728-8740-9c71e2f49c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f50d55cf-3c2d-4321-a970-70adbafcafe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edce8c94-3e0d-4b65-90e1-9ff892badd7f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ecf227-89c2-4151-a529-835e95f8398f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b458d3b7-c284-47cd-9352-90564ef4616b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b4a6fb-3e98-442c-80d8-f784efd11047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "df58896c-8a1f-4bfa-884b-fe66161c39bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c14249-873c-4bb6-b10e-f6956058153d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8dc2f8f-09ba-4cbd-bd4b-049b80b2622f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ae81164-609a-4394-b4d1-3b588d9db555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b9bdf7-49a6-424e-a24b-4ca8966303c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9d4a2ee-38c4-4750-b86f-30194c2f3ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa6bfee-7e17-4c9f-961f-b93626d2d609",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b18424b1-c217-4362-bc39-2049d682150e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2c90c35-f6a0-4b45-80cf-95952e16e872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "320c7f95-9523-402d-a9c8-d421b33258ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "296a8b62-5c2a-4ecc-99e5-a432c6da9702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6569e839-13fe-4476-b43f-288cad4be28d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f94d24-4121-4b2b-99ea-26682183d315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47b45497-f2aa-4438-bebe-b6307c2609b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dec1937-ced0-4f16-9122-76fdd062b624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "04cc4861-bf98-4bda-ac5e-a0c6805c49a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f024e660-5682-437e-9201-76377e36a32d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b999287-71aa-4066-b62a-cbac63eb5896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae5eef73-2b29-4ff7-b748-6bfad7c090c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1965c88b-2788-4a34-9dec-5fca01cc396d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a868c7ed-7666-4e5d-a56d-576537350ca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe19425-c4b6-4b3a-913d-dc5ce436639a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "684c42a3-adf1-4f96-8d19-fca38997b6b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "256ad943-bf12-4e98-acce-ddb3ebb2f7c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8932cddf-8a90-408f-9846-17a72e85e048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "03ea7404-f509-4099-b9d3-6fa3fe5f4b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5191c0e-c7df-4d35-8eab-d26171bd7a85",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73c7c535-e45f-4db5-8a5a-54c8c8e98420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cc562b2-42ae-4eee-aa5e-edac5cac58f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8979c3d3-b694-4ef5-9ac4-11a919c536a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3890b45-b9b7-4cac-a56b-dcdc46e789ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81d6141f-3172-42a3-9513-e5937b125bd8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e09b5b0c-91d9-4964-8d7e-2b72a863eb4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9853a0c-a495-46d6-b83d-4798277e425d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0616902-a384-4b66-8460-614e09d6b1d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2de24a0e-474c-4452-a227-fd55edec8d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e700dd9-ac1f-456a-aae8-a2ee2be0c6e8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7fa11b4-29a2-4e4c-aaa6-1912b0b94166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "734f7cd5-4216-47e6-963c-126a10effe97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aee43b7-ef49-44e6-a43c-e07db9afd2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "decc3a03-209b-4eb6-b7e6-d17dbda3c4f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99120777-ba9a-4a60-a07f-aed78bd2a9ca",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c62dad35-28f3-4b0e-80a1-2b16f0d8743c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c980c2e-1c39-4103-9d19-346f218b4746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3596d456-48de-4779-bdb0-a0498b713ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb7a4b3b-dc23-46dc-b114-e73b5defd37f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176947fb-ac50-462d-a31e-583457746c74",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "410a93ee-feab-4b0f-b6dd-f5809ef88fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "880781f7-ac7f-4003-9b30-99af853e0dcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "268b29b4-6f14-4538-96d2-d4004deb6b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "59e2d1fb-ab36-41b4-9191-58c64e1cf9cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b6080b5-94f9-4331-aa05-16ba4555aa30",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d243a426-93d3-4ffb-ba98-1fb8f6255be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ce1c25a-93a3-4498-9f10-ec01fb78628d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f42f5806-d879-475f-bb30-d03643950c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dbc6f7f-af74-4a27-9675-3edc7242af02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c19858-a702-40d8-a24e-9b0ca094c332",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db17c353-cd11-4155-aebd-9139b52db65b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fad19769-f2f0-4f2c-af10-09ea1f563b39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adf819df-9549-4141-bf53-b5b388c76e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c899868-8121-4e36-953f-4865a10a246a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5d255ff-4f27-4ba4-8ec3-f1f4dfd2a0e2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c172c202-28b4-4435-99c8-ad2799e5fb32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92ece5a5-f3da-43e6-a05b-f8704dbfcd41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d8d841-6ce9-4d32-abb5-0679b3d10d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "450ad208-c9cf-4ef6-8f45-15e8c5ad865b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f5886b1-46a4-41d5-a354-c542730d7fde",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb3c252a-a36e-46a8-9db8-ba320b350818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "812b7158-3f56-4e09-8b18-4d5111575db7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f38aef6d-c7ae-4060-ad49-d1c51a00ed4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0de3aa1a-0a86-435f-9e00-1adca6acdc68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a8deec-6ad4-4ac3-9a09-af529e213050",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb5181c6-7b49-43c6-bbac-1dc0b1d9636d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "337c226c-2b56-4531-bb3e-b7f7a94a90cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3909ca25-a520-41ab-8666-c29b3e7543a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9782ac1e-b3bf-4e17-89f3-26b82938862b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d15dcb-3522-4454-ae6b-ed3c791b555b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ccf6f78-6abe-4522-8846-dd691e108ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6074753d-8098-4742-b375-b835789b002b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e261a02-8554-4cb9-96a8-50c203b56f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "294757dc-c59b-4203-b4c6-ecdeb9ea4930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d37931-5910-4de8-95f0-0c8df660e35e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1912357a-81e5-423f-9250-499b5e06ca74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f65a542f-a62e-4806-b4e4-89030cfc0f4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de68fbd0-4f13-47f5-8f7f-f07f207ee2a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "932c7b4c-ce06-416d-a66c-867b5ce46429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbb9390f-9b32-4e31-b3cb-7e1447e6053b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93fb1a5c-7042-4488-b51c-8fbed60c3ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9acee402-ae3c-4b20-bfd4-f196bd727427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cea5344-2030-422d-87da-51a080f11bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "583edcaa-6930-461c-9442-394f12610279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4225f70e-c55b-4159-a4f3-b510b9589d5e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b0003d-1871-4960-8498-989e549e99f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f92a9bb-a359-412c-9bdb-31badf394e14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a215d54f-045f-4c0f-9909-63b29518e838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03b3bb09-12fb-46ee-bd80-bf60d7ebc071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "625519d7-11af-4e72-82d2-473d3962498b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6f92ef7-6980-4012-ac07-f7c6d5450bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de20b9ed-f45d-4c16-b13d-870fb3764a55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc38a104-f577-45a9-8534-2f1ae8b8af01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61079c0e-ca16-4bac-9036-abdd37a02deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33992949-c840-4a1c-ab01-68dd6d4271c5",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a16a0f-09f1-47b3-b2e6-b287d55ce5ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e7cc131-c09d-48f0-a0a2-4a0909cf8b13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f6dbb59-12c0-478c-9ee0-1341ded127f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf9580c7-5fc1-433b-a682-5a2ab4c1f3e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b6b4fe3-d0ad-4f0a-9bf1-c878289339b2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f994440-2b84-40b7-947d-76b12d43e41d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4adc74b8-b0b1-4abb-8678-0479f03965e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee6dd618-76b1-4e72-a388-a2711942f886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28264876-64ec-4c56-8dce-bc9aa52764fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da623a6f-0aae-4d73-a3b4-fc9b3ce14338",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3240d91b-d6c3-442f-93e1-99dd5d5ca9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82393b28-f640-4b45-9997-9a83d14d8d7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a17fbf73-6840-4b78-9a40-1ccdeb8808b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81a8571b-6c86-4ca5-88ea-e00eb5d7589b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2090e4c0-005a-48f1-8e1f-c6b0423b0598",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eea0d0d-9b67-4dcd-a6d4-ee31dbcfa9d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "735eaf52-387d-49a3-bdcf-8053d7695f0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc55ed6-a4ff-45cb-ad8b-54ffbcf2260d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a379f1a-54d7-4d31-aa0a-fac7965eebb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19950488-b33b-4000-8cab-e1f5eb67841d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "250fbafc-111b-428a-a7c8-8a150409cffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a0e817d-cfdb-4e2c-b574-d64c4c124ad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca356e8-3cca-4406-9558-5224a7f67071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd438bbe-3b55-4965-a1cb-0ca957f0a283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d83f46-1011-4176-b0cc-b90e84bc3723",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f13c3e1-72e0-4779-b31f-43fc5cc0946e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbd73b26-9c3e-4a9b-9093-9a1438c8a5f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b23e762f-0d4a-4d69-8cec-b030e16672d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f32d0b8-6ed5-4ed7-a7a7-14fad402ea68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "254ca8eb-a98c-49f1-abd1-bd335d814f05",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8703379d-a721-497b-94f3-7c9158c42724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a167200-d2cd-4b09-943b-63e689b14132"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97775a0c-a5c5-4396-bba9-3730a5504b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8151c78-b086-476f-adb8-984f5e2d8020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1176424d-4616-4feb-bcc6-7bb06fa846c7",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f5797f0-b740-4865-b4e8-ac1added6a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cfe3a9d-e1fa-43ae-8cbc-8c41baeca257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a378d7-46f0-4c58-94ad-b31233b9a47d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0e49aa3-d157-4406-91f6-6c1b270bfe7e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a8a373b1-8b66-4b5e-836c-8d7d348b7b07",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "91589835-9890-45bd-bd84-ebdee4f4e513",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b81df0fc-13b3-41cf-9473-2089ff35d8a0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d5fd24cf-25f8-4af8-99b2-fb41ac433f76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7423269-9d99-463b-bd7d-db46c88acec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c490c8e0-9b6b-4e6d-88ed-f0f61a5ba9bf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "15520b89-025b-43c9-903a-209e3afebb51",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b5e6a31-3e39-44e6-8268-0446497efc87"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e116df05-e52f-4c6d-9532-bb1b0542db0e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8f16ce30-1e1e-44fe-bef2-696d8b7bc237"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fd097506-7e27-4caf-bb36-b0ad43c889bb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "289cfa9c-3409-4583-82fb-6f5d9cbf5e0b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "309dd44d-bed0-4f22-b35a-03503a1b0baf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "925aa6cb-d41e-4457-a7cc-f19d3e2a242b"
            }
          }
        ]
      },
      {
        "id": "9ed33d22-03b2-4b9c-848d-9466b78dab48",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "245dd02e-a332-4be1-a216-66458b999cb9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "16107d2d-d8ca-4e1f-b85e-c16206ee6a5b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "39c100f3-224a-4a8f-96db-24d433fb8f43",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf1ca25-93a5-4eea-91bd-6f29389d42ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ccb0ddc-83c6-42db-bf69-95bb96c19fa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0affb1a-f22a-41c5-8d7a-30aece487bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7ec616e-3287-4801-b873-7cda6b7c993a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a677e9-0314-4108-b6c0-ee1c19279a82",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc9a8db-b55c-4165-83c5-232c49b6b9c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48e6ff72-4668-4938-a5cc-27271b619ecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1151365-3215-45f0-a11e-e14cd3a8fedf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cede51e-b2a9-4d17-a1b7-ac446c81ebd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d27245-2aed-40f0-9810-ad74cf11df0d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "868bf509-d3e4-4167-aaf3-570a8cbec8ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c48a35bb-7cfd-42ce-91e2-4ee8b06e50f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f408299-f279-4e6f-ac0f-78aa7cc5edfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7040be2a-0d38-4fa7-8460-6e482cdeff99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eee9826-6054-45f3-af13-4e2a03aa03fd",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93b4855e-6558-4b17-bb12-ba611e1c6a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f4fb596-9337-42b8-9a94-f1215fb5953c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d3ef7b-4184-4ebb-9410-bf4fb5f24c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a91c1175-23e7-4ede-a0dc-16fd8e9b732e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d33e3ca3-8631-46fa-890e-15cd64c0c04e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2700810-dd87-49b5-ac4b-8bbe7e9e80a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00622763-b2cc-4585-b57e-55bc8757b0a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4101ee8-f6fc-45bb-8dbe-3861fbf02818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcd167ad-2186-48b0-b5b1-6ca4d6c553ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a929046c-811e-4a42-87b8-b3e6c418f7b6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e048172b-9ef9-4cd7-974c-da9962d1eb75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc1f1b14-1d6e-4bbd-8f7f-fdc22d271499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "210d26de-fb8d-4b87-aefc-695e8279dfbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4135c8c-48df-4f06-9d7f-6cd2d414ac32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf443b6b-2680-47a7-bf8e-142d9f4ce4f9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bbb3889-871f-481b-988d-0d103dd5cb84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d226614d-50d5-4dfa-bac6-66ad515f068a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fe52b98-4292-4928-a682-dcf32b756ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ea43860-0501-44cd-8a18-928a4a659cf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5103256f-be1d-4295-b453-0bbed91197ad",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "099b96e3-11ef-46ac-8a65-ccb08addf13f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a64853b-aaba-4296-a143-94de167e0f59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c9ca268-078d-41a3-ab8c-5f3361f322d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "be8e7db7-c036-408e-bd74-fff7c59e6abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e54e8dd5-9862-4c5a-bc0d-4157bf68d64e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e6b886-589b-468e-b9f1-1df56ab73a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e81fc631-0fe2-455e-b373-fdfa2ac31fb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e28bce-4106-4163-97dd-3d10bfbe412a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "88571bfe-64e5-46b4-b8fd-11dfc8bc6985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7870c03d-d43e-40b8-95b6-1dd8c44d20de",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4807cc4d-c00f-400b-a33d-69ed003a11a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d143c8bf-0b87-40f4-bb3e-8d443a4fbe91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48afef7e-88f0-4a4f-8847-033f6ec7ebf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "279a4ca7-9fc1-4017-8968-c800f06e3f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51292261-dba3-4128-a37b-94aa7c8d0c12",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "753630b2-7cf9-4a6e-b318-0ce99c161a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6badc2c0-a776-483d-a744-c8a37c3a49f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fea3e10-ca99-4cea-aa77-dadc55ad8ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9f7ab3bd-b954-432d-855c-9233a05ad5c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8476911e-0ee2-4af1-96e0-e7dffedeb926",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "287f418c-fa16-4369-8e0e-3be187fa3688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "332c048b-5e03-45e2-a9dd-c944674ecbd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7bb26d4-c9e4-4f7a-86e1-cf8cb4b60413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fdeef5a6-f726-41a6-a402-7964f928afd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2271648-69cc-4a72-8ea4-082643dcbac1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe266a14-eadc-4aa4-9e41-fd40435c6f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffabdebb-8efd-4e5b-a829-76cc0778fdde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5dff6d3-5a4f-465e-a378-31a5ff3d1b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fdb02fd-89b5-4ee7-840a-46a3dc8d5ada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eaec3bc-d080-43b9-92ff-27d4067c7bee",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "250d60f7-ff79-48fb-b66c-58ec6c3ff977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ad32d02-ad7a-4da5-998c-c041321712ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86cb9b5f-9e5e-4b98-816e-dcfb3acd0d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a60ff4d8-d465-456c-a093-8b3c7a2095d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e5d8b00-e7e7-4e4d-84c0-42028f515e4c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c9c2c48-f9bc-419b-95ab-47228d095a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01d363ec-5ea7-4ff6-878a-37201f63cc43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6974a59-6ad8-49ce-a245-f2429ed61b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cbe3a7d-e0a3-4094-b9d9-13b0c1ce940a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe3d059-a6f2-437e-a83a-94947e88160d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93266d5a-4575-4dbc-b9ab-3351c8c1cc3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3d731d8-cbac-4047-863e-737fe0fb68eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab6585d3-44eb-4781-8dc6-7e7c082ca10e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c5ce374-91e2-48b7-b191-194ff44ae97b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e89e7d86-571e-42ca-ac6a-0387be763bf0",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf231cd-d5c6-4818-bec7-f760f9f268b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f4d802c-f489-450a-b8fb-3cfa408cc8b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cbabb32-437b-42de-bbac-115c014c6fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4174c919-35e2-4df7-a23b-831c98f274be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df2cda6e-88a5-47d7-87da-a123d5675fc5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f9e38c-b52b-4399-9f24-3cb76a42c7c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61244959-216c-48bc-bd93-dd73da8161d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b3dc6d-b4be-4a9c-b298-840ca1cd033f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6419d8d7-91fc-4057-a224-31556eb31558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c459c9-5c35-4ef7-b45f-4a2117b3e4ab",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e985ec44-a8e0-4591-9e5c-ba9e14f4ff3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59a4c471-3e9e-4669-b0d4-2acd804b9ede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf7c5c4-5dde-481f-84f0-6f467bdc0e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90e6efae-8d18-40f3-ad30-0e44d742db18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b095858-d3b2-4e79-a665-7652084c03ab",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf3e66d-a39a-44fe-821a-8dfb8295a47a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c122f9c-bd4c-465d-8c5a-7ec3e9ce103c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e5b75a7-355f-4060-8a26-765a30679be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3032d6d2-7b04-485d-b5e1-cc290e2f0417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f548d1bf-38d9-4e1e-97b7-eba048d31ce1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc24346-8911-498b-94af-d55395ce539d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5e78df3-987d-4da0-9eac-f53ec528d1e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38570345-1a14-4799-ae48-4843cf4b44fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "997579de-ee65-4518-903e-e95c6850686c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492df9c1-9def-46a8-ae65-09887b25e8d9",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6251ed4-4ef9-4669-870b-7dde5604a1bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d44451e3-9103-4c73-b79d-d2776a9d08d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "720f6716-9cde-46c0-9a3c-6793cc81bb60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5b35c51-2d5e-49f7-bd09-1ff50772a00e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "431f6f86-8267-407c-8b9a-3bbae6d654c1",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6812d4-934e-44b8-b8ad-757d41ac0467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca35950c-7944-4e64-8cbb-c14ee16e1224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d64298-77ab-4de6-8c92-489f90fa9434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef39de9c-dd4d-4004-83a1-bcbe38c2d421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e9c4dc2-c10b-4a75-9f11-5c82570e99b6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9122a77-d93e-4035-9617-588b5dcdd0b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8f639bc-3a6a-455d-adac-94e3ddd4590e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f369596e-6791-4fcc-8088-8c81e5f55a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e814707a-70b3-4870-af61-94646fbf0936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84129d7-c4c5-4ac7-9399-10d2dad9ee89",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd9ccbf-9e7b-46a5-bc9e-6a87a4d9c99f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70e31577-7d4e-45c8-b9b1-975fa695a64d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dfe37e0-8bd2-47ab-99cb-9a25715d06c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7588a59-584b-474c-8a53-3319cc39b7d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc2446bb-743d-4ece-a95a-d657f9f7afc1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8318dbda-7948-4315-a479-a2d5e3485be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d13fc7a-83be-441b-80e2-7df241636569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69368267-9272-4ee3-a6f2-b9aef804eb32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6e06fc8-2839-4b28-b9c0-c176a9f163ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "226ad2db-454c-428f-bca7-bce0b077ce24",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85e50c36-9fc3-44f3-b711-0fe5d0275629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b7f864a-b51a-413d-bd1b-a4041dde97c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c15c6bee-417b-491b-9b95-661b426f837d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e30ead80-8da7-40d8-9856-8e7889a1e058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28694a31-d163-4498-b9e9-19b80bd7520a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "463965f6-03a5-41cf-976a-d0057f2bc664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc1a6f4c-784a-445a-bde9-77ffa44d8160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b4cf7b-b9f0-44cc-aabd-fb4019ccbf58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b332e6b1-4740-4d6a-8e52-a287369c2ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2cbbfe9-906e-457b-9c9f-1717dc7bb369",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64316e3-e67b-4592-9f3d-f9953683f712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86e640e0-a9e3-48ee-bbd5-e39bc8452c42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b381ca04-e84d-4040-a3c4-66ad864830db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcfbede4-83f9-42c2-8e59-3ce5e7275b80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1d03618-fe62-4fe6-a00d-891e3694c20e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe882d0-2317-4aad-8328-8d3de4a29f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1da201d9-63ed-471b-bc66-c7d509a3a4be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f3a8b5-fe5f-411b-ba5f-f62c6f1e6570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae634df3-6286-4fc6-b052-e80b9c9b20f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77abdf41-2b59-4b11-9d74-a6eb00e87389",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50fdef9d-1a94-4178-a2a8-c056c1474612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18b9b8c5-296f-44b6-aef2-8fffed507a2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8cf5e99-407b-41cf-b9f0-dd4000190b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4428c5d-f852-4fe0-9cb6-d33ff6de91f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e8874d-568b-4a31-9250-88178f89a894",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80d4f965-7386-4190-9259-b082acd2b587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd616fad-9209-4224-a52c-4443268c9a75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77757340-ac5f-4c0a-82eb-ef5869c44052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45c23a42-b3f5-4e94-a9e8-9aa61933ee78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "098148cf-688b-41ea-9acc-cfccd96071d8",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acbac29e-0b3c-4a78-b6b0-bcebddb50af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4659556e-a6f9-4d1b-89a5-3dee19e2c981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70f5a602-14cd-458b-ae5c-d0a3c6615e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ec1be45-5bcd-4186-9c5f-f16c8d75522b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f05433-e3cf-4607-b9d8-26316a114bf6",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6052408a-24f3-4fa8-915f-f39593c794e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be59ddc4-cad4-4bb8-9fce-b13b7ca2559f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c29b6e-e755-4064-8b0a-7841d0237ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c463e68f-5809-4c6d-a1b9-b274e7529b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c3f787-d16f-4d52-879d-a43c0510c7fd",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1381cd0d-a6df-4be3-b3dd-e5b3ea18eb6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3db0a996-fcf7-48e7-bbfb-4cdc82899886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2511ea29-e408-4e99-8ee9-a1e8a57f15ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef0bca09-50c0-4596-8a7f-46180196761f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51495943-58df-448f-aa24-eaa6e6432fd2",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff1d69dd-9d9a-42f2-890b-5ce7e15ac4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90c9206c-8b4e-41c7-82c4-8917838fa90c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b58f5fe-cb0e-479a-b215-597a48e5d557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bce6b117-28a2-430d-a8db-88c755d43b62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bcc744f-6583-467e-9426-cce3cb378734",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea51412-9199-4575-b90e-c4d79c34175b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11501d8b-ee80-4e03-b948-9b1c5692f758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc883834-4fe2-40be-962e-363e582d5447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2b1c9ac-5e8e-4a00-ba56-ed1255b5e89d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c815c92c-4d22-4ca9-95d7-d1979273750a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ab640a5d-77e2-4051-b6a8-79c6d5e6c39c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7004c72-0184-4b7a-bf9e-2bb6f9289a72",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6e83af88-ff25-4dde-9a6e-e2d381337621"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7051d180-d9bd-4290-bffa-0cb2ef36fb1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "43818101-5ecf-4f2d-9163-4e612f3cb93b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "049333eb-5d0d-4cce-b9f9-2b8db8436901",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e76d89f-b63e-462b-9c43-f09cb74ea871"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0d15824-c198-4d1d-876c-ed5e34ed8634",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "56e5952b-5d96-403e-a96a-fb6e25f4a8a2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f25c539b-6ad6-4218-952c-07c40689e01d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fd7b3ec7-b9bb-494e-a00d-41aeaef0e138"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9beb47a4-a6d5-41ee-882c-c7c21febec2c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1b19b1c5-75cd-4643-aeac-45ebe8628b70"
            }
          }
        ]
      },
      {
        "id": "dd047539-8597-4560-9916-038f74b3734d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "87b94dbe-968d-4fae-a053-e12edb2d924f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c35a32eb-a25f-40ae-8cda-3815100d69e4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c2622885-6c23-494d-b593-e7ae1067ce4d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52654a20-b209-47c4-8133-65337625024b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b8cd3ff-92bb-46fe-bf65-c3d04cff7855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a59f02-d5f1-47e0-ac17-a581f46614eb",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb08208-1d47-4099-9e1b-c40736c2f11b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "764619a3-c43d-4ba3-92f3-a1a7dd138184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad1b5cc-3b28-417b-aa28-d0f7697a140e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ae19bd-a7aa-44e9-964d-679fcfac9f62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "338b3351-b59b-41e8-9fe2-8c085d058dd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f759f9-7cf7-43e1-9310-c2670269d7a5",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f637fd57-050b-445c-b05b-4423fdcb97e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31ff14ff-5835-43b2-b7ae-50842777c64e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57788d19-3ebd-4fec-886d-7fe1dee082d4",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83785a57-8af4-42eb-ba23-dfa8f5596d9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67ee7d92-25ec-4b44-b4d5-34c56864357c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "069eb699-4000-41e6-8c68-5e328614cc9e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c1bd681-f62f-4278-b6ff-d6fd3691645f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d69c93f-9dd3-4491-a779-4ceee69aad34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46cd6c40-040f-4426-a809-2e8d41136da8",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8f66d25-5fbe-4ed5-849f-a32ed843180c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f96c9e86-6797-4a64-a36c-5ae2dbf63942"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1603790a-6f57-4316-ab9a-431c16aa9a78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d7eb003-351c-4eba-93c8-65d430ba337f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae84875-6fcf-46d7-80e7-9364acd71a0b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2eb27f9-721e-45e9-a5d2-8cfa92df0489",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afea4bd9-e8d8-41fd-9d7f-616a5eae826b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da942117-5c68-41a5-afe7-216027402840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0f4bed6-ddba-43bb-932d-7c0f945f67de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f0e103-fb2a-4476-99ec-f428eca7d092",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e435476-1bfe-4757-9c41-74cf6c4a82db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "922f0b5e-c6bb-4897-a28a-717f722a5be8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4723aa7e-d300-442a-896b-1c81cd5b073b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c171e10-52c5-46dd-8570-4c9ad4262637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32a215c8-0b3c-41c2-b722-35352c2ee9b2",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eedad2ee-db56-496b-b27f-b323735d730c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0ff45f3-f84f-4384-8f18-0945963221cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88991ad0-041f-4f3f-b194-bcc83386963c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e16ad55-eee5-4ea0-9c87-db8e4a01e3d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "631a58b5-8c77-4df6-91fa-96883c22eef8",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c968ac-6c03-47b7-a8bf-dd3013199f29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98bb1344-b562-43a2-8817-538d3a4bf945"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44daec4a-1142-4922-826b-94a795c5c701",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95ac0d9c-82c2-454e-b015-3a1cc5ccca80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c51642fa-d5fa-4495-90a4-df4f5b387056",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9949d50d-0c1e-4bdb-ac34-f582cc594327",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bdc5580-d3a5-41e4-a3d6-ea69f4016410"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49abc03d-0185-4a1b-9924-172c4b0ca6af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2567cd9-7052-4063-a465-91f571d362b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fccbe086-4722-4166-acb0-df36a236d6b0",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d03fe28-5776-489f-ba44-1ded1e432b48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fde2c3f6-72f8-46be-94de-52337ffabea4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88989357-51b4-4eea-8d13-22dcedb11ce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2d4038b-fe8e-40ab-a4d8-24169def2b80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06543861-6cce-4a0d-afc9-2364f0aaba13",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f95344c-7dbc-4b91-ac99-cfb7f41a11cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db413fe4-d004-486a-995a-e02c7a3525c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8676e6cb-d4b5-4178-98e7-95688fec1533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6675ab9a-a1f6-40f6-84d4-e78b7e63a2f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73ca10b-4ec2-484c-9990-71ef2315c0e6",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb79550-6e77-4167-832c-faa315d4dd20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e18aa9c2-cb68-40ff-8282-2ffb32eb88f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edb7511d-e489-42fd-9e21-8f1ffacfc67a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3696df56-ac30-45ff-aabf-ff6a6957089a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "189d762d-5a39-48d7-bc27-cadf11258489",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ba9683-cb08-4a4d-a02b-fc4e3d5f0cb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1f2a6cc-7b6a-4df2-814c-fd05443e2aed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed73275e-6ef5-4a68-ae70-fefb02d8a5c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b5af061-5e46-4f73-a2b2-c2d749930b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93597eba-b0ab-495b-99e8-4fac8adc8680",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad9860c-2782-4f48-94f9-a1cdbdc56b39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "257552eb-a5ce-45f7-8d31-d25fba39ed04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa14b98c-b64d-4456-b228-590f6d94e349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8faff4d-de67-42b7-8441-156ec320b346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f46a2f-e1f5-4a76-ad3e-4bfcc3581c69",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92108ff2-93ae-45e6-80d3-97e72e2c9aa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb8d5e5b-0611-4315-a888-d8e1233e0636"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7beaa3-c835-45fc-bd91-76843dcb146f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f5bf616-db92-4e9f-bf21-c3ea5e7cd406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd14b1e-5ef9-4162-a39d-c1d039a3c3ac",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db1f2c75-ea2c-45a3-b55d-0eb790365755",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e68db1a4-5107-4c01-843c-394757b66fa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e974bc-e429-4fce-9b45-6c151844c57b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90131c05-1ce7-4543-ba24-84b3703df48e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d00aa5d-6f4b-405f-ba83-51351371fcb8",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc32bca-2fe5-4737-b4ef-dcf93965e004",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64a6775a-9ec1-4ef9-b595-54481234f8ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb12ea66-9292-49f1-ac96-7f543cb488cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dec8d20c-94bd-4326-95e5-bb174fe0c931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa50edee-4b42-4e6a-9385-e9903e87a1fa",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84637468-3151-449e-a545-1419978149df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b161b0b5-b02c-48cd-8b0c-1b13d9a7a1fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca2b0dc6-b64a-445d-9f6a-ac6aa52bd0e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d929e7f-c265-4160-b392-ec1d407306f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaee33e0-d464-4451-a468-d7216f1a9c6b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98237e7c-a0fb-4955-975b-4dbb8491c60e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d50a8084-c29a-4c7e-94a9-3328d1b45c51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f7f014-4746-4505-872f-523df2407fb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb601a56-b60a-405f-948b-bc666f1b4d74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac672752-1562-42d6-b4ae-299de6491b54",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32dc0acd-3f80-4c12-9b64-9ad59d7cc110",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd816f46-1b71-44a9-9572-9444ef0bcc94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ada23f-8ebb-4ea9-b1f8-d9edb67b29a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e7018e0-f4b5-4b76-9cd9-4fae9c7daaa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e90199c8-da57-4add-bc38-eeba667eef72",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8605ea5d-e000-471f-a81b-2160a36bf65b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50e6620e-39e3-4654-b97b-ec09e367bd5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f599d20f-64e4-47ac-a3d8-e04902d0deff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4c21b20-cd8b-4b97-87fe-42e56affa5f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650e6a98-3398-4f31-9914-1b79389d613c",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ed994d-01c4-4c07-ae75-ee61ab20b67b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46e0daf7-789b-436f-9b0d-e7a330c6779c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7208f7aa-bcaf-4e45-b344-d7792afb60d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ceddc44-d758-40cc-b060-64c4c1160e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a87f74-67a3-4ebd-9cb4-c65267bbfa70",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4bf3499-73cf-4ed3-858b-610707cf01d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2980635a-9683-457a-a388-a431eb14c6de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "541510ab-d408-4736-9207-a3531ed8d069",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e74eeb05-b76b-4bb8-b568-ed72ce2ef48a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13028cd3-875a-4d05-b89f-57b1ec2b3c08",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5749032e-99e3-4aca-baa9-ccf6e9db802c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41cec1c6-7987-451e-8053-00dba7231950"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "592128b2-2ada-4b6a-8b13-9dd9b9147f33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d6e4f61-cbbd-4cda-92f4-78283e9be373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4cc723b-e230-4db0-9d61-eef49f5e034a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe1f22f-aecf-46be-a904-32f732b5e48b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e87ca2b-4f67-4bbe-a506-73c0dfaa94a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf5b1018-ffd5-4f23-a74d-82ae0c38d9ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03b037c1-bb6d-4358-a166-d70344101ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e32b6760-0788-4ccd-b0db-f98ad4639605",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6c2c581-32ce-46b3-8901-701a0afcc1a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19ff01c1-8ff5-4684-b3e1-905069ffe792"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7350682b-6274-4cff-956d-e733dc30f93b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7a7c123-6c0a-43f3-b766-8f62431cbd5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde9f26a-9b10-428b-baf8-04b3d17b11a9",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ce80416-5ebd-45d6-9408-438e139f960f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a51effb3-e018-4318-bab9-b8ab0da6eea0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5808c8f-6a99-4692-a0ca-5b0dfbc9e1d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "745fdfcb-8535-49d4-8776-beb927537713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f7b4e0-0608-4bfe-96b9-a2c72b9334fb",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e94847d1-2b70-457f-b142-9a2ac8308ece",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5645989a-bd12-4e91-ab47-32b3ddbf088b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84bc5ebe-3c8b-4f35-98f6-495146ec41b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19cfbba4-a22a-4bcc-8250-e5bde4f9e72a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "852117ed-a55d-48ba-bf54-11584ff9d30e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "691437e4-1faa-46f0-8f44-11b3d2364637",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73c9f366-8a02-4ccb-bcbb-90eef72bb8a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "156aba5f-2667-4a3e-b1fa-4027859e1fe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "172ffd99-c396-4f58-b73c-e599a1a3b7df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f896a1c3-e5ae-4174-b025-12ecab10e42f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6796cebe-6775-4e4e-9b84-e3667f0f50ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b067f111-ffe8-4cef-a838-45bee43092ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a92276ee-ecbe-4ccc-8ae7-9c76b540e9f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f59795b7-ab05-4a61-9430-5604118ea1ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f704003-b773-4afa-b0a0-9632dfbd5365",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bdf6f0b-c972-4ceb-80aa-10e96f76aaa6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb15635c-d9dd-4e2c-ae11-6f4d4ac8f348"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f052b417-8220-4362-914e-d7a9ac6ad7fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee8b2fd2-9229-42f2-b643-790659993093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d856c15-431a-4a84-9951-937006069751",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfca83f7-53fa-4e53-af0a-012c72db7531",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a5a30ee-5863-441e-b232-e6aa0603a52b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3249a417-4248-4e2a-a31a-c8d81a852925",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef3a8b4a-7271-421c-81ca-96b44728f1fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff7090fd-f97e-4aa0-81d0-49c61df17f6c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a832f694-7fc9-42f4-8bc3-82c386505464",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88048503-18cf-4aee-a2a6-83ffc22dd34b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "443a8ce3-2f90-4811-bd61-936101aa35c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ae9c015-43cb-4da5-b9eb-e6da0ebb723c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b923126-031b-4b67-b7fe-b8b9972a3711",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df288242-8401-477b-8080-3a47c90ffc50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83529911-958e-45cb-b243-0f4e40141167"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e6e8d5e-eced-49fd-adf2-7da217a622b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4671532a-6ff9-463f-9184-5af30e989a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03dddb7b-6d8f-4410-a9a3-0242c5c1c6df",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f210f85-48f2-4d15-a6e9-8231af92bcc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3a0319d-d8aa-4ac4-a37c-df7504f5f1b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd41530-82a5-4264-b153-cff09be00268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "062e7c29-4f62-461f-beb3-9dafad2ca34c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f26a1f-db7d-48d4-bfac-8ecc23aeb628",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c57c586e-6a1f-4f1c-9a5a-694f559042c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f714bd0-f102-463a-b236-87d35ee555a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b892a487-d7d8-4a5c-b50a-ae42e8723461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48cdbf69-4bb1-4369-a8be-48be4082be1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a142631a-8b31-4dbd-aa5a-850345ef62d3",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d54888a-9584-4678-b1ec-d64372bb24af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f75ae205-6533-4770-99c0-6b92b3012310"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc766f2-77cf-48a9-ab43-f50198a83101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c17456f2-2636-4610-933e-3ebc9063996f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eadaed1-bb03-4d76-946f-ef533642e3cc",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1547f6b6-f322-4704-93db-1da195ab5c25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "533056d5-0f51-44d5-a9f0-903ab06e8e29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "159865b4-7d18-4e93-8cc3-b2e792a25e00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aac87422-a8c8-4347-a040-d138df69b428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ea018e-71d1-47be-bd3d-0004bd9f381e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c91ed3-17da-4562-ba31-283764a2e8b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66902345-b5ae-4075-956b-f7f905915d20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4a6c44-3137-4847-82cf-8b35c0a1d222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4bcd134-e571-480d-a663-ef29483c4d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bd62d69-eb30-46eb-ad19-6ff26334bf7c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c22c51c-6fff-4aa8-ab04-a2a4f3b28463",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8404b09f-7a43-4be9-b9e8-bc1124fadcce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d48a5a45-376b-4580-a441-6f94a280f4f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10b55f3a-82bf-403c-9e43-1ccf57b558fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39681e4f-dff8-4bb3-8cf2-8e0ae1128008",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89832d74-259e-43c6-a266-3caa18f94c45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fd8f692-32d0-464b-9f0e-ee607d64af1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "949ff12b-dfe6-46cd-8fdf-51ad81377e68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d78be60-7684-4cfb-afb5-c91b1219de9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "318ccea6-8c4f-4a7e-ae7e-7be683d614e9",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c47e08f-f682-4426-a882-16d8587e147d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "762aaccd-0e7d-4a75-bab1-1e9c81d82552"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f9f592f-d489-42cb-aff0-918fdbde8fd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edbd255a-c982-4428-83d0-7402c17b1857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a0dd22f-a232-4ea7-84fe-b6e0b50ee9ae",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b2f814-0217-47e0-8aac-779f9557c8c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f92e6ac-cff5-45a7-b50b-c775fda410f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb375b13-9434-49bf-a04c-17fd27ca248c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fb51008-6805-4bc6-9b02-ffbc43848a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a7a8ad-446a-49cf-8822-b6843a5ce0b1",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce6cdd3-f518-484c-942f-742b16ae0a8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f50b3ff-4e9c-420b-b895-0a50d4c7408a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed2b1c0-3b78-418e-aad9-f24afc5353f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3559c8d-3aa1-4cb2-8c3a-1e96d3239228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa1cd8c3-489c-464c-9b32-b766c8375b81",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c98ae3-5459-40b5-b752-cc686079a25c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "759fb8b6-561d-48af-9e25-7ed071f3b1ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27eafbd3-a8cf-41a7-a87c-631ffc8e7f23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07b29984-e85b-47b5-a25d-f3d50acc9c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44173f18-5ce1-4ff2-8969-bf0d75073071",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee83dec-0a24-4cd2-8395-f391fc68135c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c1effbd-12f2-4643-a752-f63539a0dc7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60fbb2c2-db40-413d-b915-6eee4e87aa66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d91cdcd-5c05-4315-b7fc-b243abdaff7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f60678ed-2bf5-41d3-8889-7a22e3edd421",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d67a6303-e31f-4f29-9500-d386ad3613ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46add868-09f0-43c7-94a0-4519c7aff01d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c84d3e-05d7-4a16-a72d-05012a3b1333",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdb4bd04-d3c8-44a4-b0c6-d5cbf52d19f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1038d337-9165-4042-9bcf-cc5f87985e3b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb26507e-142b-4761-9661-fe9f1fb860f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ff87dfd-ec89-4d53-8c5e-62ef46dbc391"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd43d49e-694a-47be-9131-bd1b3922f2ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3229e187-c18d-4650-b7e1-fefb2c5e1b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f451af39-6e17-41e9-9a05-31b9b18daba0",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58962653-08ff-4a3b-a755-7d714c00d0fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9edaa837-54b5-4989-9772-3ff1013551dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f98ff51-5eec-4b42-a95e-c796c02bca0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d638d81b-0afc-497a-bbd1-7f3ccb0d9370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a0f004-5bca-46c1-b99d-86e51a58a6bd",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9342a386-fef6-4d4d-b145-8238f91be0b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec1e55de-2ee6-44f2-bf00-4c400cb3d3f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "621a838c-d787-4031-aee3-5b222d533d53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38403595-3a87-4dcc-82a5-1120c99d6f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6a81652-2d45-456c-a059-a82600256a30",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa7b782-2112-462a-acdf-b8fd90841b04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fef4f704-72e6-4b5c-a63a-35a65af6c5d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba933ab-e3af-4fcb-81aa-cc2767b9a19c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e2595c9-2e25-466d-bf66-169e6240b69b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a7b25ad-3211-43b4-be25-4c8da6eee816",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "542a8488-d47b-420f-9a16-ec344fe7fd40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09b4f6ed-7327-43e2-b05f-2bd5b54bb8e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2530a417-13b6-434d-a6b6-26ec089b8f5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32e5561f-8597-4342-aff1-862b7c4df6bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f752ab19-c723-4283-9903-f8cd99aca936",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d4d95f-f60b-44df-b85f-a04039afbcad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03c41345-8b3e-4620-812b-4a0c702ba6f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc91276-1cef-41c1-bffc-2a90e6a7c52c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9177447e-cd0e-44e7-883f-cff152be2e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a39db7d-eb48-4232-afee-f6f23de3b2b6",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baa5b12a-5341-4151-84be-1fc510375d68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80b36626-a78b-4db9-9a6f-4df17d5f819f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c85545c4-f8c6-429f-b8d4-6fd59990fd9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7750249b-a5e9-4200-83cf-f13eb89028f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88ea2078-2eb5-4e87-8763-f6eb8249101e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9193cec-a863-40c0-a6e9-8fee8f058ff1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0d16850-a860-4a24-880c-9cf64770c109"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90673087-4a1a-4f8f-83f2-654f93437873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63aa76e9-4156-4372-b256-4019302675ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c29ee8ec-9350-4f87-b91c-1db2626dcda0",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da6d3b8-e99b-43d9-9baf-349a40d97bde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0dc9457-2285-4430-b07e-eeddab44f930"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c88e0429-a5dc-4f62-b979-9845a9693c87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b3d7215-b762-4e75-a41a-02fc4a11c034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48a5371e-68c7-4262-b4a6-b30b07a19e2b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45ff3455-5eb6-4545-b308-20f113cb442e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97899def-1fb2-4bd1-bef3-96d4d107a95f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc4e7875-50f8-41e9-a564-e5e5af0eeb55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9942bc5e-af46-4303-a1da-315e8d0c6065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "346f7fac-d849-4bc5-a886-c536ddcfaa75",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b205c0d-2191-4d49-9489-abf781c12be8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5ed0ec4-70ea-4ff2-abca-68bb919a26bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ac5b4f-d65e-4ff8-90a9-5afc4d9d992f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c80d66f2-dd97-478b-ac8b-40071b00b069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19084784-8407-4af2-a7ba-e0996baf0669",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8393512-da29-492f-aa7c-7552661692c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a551c6b-4bfe-4920-9801-99d2ebfde111"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "511070a9-9acf-4df3-b38b-37f1170cd0f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be4a17a6-cc89-495c-9f21-92c5c36b0937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d7b416-ba8e-4283-9c1f-a3d63667f6f8",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6502963f-76b7-438f-bff9-414a573eeb91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcf1b057-7f9f-4636-8ec6-0e95c0b25bd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7459062-0be5-414b-8ba5-2c76c0fda07d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5930fbf-7b58-40e6-adb1-fae1120d7489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dcb9c55-439d-4376-874a-030af9c80412",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0041481b-fcff-4e80-8b70-dc4d66b2b0c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "230b4c33-a885-4922-9270-1d34cb0a7cc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b4b5d22-30c0-485d-bff6-d1f6e65fdb09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12a7f6d3-520a-4564-a0a8-377b1086f058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "082dfa83-1148-4bfe-aa92-e0a8b69c0f0f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "255446c0-5551-4f3a-9a3a-fdffca5d52c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ebfbdb7-2fed-4cfe-84fd-020133b087f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e473ed-7607-4a97-8595-9467ef2fccda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65773fd7-d517-4b53-814b-06569a3740dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1365ab71-bbfa-410e-b310-0b58a817bf63",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb321332-9bf7-4912-9c92-bc64f9484335",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7816c004-1287-4065-96d5-daff142049b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15819d09-d57e-45cd-b299-652a1082ce54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2574d17b-dd35-4370-b4b8-dfdbc307bea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa7712c7-cabc-444b-b535-76a9b789c101",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee3683d-31aa-4d67-bb84-134125d0e80a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ac32962-0679-4099-a8d3-a9f7435037b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04722815-a7f6-4922-ac2f-34451c8507ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60ae6c0f-3846-4a9c-8ea3-21d9d3ef778d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc12b77e-bda1-42b5-9219-9f17f62ff06d",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c35106ab-ae66-40df-905b-7ea54b4bdcd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b54c5eb4-f28c-4e1f-88a4-88df9bdcdbc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0540ed97-ddbb-4b07-851a-705f6a22171d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "094f9101-9b28-4b87-8156-da02b334fc19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "501f2ea1-9b24-4e03-bd9a-31de0e518195",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c7f8e17-f343-4930-a035-bbc157eeeea4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f3c71a3-9659-42e0-8c27-de19120382c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54dca3e0-9f98-47f9-8002-b2d28c234fbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7064a835-3599-477f-8e5f-f566824633e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b31608f8-18d8-4a2c-b749-163a1ac45c2c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fccd88d-6532-4f51-a5e6-10ed75061916",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3454131-0af3-4f13-a642-e67e3d949095"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55c9c0de-6dc7-4311-be68-b18224f87696",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b45ec01-22aa-47b8-ae6b-4b3657f81b4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e3b85b-648f-4ce2-a720-79f3e0a21c58",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14fa790f-96d9-4af9-8003-a6047cf30b4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39e27465-ffbc-4188-9b87-2cc6d7f761e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7489dbc8-25c4-46d6-ab70-bb7c948c4eb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "115860e8-0ff4-4de7-aabc-e25c3b836e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f371a65c-10cf-4998-99b5-c776bed0b260",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d6ed540-6c92-4e61-b1b6-210bf7ae6609",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1e60a70-c249-4ea7-8c3e-f7c583efe38b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f022a0-0d22-4cfe-99b7-17e0b11f3afc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b390310-c1c3-47b2-99f1-0ab18d01843c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a7a68f-b8d5-41e6-a17d-4204081ed4cf",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df7897ca-a129-483b-b535-da5e47405609",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc6766f4-6105-48e4-b953-f25bb21bd7e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4472f11b-7316-44c7-8708-8145a78ab210",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10f85ad2-685d-45eb-8891-d5bd986dae8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6493ae9d-4225-458b-b786-75cbef656b1a",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f08fba-8868-4bfa-a343-cbe294d56e11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1264c7e-f0e9-4017-bf4f-2790846f90b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa4c124b-e130-4b99-bd9f-ad84cff2ec77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33d27c11-db19-435a-8c37-566084db4326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d026f37-99f1-4bbf-a26e-57dd993f1f3c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dbe372e-fdce-4589-8a0d-5144872a79cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "daa25b33-c9ee-4a87-9376-b83c3aa396f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e9cdf6-f81b-4c87-af33-b809233d7345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f53fa3a-bf73-4942-98ba-5d658b12d1e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3268cd81-5b8b-4038-a07a-1a1982df51e9",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "738e2cc0-a1d7-4d44-b7f8-aa4cf2805862",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1c1c757-0e29-42ac-9416-0a05419f06d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faed07c9-5a66-473e-8440-171212affad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc0ade57-20d5-42e5-be3e-b2fa9a5297e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d6a56ff-d3cb-4c02-a449-01b63ac081f4",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c108ef80-872a-4b11-b358-41cd860ef381",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59befb01-9d98-4f32-b22e-a9f563958acc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf6323a0-d577-4b1c-8198-6d8e567a40b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "082ee298-a8de-481e-9e91-30194b04a3c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe00109-19e7-496e-85d2-38e37c203042",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb0676d-f245-4349-8246-73e6b32f5158",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08495ef2-fa39-4f14-b91f-8a54ba1bf902"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a3c1b2-ad2f-4593-84d0-e8a1533e3f9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3e9e38e-48fe-48fc-a9a6-e19d69c182d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5c3179-d01a-4d6f-9cbd-ac5d62ef97d3",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e2557c-1505-4057-8e85-ebaa19b3936d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c5872df-7aab-4c40-bc01-56c4a65e0785"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f55d351-5780-4b0d-b4fb-b663f8267881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d148adf-bdd5-43f8-b544-abfce60bdc60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ad2607-992e-4b14-bd99-8863de75cf66",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25df9979-f641-4a7e-86fc-c1d34ba06923",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12bbdd85-0f76-466a-b3f1-3d3414ef2b45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca78fbbe-1270-4da7-8ff7-ec0ab4346dcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bc60f73-aa25-4ab8-af99-0b75664d4d8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbd32a31-ba32-43df-981c-de2eeb94080b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf4dd85c-788f-4284-b744-bb07b1263bcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d59a355-f27d-4cb7-98ff-a59a7bf7910f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ff2e95-f2f7-4e42-bcd5-83ba0be024e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b32ef883-a0be-4f5d-b527-cc2fdbd894e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02ac63d8-e1a0-4fb2-9127-98ef29d9e5f5",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991b8248-19f2-44e6-8c98-36a502855e23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3429cf7-a8ab-4f6b-9f8b-4e6a7c93d0bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "607cf9dd-177a-4172-acaa-d5d573bdd686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba81a681-34a2-4ee5-846c-ad0ae77fddd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "936030b8-f6a1-42a2-9fc2-298eba362ad4",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e5c105-ad02-4fd6-a5d0-c394c31bd027",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea691166-ccad-4150-9fa8-360e72655892"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5830fa6-dab4-4abd-babb-cf2da705ce44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3332d98-0ebf-446f-b11b-85e55185fa40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa8e2a64-7e6f-46d0-a898-cd710d463a84",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c6add88-b3a7-40f3-984f-acd7235542cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa604191-4783-43c5-8fe5-b25f7d98b7df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f676f44-5436-4cbe-b800-448166ff1690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30642426-6b04-411b-b85d-49d80254ce21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d6193c-5e8d-4e84-b460-c93ad64f4908",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee2c27d-3a3f-43f1-bae4-ccca7882fba5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71553a1c-185e-40b7-b84e-3bd386ae6137"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3cb02bd-cd03-4021-81c8-9ace315db52c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dd959c4-08e6-4e3b-b23b-2aed5f6cc9db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6244a502-205a-4466-8244-f3e0102cf48c",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c11b86-def9-4be5-b85c-92c134e9d066",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0e3c094-8db5-4b38-8029-188317b6b735"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edb662d9-b458-4588-91a0-800e41cc1570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1183a1a-53f4-429c-be53-e0ac98c393e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fef37259-5351-4fb5-b638-2cf86b4e22c3",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d79cd00-848d-499c-a0fd-80510bc5b62c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5cf94bc-1dd9-413e-b28b-2ef50470130c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e25ec030-8611-47f4-af8e-06c571510053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3c6bc55-90ff-4871-9cd8-cc9b9a393da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d35297ad-09a2-4b89-9fed-69d9e37144ba",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aae1d47b-e734-4e2c-9002-b5b5bedc2259",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa04aac9-c1b7-4d4a-ad5f-139489e8bb10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55b47ab0-20f4-4bca-b43e-53da657a33ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f50a55ac-ccd3-485d-8fe6-9511693fe6ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a18fd87-122f-435e-bfdf-ebd5dff954f4",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e89590-68da-4406-8d38-146a556278ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c566e2d-9194-45b5-ac7a-e99beadcc2b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "179796ee-3671-4c27-8df0-6728fd7aed2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00812ad0-7cf0-4b7f-a059-506c96dce422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2bcca9a-8ddf-476f-8562-7cdc448170f1",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72e2fe19-2daf-4201-b974-0f6fd088cf0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1963439-4c77-4035-b233-6218fdc47678"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41d570e-c0a0-4e7c-81ea-2fbb885403f7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28eefb97-5804-40ec-be59-12cb145f0c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "760fe9c0-4b09-4e46-a1d8-aa71fe0d7ee6",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f5fe861-81e5-4cca-ab61-952e18b3c81c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "792acf76-b592-400b-b16b-b4e42cd81f18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c8119d8-1e90-436b-9ebd-0d888b94990e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cea5e09-80d2-4533-8f06-9111883225e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ebd0d08-1bb2-4f88-8145-ac525da90ede",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c7cee4-f067-4f7a-a0bf-85f02594a296",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdfeb696-2cbc-41a1-a43e-0ae198099f0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa3febe-f1b8-419e-9c94-01a887d4d52f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60ebcf8c-30af-4d79-90ab-6c2dcb23b42c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1327a6e5-599a-46a6-b887-09518ee9a2ed",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a51d5e7-67be-418b-98ec-7afecbaff9c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cd2fa4b-d1af-4608-a7da-0f0f326c9f08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d0865e4-7f1c-47d6-a787-4d3c4f61ed01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54e6fe78-883d-4b60-80d9-d373b5473257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd3da5c6-4677-472c-8726-93b81009083f",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d2af21-eaf7-40cd-8300-d86ac584c9cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1fc1d44-4484-48b2-b974-6765390c7f2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e61b58d-56a2-4d7a-be8b-7231178ec0a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9074169-6d1a-4ecc-ae83-04faad114f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "644c2fac-c6ce-48d9-ad36-0507895626ce",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6746186-af02-4f09-a5d2-4dc6cb1ff4ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79b775ac-b779-4f51-a3f1-d8c13ab1ffb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "407e8a56-41ac-403f-a41f-2b5ab9e28252",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f3a8e25-0bac-4847-85db-b1f4cece8db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12adda08-fd37-4efe-b7ec-398b41e2f812",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "218c7a56-2b6c-40fb-a243-ed3530860000",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "012e9700-2afa-4e0a-8266-7154057d16f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e75e3e35-f0d2-423e-b411-7b9cdbb4f3ba",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cad4be9-3eb9-48c7-bc0d-fbaf127c806f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46167665-bfbe-4633-b29f-aba16c4dd60e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c62a660-73f1-4ebf-a410-c2a1266aec0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c2033d4-81a9-4bb6-900c-5c8368ca487e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c969b6-1ac1-4b5c-936f-350a850b5b2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db828bf7-df77-426e-a6eb-0af70f481d60"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c2eec838-c450-491a-b978-7867f0faf2a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e666a0a1-0c6b-4956-b094-5b73ec1d7a5c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3465be94-5842-4a09-bcc5-1096edb5fed4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "82aa640c-59c5-451b-b0f5-efd0bac4732c"
                    }
                  }
                ]
              },
              {
                "id": "6024773f-6943-4f6a-9947-854aa8492d9b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d0a58620-c208-40cc-8841-5fdece3aa36c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "892fc9ef-2fde-4391-ac60-b0d3f7049f89",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b2a359d4-21f5-4d74-871e-161593bff386"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e5d111-4236-4607-b804-657905f6c329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0ea714a8-e56b-417c-b4c6-62442d2b2fb1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c7cbdb5-c8e5-455c-9a17-61e78eefe17f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d753fedc-c645-42e6-80eb-fdd149b0540e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "84768398-9df2-49dc-b75d-f6b737867fe7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f94d449-37b2-4fec-b8d4-a4e453aec777"
                    }
                  }
                ]
              },
              {
                "id": "deecb95a-6422-4188-b915-a6bebcce642d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "024b56b5-c245-400d-ab2f-764acef9245a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1d3efb5-c914-4feb-bbfb-46cc7bcc2f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c512a09b-002f-4e9c-b6d9-fb1d8cfe7996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "866fda5e-93ec-4d38-b14c-1a82ce6b7366",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8014cbbb-3079-40f7-99ff-b920c9cd8ad7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1e0f6ccd-ba31-4d73-976a-c18f7ac0febd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1ab5f745-8c93-4b5f-9352-266d3c1dec7e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "237b9c3d-29d7-4cc0-b1da-097c21244d65",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "842e6c51-177b-4604-ac64-b5408cd86b76"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9b87450a-37a3-4fb1-b957-7fd8f17443be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e49b0dcb-c0d7-4712-ac28-de0f962a6d8d"
                    }
                  }
                ]
              },
              {
                "id": "0294c86a-f056-4e0d-96a3-07ca05d7e3ee",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ce121f3-1c67-4b21-973d-cad4c6d2a947",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f7e19e68-41d7-4988-87ef-0a3e25349d60"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "283c384d-84b7-43c0-a45e-a9a172d61c33",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "feb20479-ca7c-4551-b817-b8956f4c72b7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a4814a98-53db-4411-9f95-2b0da4fc0717",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "11314d78-d97c-42db-9bc3-05b73aedb027"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9d99ee4e-c693-4840-af97-af5f5dec9f46",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e22016ad-e693-48db-986f-75202cd3e10a"
            }
          }
        ]
      },
      {
        "id": "94ef6055-29a2-4123-a516-23a1de643082",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f9d4e4fe-5519-4895-ba67-cc7d9d468912",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7c205cd8-ea64-4bdf-bacd-2503134ff874",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a8b4cf28-11cc-46a9-ac25-58ce32ef67de",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12fcf583-67b6-46aa-bb89-f19812423d6e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c0a1b4f3-182a-410e-bfbe-90ddafeb9a68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd759143-8498-43ed-89ec-e77af6465bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "156535fc-b047-4007-b8b0-53348679322e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "016a8cbf-1af6-4ddf-b838-d8083fbb067c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "55e0eaf8-7a60-4151-b696-577eae65fe9d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d78f014-3afc-4d86-b4a4-80b18afe43d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "231a0dba-2657-4c6e-96fd-a359d8fbe98d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b85c6e30-9e38-4bee-9568-d5526c4afb00",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "173c93e3-6cd3-468c-b04c-e587d120f9b6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9cea2d28-2ded-4f6f-8d98-e6ead18365d7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "75d6de39-b57a-42f5-91b3-9d3e1fcbb352"
            }
          }
        ]
      },
      {
        "id": "89d7ed70-c17f-4cbd-a6bf-898e095343c9",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "47605400-3e23-4712-a21a-dce162e5c54e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "29023959-3c9a-46c3-8c2e-b770c84c243a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "19045f4f-4f33-4c0a-b071-6665b2d73e1b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c6d016-2903-4c98-abcb-ec46fb3f3ce0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dbc97f7d-d98e-4b05-a3a4-2b69b03cff6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f34b2f2-feaa-4204-b71a-245e9fb0a8df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d1e7927-0f9c-421b-a86a-5e0c203f65ab"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af99c720-7280-43d9-91b7-c8b66646e339",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "106a46f8-73a4-49d7-b66a-a2cdbbcb8b02"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7cd79882-1c6c-40bd-907e-1031cd3f51c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3ed8da5-7129-4697-83e6-2e1db80ad754"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7b2b2f0a-e673-4c22-bb04-72de31bd26d2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "56911705-93fc-42f6-8500-06f6358e58aa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fae7efaf-ecd6-4662-8b6b-3be238ec2a3c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5b73aa95-1e31-4bd1-8249-68a6f8e8022d"
            }
          }
        ]
      },
      {
        "id": "a147da55-9267-44f4-828d-af8bca7d493a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "9739d94e-fe13-4a82-a7cb-c8c0c88fa84e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8f3b58cb-94b1-422b-9ce0-9ccc7a839026",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "704c0a9b-073d-48dd-972b-8d3a611511c7",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7293cfb-bd43-4b72-a351-c47d91e8c6f5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "feaa810b-7cd0-442e-b050-64689257587a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c139106-e769-44a9-9997-30eca4f6732c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "55cb5244-9523-492d-8f6f-7d6a3659e70a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bcc0df41-46a6-4428-848a-11f7fa4fb7c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95938d9c-719a-46af-bc74-ff6789cf90be"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c7a8079-0718-4baf-b67c-9cfdfe14d749",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5853ac15-f36b-4c17-8b2c-212158f31cd8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3dc205d9-1f13-45e1-8f15-9ab2a6348cd0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "54a0bc04-9e87-4d85-b472-f0ec89965fdf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a64f51d1-61d0-4d55-9c64-c40716e9e238",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "96ee0f59-03f9-46a0-9501-602812a87a36"
            }
          }
        ]
      },
      {
        "id": "47116d1a-c60f-4edd-8c98-ccc7eb367623",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "54b97425-4f0b-4bab-bfdc-4ddece9c2f77",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a984b930-1b77-4c70-a729-2cfb2f9c205e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "9bc2f0df-fc8b-465a-be13-5d8373c4b509",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "739a5857-6b8e-4fc9-8fd2-fea2586af46b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2d8ee30e-5714-448c-b617-7d5d2daf1f2e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 235.74736842105264,
      "responseMin": 10,
      "responseMax": 8876,
      "responseSd": 1102.9441521872038,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1700959073668,
      "completed": 1700959150466
    },
    "executions": [
      {
        "id": "8b2b693c-eeb8-46f7-a4d2-899c649474fd",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "b4dd754c-c187-425c-b0ba-e5434d6f00fc",
          "httpRequestId": "f3a647af-b4b6-4440-a83b-5d66f4896704"
        },
        "item": {
          "id": "8b2b693c-eeb8-46f7-a4d2-899c649474fd",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d054c432-8161-46f6-b74b-42a4a8093e20",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 0
        }
      },
      {
        "id": "2d5a36d2-fe5b-4448-ba8d-6bfa42d66766",
        "cursor": {
          "ref": "0b0f2ecb-0b24-42fa-8791-2863f412203f",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "82b14942-7778-4b13-b2af-6f5be635809b"
        },
        "item": {
          "id": "2d5a36d2-fe5b-4448-ba8d-6bfa42d66766",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "57453efd-4287-47f7-9e6c-433e24bc2e5e",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "bae6a2c7-0af9-4901-8041-63376b788520",
        "cursor": {
          "ref": "23e31f2d-92d0-46c7-ae7d-34fc9cdceef8",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9709f600-b4d9-4e9e-b4e3-29342fd04601"
        },
        "item": {
          "id": "bae6a2c7-0af9-4901-8041-63376b788520",
          "name": "did_json"
        },
        "response": {
          "id": "577deb7f-2041-4c51-9dda-cf6babdb6228",
          "status": "OK",
          "code": 200,
          "responseTime": 1691,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e7cc1e-9e4b-4f4c-bacd-263a3c308139",
        "cursor": {
          "ref": "c5ee37ad-f317-4d3b-a812-d47e64d6b991",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6f8cb207-35e1-4dec-a4ab-e45b5467c8ab"
        },
        "item": {
          "id": "32e7cc1e-9e4b-4f4c-bacd-263a3c308139",
          "name": "did:invalid"
        },
        "response": {
          "id": "f998559f-43bd-4bc2-bdf5-b403fb286dfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e7cc1e-9e4b-4f4c-bacd-263a3c308139",
        "cursor": {
          "ref": "c5ee37ad-f317-4d3b-a812-d47e64d6b991",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6f8cb207-35e1-4dec-a4ab-e45b5467c8ab"
        },
        "item": {
          "id": "32e7cc1e-9e4b-4f4c-bacd-263a3c308139",
          "name": "did:invalid"
        },
        "response": {
          "id": "f998559f-43bd-4bc2-bdf5-b403fb286dfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b76d14d-3ecb-47d0-b03e-401ab9852065",
        "cursor": {
          "ref": "15353604-dd66-4264-9291-5c5f517f11e7",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "cc2a31a7-a979-48b2-9783-cd46a28929f7"
        },
        "item": {
          "id": "4b76d14d-3ecb-47d0-b03e-401ab9852065",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "7e5fa272-34de-430e-b175-c9d974201aa5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 125,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91649ec7-6881-4cf7-be79-f5de4410e6f6",
        "cursor": {
          "ref": "5cba0968-7b83-43df-89e8-b745997539ae",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "488812fe-aad4-4656-9995-b4b8bfab37b9"
        },
        "item": {
          "id": "91649ec7-6881-4cf7-be79-f5de4410e6f6",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "245e5bae-2f21-4a41-a773-8c159aa63a60",
          "status": "Not Found",
          "code": 404,
          "responseTime": 56,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a725e3-74e2-4303-b26e-3286142b3d77",
        "cursor": {
          "ref": "d6f7c8f1-4fce-4be4-b110-4707397d3bd8",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9cacb888-d423-4693-a39e-5e79c061e11f"
        },
        "item": {
          "id": "a0a725e3-74e2-4303-b26e-3286142b3d77",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "395f811a-81ae-41e8-9f04-9d4f2c14648c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d4c5e2-da8a-4018-9234-68af39acd585",
        "cursor": {
          "ref": "70deb5e8-3660-4dc7-acb7-762ae2dd68b3",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3d3076be-233b-4fd3-87eb-a1917132f156"
        },
        "item": {
          "id": "21d4c5e2-da8a-4018-9234-68af39acd585",
          "name": "identifiers"
        },
        "response": {
          "id": "f9c5ff12-7bc1-486b-9de1-e4d0827c4373",
          "status": "OK",
          "code": 200,
          "responseTime": 1148,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "437dd558-07bf-4ccb-aacc-8a19cbd790d4",
        "cursor": {
          "ref": "99408688-694a-4f1a-aa8f-d342cc22d87d",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "03f98971-3024-4dc4-bfa0-681f0e031151"
        },
        "item": {
          "id": "437dd558-07bf-4ccb-aacc-8a19cbd790d4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "27fc029f-64ba-43fc-a816-216cccb3a980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e362e29-2a8a-40fb-adaa-a77254be32a1",
        "cursor": {
          "ref": "b5e3aef1-f0a6-4bef-aace-47f4daf0f448",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "089f1d81-0a97-4150-9d3d-bd0ed35aa902"
        },
        "item": {
          "id": "7e362e29-2a8a-40fb-adaa-a77254be32a1",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "3fa76e98-682c-4815-af77-3bf20275bf58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c080c8-8666-4899-9881-8592b125ed9d",
        "cursor": {
          "ref": "2c4f506e-680c-4e2c-8872-a710734a6a10",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a483cb7a-148c-4ca5-a5f2-65d82e35d9cc"
        },
        "item": {
          "id": "c2c080c8-8666-4899-9881-8592b125ed9d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "cfd43fdd-c9cc-40ad-a4f9-93b01b33dcdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6deb9ff3-c5c0-4997-907c-255a36533830",
        "cursor": {
          "ref": "f4615174-31c6-4240-89f7-a681edd67ce3",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "aff26bfe-433b-4956-ae50-8afb24f735b7"
        },
        "item": {
          "id": "6deb9ff3-c5c0-4997-907c-255a36533830",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d215bda7-facd-42fb-a61b-788520a8fe98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c14046-c896-4ac7-bfc6-4bbe7ee318bd",
        "cursor": {
          "ref": "676d4916-8850-47db-a565-fe7462e53000",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "bfbdf4ab-4196-4550-9b04-832e9011fa8b"
        },
        "item": {
          "id": "11c14046-c896-4ac7-bfc6-4bbe7ee318bd",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "61bb1e10-8912-48a6-8070-91a221fbdb23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36245dec-f109-4f4d-8f8e-ee4dfea53e11",
        "cursor": {
          "ref": "9f3f7036-4363-40b5-b386-23cf7e75c60d",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ecdbe94b-848a-4265-b801-ef6181540aab"
        },
        "item": {
          "id": "36245dec-f109-4f4d-8f8e-ee4dfea53e11",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f18669f3-89b2-4f24-a853-16f5dec2b395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10cab76d-6bc9-4826-9863-7259048c4985",
        "cursor": {
          "ref": "c4208f7a-c8e3-4cfa-a4ce-322e99985874",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "fec2bc47-9961-41c9-9144-c081ba4f4aa0"
        },
        "item": {
          "id": "10cab76d-6bc9-4826-9863-7259048c4985",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "1dd3b74e-820f-4db2-b474-3f73f4ac59f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c972b858-42f3-4bd6-98c3-6b40afa84882",
        "cursor": {
          "ref": "87f2eb36-d6ea-429d-b98c-3bb72701185b",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "63f38df9-0c0c-4fba-ac29-3432670eb851"
        },
        "item": {
          "id": "c972b858-42f3-4bd6-98c3-6b40afa84882",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "31779d57-9a4a-4fe4-8fe0-8e5e3a46939e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "664da859-93e1-4b26-b51f-ed02822f3f02",
        "cursor": {
          "ref": "442f1382-034c-4df9-a574-259f09875930",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5d5a1427-9273-4d3d-a790-2a58dc74234a"
        },
        "item": {
          "id": "664da859-93e1-4b26-b51f-ed02822f3f02",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e272b208-4c09-458e-bbcc-147a8ff5e1e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97d04b2-a86d-47b7-b028-61f09728a846",
        "cursor": {
          "ref": "b23e70a3-63a1-4ea9-9bff-14fa29cf3b0f",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "e9aceb10-1aa7-42cd-8855-794990eafd97"
        },
        "item": {
          "id": "a97d04b2-a86d-47b7-b028-61f09728a846",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "94e37704-330c-4448-8d4d-1fd47db6a4d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d30ae33-7737-44b2-bca2-a58263041ffb",
        "cursor": {
          "ref": "b079a3dc-3251-41eb-b9b1-85828c0ca863",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1ee1144e-94a6-4961-bab3-d530cf64f082"
        },
        "item": {
          "id": "9d30ae33-7737-44b2-bca2-a58263041ffb",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "24dd6d0c-c7e7-49db-93fd-23bba292d525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b031e0e6-2d8e-490d-b3d9-1b96c56bdbe1",
        "cursor": {
          "ref": "f5899ddd-8a8d-4c16-80c0-6401cd39d853",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c538f2cf-d026-4182-8529-d19411a52674"
        },
        "item": {
          "id": "b031e0e6-2d8e-490d-b3d9-1b96c56bdbe1",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "84bfd244-e990-4ecb-bf7b-dc744cd6eb08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8deba0-70c6-4f55-9c24-b75a8a0fc2e7",
        "cursor": {
          "ref": "6cace7d8-b2de-4e80-82a2-83af3d0794a0",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "49f6a50e-663e-4412-98ca-c916c7776e20"
        },
        "item": {
          "id": "ba8deba0-70c6-4f55-9c24-b75a8a0fc2e7",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "6d097094-4ef0-48da-9612-8d06621e09a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b004c8-5315-43c0-8efd-a411cb0cb295",
        "cursor": {
          "ref": "e6087078-1b40-46a0-a22c-e4108248c2bc",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "703f9ce1-a0d2-423d-8562-1f70c5f77f15"
        },
        "item": {
          "id": "75b004c8-5315-43c0-8efd-a411cb0cb295",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "22dadfb9-7fc2-4193-9f05-4de27194c121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a8a22c5-d339-4941-a991-e4f015bcd9ab",
        "cursor": {
          "ref": "6fbe0dd2-09b8-4504-8a9a-43a5417774ed",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "6208d1ef-2546-47c8-a56d-18686d675f68"
        },
        "item": {
          "id": "8a8a22c5-d339-4941-a991-e4f015bcd9ab",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c541f60d-4dd9-4948-8b8c-331cd2e0f889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdfbdec6-63d1-4cbe-8321-f2626344321f",
        "cursor": {
          "ref": "3b463580-929f-4743-b596-379474429131",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "27ba2639-cc8c-4603-babe-36fee1dc8609"
        },
        "item": {
          "id": "cdfbdec6-63d1-4cbe-8321-f2626344321f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "8aa87d46-24df-4de4-a0dd-b12bc72f9117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "214890cf-cbf5-4717-a4a1-4789f01f8489",
        "cursor": {
          "ref": "c0d2c609-7d3f-4c66-9b32-963a78bc384c",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d89888e1-c0ba-4b54-ae50-ef10ee523090"
        },
        "item": {
          "id": "214890cf-cbf5-4717-a4a1-4789f01f8489",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "5b92cddf-4d9a-4c88-b437-814a2193ecd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b86fb890-9ded-4ccd-92f1-efe38a976656",
        "cursor": {
          "ref": "38edf163-ab26-444e-b190-0c358e2174b9",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "8c2a9e2b-d5e7-4dfe-a3fa-db2882640a71"
        },
        "item": {
          "id": "b86fb890-9ded-4ccd-92f1-efe38a976656",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "7cc1ff35-c34b-4ee5-8dbc-a9dea21e72bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "436ee370-b1a3-4245-8d60-8d9e21434a01",
        "cursor": {
          "ref": "b72e20d6-38d7-4419-98e2-e510ba03663c",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b449137a-e110-4820-a6a5-4834e5696296"
        },
        "item": {
          "id": "436ee370-b1a3-4245-8d60-8d9e21434a01",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "eb4a04b1-8949-48e0-8f07-44f897dcaafa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5057a9e-60ff-4eea-89b0-2021ed70716a",
        "cursor": {
          "ref": "c1dabcf2-166f-4136-9034-9aaa9a1849b3",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e6d9f119-fa30-4a84-9ea8-3d4ae093ea71"
        },
        "item": {
          "id": "a5057a9e-60ff-4eea-89b0-2021ed70716a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6923fb2c-df2d-4aa6-a9c8-ff76321ec546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa9fd06-3450-4514-bfff-45c685f27a90",
        "cursor": {
          "ref": "2cf90a23-aabe-4c20-a38b-03b97a5e8d25",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ae158be0-9adb-4d89-b853-89bdc526621a"
        },
        "item": {
          "id": "eaa9fd06-3450-4514-bfff-45c685f27a90",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e63a7a46-a1b1-40c9-a90d-ca829b48d68c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c6aff5d-6973-4668-9cda-50639f14bcb5",
        "cursor": {
          "ref": "c8200495-b281-4d5e-9f74-4b1b889c9369",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9415f35c-2d57-402f-82a8-774527b16b5f"
        },
        "item": {
          "id": "2c6aff5d-6973-4668-9cda-50639f14bcb5",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "1b015f32-fc12-4898-8f4c-cf4c49ab5e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4228d5c9-3ecb-40cd-aa4f-1b25c5b09a01",
        "cursor": {
          "ref": "226e88eb-4b18-49d5-8d06-4fa823f40b45",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "27a64f92-afb7-4b6d-95e9-23be1384e982"
        },
        "item": {
          "id": "4228d5c9-3ecb-40cd-aa4f-1b25c5b09a01",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "26c5c2f8-5ff2-4984-9f94-4afb6f782a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c31ac2b8-453b-402f-b763-3aebe62a54b2",
        "cursor": {
          "ref": "c55cb871-e06c-49ed-a90b-10d62d34d30b",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "bdf04316-d7c8-41ee-b695-d1825b00adf6"
        },
        "item": {
          "id": "c31ac2b8-453b-402f-b763-3aebe62a54b2",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "1cbcbbb1-9a30-4b92-9cad-0e5a635a3180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79cf9762-6e18-4adc-9a9e-6cde99ca6f26",
        "cursor": {
          "ref": "3f7ca743-348e-46db-87ac-4adadf10ff0d",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "392c09c5-e21f-4d06-9fa4-079c67ccfa2c"
        },
        "item": {
          "id": "79cf9762-6e18-4adc-9a9e-6cde99ca6f26",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "def73972-fe9d-4346-a7e7-f8a55a90d86b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b9ab14-a7ef-485c-9404-7e2448b868ae",
        "cursor": {
          "ref": "200c3032-72bc-4f37-966d-9335b024635a",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "8048d6c8-18c6-4ae2-8168-f15a24bc6e5f"
        },
        "item": {
          "id": "f7b9ab14-a7ef-485c-9404-7e2448b868ae",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "e09c54d6-3cf4-40af-8f22-7b8624f073d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e32288e-775c-42bf-a00a-bc3a765d5223",
        "cursor": {
          "ref": "d7592175-7a4f-4310-9a87-a5e0c8bbcbba",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "34c81d00-4c94-49d8-a1cf-056276d97594"
        },
        "item": {
          "id": "2e32288e-775c-42bf-a00a-bc3a765d5223",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "8ab2542a-5c0e-4fea-8806-b841532b128d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeaa9008-8863-46c5-85dd-bb722628387d",
        "cursor": {
          "ref": "ec92238b-c205-4584-9595-94ddfeee3b24",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "5f62169a-78ac-4bcd-8176-83adbe903f3a"
        },
        "item": {
          "id": "aeaa9008-8863-46c5-85dd-bb722628387d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "529c8098-64bb-4997-8ab4-629031ada67c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef6b1e0-7266-40a4-aec4-448d4e7dd769",
        "cursor": {
          "ref": "e846dcf1-02d7-4bd3-92da-498785527070",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "4cb1d724-bae7-42c3-9115-e1fb7138eb28"
        },
        "item": {
          "id": "aef6b1e0-7266-40a4-aec4-448d4e7dd769",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "d82c99bb-ba08-4937-96ff-cb722400974f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "093468a1-9173-4367-8d66-2d6750d0a319",
        "cursor": {
          "ref": "7cba2910-e2cd-4a59-ba52-cca64e8cdf0e",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ece81b80-b60d-4ef9-befc-bd7e11607d62"
        },
        "item": {
          "id": "093468a1-9173-4367-8d66-2d6750d0a319",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "39e85c10-4682-493f-9e40-4067fbb4176e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e69d1e5-07a1-4036-ba67-3cd303fd24dc",
        "cursor": {
          "ref": "562f7889-0e1b-4326-8468-751e147c8b4b",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "73c1302d-db7c-422b-b6a1-b1323942afd6"
        },
        "item": {
          "id": "0e69d1e5-07a1-4036-ba67-3cd303fd24dc",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "80494510-efc8-47dc-9f6c-e48a54a7b074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c0f486a-1e1f-4e6b-8eb3-2f719098d40b",
        "cursor": {
          "ref": "2ce27d92-a195-4315-a438-73dd9b51abc5",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "eb5f9cda-ff15-4e02-935d-fbb0de52c41c"
        },
        "item": {
          "id": "7c0f486a-1e1f-4e6b-8eb3-2f719098d40b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "40707bbe-0bd8-43a5-9f61-b8f76009c953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f9d4a8-668b-48f2-ada9-ddb157b847a5",
        "cursor": {
          "ref": "a57efda1-b83a-4784-82df-0905b20764e8",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "33934778-782d-4c45-b495-e974b53e8ece"
        },
        "item": {
          "id": "a7f9d4a8-668b-48f2-ada9-ddb157b847a5",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "383db9eb-c99a-4d1c-beae-d6d9e23cdfec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3f5bb5a-62fd-46a3-b0f1-4adbec6d8006",
        "cursor": {
          "ref": "9ca7d182-038a-4188-a236-5d093c89e5c1",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "92371b8f-6ed9-4903-8322-5c7b0191e8cd"
        },
        "item": {
          "id": "b3f5bb5a-62fd-46a3-b0f1-4adbec6d8006",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "09c1a7db-b372-422e-9515-e5a493fc4805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d78b18-6974-45a0-b6a6-724c6099540e",
        "cursor": {
          "ref": "dc320153-878c-4477-91b0-392a249066e4",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "bd6265bf-cf67-4e32-b2e4-ffcfd56bf9bf"
        },
        "item": {
          "id": "86d78b18-6974-45a0-b6a6-724c6099540e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "274fab5b-6139-413a-9d22-7f073fad3885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0aed0dc-82fc-4309-9c01-9eedef7f9e15",
        "cursor": {
          "ref": "0bc02923-e48d-4abb-be1e-2d3b21aa15f3",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0b99f24b-240f-47b2-867b-ad99c29381e1"
        },
        "item": {
          "id": "a0aed0dc-82fc-4309-9c01-9eedef7f9e15",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5bc8596e-42c0-4d14-881d-c0fc87cf7654",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1439,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "558ebe35-4721-4c2f-99ac-46e3110eec8d",
        "cursor": {
          "ref": "f7cf3588-7efc-4079-8064-bab4eae02be6",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "18068aa3-c826-4e69-bf36-69476ac656fc"
        },
        "item": {
          "id": "558ebe35-4721-4c2f-99ac-46e3110eec8d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "1ecf7e4f-0194-4956-8193-5a138469f5a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c49c7e0-bd68-4b75-85ae-ffea05006426",
        "cursor": {
          "ref": "87b9c9fe-1a6a-4b52-9ad2-71c0db52b316",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "4272ee1c-e9fd-40f0-984e-ba1281b898f7"
        },
        "item": {
          "id": "6c49c7e0-bd68-4b75-85ae-ffea05006426",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "83bd2ce0-5bcc-41d7-bf32-4272c7dedc49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca71852c-9fd7-4081-b746-4a78e56ac45c",
        "cursor": {
          "ref": "e22d464f-6d87-433b-bfbe-b5a70ae41505",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "0d75d013-baac-4949-8798-51bc7aa9a540"
        },
        "item": {
          "id": "ca71852c-9fd7-4081-b746-4a78e56ac45c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "dc811246-4837-46ca-8a97-5273a13fdec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bcac69a-2231-4693-9de5-7512a745cea1",
        "cursor": {
          "ref": "7599d518-415f-40f2-ba4b-29027fc8b89f",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d32332e4-1a2c-4bb8-b33c-23c3f43451bf"
        },
        "item": {
          "id": "7bcac69a-2231-4693-9de5-7512a745cea1",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9360e81b-7961-40e7-95ce-0c9556e2eec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a391705-311b-4d95-b151-055d7d81c4ce",
        "cursor": {
          "ref": "aa8f84d9-f7e4-4bf5-af64-2d23f846dac7",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "78238033-bc81-4665-b186-bd609db13314"
        },
        "item": {
          "id": "4a391705-311b-4d95-b151-055d7d81c4ce",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "55dd4e3a-375e-42c6-b1ad-b82e287d1875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f26b644-fed8-4665-be05-3f4da8b58586",
        "cursor": {
          "ref": "e9654573-9fb0-4c1d-a178-b9fc1c54beef",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "dddd979e-a088-44c4-b778-ccd91f5fa001"
        },
        "item": {
          "id": "5f26b644-fed8-4665-be05-3f4da8b58586",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ba61c038-5659-4f26-bd5a-9a84889645bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0b04f74-90af-4a46-9733-2d491ac1e348",
        "cursor": {
          "ref": "e4c074c6-6454-4fd8-8594-6912d2436f80",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "70c683e7-71d8-423c-b524-fde9636e0fd0"
        },
        "item": {
          "id": "d0b04f74-90af-4a46-9733-2d491ac1e348",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "31531636-a359-4598-8d9f-3c99d42f294a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1400,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "588ab82b-ee9e-4ee1-9cb2-1d3525ddfeb2",
        "cursor": {
          "ref": "25c0c6aa-cc31-477a-99eb-328373f4c929",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "401ac85b-f343-44b5-a9db-7c13b11f19c1"
        },
        "item": {
          "id": "588ab82b-ee9e-4ee1-9cb2-1d3525ddfeb2",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3b082eb0-47ff-4c4c-b35b-a4ed76f3ea98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41398518-fe27-4fb4-b7ef-4ea4f161beaa",
        "cursor": {
          "ref": "555d0545-6ad4-4fb7-aa98-705042caa6b7",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e240ab13-e307-4454-8579-4154d9a54895"
        },
        "item": {
          "id": "41398518-fe27-4fb4-b7ef-4ea4f161beaa",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "965e7b5b-b378-4560-8c87-a1ee4d6348e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecbd1c16-9985-45fa-8847-935c89d9ad45",
        "cursor": {
          "ref": "86ba1356-681d-43ce-b44f-58c50ee3ded4",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "0d87e531-66a9-480d-85a7-c9db1c26c77b"
        },
        "item": {
          "id": "ecbd1c16-9985-45fa-8847-935c89d9ad45",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "be6a3ea6-c693-4054-aeb6-65f117888e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b6fac0-9c08-44ec-99e4-ae6935bec997",
        "cursor": {
          "ref": "16a557b6-650f-4952-9792-59d8ffba29e1",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "04ccd9ac-8e0d-4e06-9442-232397402d9f"
        },
        "item": {
          "id": "a9b6fac0-9c08-44ec-99e4-ae6935bec997",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "21d81503-e2f0-478f-851f-16d3c3fa11c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68416e18-8a96-45f3-9337-68abf51c8dd1",
        "cursor": {
          "ref": "ddf35f1e-0cef-4c84-ae5f-e8358db53b11",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "eb180a63-9ead-4296-b47b-970d8140bbaf"
        },
        "item": {
          "id": "68416e18-8a96-45f3-9337-68abf51c8dd1",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "8df6f61c-05a5-49cf-936b-3a80d593b1b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b90dbe0d-a926-4e90-8325-2802d54450da",
        "cursor": {
          "ref": "eb0da6d9-131f-461f-8eb6-0a816a075a8f",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6310c42f-fc42-4cff-8668-353229c38c40"
        },
        "item": {
          "id": "b90dbe0d-a926-4e90-8325-2802d54450da",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c4c41229-8601-4c30-b7f2-40d37ddc7414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0255c36-db6b-49a6-b40a-72478a29eded",
        "cursor": {
          "ref": "2b2b01b5-0697-459d-9187-2909f6c76b22",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "9becc615-ad1c-49ae-a0fc-a1dcc1d5eae2"
        },
        "item": {
          "id": "f0255c36-db6b-49a6-b40a-72478a29eded",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c7874f35-39b7-4e7c-b16a-a44358fbe4e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6df1c47-fe19-4ba7-8a70-b29c83adda5a",
        "cursor": {
          "ref": "442e2a47-0362-4194-9a2b-de76987ef26b",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "9ec0c362-90ac-4ee7-958e-e7fe18ac7473"
        },
        "item": {
          "id": "f6df1c47-fe19-4ba7-8a70-b29c83adda5a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "35d6f0e5-bd62-49c9-9118-4c036ea83834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e1e0537-1681-465c-a466-f6b0312869d8",
        "cursor": {
          "ref": "d68fdb87-f631-4649-b3b8-3f4163b8cdbe",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d8cad21e-12db-42cf-b75b-45a2def0ef1a"
        },
        "item": {
          "id": "4e1e0537-1681-465c-a466-f6b0312869d8",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e57be496-07fc-4653-8aec-347230e527b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2afd9b53-3e9b-4594-b76b-9fdb3e5d4b97",
        "cursor": {
          "ref": "30c429de-30d8-4795-9999-5d70752a7273",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "1cc61c11-f7f9-4b6d-abbb-539b3f47ae01"
        },
        "item": {
          "id": "2afd9b53-3e9b-4594-b76b-9fdb3e5d4b97",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "92fcccee-1c5c-4459-840b-42160f9d1553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eba1e0b9-c6a4-4ec9-83d3-3a54fe3a69a1",
        "cursor": {
          "ref": "e250672b-dcbd-4759-8928-76873253ea71",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b6e44920-ee9b-40e9-8f77-f683c442e0a5"
        },
        "item": {
          "id": "eba1e0b9-c6a4-4ec9-83d3-3a54fe3a69a1",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b941b41b-38f8-4ae7-9105-217cdc4a538a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e28990ce-1db9-4872-ac27-19e7415f5b94",
        "cursor": {
          "ref": "da9be4fa-8209-44fc-a892-a94bfe5d6713",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "37223972-ca1d-4cc6-bf55-2e26a79e07ad"
        },
        "item": {
          "id": "e28990ce-1db9-4872-ac27-19e7415f5b94",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "481f6c7e-9ec1-4cfc-bf23-4a8525322427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fdcd469-f498-4cea-92eb-33a62263b8a6",
        "cursor": {
          "ref": "57aadd3c-da83-4caa-b16e-dbcc9de8fc25",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "324856c0-c6b7-4861-bb0d-3efbcda05bac"
        },
        "item": {
          "id": "2fdcd469-f498-4cea-92eb-33a62263b8a6",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "54474bc9-3de5-4961-9c7b-42e24ad1874b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d79a360-0d5b-424b-8714-2e7db0620652",
        "cursor": {
          "ref": "c3eb9f74-81a6-4346-8594-9cfc38674c02",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "1a9342fb-a499-4167-b8ae-c6991f38da95"
        },
        "item": {
          "id": "9d79a360-0d5b-424b-8714-2e7db0620652",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "75528dc6-204b-49a8-9be0-89dd53f9d449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "880464c2-f620-4482-bc70-cadcdec16a63",
        "cursor": {
          "ref": "5c3ee3f2-3e8c-4ad6-9f72-ffe843b91da9",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a3b3d8b3-823b-40a3-a518-73f9c9d045f6"
        },
        "item": {
          "id": "880464c2-f620-4482-bc70-cadcdec16a63",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c3d2ad8c-5cad-4f25-828a-c06f890a2e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ac6ab8-885b-45f4-91aa-dce20ade6e29",
        "cursor": {
          "ref": "d4391f66-830e-4b1c-bd55-1b7646f091fa",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "dd58ef31-89c4-4e7f-95a8-8f611e0d2a31"
        },
        "item": {
          "id": "88ac6ab8-885b-45f4-91aa-dce20ade6e29",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "489fecb9-1cf3-449c-815e-204090c044f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "344469b8-a309-460d-98cd-e4eae9ea8e46",
        "cursor": {
          "ref": "caf46192-da18-449e-b84f-c79e3542c1ca",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "5724b12e-64ef-45f6-bc9f-988e48e5876c"
        },
        "item": {
          "id": "344469b8-a309-460d-98cd-e4eae9ea8e46",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "3d5c2b1a-4180-442d-95c2-c86376138b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faad4c6c-1de8-4351-8b9d-72adf84ca5ec",
        "cursor": {
          "ref": "c159d36c-ecf7-45b5-bb6e-3333ae5256e1",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "739a07b7-2db5-4772-999c-b4ae9f305fd4"
        },
        "item": {
          "id": "faad4c6c-1de8-4351-8b9d-72adf84ca5ec",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a3cd09da-9198-47ee-af56-db7d9870036c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eae46b5d-5f56-49d3-81a6-fdb1a2794dab",
        "cursor": {
          "ref": "91ce56b4-cf02-4022-8f35-f0d96b02116d",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "11e4c418-cf41-4a41-a360-8799bbf2b64f"
        },
        "item": {
          "id": "eae46b5d-5f56-49d3-81a6-fdb1a2794dab",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "479deb30-e12d-44f0-9ce1-d09fec261381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da236846-9cd0-463e-9d99-2fcc78640044",
        "cursor": {
          "ref": "a4239634-317c-43dd-a626-eacde3edc805",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "641611dc-75fb-46f5-a16b-ed37a9b7afc9"
        },
        "item": {
          "id": "da236846-9cd0-463e-9d99-2fcc78640044",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a9e51549-ab0e-43e3-92d4-ed0a6024b9ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e9c0391-009a-485f-94e4-a2bad915511c",
        "cursor": {
          "ref": "b9ab5e5b-af6a-4050-9110-f0df775c964e",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "9db9c352-dca8-4559-a378-5d222f8b92c8"
        },
        "item": {
          "id": "4e9c0391-009a-485f-94e4-a2bad915511c",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b3dfbc95-b6eb-4855-be3d-1ad09f0b0712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b4c1014-34db-4f37-889c-6605bc57ebc5",
        "cursor": {
          "ref": "3e22c664-10e8-41e1-b6f9-946e434d638c",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e8654fda-2344-4112-8677-082ef2e69f41"
        },
        "item": {
          "id": "3b4c1014-34db-4f37-889c-6605bc57ebc5",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b1d7bb26-081f-4e68-b21d-99d6d22de502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd77768b-ea4b-4725-9388-80affff1a679",
        "cursor": {
          "ref": "c783e94a-21d6-48b1-ab8f-3f76f3f959e3",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "2623855e-d7cd-4c92-825b-c799ea656fd6"
        },
        "item": {
          "id": "cd77768b-ea4b-4725-9388-80affff1a679",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "fb6b7308-795d-43a3-9f30-4224916f8143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a3fa69-e52e-4262-86fe-864ab465ce89",
        "cursor": {
          "ref": "62c90642-67f1-400f-bb69-653ce2e57c0f",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "dcdfd3e3-dd2f-4d6d-9384-36b829be6691"
        },
        "item": {
          "id": "c8a3fa69-e52e-4262-86fe-864ab465ce89",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d22f3da5-76c5-4cb2-970a-fc43f85addb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb6d40b6-4218-4cba-8212-f561cb80365b",
        "cursor": {
          "ref": "de7c1c2f-8e47-4c1f-bbdc-c5241bba7f35",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d5e02c58-cd1e-4e5b-82a5-df74939459a4"
        },
        "item": {
          "id": "fb6d40b6-4218-4cba-8212-f561cb80365b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5354c56f-328b-4953-9e2c-9ed6122a761f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670e30de-2021-446b-a2c9-db835a0df838",
        "cursor": {
          "ref": "81dc80e9-148b-4a85-a5fd-77039618232a",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "66f68e29-4016-4de0-a527-0fcba5b987ae"
        },
        "item": {
          "id": "670e30de-2021-446b-a2c9-db835a0df838",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "0d34b8e3-cec2-4237-9e50-66f5b30e3c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2dc4811-0c94-4c8c-a763-0689e519cadb",
        "cursor": {
          "ref": "7c17d76f-f94a-4279-91c8-9bf34787fb2c",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "5110f85d-53e1-4536-8d4f-377d8017936f"
        },
        "item": {
          "id": "a2dc4811-0c94-4c8c-a763-0689e519cadb",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9b19edfd-1ad7-44e7-90cc-01ae673a6b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e49654dc-eb5c-4957-b880-3963dcbf42c6",
        "cursor": {
          "ref": "e0aeff2a-dc20-4b3b-bf7c-d98344886e98",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "460c77d2-b31e-44b6-899c-b7f47f81c028"
        },
        "item": {
          "id": "e49654dc-eb5c-4957-b880-3963dcbf42c6",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "3a96654d-50a7-43c8-b7c9-61d865a31f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a845750-6765-4992-8441-12ef759967d7",
        "cursor": {
          "ref": "1e8bd8f8-67fa-425b-996c-fddcd3556638",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a6cdfe05-cefc-449d-9cdc-ef0afab9e906"
        },
        "item": {
          "id": "8a845750-6765-4992-8441-12ef759967d7",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "445f5941-c53e-4b77-aaf8-7907c46a9b2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea787c1-0a40-4c74-9902-2f1d341ae70d",
        "cursor": {
          "ref": "632c2cc3-4252-4350-991d-90962cdfcfd6",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6b02a317-5dc1-4952-94cf-73824b967491"
        },
        "item": {
          "id": "4ea787c1-0a40-4c74-9902-2f1d341ae70d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "8f28ba7b-b397-48d7-8f73-12de230a8d68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffab9f91-3eb0-498f-8b33-9d1a5716e63b",
        "cursor": {
          "ref": "643ab7d8-1d31-4c3f-a7e2-6f6358955c3b",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "2c9c15f0-75f1-44f9-890b-7190cc440022"
        },
        "item": {
          "id": "ffab9f91-3eb0-498f-8b33-9d1a5716e63b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "10c7f776-4745-4cdb-9c2c-559f349cd76e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413a33f9-1a3a-4818-8fc7-bcdfcd9a4a8c",
        "cursor": {
          "ref": "cdb10bde-c4de-484d-8299-71362a757f88",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "7f60d8b5-1f2a-4ac1-ad3c-286bcb82b664"
        },
        "item": {
          "id": "413a33f9-1a3a-4818-8fc7-bcdfcd9a4a8c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e1d487eb-6210-4d44-8d4a-91b1568d3715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8af36c-f2d1-4aa1-a9ca-76842c08a8b6",
        "cursor": {
          "ref": "bb0eccc4-d619-444a-9b59-b178ca33cfd0",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "956ec06d-51a2-46bc-be44-fef05efd6379"
        },
        "item": {
          "id": "3d8af36c-f2d1-4aa1-a9ca-76842c08a8b6",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "cf83dc03-8d7e-434f-b3df-639dcb3b441e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1397cf54-9e75-4460-b3b4-0f6fe30cf052",
        "cursor": {
          "ref": "5c023bd6-c808-47e8-8575-e5b3aa5c1cdf",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "3f8955a2-4b26-41f9-9c82-5787ff67b9b4"
        },
        "item": {
          "id": "1397cf54-9e75-4460-b3b4-0f6fe30cf052",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e6204a8b-07e8-449a-8e5a-436c1c0b9591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af2a97e4-6c23-4528-bcd3-b041cfea19b4",
        "cursor": {
          "ref": "358dfd49-c296-4d52-a5d7-25f4a2a0719f",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "635a9c8c-ac8e-4148-b073-1e7081afdb32"
        },
        "item": {
          "id": "af2a97e4-6c23-4528-bcd3-b041cfea19b4",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "6f317f9c-0e7f-43ed-8fec-3b6cfe7cbc85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a369777-4de1-402e-9067-5e7c898f4d0e",
        "cursor": {
          "ref": "9fe163cf-27ea-4cbc-92f8-de9d4e7ad14c",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "dcadfc18-4d6e-43d6-a226-de76dfdee817"
        },
        "item": {
          "id": "3a369777-4de1-402e-9067-5e7c898f4d0e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "deecd2a9-fde0-4aff-8d7a-af4d0bc4d944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6dc148-93ac-4141-bdbe-98556d691488",
        "cursor": {
          "ref": "073bdc48-1468-448c-afb3-47c6e7e641ca",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "33cdbe96-ceb0-4994-b424-4f48ed3cdb46"
        },
        "item": {
          "id": "fa6dc148-93ac-4141-bdbe-98556d691488",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "14a982cd-31c5-48f7-870e-3673d6297999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "543f72ce-a50f-420f-81f5-871baf50e9a0",
        "cursor": {
          "ref": "f2a37a2a-b00a-4d08-b0ab-7592cea5fc62",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "fbb8be01-bc29-4a7b-9e9c-bb6ced05735f"
        },
        "item": {
          "id": "543f72ce-a50f-420f-81f5-871baf50e9a0",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b65f69a7-a2d7-4002-8f5b-658c13f082cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e28209fe-4ba6-4ba1-9c03-8113f2a8d5f9",
        "cursor": {
          "ref": "7e30c067-0b02-44a5-b22c-509c26160a02",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "98c8c63c-73b2-488a-95e7-81d90263d1b5"
        },
        "item": {
          "id": "e28209fe-4ba6-4ba1-9c03-8113f2a8d5f9",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "65057d37-a9c4-4a1a-b55a-8fbf38abb4ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "882f634c-5461-4b12-868a-42cb9707ddfe",
        "cursor": {
          "ref": "888696dd-8c8a-478d-a719-d9d9d28787d6",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "80c916cc-9f82-46e6-9682-47050702931f"
        },
        "item": {
          "id": "882f634c-5461-4b12-868a-42cb9707ddfe",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "fd3188a4-1b49-4b10-8590-b1647d47f574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "393e1c1c-ceac-4b98-bc75-de1575d163aa",
        "cursor": {
          "ref": "607d0af2-d7c0-497f-b03f-4951801060c5",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "3e0ca787-3d20-4d5d-bc0e-f8823572ab9f"
        },
        "item": {
          "id": "393e1c1c-ceac-4b98-bc75-de1575d163aa",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "1f870476-1824-4a82-82bc-05a460f79388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf52216-f05e-478c-b5ad-bb1158ecc5c8",
        "cursor": {
          "ref": "a8e0e6e5-b29b-4208-bfd6-67fd548c9749",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b04a1ac6-d7f7-479c-8f2e-a30724f07e27"
        },
        "item": {
          "id": "4cf52216-f05e-478c-b5ad-bb1158ecc5c8",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e4c6f10b-8ec4-491a-a8e3-2a3d065e1ba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a25c453-b92a-4c00-81c9-a97679f3530a",
        "cursor": {
          "ref": "028fa87e-421d-4341-b84b-90ac4cc46ed9",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e6ead017-312e-4a73-9c4d-8dd79e9089b3"
        },
        "item": {
          "id": "7a25c453-b92a-4c00-81c9-a97679f3530a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "8e667e10-92a8-4336-9fcb-c29d3a74a8d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc94a5a-3e22-41eb-899b-e3ccde6bded4",
        "cursor": {
          "ref": "ad8b431c-624f-43d4-b141-74a0fdbb05cd",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f4ddbb7f-94e1-42c4-911b-3295cf52f9f1"
        },
        "item": {
          "id": "3bc94a5a-3e22-41eb-899b-e3ccde6bded4",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "50c3ba5e-3073-43f9-b7ea-c8b8495ec11a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd7c280-c2f8-4ae1-8185-dd266bb7658d",
        "cursor": {
          "ref": "c6115a56-d8e9-48a2-b963-daf121353001",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "de71992b-b1e7-4892-99f0-4ed95fe9ddf6"
        },
        "item": {
          "id": "1cd7c280-c2f8-4ae1-8185-dd266bb7658d",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "148a7dc3-4aba-45c5-a8e4-f08f06dc026a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c4883e3-89ad-4254-a6a2-64d089360c69",
        "cursor": {
          "ref": "1c0ef89a-37c9-4ae1-b982-ca607eda286f",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "351bfa97-3443-4563-9fbb-6093c0997176"
        },
        "item": {
          "id": "2c4883e3-89ad-4254-a6a2-64d089360c69",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "a53ec787-f38f-44cc-8bcf-ee03198945f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f3ccdae-0642-42dc-9020-3ace33952e54",
        "cursor": {
          "ref": "25710797-fa87-46c6-b686-141dd3fe688b",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "54375cc8-bfe7-4296-8353-622ee54893ce"
        },
        "item": {
          "id": "0f3ccdae-0642-42dc-9020-3ace33952e54",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "0133aec0-2ad8-49b6-8597-32098e83a55a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0dd1269-679e-45fd-bf15-93bd9bffce31",
        "cursor": {
          "ref": "7be640ae-27fa-4594-b3cf-c9ab4d974c85",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "91d957ff-4af5-43cb-ac31-b3865cb41b88"
        },
        "item": {
          "id": "f0dd1269-679e-45fd-bf15-93bd9bffce31",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "2bbf392d-9ccc-458b-a059-f3ace2c0785a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d1ad5c-bd0d-4884-8126-a60ea44dc42d",
        "cursor": {
          "ref": "1a4a82e3-4c64-419f-913d-89936d5ee3ee",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "74947f72-c0b0-46fb-b76e-9f2f0137a8a1"
        },
        "item": {
          "id": "e6d1ad5c-bd0d-4884-8126-a60ea44dc42d",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "ea49e7e5-e2e7-4f8e-be6a-6b4a8d538d23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5216d572-dc83-46ab-9838-fd25363ea510",
        "cursor": {
          "ref": "b13b2143-fefa-4b33-819d-c7cc58c83854",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b6f9b259-96ad-40d3-b454-1216b1d7f05c"
        },
        "item": {
          "id": "5216d572-dc83-46ab-9838-fd25363ea510",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d025dae0-5ed5-4298-9c10-be4113c0db6f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752efa06-d446-4db2-93c8-2fb180e1fdfc",
        "cursor": {
          "ref": "d360a8b3-3754-4b2e-b3d7-280a55fb0b76",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "5ba48fa9-ee31-4c80-93e8-043cf2b7bb6e"
        },
        "item": {
          "id": "752efa06-d446-4db2-93c8-2fb180e1fdfc",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "fb540273-023e-4623-b7c9-49eb0272655f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "df4d687a-07ad-41f5-9c86-b3e67c9b7d1c",
        "cursor": {
          "ref": "ea92abbc-7d5d-48b2-9ca6-2b8a1c4add47",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9239ea09-0a70-4730-9a11-acc201a0f3c9"
        },
        "item": {
          "id": "df4d687a-07ad-41f5-9c86-b3e67c9b7d1c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "97dbcd04-6704-498d-b17e-3703225f991d",
          "status": "Created",
          "code": 201,
          "responseTime": 8876,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1bf39e8-c0cf-4fd9-98c1-ac54d79b867a",
        "cursor": {
          "ref": "2108d603-80a4-414c-a2c8-f9631cbc15e6",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "0d92def2-5d61-42fe-a1bc-954619864455"
        },
        "item": {
          "id": "b1bf39e8-c0cf-4fd9-98c1-ac54d79b867a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ee0578a6-0856-41b9-ae36-2c097cf0eebe",
          "status": "Created",
          "code": 201,
          "responseTime": 7919,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b97dec7-68cb-4e22-82f9-777be883f9be",
        "cursor": {
          "ref": "42c0471d-8ed4-4f35-8bd5-1bfe87794f02",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f5b6f9ec-2831-46f7-984f-e9d6d7f76259"
        },
        "item": {
          "id": "8b97dec7-68cb-4e22-82f9-777be883f9be",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "671c7bfd-d5b1-4bcd-b8d4-129898a7c0b0",
          "status": "Created",
          "code": 201,
          "responseTime": 8781,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa8faec-7617-4a73-9384-9ff2c6725048",
        "cursor": {
          "ref": "c8308c0a-c87a-4617-93e8-ad06a8a4c037",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "960cf754-32f4-407e-9b89-a145c7f87cfb"
        },
        "item": {
          "id": "3aa8faec-7617-4a73-9384-9ff2c6725048",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ddb2675c-823a-4e7e-b1e4-05024a99d4a8",
          "status": "Created",
          "code": 201,
          "responseTime": 7774,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4722c193-38f2-432a-92f0-5b5230412f13",
        "cursor": {
          "ref": "bff418aa-bb8c-422d-9f96-b1ac68e26062",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "69f8c546-92f2-4585-bc4c-d5a2dd7a1e60"
        },
        "item": {
          "id": "4722c193-38f2-432a-92f0-5b5230412f13",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "23001598-1578-40fb-a571-ef0c1d68f04f",
          "status": "Created",
          "code": 201,
          "responseTime": 8256,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac97cb56-83d6-4b4f-b01e-e51e1a8368fe",
        "cursor": {
          "ref": "a7c8b135-0a8c-475d-9f72-dbc45d9920af",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "52bb9ee8-22b4-4f2c-87c6-159c37992526"
        },
        "item": {
          "id": "ac97cb56-83d6-4b4f-b01e-e51e1a8368fe",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "46f6f01d-fdc7-4519-a537-3445abe78423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "f3a78007-ac1d-4c01-bdc7-7907217dbd45",
        "cursor": {
          "ref": "8e120db4-b76e-423e-bc15-4c55315bbc80",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "65660cd9-b791-4576-8663-621070eb869d"
        },
        "item": {
          "id": "f3a78007-ac1d-4c01-bdc7-7907217dbd45",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e67ae09c-f228-40e7-9f27-9973fa7c85f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d549ebc0-f2a7-414c-813e-2bba5f4c1919",
        "cursor": {
          "ref": "23357763-eaca-4783-92ff-ab624c8d471a",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "27a53b04-36e3-42a4-ad7d-392a1466a3fd"
        },
        "item": {
          "id": "d549ebc0-f2a7-414c-813e-2bba5f4c1919",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5b3cd54c-3853-4dba-a205-46808cef28f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c22e2494-313a-4b93-84e2-ca63010f6f91",
        "cursor": {
          "ref": "466c232e-34e7-4f52-89e4-b19fb6d30e32",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e4b991a9-8334-4704-8b00-30a62eef45b3"
        },
        "item": {
          "id": "c22e2494-313a-4b93-84e2-ca63010f6f91",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "09f81dc8-97c1-4aff-a0fb-6a1cc7c924c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edce8c94-3e0d-4b65-90e1-9ff892badd7f",
        "cursor": {
          "ref": "eccdbf2e-67c4-468b-a2ec-555a4e38c680",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "9a6f8ab6-67eb-403a-b61f-06d3b9ba94a8"
        },
        "item": {
          "id": "edce8c94-3e0d-4b65-90e1-9ff892badd7f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "62b7256a-8cf3-4e3b-a6b5-e02790f3b9ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c14249-873c-4bb6-b10e-f6956058153d",
        "cursor": {
          "ref": "f5024742-b034-4566-8ee3-c54db41606aa",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c0d5b42d-391f-438e-8905-7b85c56a11dd"
        },
        "item": {
          "id": "53c14249-873c-4bb6-b10e-f6956058153d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "217cce8d-a43b-46ec-978f-ab5cfb4f7ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa6bfee-7e17-4c9f-961f-b93626d2d609",
        "cursor": {
          "ref": "6e5d2876-76ba-48ea-85a4-24c37233e498",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "7d8c96d6-4d62-4cfa-852d-43e3265a9ee8"
        },
        "item": {
          "id": "6fa6bfee-7e17-4c9f-961f-b93626d2d609",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7f874b61-77b7-41f1-9a69-97e728d932c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6569e839-13fe-4476-b43f-288cad4be28d",
        "cursor": {
          "ref": "412b5b2e-c894-4c22-b884-de472a2a8897",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8c14921d-5445-4fc2-bb81-87ffda55de00"
        },
        "item": {
          "id": "6569e839-13fe-4476-b43f-288cad4be28d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "86694af8-a4ec-438c-908f-a2ffd97cf122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f024e660-5682-437e-9201-76377e36a32d",
        "cursor": {
          "ref": "34795f53-f6ee-4342-b103-13ac093c577c",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "99213f7b-12f8-40b4-a3f2-d76978728ee8"
        },
        "item": {
          "id": "f024e660-5682-437e-9201-76377e36a32d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c7fed22a-6abc-48cf-9933-ea3878811e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe19425-c4b6-4b3a-913d-dc5ce436639a",
        "cursor": {
          "ref": "391b4054-5f74-4175-a627-9ded3ecb41fc",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "2f7fab32-c85b-4403-9dc7-71c884ff86ed"
        },
        "item": {
          "id": "7fe19425-c4b6-4b3a-913d-dc5ce436639a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a50c67e5-1251-4b42-825f-10fa259cc6b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5191c0e-c7df-4d35-8eab-d26171bd7a85",
        "cursor": {
          "ref": "ed5010fe-ac6f-4bd1-8481-fceb5a8d4edc",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "62781bdc-3a6a-42db-b045-6803dd20250f"
        },
        "item": {
          "id": "c5191c0e-c7df-4d35-8eab-d26171bd7a85",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "85668dc2-5dbe-4787-8f91-2653011f5688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81d6141f-3172-42a3-9513-e5937b125bd8",
        "cursor": {
          "ref": "d0d1b427-75e1-4d7e-a9e3-51ce565ba3a3",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b6803b5a-9a00-487f-9bf1-17de66e38c6a"
        },
        "item": {
          "id": "81d6141f-3172-42a3-9513-e5937b125bd8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "27bd4f2a-9d0d-4e34-a331-5f3600828af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e700dd9-ac1f-456a-aae8-a2ee2be0c6e8",
        "cursor": {
          "ref": "907b5a84-aaa2-4327-8390-11ca5dc187e8",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "72ae5392-5929-4289-8185-dda7ed8b5a21"
        },
        "item": {
          "id": "7e700dd9-ac1f-456a-aae8-a2ee2be0c6e8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "370ad9b3-acaa-4dcf-b2fa-0c7dc29abb8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99120777-ba9a-4a60-a07f-aed78bd2a9ca",
        "cursor": {
          "ref": "ad06cdd9-1f6b-414a-acf5-6ab48ef8811b",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e71e99ee-0b2e-47b3-9bb3-dcdfaf284820"
        },
        "item": {
          "id": "99120777-ba9a-4a60-a07f-aed78bd2a9ca",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2c58f7fe-7861-45aa-986f-179bdda0493d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176947fb-ac50-462d-a31e-583457746c74",
        "cursor": {
          "ref": "2e5ff3c3-47b6-44f7-acab-8e43cb0a1a1b",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d8fb50bc-3010-4ab4-9b0a-b625f64a4ab0"
        },
        "item": {
          "id": "176947fb-ac50-462d-a31e-583457746c74",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "930fccab-fb86-4b29-a722-5e4a1adc011d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b6080b5-94f9-4331-aa05-16ba4555aa30",
        "cursor": {
          "ref": "7aed218f-9c0d-4197-99cc-27156e44806f",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "738b5ac9-2d34-4481-a39b-fe365a03d6d5"
        },
        "item": {
          "id": "7b6080b5-94f9-4331-aa05-16ba4555aa30",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0c3312c9-3d9d-49a5-9ffa-381d7fdba6cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c19858-a702-40d8-a24e-9b0ca094c332",
        "cursor": {
          "ref": "25c00f7a-8d69-48a1-9765-22ef0141fcbf",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "533581c4-f4da-4e6d-8a4b-c7e1d1c2d199"
        },
        "item": {
          "id": "e8c19858-a702-40d8-a24e-9b0ca094c332",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6fe82b8c-9093-45c5-900a-785524c4f1b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5d255ff-4f27-4ba4-8ec3-f1f4dfd2a0e2",
        "cursor": {
          "ref": "820c98f7-27ac-4138-9e83-f68e323a294f",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "2c26005b-a81e-4b93-ae4a-bff64f3ae2dc"
        },
        "item": {
          "id": "b5d255ff-4f27-4ba4-8ec3-f1f4dfd2a0e2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3c8a4e7d-5778-4381-b5bc-f95fd712d5f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5886b1-46a4-41d5-a354-c542730d7fde",
        "cursor": {
          "ref": "363ea441-a614-4026-9aef-44627786ed71",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "69013ba9-091a-4b21-92fe-fe0e4838dcf1"
        },
        "item": {
          "id": "6f5886b1-46a4-41d5-a354-c542730d7fde",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b576dae5-f0d7-4766-a49f-943971e6a0fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a8deec-6ad4-4ac3-9a09-af529e213050",
        "cursor": {
          "ref": "3db39ab5-a7df-4ca9-8804-92da2f41642f",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3db08e3e-1875-4346-bc60-59f9f17ac147"
        },
        "item": {
          "id": "c5a8deec-6ad4-4ac3-9a09-af529e213050",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4e285467-9272-4a0c-80f4-60f46e17510a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d15dcb-3522-4454-ae6b-ed3c791b555b",
        "cursor": {
          "ref": "f2143e4d-fc14-40e8-b4bb-e54344a0cf72",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "acbc8235-31ba-4301-961d-7ffd315b9f9b"
        },
        "item": {
          "id": "22d15dcb-3522-4454-ae6b-ed3c791b555b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b617c42b-6d83-4ffc-b829-58ef2d11480e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d37931-5910-4de8-95f0-0c8df660e35e",
        "cursor": {
          "ref": "c5d04982-da14-4368-9db7-da0d77cf3cf2",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "0cf332dd-4d9b-4d58-962c-632ecf1673dd"
        },
        "item": {
          "id": "b8d37931-5910-4de8-95f0-0c8df660e35e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b91fc224-2478-41df-89d9-feba27f5f032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb9390f-9b32-4e31-b3cb-7e1447e6053b",
        "cursor": {
          "ref": "60324c7e-d9b3-4271-bd62-0c1a338b66bf",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "89472cc6-dc1b-4c6e-acf8-6c58e9385dd0"
        },
        "item": {
          "id": "cbb9390f-9b32-4e31-b3cb-7e1447e6053b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "87fc2f1c-710c-4a73-af76-bb3651805294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4225f70e-c55b-4159-a4f3-b510b9589d5e",
        "cursor": {
          "ref": "1b8fd061-4189-4678-b9c6-84f958f351c6",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f0eb18a8-ccbd-4de8-85af-45a7a1f0e1ba"
        },
        "item": {
          "id": "4225f70e-c55b-4159-a4f3-b510b9589d5e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4efbd230-fa87-4200-8618-eaa85f6f55ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "625519d7-11af-4e72-82d2-473d3962498b",
        "cursor": {
          "ref": "ba26bc90-dca8-4eae-a594-7fc42981b2dc",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d1f1475d-dafa-432e-93ef-9182ce9ebec6"
        },
        "item": {
          "id": "625519d7-11af-4e72-82d2-473d3962498b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ef062fdc-50ad-4f9b-a5eb-1364ddcadf49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33992949-c840-4a1c-ab01-68dd6d4271c5",
        "cursor": {
          "ref": "7f0cf7a4-c3e9-42d9-8a09-85a9557e7612",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "434a2126-82ff-4357-970b-f9bccdb06b87"
        },
        "item": {
          "id": "33992949-c840-4a1c-ab01-68dd6d4271c5",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d50477f4-37cd-4cb1-992d-3f02fea2b1b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b6b4fe3-d0ad-4f0a-9bf1-c878289339b2",
        "cursor": {
          "ref": "f40678b7-5331-4f6d-8b14-0ddc0e89a08f",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ca5dddc5-7f48-4b20-90c3-e4b6d298bce8"
        },
        "item": {
          "id": "4b6b4fe3-d0ad-4f0a-9bf1-c878289339b2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "00b8fa8e-6eda-48ef-b477-4b2055b31f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da623a6f-0aae-4d73-a3b4-fc9b3ce14338",
        "cursor": {
          "ref": "7ba48950-5ceb-4f75-a99f-62c4939c6ddc",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3ff3746d-d842-46c2-a0e9-0e4917501095"
        },
        "item": {
          "id": "da623a6f-0aae-4d73-a3b4-fc9b3ce14338",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "27ca17fb-5aeb-443e-a51f-41243f427622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2090e4c0-005a-48f1-8e1f-c6b0423b0598",
        "cursor": {
          "ref": "b632ddd5-2941-4e8b-90da-6ec96f6badc1",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "984a6ed1-27aa-49b5-8a24-61e8ee736218"
        },
        "item": {
          "id": "2090e4c0-005a-48f1-8e1f-c6b0423b0598",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2de466a5-111b-41a1-b682-d75c95ba26d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19950488-b33b-4000-8cab-e1f5eb67841d",
        "cursor": {
          "ref": "56cff891-e0d9-4b67-9afb-9c9c6df9bd65",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "4aa71293-2928-4ab1-b597-c370b57311fa"
        },
        "item": {
          "id": "19950488-b33b-4000-8cab-e1f5eb67841d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "797920e2-2158-4e7a-acf2-48777aed1df6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d83f46-1011-4176-b0cc-b90e84bc3723",
        "cursor": {
          "ref": "38078ed6-ecec-4f9b-aa4f-9cb8a352edab",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "005c9147-4521-44cb-9f65-9ec414b0b995"
        },
        "item": {
          "id": "b3d83f46-1011-4176-b0cc-b90e84bc3723",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7a802b0e-8d47-43ab-a6ba-5d2dbe49c74d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254ca8eb-a98c-49f1-abd1-bd335d814f05",
        "cursor": {
          "ref": "97aa13cf-4e98-4208-868d-e9a728e14ac5",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "3bfb8383-d7b0-4d0a-b6de-cc199b015011"
        },
        "item": {
          "id": "254ca8eb-a98c-49f1-abd1-bd335d814f05",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f2f7b17a-6629-410d-a0c8-386d4a4b59dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1176424d-4616-4feb-bcc6-7bb06fa846c7",
        "cursor": {
          "ref": "6d25d4b2-9c4b-401d-b3a2-a185bea50f52",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3236c7da-c80c-4b74-a382-7e6de95c8f29"
        },
        "item": {
          "id": "1176424d-4616-4feb-bcc6-7bb06fa846c7",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "bb800876-af91-4088-a2e0-3f1a097fbfeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91589835-9890-45bd-bd84-ebdee4f4e513",
        "cursor": {
          "ref": "bce1bbd2-4853-449d-86ec-9dede9d12baa",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ac10371a-e67a-41ac-9296-45ce6cb83ca4"
        },
        "item": {
          "id": "91589835-9890-45bd-bd84-ebdee4f4e513",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "70e9cf34-f6ea-4608-8cf8-4edcf12f85b1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c100f3-224a-4a8f-96db-24d433fb8f43",
        "cursor": {
          "ref": "5be51d0b-0ef3-4f07-9fed-38d8cfdef360",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d9072500-f87b-4842-b901-7c00e580ed4b"
        },
        "item": {
          "id": "39c100f3-224a-4a8f-96db-24d433fb8f43",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6d40ebc2-6605-4c5c-8336-b4f151f91cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a677e9-0314-4108-b6c0-ee1c19279a82",
        "cursor": {
          "ref": "430b37fc-3ce7-493c-ba47-d316e71b863e",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "322805b5-27d9-4a2d-9a27-6e0171b94f5d"
        },
        "item": {
          "id": "76a677e9-0314-4108-b6c0-ee1c19279a82",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f9a12b22-4718-43a2-9b6d-187ff5dc4635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d27245-2aed-40f0-9810-ad74cf11df0d",
        "cursor": {
          "ref": "4ea0ad91-e0b6-4a4f-a892-15bdb18cf780",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "0f83704a-5ac0-4b50-afd4-e3ac0f366a2d"
        },
        "item": {
          "id": "94d27245-2aed-40f0-9810-ad74cf11df0d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d08b714c-cb9a-46ed-9157-74c83a89aec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eee9826-6054-45f3-af13-4e2a03aa03fd",
        "cursor": {
          "ref": "048b9fa5-c486-45bb-b94c-a0ea490d22b4",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f38fbae3-8a1b-40e1-b427-9ee5918178e5"
        },
        "item": {
          "id": "8eee9826-6054-45f3-af13-4e2a03aa03fd",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1f053916-6f65-43a5-9b71-1e24e160b379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d33e3ca3-8631-46fa-890e-15cd64c0c04e",
        "cursor": {
          "ref": "4803878d-5989-42f0-b16b-e0cf0c4be076",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a8229363-4726-4bbb-b9dc-e1340abb3dfc"
        },
        "item": {
          "id": "d33e3ca3-8631-46fa-890e-15cd64c0c04e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "18e4331a-decc-46b4-8183-02ac8acd7b3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a929046c-811e-4a42-87b8-b3e6c418f7b6",
        "cursor": {
          "ref": "daeca1d9-a404-4447-8fd8-56715825cc2f",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "dd271cb5-5708-476b-9439-3a67552e1149"
        },
        "item": {
          "id": "a929046c-811e-4a42-87b8-b3e6c418f7b6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "08d348ca-9b32-4d54-8184-f66ebc5fe969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf443b6b-2680-47a7-bf8e-142d9f4ce4f9",
        "cursor": {
          "ref": "fff76f35-c270-467e-beea-fbba716ecd1d",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "52e79f82-234c-4e21-9ded-4cfe49cbb06d"
        },
        "item": {
          "id": "cf443b6b-2680-47a7-bf8e-142d9f4ce4f9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "58cbccb0-c397-48df-9a5b-15ba33041e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5103256f-be1d-4295-b453-0bbed91197ad",
        "cursor": {
          "ref": "b2ab2b89-603a-413f-90ae-cfa241282001",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1183a8cd-b6c7-49ef-b3d3-9a73644fa8a5"
        },
        "item": {
          "id": "5103256f-be1d-4295-b453-0bbed91197ad",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ff06358f-f18f-4afa-a901-29b9ce508dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e54e8dd5-9862-4c5a-bc0d-4157bf68d64e",
        "cursor": {
          "ref": "3739973d-c44f-44ce-acd1-d977d933a3f2",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e48de0db-165f-4e4a-bde9-f9dd29aaa08a"
        },
        "item": {
          "id": "e54e8dd5-9862-4c5a-bc0d-4157bf68d64e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b8e0c632-7e1b-473e-833a-beec093ccb21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7870c03d-d43e-40b8-95b6-1dd8c44d20de",
        "cursor": {
          "ref": "a1cae934-b67a-4216-bf91-99b71bcdd9a3",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "fb30ecac-2fd6-4f0d-9935-f12dbe559db5"
        },
        "item": {
          "id": "7870c03d-d43e-40b8-95b6-1dd8c44d20de",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8db0b765-f91f-4cdf-ac56-39480b4dddcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51292261-dba3-4128-a37b-94aa7c8d0c12",
        "cursor": {
          "ref": "076328fa-301e-47ce-8712-8f7a52b37ce7",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f075dbb3-a6f6-4296-a713-a044fc00c1a0"
        },
        "item": {
          "id": "51292261-dba3-4128-a37b-94aa7c8d0c12",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e63a6e35-bbd7-44dc-a9e5-0e6da708cbaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8476911e-0ee2-4af1-96e0-e7dffedeb926",
        "cursor": {
          "ref": "47067ef8-3b00-4fbe-9fed-c54539d4f47a",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "2ccf02e1-ba39-4b93-b253-1d7449fb53cf"
        },
        "item": {
          "id": "8476911e-0ee2-4af1-96e0-e7dffedeb926",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "af5b864d-4f9c-4a10-b28f-f2e895a1b4d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2271648-69cc-4a72-8ea4-082643dcbac1",
        "cursor": {
          "ref": "a1481d8b-3b66-41c5-82fb-035cd7f5b6d1",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "8fdf48eb-2a58-4ac9-ac60-5d0ebd66819a"
        },
        "item": {
          "id": "f2271648-69cc-4a72-8ea4-082643dcbac1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1a409db5-4b0d-462c-ade6-3f5c03de0369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eaec3bc-d080-43b9-92ff-27d4067c7bee",
        "cursor": {
          "ref": "fe2f958a-3b30-4b14-a1fa-bd15dcf08057",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "eb70ecd3-c752-4bda-807f-175e719eb379"
        },
        "item": {
          "id": "6eaec3bc-d080-43b9-92ff-27d4067c7bee",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "17774f8d-5b87-4daf-865e-6d93dc323c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e5d8b00-e7e7-4e4d-84c0-42028f515e4c",
        "cursor": {
          "ref": "385f7505-f5d7-4670-ac63-4e501d5b526a",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "81d4c161-f3bd-40f8-999e-e26c8ba8eff2"
        },
        "item": {
          "id": "7e5d8b00-e7e7-4e4d-84c0-42028f515e4c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5c13df17-9d9d-4b31-8dfd-0ba457ad0e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe3d059-a6f2-437e-a83a-94947e88160d",
        "cursor": {
          "ref": "9fbd447b-dc27-479c-bc63-89762f60f587",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "aaaaf922-761b-405d-b808-70557b934574"
        },
        "item": {
          "id": "4fe3d059-a6f2-437e-a83a-94947e88160d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "fbcc1114-327d-4e8e-8294-a6a59dad5e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e89e7d86-571e-42ca-ac6a-0387be763bf0",
        "cursor": {
          "ref": "2df24e66-63bc-4882-a64f-49c7f7197caa",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "7b4e37ba-1d86-429b-a79e-92f516fb3974"
        },
        "item": {
          "id": "e89e7d86-571e-42ca-ac6a-0387be763bf0",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2f5158b1-d6f2-4bf5-a984-25fb5d32e187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df2cda6e-88a5-47d7-87da-a123d5675fc5",
        "cursor": {
          "ref": "0f875544-2cce-4191-9b5f-595469238b80",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "655877e0-a666-49a4-a6b8-19bc12f318d2"
        },
        "item": {
          "id": "df2cda6e-88a5-47d7-87da-a123d5675fc5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f6faee63-eda7-410c-bb9e-636d097ca1f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c459c9-5c35-4ef7-b45f-4a2117b3e4ab",
        "cursor": {
          "ref": "8a819608-6b1b-427c-b879-c4ef9aa3a68a",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a97e8f15-b3e9-43c7-97ea-01290f2c9b2d"
        },
        "item": {
          "id": "a9c459c9-5c35-4ef7-b45f-4a2117b3e4ab",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e14c4e85-7bc9-4033-a054-db4418963542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b095858-d3b2-4e79-a665-7652084c03ab",
        "cursor": {
          "ref": "1950ce1c-64cd-4c91-ad36-7119b3414d20",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d036d791-3fd7-4c1c-9c28-89ff9f92f14d"
        },
        "item": {
          "id": "0b095858-d3b2-4e79-a665-7652084c03ab",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0e8b174e-2734-46f9-943c-f2b4b5e3ae59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f548d1bf-38d9-4e1e-97b7-eba048d31ce1",
        "cursor": {
          "ref": "c8cb7eb2-dbf9-48f9-8d07-033f4fafad60",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "df608a17-ba6a-4707-9c5c-5304b4f539a7"
        },
        "item": {
          "id": "f548d1bf-38d9-4e1e-97b7-eba048d31ce1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3e97538c-cae7-4702-9241-dd5487ec1444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492df9c1-9def-46a8-ae65-09887b25e8d9",
        "cursor": {
          "ref": "07fc1010-7bba-46ec-bb74-a11e46cc3b6b",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "371feeb8-33b2-40b5-bc7c-4a27721d187b"
        },
        "item": {
          "id": "492df9c1-9def-46a8-ae65-09887b25e8d9",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ccd9b9a5-aad1-4f40-8172-f4a710b66b21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "431f6f86-8267-407c-8b9a-3bbae6d654c1",
        "cursor": {
          "ref": "1345b9a8-cbae-44a0-81b9-dcab11302e40",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ee7f761e-f7e5-4b6c-9d5a-143e10343c44"
        },
        "item": {
          "id": "431f6f86-8267-407c-8b9a-3bbae6d654c1",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c2c64716-7649-4b4f-9e1c-9c6be9f735d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e9c4dc2-c10b-4a75-9f11-5c82570e99b6",
        "cursor": {
          "ref": "552cbfce-9055-4c73-bd2c-c128e9db20f6",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f40a60b8-611f-4ebb-923a-47860838631f"
        },
        "item": {
          "id": "2e9c4dc2-c10b-4a75-9f11-5c82570e99b6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c138df09-2852-43b7-93e3-b1fa452073fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84129d7-c4c5-4ac7-9399-10d2dad9ee89",
        "cursor": {
          "ref": "5d6f134a-9159-45f0-990d-8391468a5b15",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "07d7e656-692e-4c2e-bb68-fb9910c6dfdb"
        },
        "item": {
          "id": "c84129d7-c4c5-4ac7-9399-10d2dad9ee89",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "bbfcdc1e-fa52-487a-99b3-4a756dbd1cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc2446bb-743d-4ece-a95a-d657f9f7afc1",
        "cursor": {
          "ref": "7cafaac1-f714-44b1-af78-3380f381cd49",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "df6f575e-2285-49f7-904c-b186d329da3e"
        },
        "item": {
          "id": "bc2446bb-743d-4ece-a95a-d657f9f7afc1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4bd6f123-b3e5-4a0a-974b-631123c1b278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "226ad2db-454c-428f-bca7-bce0b077ce24",
        "cursor": {
          "ref": "9a486d3b-53cd-438a-ae8d-1051f79ac480",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "aeb5da6e-8bc8-45d4-8411-87abb91b8316"
        },
        "item": {
          "id": "226ad2db-454c-428f-bca7-bce0b077ce24",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0274da84-c5be-4c9e-bc35-a525b216df81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28694a31-d163-4498-b9e9-19b80bd7520a",
        "cursor": {
          "ref": "244142f9-000d-4b11-aea4-c5247e57749b",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "4993cbaf-e6a7-442d-9fa5-b7f5f1710bb5"
        },
        "item": {
          "id": "28694a31-d163-4498-b9e9-19b80bd7520a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "cb9d917e-d027-4ef6-9221-3e5f1dec4f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2cbbfe9-906e-457b-9c9f-1717dc7bb369",
        "cursor": {
          "ref": "d1b57be3-bf46-4ad5-8cca-f3b9b2f49aa3",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "3adce149-d3bf-4d15-a483-4d15624af7bf"
        },
        "item": {
          "id": "c2cbbfe9-906e-457b-9c9f-1717dc7bb369",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "18e6a59a-f2a3-4c77-9009-690b967abd21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d03618-fe62-4fe6-a00d-891e3694c20e",
        "cursor": {
          "ref": "bf589c1d-51a2-4f25-b1b2-37daa4f064d6",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f02072ac-6279-4d90-a2cc-9e5bd99845b5"
        },
        "item": {
          "id": "a1d03618-fe62-4fe6-a00d-891e3694c20e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4e887548-1b52-4868-9dd7-46027edf1fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77abdf41-2b59-4b11-9d74-a6eb00e87389",
        "cursor": {
          "ref": "3e9b9758-532a-46df-bd18-27419309c3ec",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "63ece928-9c3e-483e-87f4-c707ca796434"
        },
        "item": {
          "id": "77abdf41-2b59-4b11-9d74-a6eb00e87389",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "eb0e8df5-339a-4b8f-b655-6e1511dd9990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e8874d-568b-4a31-9250-88178f89a894",
        "cursor": {
          "ref": "3ba6883b-39cc-4442-bab2-00d4c66c6bc9",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4576ca77-5172-4dd9-9367-f23c7b2247ec"
        },
        "item": {
          "id": "a8e8874d-568b-4a31-9250-88178f89a894",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "d306a486-5c36-4dc3-afb7-008b41386508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "098148cf-688b-41ea-9acc-cfccd96071d8",
        "cursor": {
          "ref": "c16ec9e2-9708-4075-a3ca-23316a1fb709",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "0217fdfa-c93b-4238-9e70-382820890ac8"
        },
        "item": {
          "id": "098148cf-688b-41ea-9acc-cfccd96071d8",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d20ce12e-9eb7-4565-be61-c79756ac8f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f05433-e3cf-4607-b9d8-26316a114bf6",
        "cursor": {
          "ref": "f9ca957c-4705-4b38-885d-18d0855ff3f0",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "9438a630-56bf-43bf-a2bf-8c01c0d40139"
        },
        "item": {
          "id": "01f05433-e3cf-4607-b9d8-26316a114bf6",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a571d7c8-e625-4ce0-b96b-14495f0fc05a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c3f787-d16f-4d52-879d-a43c0510c7fd",
        "cursor": {
          "ref": "0278679b-1f38-4574-ad95-d1103ca8860e",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f28aff5f-563f-4d75-a6de-b76180124138"
        },
        "item": {
          "id": "75c3f787-d16f-4d52-879d-a43c0510c7fd",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "37450ab4-9726-40a1-bb59-3b4f2f9e9701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51495943-58df-448f-aa24-eaa6e6432fd2",
        "cursor": {
          "ref": "f972a6d2-552e-4db7-af0b-2f384c378b40",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d89ed5c8-eb4d-4fb6-95c8-cd1c197227b6"
        },
        "item": {
          "id": "51495943-58df-448f-aa24-eaa6e6432fd2",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f0f2a0b1-2041-4529-8991-3e7ebbff300b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bcc744f-6583-467e-9426-cce3cb378734",
        "cursor": {
          "ref": "8dbe974d-5f36-4d55-aa95-760a5647c16d",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "9b8a5055-4238-4777-ad21-174152a7992d"
        },
        "item": {
          "id": "6bcc744f-6583-467e-9426-cce3cb378734",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "9fd68cb2-a3ab-4826-a4d3-54d0edee7265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab640a5d-77e2-4051-b6a8-79c6d5e6c39c",
        "cursor": {
          "ref": "15d7f71c-0519-42e1-a3e6-e6211fa0d2c7",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "12f40d8f-b7ec-4026-af93-4e470b56adcd"
        },
        "item": {
          "id": "ab640a5d-77e2-4051-b6a8-79c6d5e6c39c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "fa63b681-025b-495e-a1ae-eee02e6919dc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2622885-6c23-494d-b593-e7ae1067ce4d",
        "cursor": {
          "ref": "919c9fd9-9482-4d8c-a9ff-bd8ad792f6bf",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "50457360-2cf3-44df-98b4-e4ca3375f729"
        },
        "item": {
          "id": "c2622885-6c23-494d-b593-e7ae1067ce4d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "1b8c80f6-78c9-4be9-bae5-066be2b55972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a59f02-d5f1-47e0-ac17-a581f46614eb",
        "cursor": {
          "ref": "b23d6bed-275a-41ea-a45a-10c44a6899f9",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "7fcf2cbd-ded0-47fc-8f42-5475dd6362d2"
        },
        "item": {
          "id": "02a59f02-d5f1-47e0-ac17-a581f46614eb",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "81eed21b-f0d0-4df7-bba2-4b3c36efaf99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad1b5cc-3b28-417b-aa28-d0f7697a140e",
        "cursor": {
          "ref": "27085d2c-c2d4-4919-b7af-80b01e28b9d7",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "595026b1-e381-4212-8570-3f83d2bbac19"
        },
        "item": {
          "id": "5ad1b5cc-3b28-417b-aa28-d0f7697a140e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3584b90f-1fb6-480c-9ff7-f44452a3d701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f759f9-7cf7-43e1-9310-c2670269d7a5",
        "cursor": {
          "ref": "df2391b3-f98b-4e1f-8bd9-882aa643b86e",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "86484703-067c-4c3d-8dee-cdcb39a6e199"
        },
        "item": {
          "id": "c1f759f9-7cf7-43e1-9310-c2670269d7a5",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "da8f8ed4-2783-476b-9431-3cdd751760dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57788d19-3ebd-4fec-886d-7fe1dee082d4",
        "cursor": {
          "ref": "e9c1c219-a980-49fd-8e0a-0e9b78cd03ea",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "5a8d3017-29ad-449c-9826-4bc430b1b0e1"
        },
        "item": {
          "id": "57788d19-3ebd-4fec-886d-7fe1dee082d4",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "b5ec7ac6-2c90-4394-b355-ba9329ecc584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "069eb699-4000-41e6-8c68-5e328614cc9e",
        "cursor": {
          "ref": "e69cc7a6-a523-44dd-8479-60273e9df323",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "27c3aba9-eb11-4002-b766-28b83cae69ad"
        },
        "item": {
          "id": "069eb699-4000-41e6-8c68-5e328614cc9e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "7a64c4fd-e001-41a0-821d-d1bbfec97b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46cd6c40-040f-4426-a809-2e8d41136da8",
        "cursor": {
          "ref": "fe1a49e3-8df9-40de-8fcc-dbbad00c8d4a",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5f3c693d-ad39-4fe2-af68-791b58e8ceb1"
        },
        "item": {
          "id": "46cd6c40-040f-4426-a809-2e8d41136da8",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "583219ff-a985-45e6-9328-de4c403abfed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae84875-6fcf-46d7-80e7-9364acd71a0b",
        "cursor": {
          "ref": "d367bbcc-fabd-4a20-aa98-24f80504beb5",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "fcd600e0-864d-4ed8-ae67-e086a50033f7"
        },
        "item": {
          "id": "8ae84875-6fcf-46d7-80e7-9364acd71a0b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "93ea29c4-5cf2-49e1-bce7-ce5685b49ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f0e103-fb2a-4476-99ec-f428eca7d092",
        "cursor": {
          "ref": "563611c1-8c21-40dc-a290-7daad07854c3",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6bb86ecc-fb16-4634-84c1-90cb26d3dd02"
        },
        "item": {
          "id": "f7f0e103-fb2a-4476-99ec-f428eca7d092",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "701f19b0-c8ba-4812-ba5e-056181b2888d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32a215c8-0b3c-41c2-b722-35352c2ee9b2",
        "cursor": {
          "ref": "8e9fec88-1c0e-47a8-984f-abec1dd9b597",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e57bcac2-0a30-4593-8132-7e0cf87c8508"
        },
        "item": {
          "id": "32a215c8-0b3c-41c2-b722-35352c2ee9b2",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a739ec3c-fd26-48b8-ba88-d942446dc003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "631a58b5-8c77-4df6-91fa-96883c22eef8",
        "cursor": {
          "ref": "b7030f86-3be9-4d27-9ec1-da74d5653800",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "605b391b-6d63-48f8-99f8-1eb8ee4901fc"
        },
        "item": {
          "id": "631a58b5-8c77-4df6-91fa-96883c22eef8",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "7b8dcda2-7595-43d7-96d0-3c6d39077684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c51642fa-d5fa-4495-90a4-df4f5b387056",
        "cursor": {
          "ref": "e5159b89-1ad7-4870-b8cb-cd284ddaa7fb",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "cf219a10-fac5-4036-a51c-bcb47f8cea62"
        },
        "item": {
          "id": "c51642fa-d5fa-4495-90a4-df4f5b387056",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "886e4426-62d9-4dad-9a2d-f9b56319f649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fccbe086-4722-4166-acb0-df36a236d6b0",
        "cursor": {
          "ref": "0a933011-ded6-411d-a427-cc82f1973391",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "5a1cd7de-94a7-465e-bd4f-ed7d1ec6f9f2"
        },
        "item": {
          "id": "fccbe086-4722-4166-acb0-df36a236d6b0",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b3872c92-3ab4-45f4-aca4-ab6b6f50f1bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06543861-6cce-4a0d-afc9-2364f0aaba13",
        "cursor": {
          "ref": "a2101199-fb49-4ce2-ac62-b90a888a61f5",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e94eea7c-d63d-40ac-8b16-5d653cf13d64"
        },
        "item": {
          "id": "06543861-6cce-4a0d-afc9-2364f0aaba13",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "0781ee58-a823-4ca9-bfd7-7c512bb886b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73ca10b-4ec2-484c-9990-71ef2315c0e6",
        "cursor": {
          "ref": "fe7d3f6a-76bd-4a73-ae49-79b7d53a6c0e",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c220d6e3-8d7d-4b77-a62c-55bdb7c059bd"
        },
        "item": {
          "id": "d73ca10b-4ec2-484c-9990-71ef2315c0e6",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "5174c8f2-a278-47e1-b031-6ae35640afb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "189d762d-5a39-48d7-bc27-cadf11258489",
        "cursor": {
          "ref": "2f4bcbc2-46ee-45d8-bdd6-44cbb8427f2b",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "7e76bebc-3e5b-41a0-9646-8d6504402b7a"
        },
        "item": {
          "id": "189d762d-5a39-48d7-bc27-cadf11258489",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a20a4149-ca55-440b-9b2e-5f67e8119139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93597eba-b0ab-495b-99e8-4fac8adc8680",
        "cursor": {
          "ref": "0de479f1-f6e9-41f9-85ac-ba07bd0f96b5",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "9f803402-d468-42de-a746-ae305e11bb7f"
        },
        "item": {
          "id": "93597eba-b0ab-495b-99e8-4fac8adc8680",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a6279bca-552e-4aa8-a6b7-b66a17f2238a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f46a2f-e1f5-4a76-ad3e-4bfcc3581c69",
        "cursor": {
          "ref": "bdca1bed-be01-44f4-b480-4b320824212b",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "9f6fe30a-4fb8-4aa3-ac81-1d9780f0ed09"
        },
        "item": {
          "id": "56f46a2f-e1f5-4a76-ad3e-4bfcc3581c69",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "08f0bf87-ffe0-4353-98a7-95256726432f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd14b1e-5ef9-4162-a39d-c1d039a3c3ac",
        "cursor": {
          "ref": "a51129a8-1d45-41d8-b420-4ff042dc1a93",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "02f0e9e7-6988-42c0-8eb9-ddcd3b38233e"
        },
        "item": {
          "id": "1bd14b1e-5ef9-4162-a39d-c1d039a3c3ac",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "efa94397-478b-4c8b-8326-f4b1ec7bc7f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d00aa5d-6f4b-405f-ba83-51351371fcb8",
        "cursor": {
          "ref": "d1c6175a-24f5-4915-a77d-7350ea26a644",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "11add401-fd7d-4bca-af08-e2a20888e487"
        },
        "item": {
          "id": "6d00aa5d-6f4b-405f-ba83-51351371fcb8",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3403aac5-d505-4f8d-b2fa-15a9542269b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa50edee-4b42-4e6a-9385-e9903e87a1fa",
        "cursor": {
          "ref": "cfa3fd87-1be9-43fe-b711-4bf05f2fa9dc",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9939f030-eda6-40cd-a721-0265d843b013"
        },
        "item": {
          "id": "aa50edee-4b42-4e6a-9385-e9903e87a1fa",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "bd34f8de-8b62-4c03-a2a1-9c70179aa689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaee33e0-d464-4451-a468-d7216f1a9c6b",
        "cursor": {
          "ref": "c9431629-87c5-42af-9ed1-e5545525832e",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "db10c107-21ae-47a3-b834-77e02b3983fe"
        },
        "item": {
          "id": "aaee33e0-d464-4451-a468-d7216f1a9c6b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "dc527ffd-440b-45e5-9e3f-e3ed75c3100a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac672752-1562-42d6-b4ae-299de6491b54",
        "cursor": {
          "ref": "443902ab-02fd-4e27-8ead-a2469c8e74c7",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "7b770942-981b-4161-98d4-074b181c8837"
        },
        "item": {
          "id": "ac672752-1562-42d6-b4ae-299de6491b54",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "21976b5f-81d0-45c0-8538-9b804588fc90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e90199c8-da57-4add-bc38-eeba667eef72",
        "cursor": {
          "ref": "0d6a7042-28ec-41ce-8c9f-4560d15ee988",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "6437f43c-0cd4-431e-95ac-3717c6ad1110"
        },
        "item": {
          "id": "e90199c8-da57-4add-bc38-eeba667eef72",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "40b499b8-b2bf-4e7e-968a-5fcc8e8fbade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650e6a98-3398-4f31-9914-1b79389d613c",
        "cursor": {
          "ref": "500d66b9-58cb-4806-848d-949b26e2d7f9",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7d2b1935-506c-426c-a944-31e074af9126"
        },
        "item": {
          "id": "650e6a98-3398-4f31-9914-1b79389d613c",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "b1c0b5d2-1212-4bc4-90eb-555ff399e19f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a87f74-67a3-4ebd-9cb4-c65267bbfa70",
        "cursor": {
          "ref": "756f1ed9-6dbf-4fd5-8fbe-fa11c741a981",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "7b6bfe77-2936-4d85-844f-04e256d785f0"
        },
        "item": {
          "id": "57a87f74-67a3-4ebd-9cb4-c65267bbfa70",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f02ad670-afd9-4635-8c3a-acb2a1bababf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13028cd3-875a-4d05-b89f-57b1ec2b3c08",
        "cursor": {
          "ref": "77fc316c-83c4-4d84-9e5c-06c0cace1dcd",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e61a0c4f-8bbb-454e-a3cd-d999d24bb917"
        },
        "item": {
          "id": "13028cd3-875a-4d05-b89f-57b1ec2b3c08",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "beba57c1-3112-4c65-964e-be08961d88f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4cc723b-e230-4db0-9d61-eef49f5e034a",
        "cursor": {
          "ref": "85a58dd8-3ac3-4fbe-9acb-e22c3702f5cb",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a5221198-f0c2-417d-b78f-93b334235d61"
        },
        "item": {
          "id": "f4cc723b-e230-4db0-9d61-eef49f5e034a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c3e624bc-9da9-4689-9d74-59f5ae21b468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e32b6760-0788-4ccd-b0db-f98ad4639605",
        "cursor": {
          "ref": "9ada632d-9784-48dc-9de6-fa207e0bc40a",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "0cb8e9a4-b124-4aed-8fc1-9df61f651214"
        },
        "item": {
          "id": "e32b6760-0788-4ccd-b0db-f98ad4639605",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e9a34400-85fc-4c8e-8e30-885f7aeb096f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde9f26a-9b10-428b-baf8-04b3d17b11a9",
        "cursor": {
          "ref": "14078d7a-c464-43de-9537-8c9e5796a3ca",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "20742cf7-52e6-40fa-a534-43bb1dabd2a8"
        },
        "item": {
          "id": "cde9f26a-9b10-428b-baf8-04b3d17b11a9",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "bb80f9cd-bedb-4341-b732-606b1bddbde3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f7b4e0-0608-4bfe-96b9-a2c72b9334fb",
        "cursor": {
          "ref": "6e787435-5148-43d9-846e-0f2205ea2785",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7d797335-1139-4377-aeb8-ceeca7236b73"
        },
        "item": {
          "id": "f2f7b4e0-0608-4bfe-96b9-a2c72b9334fb",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c9037acc-7782-4eb1-9fe0-ca58632c5b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "852117ed-a55d-48ba-bf54-11584ff9d30e",
        "cursor": {
          "ref": "f992de6b-0bf2-4f37-8a98-7f7686bbc8a6",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "2cad6c9b-09bc-4637-abe0-e73b0ea31cfa"
        },
        "item": {
          "id": "852117ed-a55d-48ba-bf54-11584ff9d30e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "08f7c60b-7faa-429f-a03e-18972163ce70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f896a1c3-e5ae-4174-b025-12ecab10e42f",
        "cursor": {
          "ref": "14f14d0d-c4a3-4ec1-b1f9-d3c5d75a41e1",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "46714c65-3989-4fd9-be0e-99965c966da2"
        },
        "item": {
          "id": "f896a1c3-e5ae-4174-b025-12ecab10e42f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "22663eba-d2f8-4702-8a24-0dee46dc62ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f704003-b773-4afa-b0a0-9632dfbd5365",
        "cursor": {
          "ref": "256f8c42-04b2-44e1-9248-9d79d4c72e54",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "bdc3fe18-aac6-41e4-b9f3-e69f4910f5e0"
        },
        "item": {
          "id": "8f704003-b773-4afa-b0a0-9632dfbd5365",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7f62cbc2-6c25-4931-83f8-4e571210bacb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d856c15-431a-4a84-9951-937006069751",
        "cursor": {
          "ref": "c69a59fe-8bba-4c06-a740-be9f63c3441b",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6062a8bb-803e-4356-9be4-f7ce784e0241"
        },
        "item": {
          "id": "0d856c15-431a-4a84-9951-937006069751",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "915f0950-b6e2-43b2-bcc3-59c303a24a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff7090fd-f97e-4aa0-81d0-49c61df17f6c",
        "cursor": {
          "ref": "af8467ab-7b8a-4edf-bb00-9717496eafff",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6b234e28-ba80-41c3-8ebc-73ddd8082ea0"
        },
        "item": {
          "id": "ff7090fd-f97e-4aa0-81d0-49c61df17f6c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f43e8e35-7565-4516-8b14-048dbf20e322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b923126-031b-4b67-b7fe-b8b9972a3711",
        "cursor": {
          "ref": "ddbcb6bf-418f-4d3d-8374-34e86b1b9e13",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f0fbe23a-ffcf-499e-a775-65ad4040677e"
        },
        "item": {
          "id": "0b923126-031b-4b67-b7fe-b8b9972a3711",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ce00d95c-32a7-468b-81d3-2c12d556a0b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03dddb7b-6d8f-4410-a9a3-0242c5c1c6df",
        "cursor": {
          "ref": "be2899ea-fa02-4ff5-abde-868284374e6f",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "35ec3f8c-9a9b-48d1-a196-5c1d2e6ecf25"
        },
        "item": {
          "id": "03dddb7b-6d8f-4410-a9a3-0242c5c1c6df",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "4436cb73-c2a4-48f0-8c04-317f5b7f2875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f26a1f-db7d-48d4-bfac-8ecc23aeb628",
        "cursor": {
          "ref": "ed34dc8f-16da-4cdc-9bfd-1441696e7f72",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "8af85041-36b0-4444-9089-11b62bceba66"
        },
        "item": {
          "id": "70f26a1f-db7d-48d4-bfac-8ecc23aeb628",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "691ca576-18ac-4f40-bb5f-a73eb3837ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a142631a-8b31-4dbd-aa5a-850345ef62d3",
        "cursor": {
          "ref": "76093deb-ede9-45f7-9b66-f0365eec4d3f",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "b61599e2-0d9a-41c8-96c4-de97140a0ebe"
        },
        "item": {
          "id": "a142631a-8b31-4dbd-aa5a-850345ef62d3",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b55a1b0e-78af-4af3-a0ba-936e455eed79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eadaed1-bb03-4d76-946f-ef533642e3cc",
        "cursor": {
          "ref": "152290f8-c268-4f20-aee0-03bad703379f",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "2c32cb97-a209-46ae-96bf-6f8006950b50"
        },
        "item": {
          "id": "8eadaed1-bb03-4d76-946f-ef533642e3cc",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "9d66a346-a65d-45e9-9d0c-7ad8ed3b9c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ea018e-71d1-47be-bd3d-0004bd9f381e",
        "cursor": {
          "ref": "53c949e1-5703-49d7-aba5-7825573d4342",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b937d384-1f25-4650-a28f-f4cc88527c97"
        },
        "item": {
          "id": "c9ea018e-71d1-47be-bd3d-0004bd9f381e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "8d3c7264-8d4d-4262-b0f4-a30fa1ac3314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bd62d69-eb30-46eb-ad19-6ff26334bf7c",
        "cursor": {
          "ref": "bced0f1b-300e-43cc-a488-69923d3c6dc6",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "062bd1ac-43a9-4b61-95f3-26668f5e3989"
        },
        "item": {
          "id": "0bd62d69-eb30-46eb-ad19-6ff26334bf7c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1b2a7c09-c229-4c92-bb6b-5552fece6fbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39681e4f-dff8-4bb3-8cf2-8e0ae1128008",
        "cursor": {
          "ref": "c3da350d-24fe-46a0-a7d4-5af7b4d4a8f4",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "553b6000-2ea2-4cd3-a31b-b8a980a95371"
        },
        "item": {
          "id": "39681e4f-dff8-4bb3-8cf2-8e0ae1128008",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "15b85e98-e851-422f-b483-a947760fa7ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318ccea6-8c4f-4a7e-ae7e-7be683d614e9",
        "cursor": {
          "ref": "7bd01952-cd3a-4cbf-8168-75ab6bf615a4",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "4d7793ad-a2b0-4003-887b-7f6da997c725"
        },
        "item": {
          "id": "318ccea6-8c4f-4a7e-ae7e-7be683d614e9",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a7fcb9b9-9a6b-40d0-bf5c-fc6c4b4e8ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a0dd22f-a232-4ea7-84fe-b6e0b50ee9ae",
        "cursor": {
          "ref": "a99046e0-16fd-4be1-8eb4-4a6541fdf933",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "866051b9-6000-45af-ab36-9fc9eb35a949"
        },
        "item": {
          "id": "0a0dd22f-a232-4ea7-84fe-b6e0b50ee9ae",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "881ac1c4-84b1-4d43-9f64-a5593aaa7145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a7a8ad-446a-49cf-8822-b6843a5ce0b1",
        "cursor": {
          "ref": "c2b0e23a-2ab9-48a8-b81e-2f5705ee9acb",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "72356846-5c0f-4781-8947-87fa055d3a78"
        },
        "item": {
          "id": "50a7a8ad-446a-49cf-8822-b6843a5ce0b1",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3637bf21-21c5-42da-9753-e326f9606b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa1cd8c3-489c-464c-9b32-b766c8375b81",
        "cursor": {
          "ref": "2a7016e7-0555-4b72-9558-7cf740ee5cd7",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "bb3ee8e5-f31c-43f7-82bb-e41c1e3535bc"
        },
        "item": {
          "id": "aa1cd8c3-489c-464c-9b32-b766c8375b81",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "6beb9576-0e6d-4eb9-a95e-2804c625c58e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44173f18-5ce1-4ff2-8969-bf0d75073071",
        "cursor": {
          "ref": "7784b857-ba3b-49bf-9eb9-e5d58cd21735",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d12470de-1ffa-4a45-882c-f45ca8a043fa"
        },
        "item": {
          "id": "44173f18-5ce1-4ff2-8969-bf0d75073071",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c91a8931-3d12-4385-b265-28b048e2330b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f60678ed-2bf5-41d3-8889-7a22e3edd421",
        "cursor": {
          "ref": "ad7e37ee-e7d2-4059-9c7f-34ff04e482bc",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1179558f-3b75-423c-87c7-181c5b6986ef"
        },
        "item": {
          "id": "f60678ed-2bf5-41d3-8889-7a22e3edd421",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "09855382-b3b2-40dc-9352-9aaffee89c94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1038d337-9165-4042-9bcf-cc5f87985e3b",
        "cursor": {
          "ref": "adaf8ffd-95f4-4945-9b12-e679b3d85d3b",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b7eb8176-e88a-413e-b609-c8c854e49020"
        },
        "item": {
          "id": "1038d337-9165-4042-9bcf-cc5f87985e3b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "0b808bf5-3eb9-4f10-bcda-b2c54fe0f7f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f451af39-6e17-41e9-9a05-31b9b18daba0",
        "cursor": {
          "ref": "ac7c3e61-6f10-4901-8ad0-f47b525b7bd2",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "216262b7-e34d-49ce-ad55-7f9b3f1184b7"
        },
        "item": {
          "id": "f451af39-6e17-41e9-9a05-31b9b18daba0",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "4e292d47-dd68-468a-9043-e3392942acf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a0f004-5bca-46c1-b99d-86e51a58a6bd",
        "cursor": {
          "ref": "ec0c66c9-cd9b-4451-8e78-cd47ffed79b9",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "46f1355b-3ce1-43fd-a004-4926110d6ee0"
        },
        "item": {
          "id": "23a0f004-5bca-46c1-b99d-86e51a58a6bd",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "5ccc158a-6c89-438d-8d9e-ed70bf6e7af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a81652-2d45-456c-a059-a82600256a30",
        "cursor": {
          "ref": "a362f04b-f4ad-4229-8b63-3a06e761b3ea",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "34453f06-fb14-42f0-9a05-eb75020e9e64"
        },
        "item": {
          "id": "c6a81652-2d45-456c-a059-a82600256a30",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "80c0479d-28d2-4502-980d-f1882e65c007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a7b25ad-3211-43b4-be25-4c8da6eee816",
        "cursor": {
          "ref": "cd810d8d-e77e-41f8-b2e9-9fd389774991",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a9f8f027-94c6-44f4-9295-4c62f590eae3"
        },
        "item": {
          "id": "8a7b25ad-3211-43b4-be25-4c8da6eee816",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "08cccd02-f7bb-4046-b6a7-f44f4f8ddeba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f752ab19-c723-4283-9903-f8cd99aca936",
        "cursor": {
          "ref": "07194e4a-4334-42b1-84d9-d26c46cc3c5d",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "19800104-f822-4846-86a3-67007474cdd1"
        },
        "item": {
          "id": "f752ab19-c723-4283-9903-f8cd99aca936",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e9782f21-10ab-43c7-87e5-21ea5997f249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a39db7d-eb48-4232-afee-f6f23de3b2b6",
        "cursor": {
          "ref": "2cfad360-5860-43f5-b39e-9a25a10b4716",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b3e54350-47d1-4d55-ab57-63f9cb48a308"
        },
        "item": {
          "id": "7a39db7d-eb48-4232-afee-f6f23de3b2b6",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "111f44ae-b1c6-4527-9f67-8283dc84611b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ea2078-2eb5-4e87-8763-f6eb8249101e",
        "cursor": {
          "ref": "d838a249-c9c4-48b4-a21f-4d3f51a02cf8",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c952d03b-03a4-421d-a221-c3548cb2e7bd"
        },
        "item": {
          "id": "88ea2078-2eb5-4e87-8763-f6eb8249101e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "28fb7ad0-6c15-4312-a66f-f3c4a5e4c835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c29ee8ec-9350-4f87-b91c-1db2626dcda0",
        "cursor": {
          "ref": "02d863ae-7237-40b5-920b-699d4aabf815",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "75a256e7-0836-4b4c-bcd9-99dbe19d03b5"
        },
        "item": {
          "id": "c29ee8ec-9350-4f87-b91c-1db2626dcda0",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "6b945345-514a-45bc-afc5-07cc63428690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a5371e-68c7-4262-b4a6-b30b07a19e2b",
        "cursor": {
          "ref": "f86d3c0b-3dae-4f7c-93fb-4f55a1d0ccb1",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "9b2f6767-57cc-4b5a-a53c-736c90ed14dc"
        },
        "item": {
          "id": "48a5371e-68c7-4262-b4a6-b30b07a19e2b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3f1e1b42-837d-4975-abbb-2cddd9b869d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "346f7fac-d849-4bc5-a886-c536ddcfaa75",
        "cursor": {
          "ref": "7b6494a4-35e1-4eb1-be67-112245f8c471",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "536f522d-c1db-493a-a2bb-9b96f001a8d2"
        },
        "item": {
          "id": "346f7fac-d849-4bc5-a886-c536ddcfaa75",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "0dfdaba6-8596-4d29-8b56-35a2632a4253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19084784-8407-4af2-a7ba-e0996baf0669",
        "cursor": {
          "ref": "b9d5ac5f-ef61-4de3-9e4b-73bc5f3dfb25",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "6b92dc46-5ec1-45d4-91ba-6c602b453bae"
        },
        "item": {
          "id": "19084784-8407-4af2-a7ba-e0996baf0669",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c20e6840-7565-4631-b939-0f829f851604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d7b416-ba8e-4283-9c1f-a3d63667f6f8",
        "cursor": {
          "ref": "0dabc677-35a5-481b-9313-017b8f312069",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c8c6c93e-338d-44ea-9b85-6d6915edb78f"
        },
        "item": {
          "id": "a0d7b416-ba8e-4283-9c1f-a3d63667f6f8",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "31dff63f-fc7b-4ace-a70b-317ee0858d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dcb9c55-439d-4376-874a-030af9c80412",
        "cursor": {
          "ref": "1609dac4-57b4-4a66-8a32-f7ae25e7ff63",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "6cd30e54-4199-4b33-bb99-4837fadf767d"
        },
        "item": {
          "id": "8dcb9c55-439d-4376-874a-030af9c80412",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "0b0568b5-9844-4345-adbb-8300dea7637f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "082dfa83-1148-4bfe-aa92-e0a8b69c0f0f",
        "cursor": {
          "ref": "9b0ce965-4a6c-410c-b9cf-3c44f19942fa",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "7bdae826-6e3b-4f7e-bd4f-93a4f4471e84"
        },
        "item": {
          "id": "082dfa83-1148-4bfe-aa92-e0a8b69c0f0f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b0925911-110c-4d2a-b755-c6c956347c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1365ab71-bbfa-410e-b310-0b58a817bf63",
        "cursor": {
          "ref": "d9055812-c39e-43e8-83a3-3bb2be917a3d",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "276df2b7-77ce-4390-82eb-01ba38989972"
        },
        "item": {
          "id": "1365ab71-bbfa-410e-b310-0b58a817bf63",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4307ab39-7966-4e37-882f-04cf55e23a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa7712c7-cabc-444b-b535-76a9b789c101",
        "cursor": {
          "ref": "ace46327-fc88-4732-912b-44170e368603",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ca029b86-69ec-42b7-b387-b53565977332"
        },
        "item": {
          "id": "fa7712c7-cabc-444b-b535-76a9b789c101",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1b275135-db34-4a2a-a32d-67c7b01cf0de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc12b77e-bda1-42b5-9219-9f17f62ff06d",
        "cursor": {
          "ref": "f03d2f82-2860-41d3-8f1b-2fac15d62ae3",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ddc816b6-d590-47a8-9547-2d5bc00dab45"
        },
        "item": {
          "id": "dc12b77e-bda1-42b5-9219-9f17f62ff06d",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "a5ea9d34-de92-4ac0-a755-8f3d3e844c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501f2ea1-9b24-4e03-bd9a-31de0e518195",
        "cursor": {
          "ref": "db715b27-81b3-4ad4-ab95-64ec691da829",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "db1a085d-8c92-4449-94c1-b40cb0db2d75"
        },
        "item": {
          "id": "501f2ea1-9b24-4e03-bd9a-31de0e518195",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "daa4dcbd-da37-4d64-9d20-b670364df7b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b31608f8-18d8-4a2c-b749-163a1ac45c2c",
        "cursor": {
          "ref": "8d723e56-e092-4b03-b0f5-ad92dc28d3c2",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "6b18f842-043c-4e55-8a8a-0ebf48c817f2"
        },
        "item": {
          "id": "b31608f8-18d8-4a2c-b749-163a1ac45c2c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ac929d47-a021-4e6b-a857-3ddb752ccf88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e3b85b-648f-4ce2-a720-79f3e0a21c58",
        "cursor": {
          "ref": "db705a52-3ee4-4ab1-bc9a-0fd536791497",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f6e4614c-d650-47da-b4e7-2b2a90f0860f"
        },
        "item": {
          "id": "c6e3b85b-648f-4ce2-a720-79f3e0a21c58",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "3bfee32d-0060-40a7-851e-99ecf242cbf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f371a65c-10cf-4998-99b5-c776bed0b260",
        "cursor": {
          "ref": "92a06691-8c3c-458a-93e9-e00752271528",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "78640417-9b40-4ba5-b0bd-89d6e40bcbb8"
        },
        "item": {
          "id": "f371a65c-10cf-4998-99b5-c776bed0b260",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "1519c22b-237b-4756-9bd6-b2a7a506491f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a7a68f-b8d5-41e6-a17d-4204081ed4cf",
        "cursor": {
          "ref": "34b0c500-a00d-4525-b553-7052e9c95bf0",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "0f908a53-9e82-4eb7-b437-d2352575e828"
        },
        "item": {
          "id": "82a7a68f-b8d5-41e6-a17d-4204081ed4cf",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "0c80953e-cbc7-4606-a684-ff78e3b71b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6493ae9d-4225-458b-b786-75cbef656b1a",
        "cursor": {
          "ref": "aa425b53-64bd-4d8f-8fcf-2b090f5652d3",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "e24436d4-8630-4617-b3c9-be429aabde7d"
        },
        "item": {
          "id": "6493ae9d-4225-458b-b786-75cbef656b1a",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "9d1df6c7-ee39-47a3-a3d9-65052b450dab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d026f37-99f1-4bbf-a26e-57dd993f1f3c",
        "cursor": {
          "ref": "66671d08-a597-4fba-a2ef-bdc89e2c09ad",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "62fd0934-056a-4f58-8616-fee8141d4cbd"
        },
        "item": {
          "id": "7d026f37-99f1-4bbf-a26e-57dd993f1f3c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f3362112-bb6a-436f-9ab0-ef20d467699d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3268cd81-5b8b-4038-a07a-1a1982df51e9",
        "cursor": {
          "ref": "6cb80324-aac8-49c1-8bb1-bc4c699db51d",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "13de7850-daab-4839-95c9-d465313b4c2b"
        },
        "item": {
          "id": "3268cd81-5b8b-4038-a07a-1a1982df51e9",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "13818af4-1a0b-4559-bb0c-2998ec74c08d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d6a56ff-d3cb-4c02-a449-01b63ac081f4",
        "cursor": {
          "ref": "206b97ac-d95b-470b-8eba-9f72b2288518",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "47fb1402-bde0-4188-b86e-48f9e4237dc1"
        },
        "item": {
          "id": "2d6a56ff-d3cb-4c02-a449-01b63ac081f4",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "4590734c-8437-4cb3-b599-03ed55992f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe00109-19e7-496e-85d2-38e37c203042",
        "cursor": {
          "ref": "85b775c1-d0c2-46af-9f97-1b6b865af619",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "c9a6b24c-ba70-4d8f-86fd-25125af04a8e"
        },
        "item": {
          "id": "cbe00109-19e7-496e-85d2-38e37c203042",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "6192c7f1-d64b-4153-ad54-0dd0c6f2536a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5c3179-d01a-4d6f-9cbd-ac5d62ef97d3",
        "cursor": {
          "ref": "30874176-a434-4655-837e-19143013b59f",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "c1826357-5135-47ac-84b1-56059ca783e7"
        },
        "item": {
          "id": "9e5c3179-d01a-4d6f-9cbd-ac5d62ef97d3",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "67068023-68a0-48bb-b701-2fd92fd653d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ad2607-992e-4b14-bd99-8863de75cf66",
        "cursor": {
          "ref": "c312fa10-eedc-465f-8042-545d1e4d8a85",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "1b3cc4dd-58fd-4fc2-94ed-e857f2e8b6b6"
        },
        "item": {
          "id": "69ad2607-992e-4b14-bd99-8863de75cf66",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e682a0d5-4219-47ed-8615-eed9fd145c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbd32a31-ba32-43df-981c-de2eeb94080b",
        "cursor": {
          "ref": "6f76f45b-f2f6-45ef-b6a5-c4382b09cd97",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "bbbe2001-7861-44da-9436-e387d8adc31f"
        },
        "item": {
          "id": "dbd32a31-ba32-43df-981c-de2eeb94080b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "88421094-34d0-4aed-a3b1-525394a8ddc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ac63d8-e1a0-4fb2-9127-98ef29d9e5f5",
        "cursor": {
          "ref": "e81cf555-7ef6-40a5-89f5-5a3190d4052a",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "179aa152-e527-4a82-b5f5-cb007b620821"
        },
        "item": {
          "id": "02ac63d8-e1a0-4fb2-9127-98ef29d9e5f5",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "678a4a77-e875-4af7-9fd9-d6c0f9286d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "936030b8-f6a1-42a2-9fc2-298eba362ad4",
        "cursor": {
          "ref": "fd491ad9-be9e-4ce9-b86f-9ee9322d7eff",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "88809da7-3365-4365-963c-ae2a6996290e"
        },
        "item": {
          "id": "936030b8-f6a1-42a2-9fc2-298eba362ad4",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "cc3ad5a1-590b-447b-b8f0-aea6e670e0cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa8e2a64-7e6f-46d0-a898-cd710d463a84",
        "cursor": {
          "ref": "0d79adb0-6abb-43e9-b838-558a359626fd",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "c124c4af-6f40-4e0a-bb7c-65b717c9d876"
        },
        "item": {
          "id": "aa8e2a64-7e6f-46d0-a898-cd710d463a84",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "59d463d0-1354-46dd-ada0-72b0d86dbd83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d6193c-5e8d-4e84-b460-c93ad64f4908",
        "cursor": {
          "ref": "a3183ad4-2fd1-4e9d-843a-0366656b5dca",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "fc90c6f7-57c9-4783-a66c-8a107f600d50"
        },
        "item": {
          "id": "84d6193c-5e8d-4e84-b460-c93ad64f4908",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "2321a722-3ed8-4f68-8e75-ff756b51654c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6244a502-205a-4466-8244-f3e0102cf48c",
        "cursor": {
          "ref": "323a52a3-29c9-4080-b67a-906a34859572",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "3935228d-d6f4-4e79-b4f9-e3821d2e78ba"
        },
        "item": {
          "id": "6244a502-205a-4466-8244-f3e0102cf48c",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "9256895e-5f09-4fe6-bff0-0af6e4da04ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef37259-5351-4fb5-b638-2cf86b4e22c3",
        "cursor": {
          "ref": "77de3fe1-e6f5-43ec-bc9f-5cb4f2fe11a0",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "a0dd41ef-608d-4a6f-ab4e-a9e6917a5e55"
        },
        "item": {
          "id": "fef37259-5351-4fb5-b638-2cf86b4e22c3",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c60985de-e3bf-429a-a73d-693b53ed83fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d35297ad-09a2-4b89-9fed-69d9e37144ba",
        "cursor": {
          "ref": "ebdc6376-ac10-4ca2-b645-caa1445b2ddc",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "e2e0f538-c695-4d65-81e6-aa169cb6eed8"
        },
        "item": {
          "id": "d35297ad-09a2-4b89-9fed-69d9e37144ba",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a9abb244-a47e-4199-86b5-adfd0845e1d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a18fd87-122f-435e-bfdf-ebd5dff954f4",
        "cursor": {
          "ref": "62f14f73-3c4a-47e7-8f2d-95a0e8eb4328",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "409ad1c4-1510-4359-9c3d-6a5fab44e457"
        },
        "item": {
          "id": "3a18fd87-122f-435e-bfdf-ebd5dff954f4",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "81c8a05d-453a-4998-ad1a-7c44a8ccb3c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2bcca9a-8ddf-476f-8562-7cdc448170f1",
        "cursor": {
          "ref": "eac72e98-4129-4d2a-8666-e2275f52d7fc",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "d9e40fe9-c66e-477f-9dff-bc449e5d64ac"
        },
        "item": {
          "id": "f2bcca9a-8ddf-476f-8562-7cdc448170f1",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "11a78076-9fa9-4f0d-9a36-d91daec15c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "760fe9c0-4b09-4e46-a1d8-aa71fe0d7ee6",
        "cursor": {
          "ref": "1427df06-6138-4995-b1ec-1907c0e21c63",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "33014aa1-8448-49b4-8d0e-64c66797f8a5"
        },
        "item": {
          "id": "760fe9c0-4b09-4e46-a1d8-aa71fe0d7ee6",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f7e768d8-ae00-4462-bc06-5d8935aa9b2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ebd0d08-1bb2-4f88-8145-ac525da90ede",
        "cursor": {
          "ref": "067e2331-dfc3-44c5-901a-25b421b16c6e",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "e305e9d6-4e9b-489b-a3a3-65bf12ee6537"
        },
        "item": {
          "id": "9ebd0d08-1bb2-4f88-8145-ac525da90ede",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b07e64db-1f92-486a-a290-214d76e3cdbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1327a6e5-599a-46a6-b887-09518ee9a2ed",
        "cursor": {
          "ref": "1287fd5d-29b5-4623-9ddd-d7003d738daa",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "d249b3c1-a129-4481-825e-b55c41e08071"
        },
        "item": {
          "id": "1327a6e5-599a-46a6-b887-09518ee9a2ed",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "6d3cb00e-8c8d-4a8c-af27-2c9274cd0abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd3da5c6-4677-472c-8726-93b81009083f",
        "cursor": {
          "ref": "265a82f0-e441-471b-b1d5-d053c9013776",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "ee633d89-eb51-45d5-b3a9-2af052b66c4c"
        },
        "item": {
          "id": "bd3da5c6-4677-472c-8726-93b81009083f",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a515113c-0115-46c0-b44d-5020c31a0578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "644c2fac-c6ce-48d9-ad36-0507895626ce",
        "cursor": {
          "ref": "3cb9dbbc-9724-4b76-9f29-be5430b42914",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "e23d1d95-a901-43d8-b9a4-34da112bea14"
        },
        "item": {
          "id": "644c2fac-c6ce-48d9-ad36-0507895626ce",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ad2b54b2-b9d5-40dc-a5cb-e0b5ddd906f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12adda08-fd37-4efe-b7ec-398b41e2f812",
        "cursor": {
          "ref": "a0c5bef8-d04f-48b0-b0ac-b73c9487437d",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "a8f23949-6811-4b00-b988-23b2855b65c1"
        },
        "item": {
          "id": "12adda08-fd37-4efe-b7ec-398b41e2f812",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c5c339f2-c897-4370-99d8-b4a71a0cfb8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46167665-bfbe-4633-b29f-aba16c4dd60e",
        "cursor": {
          "ref": "b6ea374f-fa0d-4401-b434-f291ab8d62f0",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "6657f8b6-86cb-4873-ac32-ed6feeefd4ac"
        },
        "item": {
          "id": "46167665-bfbe-4633-b29f-aba16c4dd60e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f219e836-1fe4-41d2-a68a-72f8216e3a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0a58620-c208-40cc-8841-5fdece3aa36c",
        "cursor": {
          "ref": "c0d2905e-ba1a-40e0-96c0-4abbe4dd0777",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "949734f1-4cac-4847-9d7c-101da6c01158"
        },
        "item": {
          "id": "d0a58620-c208-40cc-8841-5fdece3aa36c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "6ada173e-9b88-4993-89c1-ac3df371cbc7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "024b56b5-c245-400d-ab2f-764acef9245a",
        "cursor": {
          "ref": "1f017781-74ea-4e78-8e3e-ea610a678aa3",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "8ff0621b-b599-478a-88cf-5a70681040fb"
        },
        "item": {
          "id": "024b56b5-c245-400d-ab2f-764acef9245a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b316bf61-8658-49a2-ac65-43cae8931e47",
          "status": "OK",
          "code": 200,
          "responseTime": 111,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab5f745-8c93-4b5f-9352-266d3c1dec7e",
        "cursor": {
          "ref": "b4c63ea2-b7d8-43ae-a1be-8181fe3287af",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "92737e28-1b43-4409-bf64-f040f609e7a5"
        },
        "item": {
          "id": "1ab5f745-8c93-4b5f-9352-266d3c1dec7e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "9064c7c3-8857-419e-952b-5e7729fe87a3",
          "status": "OK",
          "code": 200,
          "responseTime": 1410,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0294c86a-f056-4e0d-96a3-07ca05d7e3ee",
        "cursor": {
          "ref": "d0b27c6f-222c-4cbc-ae52-b457c0172cc2",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "6aebbb90-8035-4b52-af0c-2906df95163a"
        },
        "item": {
          "id": "0294c86a-f056-4e0d-96a3-07ca05d7e3ee",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "5dcff345-49e4-4fef-b385-976a9051679b",
          "status": "OK",
          "code": 200,
          "responseTime": 1575,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b4cf28-11cc-46a9-ac25-58ce32ef67de",
        "cursor": {
          "ref": "969e04eb-c53e-4700-9d94-4cef0dd3f5e0",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "cdc46d96-9a63-4dd6-b36e-00d0aa9bc592"
        },
        "item": {
          "id": "a8b4cf28-11cc-46a9-ac25-58ce32ef67de",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "33b8d33b-0d09-4cd7-91cd-0451e73c235a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b4cf28-11cc-46a9-ac25-58ce32ef67de",
        "cursor": {
          "ref": "969e04eb-c53e-4700-9d94-4cef0dd3f5e0",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "cdc46d96-9a63-4dd6-b36e-00d0aa9bc592"
        },
        "item": {
          "id": "a8b4cf28-11cc-46a9-ac25-58ce32ef67de",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "33b8d33b-0d09-4cd7-91cd-0451e73c235a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19045f4f-4f33-4c0a-b071-6665b2d73e1b",
        "cursor": {
          "ref": "86d32d91-d7b2-4a5e-813b-40d3d4a5fe69",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "620e6977-e6ff-4c5c-81f1-aea8812d5b6d"
        },
        "item": {
          "id": "19045f4f-4f33-4c0a-b071-6665b2d73e1b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b476ee78-2319-4687-8698-95eb68c470fb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "704c0a9b-073d-48dd-972b-8d3a611511c7",
        "cursor": {
          "ref": "5f94fcb9-028b-4f31-92fa-a5df0cfc034c",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "3532ea55-6690-441b-85c3-29149a6f90f1"
        },
        "item": {
          "id": "704c0a9b-073d-48dd-972b-8d3a611511c7",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c409b897-97b1-41e5-b828-5814156b2a3b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}