{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "28b16bba-1563-411d-85e3-8b8002e91a81",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e8b896b1-e36a-432e-ba99-47296d1aeb7e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d04f55b4-b9d4-4fcf-b1d9-8a14aef672b6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1425e097-17af-419e-9be2-4c4f4c3b49c4"
                }
              }
            ]
          },
          {
            "id": "b8ac4856-cf73-46a2-8ee5-9a9d14067503",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "69c83182-bc48-41f0-b148-5a7647266408",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f59df283-4b87-4fe6-b5b4-b9ad3180cbef"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "405f4822-7277-4555-b39e-6687b207297f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "f8319ec6-bd9e-45f7-9bfc-e09e8f1bdbf1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3dbe1324-9ac5-4270-9f37-f2a854ba92ce",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6575ea87-b381-4e65-a0cf-d45ab0eb04fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4c9f65ac-9cf1-4231-b983-11881b25a8c3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f141d332-adca-4733-a8c4-a82ff791bfa0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1cbbd8e0-582d-4be1-b220-ce43a0048b89"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0ee3ad25-6019-43dd-af10-a579212ec1c0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "19cf910e-2827-4611-a2f1-a866581bc39c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8a86b25c-8620-4fba-932a-a297ff8db626",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ed532e22-98df-41e9-845a-08f64b3b60cd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0a4382aa-5895-4ec6-8d3c-6075fb896462",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c1505ad3-b17d-46d8-bf62-5adbab118eca"
            }
          }
        ]
      },
      {
        "id": "9656f72b-2fef-4ae2-a798-6de61e7124d2",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "05e3431b-7a33-4230-8605-88f74ee9af4a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "faeca8e2-7014-4da6-b8ff-b063604144f3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2f39637a-45c9-44c9-a077-52ceceb75321",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93cd2621-0d02-45e1-acb6-beb82d70f584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "38d87cc3-3329-4351-bcf8-b1c29c09187e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d4850c-73db-49ed-b34c-af5094f3584c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "246fae1d-9210-4daa-8b15-ac25da12d49a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "39981375-62bf-4012-8076-61b79fc0cb27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ed7077-c7eb-4533-aed3-e8cac4f16ef3",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c4589d-48d9-4b15-a9d0-d9000dcf4b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aa4383f4-9899-4ca3-9c2f-bdbf00c255e2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "83f1ad09-b5d4-420e-8c07-c95f3019be8d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "23cdfa58-0fce-4484-a727-7b09f2517683",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb69605-be71-43be-916b-cb39ac12c009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fd322b9e-e10f-460a-bd50-7e10bb46c70e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "637a3031-7432-45f6-8e73-20c431e5415b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "016775e9-7a3d-4a85-9010-c89500afabce"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "dcbceae0-8e8c-4c64-a79f-b7d12256feee",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1bd2c24e-6b1c-407b-8124-add449d8e053",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "88be8739-a478-4c1a-816d-233f97e100ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a7d66fef-0490-4208-9d7f-79fbae7713eb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "07a938c5-efae-4bd8-9233-86030566dd8e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "e4bca4e3-9cc6-4e61-b4bd-e64ecbe5e94e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b2cb9a95-3b6e-4d75-839d-85084234a791",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "76305ea9-ff4e-49db-b7ea-06d7161d606d"
            }
          }
        ]
      },
      {
        "id": "d2f2c636-e3d9-4e69-9b57-027ea0ebceb8",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a5d1cd0b-1742-4a8e-ae68-5f8fd7b5c2ef",
            "name": "Negative Testing",
            "item": [
              {
                "id": "47b37e02-37ee-4624-bd7e-93aabd907a9f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "cfb2b60a-d686-4bbf-8799-4b42612f017f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2215d039-d517-4628-9493-334d0ba7028f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1f582e9-bf9a-4d9f-9e0a-191f268f8adb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aed4900-5972-4b7c-996f-2b6882603e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20541e85-64ce-4079-96ae-9fa686613737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d31556-270a-4f3f-95e2-d1ec62520362",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f8869e-8e4e-4a7a-b73f-96decb63ffb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d235316f-00f8-448d-9a1b-f26c516fc210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24a333be-998c-41c3-a6e1-43c83f96e5a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7b69c58-e13a-4500-a6f9-8dfbcae9d019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36c49abc-1de7-44cd-a7f4-f40987cfff81",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57142029-87d9-47c2-b219-e70f7ff7e29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "234b7c2a-a8c6-4880-90cf-f6d93af34535"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2db945b9-a40b-4c19-a3b2-c55c2f37c915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8388110f-6e2f-40e0-b233-b3e9ad65b319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d109dec5-facb-44ec-8f74-3127e6aed8cb",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fe5a5de-388f-44a3-96ba-5da6bc38708c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27d24cda-ef63-4528-96ab-7726124ac933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "194ef52b-97b0-49be-ac4e-62225f7e8407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aac85d7e-4108-444b-b7ed-9711a5830006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a3a02f9-af4d-4b6f-8712-da489db1a6bc",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c154a1-d2f0-4dee-ada9-7f2d81701410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa342e71-a1dd-413b-a4b8-e458420d58c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe219455-57a5-4fa0-bc9e-17113af3f375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "271c8272-83d7-41ae-bd6f-5139f2dc52d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02aeefcd-9502-49f1-9528-9fe144d01127",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1208d4a9-86aa-4177-8f0f-8e044408b3f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98da6ffc-88ac-464b-befe-e5fceff443ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c924761-537f-4ebb-9f62-d0d8c359c4d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f96e39e-db9d-4afe-8a8c-88809dacbb71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0986f6-4b9e-4b6f-ada1-eea4dc9d3338",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e92c0f-6491-43da-9654-3573dda5b060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a22151b-0c92-4a2d-80d1-3699e0c5110c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6891f8-da4b-4e2d-ab8e-b7fcfe46c83c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5a979dc-a06d-498f-8e18-2140b68b32c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b29a982-7cca-4683-ae58-0f9f1129cd29",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb85949-53c9-4320-893f-e5f559575bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7642060a-959f-4690-9227-577e7eb4ad8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e4118d-a88a-486e-85ae-b3ba8198a78e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "676b4870-47b5-4457-a294-c3c31fe68cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e943d2-392c-43f6-bc8f-421c8f268451",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f3545b-18d7-4444-8f14-18c00aa33689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2413828a-ae50-472c-88a7-fd7dde39c04a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb6ae23f-cbb8-4424-b000-7aaf18427cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad10e617-0770-4735-93f8-b192cc0a5c73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13957cdb-af8d-43aa-8736-a91ac887c0da",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae9fcc1-6032-4928-bc68-55990d472a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ba54fea-2a35-48d2-8b8b-32d750681c02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63af1fec-efb5-41af-83b9-a66ff200f97a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c069908f-8841-4bb9-9d63-65f5128848fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "081a2083-3295-4946-8bd9-c09b77f48688",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7210da32-ee08-464b-b2fe-92e384ef2fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0f35415-e370-488d-96f8-76df40ea2759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97efb596-8dfc-4aae-8c7b-c5bcbac525df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "620a51e9-16ad-4ce0-8bfb-15eedda9ea85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0590bca5-fc2b-427c-b849-46ee7bec03a6",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f62c6c3b-caee-4463-9a53-51a4aa74aeb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f449c31d-a848-4dac-b932-d0728dbf7a13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27777164-c2f9-4adf-85ca-57d220980938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9da2b55-30a7-44c2-8c0b-b85d73383df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e24215c7-1b61-4bce-8690-d6101d3e522e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5147f88-6f43-47cd-924e-b6974657996c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "809e1e9f-fdb3-42ad-a53d-93450d57c302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "347fbc01-e6a8-4b37-80be-7948111cb93e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3bd3d907-f895-4158-a2bb-8a8eb0dae727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56eff113-9e53-44ed-972c-769ce0f95c36",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f362bc-6dc9-4b43-aac0-209fae0aa639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "642d3a04-5bb8-40cc-92d1-9128a8223319"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c45589f3-3603-421b-adb8-bfca4564bd6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a3a3b9b-2862-4c68-8b73-9b941d43877c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea1072df-d3dc-4101-8d0c-1b565dd81c22",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4472499-1874-4ce2-9320-20af343a0d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54f74f32-2c53-419e-8f25-31f8a982251a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf4c98f-f750-4c82-9f8a-bfa188386f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b8cfeb3-9ada-4ac5-9239-60a7e2169229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d50f8e-f096-4373-8bfd-ef86d615c4ce",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "552b7049-888f-4fbd-8ac9-c9597ce0fa01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c57cd476-a695-4843-8315-0ee1b3938ca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f224c4f1-0a19-471a-a949-e842d5bf5e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c317784-b8cb-4650-8a8e-6a017297542e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c76fdcd-594e-4d88-ba90-129428a5a765",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f52b6302-4574-4480-8b2e-944a2b2a67e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ff8df49-a908-49fe-b540-bf2f903a1b1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc11c76-0226-452d-9c51-3dbd86d2801a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0bc5e9ad-3459-4f94-ae5b-4a60427b762f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf879e3-d5f9-4268-a476-68de0c739b8a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b41ae69-98c7-43d4-9ca0-e3278dd4c76c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8bf4893-dcc0-491a-94f3-454ca131548b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d2566e-2d1d-4b70-aef1-5f07ad26593a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c51289f-3720-4b48-a826-6682bf251f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "571f59c2-d9de-411a-b491-476810d9d353",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01d4466-5e34-4b7f-9fbc-07aeb57dda29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bdfae71-d72f-4448-842e-5c8e6b7f3cdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bbc9607-66c2-49f2-b49b-d0359c605cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "826b652e-1c47-400a-b17e-e30afa3544aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12cf3557-179c-4bc8-a6a9-195d4cc10043",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd5ff9f-ffbc-4db6-9108-0bf42493cbff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3dff59f-fc62-49ba-b40b-7732a9917dca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e0beeb9-060b-4a5a-9115-9d91360aa3c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd2b7dcb-4dc8-4a87-8f8e-9b29812409d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc6b09ca-0818-4d18-bbc5-44b5284cd435",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b86a18b6-26be-4b54-985c-59ec70d2f35e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4d62f91-ed6a-4adf-856e-93a0125024e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c02653-cc7b-4c46-b050-0223262205c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3668c9f3-2813-4269-a714-22fa89c30b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd41e4a2-c7d3-4fd5-a33d-05469b27834b",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ca3a28-3f00-46b9-b0ef-515de67e93a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f65546fe-34e5-4adb-894f-99c5a09af015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34bec96d-e8a7-4614-be8e-0212127a17f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6c13af3-f43a-4196-a3eb-8b028782458f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d473ec5-ddb9-493e-84c5-e45239fc659a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03fcff4-488d-4063-b905-33e2926e3e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9365d35d-d56c-407c-b7be-3858a1fd4c12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cf06f40-e8c5-4abd-9408-e169f800cc85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "89d82ccb-f09d-4c29-b300-ed5c01aa1793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a8f036-2a12-4808-826c-3ebdbed7b6bb",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75df2e9a-990f-4df4-88b0-3a567bc3243a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d7db8ac-f26d-4e09-af45-b4c6ebad737d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d559bfe6-ad65-44e1-afaf-76a55459dde6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "09d35cda-ef32-4165-be6a-840966ad7914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96253958-32f2-4aa8-95f9-35e0bd6c6e8f",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a304b5-9aca-4993-89fb-7bf046716f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4297fd4-f0d0-4fd0-8990-604437c57d67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9040616a-61c7-4d62-953e-c6c47383e642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fa253db-3604-4e13-952b-32db5a5ec271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f30d21-b6c3-44f6-854b-5dccc06cd702",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bdb4791-5ed0-4d5a-9048-d5535665432b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d6bcb6a-9fbc-41b0-9856-93d02d6a69c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04b41e53-f62a-4ed2-8079-90cda8a72a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "baa70df0-a0f4-47e6-95be-b3ce8e355e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6aa82f2-6608-4b9d-8987-2b51c6e5bcef",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1189085f-7b29-4678-a186-250ec48aaa68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d99ba7e-a139-4baa-9acc-fe2d0097fe53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9513257f-b1c1-401c-99b8-4fe4be626d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d66fc74-11a7-4a2d-b269-95cb769f0913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b8279f4-a50c-4d91-94c9-f70b7ee5f297",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fdbc507-eaf1-48d8-888a-6ec84632f228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00d6e82d-c8b8-4fe3-80bb-38042e3c5d82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b78804c-0949-4622-91f5-790af8f2b882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a14e2ae-2dcd-468b-b294-6e5d19d45d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "307b924f-4e2a-4da2-8218-92f32c003c71",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "178faf37-8dbb-440d-b985-8dcca88bbd1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26fa6d9e-7645-4b01-987f-5b04e9bc59e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de3cb1b-630c-420a-a28e-df3f3e996de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e95ddf9e-60ce-4d08-b75a-0edf9159e3c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4547531b-8a94-4a61-932b-ae781923f71f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e26f103e-72f6-431b-8bdd-9a60cec6c304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc2b6786-e4d5-47da-932d-c83ba3c92dce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1248188b-dfda-48b5-8424-740fd3374d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "86b4e92c-e07f-491e-b2ca-05dab9a8cd68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc234f0-897a-4236-8544-ebc14bc81b7f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f111c1c-edfd-4ac3-8c16-3c84226cec82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25119b4c-4af3-4f6a-b831-c25e2e68c602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46549c9d-3a5b-4e00-9c94-668595036242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "873c57ca-6afc-4f17-a9a0-cbcbacb6b4b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfdf24d4-d6f5-474e-8d66-2751f17f206e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b12b737-d3a5-440c-9bb5-9a9fb1335e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c72555e6-80ca-4f71-8ab0-d74092033d4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5276beeb-612e-4d45-8f30-0bbbb3181c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "304277e0-a197-47bd-a48a-f26c8a6c92f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd53910-50e3-47c6-95bc-38eed2646f42",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e77a7153-01c5-47a3-92f8-0eda94cf8974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9145ee7-8034-4a33-96be-07ef16ba469d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8a42792-581f-4654-abbb-c3110750ceb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "74d38c5d-5dba-416f-b90b-e50441da0813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a24dfb-5276-41c6-a003-a2852d179077",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb9bda6-cca2-4f46-bfba-4709a7a16074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e05d08be-07b9-4f6e-89ec-3b72d5cae522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "843d7421-8668-4953-b478-21813e174267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "db411a1c-0022-46d0-a6b8-c37e126c04ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11d4f91-82c4-4588-8cc8-8a119687b6e2",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8122b6-2b2a-4a53-836d-c18c3dc22571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3fce5cb-f7ff-47c0-b932-9fd9d1cac63d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5deb1b7f-2559-4f8d-9198-65ca8bbe1eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "5806be42-5cb5-43b1-95d6-a234bda31181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05346d79-12e1-4475-8a6a-44e29b8042c4",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02150888-dc6f-4ce3-979f-59b383fdf6b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a6cd7cf8-0e0a-4c74-802c-59c5afe240ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "029453c5-74b4-4330-90d4-0372640b6012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e7b90bd2-00c1-4c0e-9a10-4be9a39eb939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c3d25ab-6a49-43e5-bfe1-9ca003087381",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd3f737-bb1a-4026-ae2b-da01345d77f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74d557fe-3492-4108-8d0e-9426a556c5aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae91a94-c127-4608-9b44-ece1fdad0a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d7b16fc-699b-4408-9f75-007e190e06de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24831c2a-2717-4269-a973-8b6713c7d0ca",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "602ede56-034e-4a02-8eef-f08ae14489c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5696e373-c083-45c8-a239-e3e5b91480d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4224cc16-7299-446a-bb82-9ee8131c971f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "41269dd1-274f-4c7b-ae74-247abdd77894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b48bd40c-9108-4827-a850-9239a915174a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c1f279-d746-4cad-a735-f9fe66d69b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "131dba13-687d-4c57-a220-ab1c7466108c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2edc8a32-b7b8-41f5-804b-3e8264c58c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "11df15bb-8669-4e6b-809f-9863a827468e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee0ce96-1bb3-477a-a6c6-11cc8bef3042",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "961022ef-d3ae-4e68-a44a-ce75e75bf78a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f91d091-9ca0-4cda-aa29-6b3b23b22768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dbddfcd-bdf6-4c72-86e8-cc55b4d6a907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf15b1b9-a8c4-4330-bbea-e172dd91da86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f8e6a6-7b29-40eb-89ac-506ed42204ce",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7088c3f1-39b6-4335-ba0f-1652c4d3f262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80ef72ed-2a71-4631-8e29-b5d813c9cea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e804a47c-e765-4bbd-8ddf-87d799e9ecc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "66a1bf8e-746b-4832-97cb-51f36a3c5bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb4cd440-4a52-4fa1-b6e2-86b3e4e195d5",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada094ac-8015-4b86-825e-5427d90bf4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a014fbdc-a938-41fc-b817-04054df92918"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7608faf3-b14b-4adc-b9d7-76141f702799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "0a39ebdd-d1d5-43db-a403-a5147f55a681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "666dfbf2-12f4-4d87-b109-e155cc4836fe",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b59ee8b9-8689-4498-9809-6fb1eec50038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81cc47a8-09c8-41bd-8e79-df89fba6d94f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2f031d-fa1e-4f59-8fb6-53add849ca35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b57b8d0-e435-41a2-9400-068b1d9f4245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f9c9c4-ee99-4310-ba67-0a8518e6f603",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59128f75-afa7-4873-9dcd-dfeabf04c92c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d702a55-e7dd-49e4-8db7-98c81a851974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46ff3b8-240f-405a-b518-bd6a5f4a73d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "9df91e12-3ade-4a63-99c2-b59f036d2008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9923ce26-fb67-44d8-be92-00775ce56e92",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "714f8ef0-e7e8-40f6-9149-cfda5f366d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b21c9c75-b662-4f3f-89fa-b8d2239233b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee06738-fa08-4cd2-9d99-b37a3ca9eb94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "10f59e0a-4b67-4e22-9e0c-ccaa2ae3b423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a300a0a4-f310-4637-8889-61cf9df00adc",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5589e10-f4bf-4c10-9a3d-fc6a10d2d3b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc0ec5f2-c1fc-4501-a002-dbb02b342b6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33701752-c7ba-461e-bf9c-2e9f9aa51dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fd2bada-ba66-4fdc-92e3-4d6c39a0ff77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ced79c-7a99-4377-80be-a839e5b9aebd",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce01806-846e-430b-b7ed-a7e3b0faa4c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61b98e76-5deb-4584-b688-0dc1b3d23a8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e21d77d-974d-436b-b632-94a4223432a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "047f3471-d8d9-4784-99e8-13a12110b35f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f3d6ac3-1cbe-4810-a473-ddefe06fa3ba",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e5b4139-cfbb-4e00-855b-222414603331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88b439de-f1fa-4f72-ae65-ed5bef3078f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b45648-97b8-4af2-9c7f-eb047ff20582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "df7fecf9-5ba3-46bf-ae75-2934565a65e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfce773d-4f8c-4a04-ac4e-a59be58cc190",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c5a900d-ce45-4d45-b05f-814e361dde7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34f2b11c-f5e6-4f2e-84a7-deafed9cf7e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c24fb02a-7525-4c22-be8f-ac6be104cb89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "087b6779-5c52-44a9-9d39-ca889c1384a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4169be01-1747-47fb-b731-00df50e6ae88",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c7694b6-b62d-4f9a-bdd8-ac3ec6605ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25192d3f-e250-4bde-931d-6ff3f78771be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18b2c168-d4c3-486b-aada-2968ab782001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "73c6e4dd-3f26-4832-9b4e-ee3f197e9451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50e96c0b-344d-4557-a948-9468d7a8c4ef",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e3ba8b2-3d2a-4790-9bd0-0fcd28d0b734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e94a3b09-676a-491d-95c0-2c8eefeffa29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb02aa26-5265-41bc-920b-94e0d1ee0a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "75a78ec7-a744-4dd1-99de-97e5862f827d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a9d9c70-7547-4888-831e-bfd592ffa607",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43d37f8d-6725-4773-99b5-97756cb48b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b9ca84c-ea87-4bd9-aa64-959fe3363124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c3eb71-c72e-48e6-94b6-bfc84985071f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e2e6bdd-ebf0-4bdd-89a8-208a0ce4febb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee54694-e3db-421f-8e36-0d132ca359b7",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4395e69a-8ffa-482e-ae5e-28b6d7cd730e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a1bc4fb-47a1-49c2-a19d-ed5f7d3c9dc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "669a7ab0-d8bc-4462-a422-abb0c736e444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2fb25db-e691-47ef-b158-f3d784f10f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0df62b8b-c012-465a-8c5a-2c37ad65b338",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "940b11fb-4d74-4ef2-829d-b26f239ce36a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31b81cb0-c096-4bc9-9a00-58844aa0c0fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d979f17-da83-4137-a82e-4db51b2a7e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "180f3fc8-f880-437c-a5a9-25a7f7d642f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f214f5bb-6780-452b-ae12-bf3f63494754",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f66448-c93d-430e-ae96-5f0b0e946749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64868ffd-039e-4a38-bca9-15b490b98cc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "223bcc32-7423-4070-93a3-9e35e001f0f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7043e881-7551-435c-b0ae-79a6e3bf7f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d99782d-31de-4fc1-a177-016d41cafa61",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd8d8fb-5db7-4434-b1f6-a84d7da61ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "218bb7ae-f402-4e4b-93d0-7aea6c800942"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efde3b41-f781-436d-b9b1-8c7309741ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "fefa680f-775d-4eec-8223-08269ed5954d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34dcb3fc-01a6-4177-8dd2-686516ad5d3a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8e991f-25ba-4dea-949d-a60cafad7433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feb8384c-34db-42a2-bc2c-4cd03cc9328b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d63e77dd-c36b-428a-91f1-40d04ede93e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e7006a2-5a3d-497f-aaba-d41ce2bab525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "710005b4-b200-4653-91a2-028b33325a52",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c17b12-1755-4af3-8868-01440b54ddd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "116f4064-c00a-4fb1-8fbf-c3843c43aa5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c5bdf45-9dc1-455d-800c-6818bab17d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e167d97b-48e5-45be-a327-3f838066ccb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "464424a9-34bd-4bcb-9a37-ef923065159e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb84b900-8918-4b3d-857f-d7805d9b9be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91ad487f-dd24-44c1-bf9f-919ccfa09886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1d47f14-e05d-4dd0-8a43-a26df39998fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "89387314-581d-44ee-9705-5ec5597aba91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70656548-6760-4958-aad3-9d7c8c32489a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ff6a0c-83b4-4066-b55c-7e72a1552d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00501447-bbf3-45ea-ae45-9d1351c4deb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e17352-3d23-4874-83fd-662c70bccc19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8bd00ccd-e354-489a-9979-ff2f8d87fbd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff8d5e5-b97d-41fd-b5ee-c0568ad4dda1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8baa2209-8294-4c57-afef-73f58d40bc7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cea6834c-347a-4b60-b02b-7e47c9211c84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99571da8-d085-4e19-aa6b-a8f8ee503efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e629463b-27a3-41c1-81ef-45e794952bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12aa29d5-1514-472d-844f-4fd272f098cc",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "176080c6-4c1d-4696-ab55-2237b1e783c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62139ba2-6ccc-4215-9798-c198eae21c58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca72dfa-7e31-4a89-b580-7bbf27ccbd7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d86439a8-6f81-47dc-aff7-89260e4c48a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a4383d-a496-44ab-a5b0-795dc77848ae",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cecabd3-4bee-4adb-9847-ad7c6de37dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d30e168-ab05-4d38-bff9-b65e2d92bad5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edfe52fa-31c3-4bf0-8eb1-def56e292e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f12a88e7-e4e8-4366-9aa3-8ceea63409c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9182f78b-cfe4-4f4c-9c19-079811625a5a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcdb1320-dbf8-4e39-ac3d-d73e671744f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a198a550-0a26-4836-83a9-39283471afdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d3e096f-32da-4c83-a206-01386449bb09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "df5d6930-e85d-4284-a937-7fe5ab9619a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0469170d-36b3-4f03-a49a-01c0da613e5b",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81b3b869-bde9-4968-9d5d-89916c3dcb4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52ea5db5-ff3c-422e-b8e8-2f11026f3756"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b79237-a456-4c97-9041-79e04d631553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "df036c4f-2078-4f84-aafc-ecc9f898ae0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89320cf-9103-47b1-a2c3-ab50ab7f876c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "353049e6-4010-43ee-a326-0cc2ba1e59d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b45ad7d1-df6d-4a5d-8c5c-71e000741255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada63708-e4b1-4cac-956a-26f3786f0cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ada0646-7a11-4ee4-b90c-dfd48c0a0039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a42a434a-51c0-4a97-ad8d-b318ce3fb10d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcdf693d-cff0-4137-b93d-08784736461c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5622fc3e-64d7-4359-9755-df8d1f27480d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d61d6083-bc06-4683-81cd-dc7f2ced5439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "740f9121-14e9-417e-a1d8-b92ff91812f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab44da12-a7f9-4a0b-bbaa-45f2fee928f4",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d3e7428-d58c-4528-ab7e-ebdf654ef301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b155102d-f1cb-4641-831e-3f7507b81553"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dfd1a1f-2425-478f-aa59-337dd4203ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cd24c14-5bab-410c-81c6-0c633aa64ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a1360ef-4b67-4036-8f18-8ab30833ddb5",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14c62f80-6aa5-4769-8134-815208df1425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0057e97-049a-4794-9513-7593e84c30e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fefe8d52-cb0e-430e-accf-d698f9db9146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e50436e6-35f3-4ccf-8809-2ce5426d799d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "914d811d-df80-47a3-a5f0-27b482f6e18b",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39912069-71f8-41d3-8ecc-47a32cddc37c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "103ccf49-78c6-438e-bb4d-af75e6187955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af1a34d3-f561-479b-953a-d632cb75b7fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "de63ea3b-4dc7-4a15-91cf-5871138c6806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b7b29b-bc60-4873-a05b-52303e5d9eca",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4189f72e-0421-4037-b5a6-83507c1f1c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c95d2674-ccba-4c88-8309-0573f16b294c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05fae958-933a-4967-95f7-667dfba8bdce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ece584ef-b586-4287-8ecd-e6900f091a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97fedea5-e654-429f-93ef-30ddf3b0f24a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc83b93-c210-4b57-b2af-60ceab30e1da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "943a5ae7-70ce-4ada-ba59-d2e2a5f6e6d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec11406f-40b3-4a92-8a66-3b606ba2f598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca0b2099-1eff-491c-9ef4-07a67c04973b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a86d21-bf0e-42f9-b31f-9040e66f4f1c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bacd772c-261b-470f-ba4b-254c2410ee49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c28884d1-f6bc-486e-8b81-a654b0e05872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24abe759-c5fe-48b2-8c5d-23b92a4ef402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "824e5909-c473-4c1d-9424-6b708e564409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e41f1cc-b214-4dbc-a69b-809ac48afa4c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae9faf6-a57a-49f7-b583-2cac3b79c626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "074a48b8-5bbd-4f82-8484-7b30c587a7d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6450403a-24f5-4597-afab-ccd0f19ce425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cd783da9-0c1e-4c93-aacb-4641e2b22cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c15536-9932-453b-829b-a7338999e452",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2828f46-ea5c-4805-8157-ce509ef35bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6fa17f6-bc17-41e9-89bd-f87e0a621b71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4839a06f-0852-48aa-9a06-948295e7f38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfaa915a-e71a-4fae-a672-a287f368b003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9403a135-d823-4f9c-8f97-20b55dc4f1de",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4816f10d-1e4f-4284-920c-bfe6e7f905dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bedd8177-f1d5-4a41-8d2e-77f8ee6217b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a5e69e-a3d7-4f0c-a277-b2f8e336cf58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f01a06d6-c8d3-4ed3-ba26-d0c8070dedd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b222d7-f60a-4c37-9eb3-1409f4272bb0",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1fa834-06fe-474f-90c1-4172a2f9b963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "962bdcbe-3190-4827-9050-e9720251b5d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcfbd4b6-9705-45ad-bca8-b18db796360a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bad531a-edb6-4895-a7ef-eaf76f43899c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f40a690-b1d4-4c35-8355-32c7f615f58b",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f20782b-6012-42cc-8d96-6de4c9c895a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fa80dd0-8742-42b0-bc03-c32c82c8e2b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be7e6dc5-d16f-42e0-8245-8a886e4f7daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2662c183-ee18-4a0e-9cd2-45f1db143852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a16fa56f-8d17-4747-9f35-12fc123832e1",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b561cb-a82f-42a1-8576-6eeb176d080b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eec1db36-ad95-428a-8760-3afd6a605940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c67b5b70-50a3-4e21-a414-dccce6310ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "52195fc1-7e5a-4fe6-bd5b-a2a83a44e246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "585a5f01-cb17-4e44-b974-a6f46e6bfbc0",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3074f51-3314-430c-9d0e-a0d0f325bbeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41daa922-fdbd-4415-a820-360cebdf5066"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68f54446-69a9-4d18-8a43-5f0951a9b260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bd280d3e-362a-41cd-8c62-26a5c7dfcdcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a5f922e-ca99-4a00-9bfc-cbd350420d95",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f2bd19-39af-4eaa-95e5-5312abfface4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa73e52b-5147-4600-ae5c-3c4558b85107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b6e070b-79aa-406c-80aa-d3c0aab0bc0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6009687d-86f6-4aac-a4bd-b8ac90772af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "404eeed5-cad3-42fc-ab68-22aef7d2fef1",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ec8a7a-8889-4d62-b92c-e91227a5a776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b12c6c0-8211-40d7-b23a-2e103585a01c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cba41b9-0377-4d1e-8fdd-17f173ba7fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "08897db2-96d5-4928-8611-41c21ca66f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f2a8e1d-4dc1-4c6f-9a99-072447f61c05",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59fb95a6-4b01-4b44-b3eb-9397864e0616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fc9401e-46fb-4cb3-a747-b81117cc99b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58694ba0-3dfc-4da1-9130-b22a24d72176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dedc8fec-2d32-4f33-ad11-badf7895e78e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "629b08f5-3ed2-49b1-93db-b8c5fec39218",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6883a17-bc0f-4c39-9b4d-122686b752cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "666020d3-00fe-42d6-8a78-4ca280b50625"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fef6369a-e298-49fa-bd2e-0d40139b97fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9535bdaf-a3a6-4126-9ec5-0c66c3f5d38a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2baf739-0767-4025-9965-adfca6817563",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d33f43b4-0f2c-4f0d-9856-a814149eccf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c2fdcc4-cc21-45c5-a35f-a35ee0ca31de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "929d6a19-9436-4d02-98ac-1617e7785fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3cd01d93-2a5b-4951-a7fc-f7811f4296ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeb26107-3096-4c9e-8dcb-9c032b09736e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc25722d-1540-49de-a7ff-2bf64fd47696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f0e77a5-9a77-4cc8-8ac3-5ba59aae361b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12d7fa65-5038-4b58-8b48-94abf967c37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e0c6dbb-461d-48ef-9408-a61fbea57125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e861ee75-679a-4ca3-a223-543734456c28",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8ef35b3-88ec-465d-908b-5b6e775631c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7152f4bb-df0c-44fa-9fe4-55686e1c3d89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f272a5c9-00c2-403d-ac71-4724d56f5086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "62809c8b-b728-404b-b3b5-8cb153728fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c99c83c-6f96-4e97-8ea4-35a3f5a671e3",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0940911b-7e03-4688-be6f-c9c73e2c9472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cc2469f-f64e-4dce-afe6-ead64fb0ec14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e7c2a1-78cf-4d2e-943c-704eed04a0da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "de7952a0-c202-424a-b6cd-931a0410fba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "112a13a1-22ad-43da-8d4b-2d11baa12778",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5526024-53f7-4de7-b885-75571d2f1215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45702c7c-6694-4c28-8570-bfb23c3fab67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddcf12cf-4dfb-4085-8ecd-9637fa7e1f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "eba19d9b-1c09-44d4-89a3-7b8cbfbd61e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebbcd0a7-6c48-4a19-84c1-ed50ffda961b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da9a183a-6099-4710-9345-8d372efad84a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d02ade1-b7f8-4061-ab44-3a0762e02f59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d069e50b-5816-4602-ba26-d37c184fe318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4abdb663-5986-4b8a-8dee-5d7a2ff573fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e51d06-546c-422b-9830-87b5fb5b37f7",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a7ea8e-b677-4bad-ad86-40bd48349979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4d5d851-e7f6-49e3-86d0-938c08396523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a703826-7d62-4824-bdc0-4766a433f674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b73ecb9-88dd-4005-9fa9-d213c54f9c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c682d453-5de0-44c5-97d6-8be5aa5b7d58",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5938a5db-2e48-4edd-a006-5a7b59fb5f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "23b28e01-7762-4ace-8860-97b5227bdf94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f0000a-210e-4afa-8b77-da8d15b8d312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "23e4ac94-f61d-4ae0-a73c-db36b3d86fe6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9a69a5aa-b307-4c9c-bf44-35bc9431e16f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2047e195-a82f-4bec-98d4-f1c82ff71e01",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "714a8149-d130-4433-8c60-c5bda944fb5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aeb0a8c5-d24a-4c39-a978-43eba6027609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e55470a-9a17-48d4-9d46-f372315549bd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ff4ea01-aa35-479d-b946-a762db201e4e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1e53bf8d-a99d-4b8a-8e07-ac4f5c374a76",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "072e6476-72c4-4af9-b071-51855cef1066"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "472f17b3-a03b-449c-ad69-9b5430abe598",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3279aea5-2606-40cb-9a71-20636535a04a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ff340146-41ed-4699-bf90-d6c5ca86881b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d3604a49-55e1-410d-837e-6b22d7aabaee"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1b5689bd-9ae6-4b94-b122-0355e53aad2d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "08dc0cff-9db7-4859-b358-f3fb77362666"
                }
              }
            ]
          },
          {
            "id": "3b052ec2-6237-42d4-8d95-4836860737f8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7d148e48-5465-498a-83a7-a042e5eb0a9f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b7d012a-03c4-45fc-afa7-333b2a35b88a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e3f782cd-e1e2-47bd-9118-63e48fe6193e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4dbb196-d8f1-4f63-8c5b-ce61d67c7d46",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "58963510-1c58-44f0-8075-871b20b7bc50"
                    }
                  }
                ]
              },
              {
                "id": "09b8435b-0a20-4103-8fbc-b33b2982fa79",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c15eaa6-6428-4892-a333-83f9701d4c30",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a7f46e59-7747-4560-9051-cd9c313c90a5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "adc51b9f-2dae-4dc1-bba4-13acb794cd66",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "af3a518f-8c96-47bb-9f85-c4cb44aeac91"
                    }
                  }
                ]
              },
              {
                "id": "fb6d0336-73ba-4871-ac42-f2613360fbfb",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f0ed530-1600-4eae-9233-7861a10e41b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3ed938da-abad-4e77-a2dc-b77b002228b5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e782c98f-fe95-45bb-b140-89691ce58d87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0a2089cf-fd76-4492-84bd-9fb8ad74ab99"
                    }
                  }
                ]
              },
              {
                "id": "0a66841a-b9e7-43ca-ae65-5b5789a9ef6f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5842c032-94bd-4b01-bd9a-ae72c7fac45f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b6600334-1789-4aa1-87c2-d2937d8c97ad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b6ba995c-7231-4bab-b03e-09c51811dc58",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "499cf329-c864-43ca-8db7-b439f01312e9"
                    }
                  }
                ]
              },
              {
                "id": "15a69fce-48c4-42bb-bce9-a4cf41dd9272",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc473141-7f73-4f70-b566-1706108bcde5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bdb2c469-dc78-425f-b039-7886278a0ac4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a0983fd-0456-4344-8f0a-7c2c8c65d448",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "dcbd3c29-23f6-439e-94b2-d67175cdc570"
                    }
                  }
                ]
              },
              {
                "id": "389ca5e2-c1e3-462b-aa8a-b8fb06904d14",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c863b33c-3153-4063-a65a-19ecd50170a8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f2cd162e-6406-446c-92d8-63b2983aac62"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0f34736-c805-4b9b-a477-de0566c1bb41",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c20c4667-00d8-454a-88db-64c8d9ef8bb6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7b6ba1a4-e33c-4e4e-8bec-9c81b8f64948",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "942f1685-328f-4880-9826-ba2ca549c40f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ddbc97be-9340-474a-afac-08c9f11d5c54",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3044337e-423d-47c1-a4de-3442c63a8b40"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1c10e25d-017d-4863-9cc5-87173b09228e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "362ec71d-5c30-4fbf-8eb7-5523af251876"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cb8d3514-9a29-49a5-9536-0d41c4c163d1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "73eb34dd-2d8a-4560-9b53-64918ee8d636"
            }
          }
        ]
      },
      {
        "id": "dd2dd0a2-17ac-49bd-ad73-ea8baccb83aa",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "3b735ea3-7b41-4baf-8c30-55d49e9cfd75",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e12453ec-4858-4ed3-82e6-b863fb61d847",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2c1bebb6-63f4-42a4-b45b-f160fa83d28c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc26f6b-2887-45d7-b21f-60abfc6373a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbca3003-69e6-41d4-a8a4-0d37f8557ca7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dbc5df5-f589-4800-898b-effc5200d6b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "57f5e384-4f84-44d7-9169-e1adc0eea76a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b79739-53db-400a-a876-b64b2a2bf304",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9695c690-c828-4f6f-b563-aff36e47526c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b262d32b-2486-4a9f-87ae-edeae449e5c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85806c82-4557-4fb3-ad31-84148ff8998e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "47ef5766-0cc4-4884-8694-511f576fcc71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d03e30ff-d27a-4cbc-838f-5dace624e749",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc0ee6b-95ee-4eaf-8fca-1b44b8f6537c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fb2b5da-2e3e-4ffa-802c-e5cd673615e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ecdfd73-0d5d-4d0a-8987-9d8daa2267cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddc485f9-de78-4b59-9cf6-1009dfffc7bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e4fcd73-5f4a-47b7-93fe-d27d9002c93e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d1d7546-5712-4508-9661-f1573c78dc92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f387d784-466d-4498-8ca0-ba585d6f4c9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d3af8dc-337b-4697-bdc4-b19389aa087e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bff787c-fe2d-4e7e-88eb-a87df005cfa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "598835c9-dc5f-43cd-a299-7c993a650382",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74739882-195d-46cd-9363-2236215db1c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60622e06-261f-4116-9e3e-6535b9f1b623"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f78649-4ddc-4b1d-bffc-5e06a8d3c13b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "375bde2b-f628-4a0f-86f9-96f357c46cc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f8d7d1a-318f-44dd-a213-b81ebec0214a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc9c917a-e071-46bc-addc-1e9d6dc3ee09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e499a04b-7dc1-42e1-a4b6-cec46d0f6206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6937d22e-8a14-4f71-bf9c-b82f97d72664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "10ec06bc-dd3f-41cf-98a3-dc4602be4188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9559661a-ff5e-463e-9d9d-c6b17ad32db1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7076c3e1-86d4-42eb-bc93-69e2cbbf2d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "945d2082-3efc-40a1-a423-d29497429ec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d87983e7-af87-42fd-9ef8-b32b53cd59d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c31d1b67-2cdd-487c-8ecd-bf85edf6eae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f57380-3dc5-4fa2-a65d-0032c850709b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b58e1294-662d-460c-b969-a98491e8c5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "523f4086-1e97-4fdf-9529-02729c2c998a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "324aac3c-f3c7-4af0-8400-d3800abdd372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f39050f-59dc-4350-ab86-562e26982c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4476d4a1-df73-4cb3-8133-fca848202515",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d720ae6f-943c-4f55-9c8b-65b2ed3f6ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19a60447-be3e-4120-8898-6eaca32359d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e0c6bd-d98a-4f51-bc10-f3cabbe0fb51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b15b894-2d0e-4cc4-94f7-b0e908bcd88a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16077de0-ad60-43c7-bbb8-107ea0fa74a4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb0efae2-b734-4891-b37f-cbe5268bb62c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c61cf07-84fe-4f74-bfa1-97dc361fa7a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8abbbd64-6061-49af-a06e-278c04a12d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2344b1cb-9b21-47b1-b1c6-7b6f8258afc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "777bf5c4-a28c-4fbe-99c0-0e6cb09948aa",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fb51250-4cbb-46fb-9d51-b65e414afc9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21421fe6-b8cf-4f33-9b91-b89c2497aa7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8bcb29-5caf-4f0a-b094-b6dc5e871385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6ef4146c-003b-4525-94db-70a82bb548e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c46bf282-e875-43e6-8922-7cdfb5b64d8b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "229f8c74-5b4f-494e-b63b-8423d4cbd8ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e02ff6b-12cc-4644-be95-69dae40b1a69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80693330-7de6-455e-ae0c-efd8fda2b608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "86fc84d7-22b5-4c7e-8521-f59939c867b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ce4edbb-06d8-40ad-a7db-df9494001528",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e96a0b0-bcae-49f3-a800-118bca6391b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0a6b98e-5dcc-45c6-ba62-fdd347f2c582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b052db-8792-4b8c-83e5-8198eb3f1408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "547e3648-2137-4568-a56e-c81e7d56accf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b916c757-75b6-425b-8786-239ef02f374a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "482e52a8-38e1-40f8-b778-d3578e493375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baac958c-6025-4979-a76b-d93316a83b46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49037830-d7a9-4c63-ad54-bf4fa47e784b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5840282b-a832-4bc5-a2ed-d6175e6be366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae3b74e-b3c9-4a88-a1f0-bd86748d790f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73a258a-99a1-47ab-a59b-69af49833ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6329e599-9cfb-4137-ae12-7781ad6f30af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3008213b-7423-4b04-a179-c7b7ccb51077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "439caa24-9816-4b03-8c37-aecfe1787769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "634e9481-c703-4ae0-89cc-fde7c67a2f63",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3541bce8-c8fb-4a07-9929-b6d943cc5f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eeb9d87-dbba-4f6b-85b5-c9c367730198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e70a014b-4540-403d-bb9e-8ee25dfdb68f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4be714f-a752-4471-87af-a74c88c17c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce74e85-7443-4f4c-8978-9ddcd4bc46a9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c72b7cd-b3fd-4bc5-8140-49c5008273aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f92caaa-c4ef-4c81-b191-b7b3f77828b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b6ec75a-b7f8-4f2b-90c7-87a4b3972951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d930ec6-5474-40ad-bea7-5cebc706ade5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e179d94-a707-4730-9736-e521ed5a4fbc",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfab6209-e150-44a5-a5a1-7fff98c5217e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c5f43a7-52bf-40b1-b21b-e32af7339d20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7428511-2448-4d4d-8833-334bf7791ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d422a73a-4f10-45a2-b2be-88a9485b2f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c71e8ce-522d-4808-a7a7-1af386410f56",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a9d5f44-fc7b-438a-807e-71f5413a491e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a6c4cef-e90b-475c-ad2f-d7defeaccf7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "085810a0-661a-4518-a495-9a8a0b21af98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33fd3b2d-9999-4c9a-8bc9-ba7b57450205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af499d0f-0cb6-460c-b2cb-8d9a7fc33c7d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bbe7d4d-d0f0-43f3-9d00-a09bc9896e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d103a28-c40f-43ce-a795-6074fecae38a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "415ef1fe-7688-4e32-877b-bc9b6f947061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16598cd4-f4f8-4d6b-9ea0-c57674e449e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be5a94a5-50f8-4c4a-ae4b-fafe95ac4311",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df98f966-99fc-46b3-b7f0-2fb5f517e877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f83e36e8-d71d-4f4d-9ed8-a9f271a49e3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cada001b-1368-4609-9cfb-f6a6efeacb3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "457d3d79-6b23-49c7-b1c7-b0ca4f5e613e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "936b1af4-b328-4944-87c7-741d6069500d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f15f43c5-e159-45c1-80e0-041c37a05910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a945469b-9f8f-4c64-a287-198ff27b3435"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c06a67-ed80-4400-a77d-4c1da9a8ad61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf1c6663-571b-4459-8dce-1c4b955aed74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd787f7-817c-4171-af8e-08d91b59ae49",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24034221-2c81-4d94-bc6a-8d4df1291b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0f5596f-bee6-4ff8-82ec-1be52d83f741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ac13d7-8001-4697-b1ec-05efd6a7057c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93ebd278-c767-49d4-8a81-b7ddbed5bad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f5d1c02-4697-42a5-be6b-5f3f4796ccbc",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "474435ac-11ae-4b2d-84ce-5b5e5d5144dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f73471da-72a9-4056-bbf8-43ff3b8ab157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af5dc64b-2f15-46a8-8045-aeefd575f653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4e4e2bd-ad24-4e7e-833e-8ce97662233f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0929c6-dc3b-4b49-aef5-803cb6eaf08c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ad1900-0345-4748-8997-ac4e3d2bf343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ee30239-6e50-4e35-aee1-3b0e402118db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea85e3b0-f6de-4c6a-904a-f8fe5fd61d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "acea3a8d-09fb-4f4c-93d1-063ecd7e0bd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ffba4d3-4dae-4ab5-8fda-a54bd08d9d6b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4550dde9-b9d3-4c3e-a2c8-48ff593ca311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7f007aa-cdb7-4795-a92f-ccb116d149b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2102c889-86da-4ce0-9bf0-33f6adbba0fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43aafff7-3359-415f-aa8b-4a9ad212b0c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ffbeb9-d910-4b05-b228-bb31068d0efd",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4f2112-44fe-4ed5-9537-3fdfabc33202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca905788-137a-4b76-b733-87e2fce2c350"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fbc525e-7052-4fce-9c6e-43fa0ed2b246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d428358-3341-4867-9b35-94db816e67d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a2bce69-1bd1-4ef4-9074-59364fe2f267",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f9c692-ec3b-462c-9e5b-59f5e35f98a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9c85abd-1475-4ff4-883b-ace88c68f052"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c32188a-31a0-407b-82b2-897fcabc4890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb2c7a64-fda8-4cec-b4f7-efca32bed20b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa9a9a5-f04a-4a38-b401-74e055813763",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "916320aa-5a1a-4f81-b863-74e857fd1e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d036dc35-92a8-4220-bc7d-25c9365da004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e767a8f9-9193-4186-861a-280cf6fb599f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b61feb15-b8c6-4d0f-a9bd-27de1fcd73bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60db6ce4-411b-4076-9996-a62acd3dab89",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5cc78bc-9b3d-43ad-90d5-e372bb794228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d9a3fe2-a1d3-407e-ab8f-4896ca14142b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c997fba4-c55d-4e19-a756-d0e831f80470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32f33146-7f5a-4c19-9ca5-c3743cff135a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6430133a-e950-4adf-908e-510d27302718",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf4a315-04bf-40da-a502-969e327cecef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1983f90a-9148-48ca-bddf-58ed9d05d7bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2532daba-806c-47cb-8b92-24f0d8f5979e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32473f04-866c-45d3-8042-b25891204014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adeecb57-9c6b-4f2c-afe7-98e98b73afdb",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a3959b3-0cfd-447a-b417-730931f5900d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6186d851-4ee3-4181-b8f7-435a97fafb3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d08940c4-aad9-41ba-b50f-5d587f231856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18b5d05a-5365-4723-bd52-541ddbe7e752"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3ab4ae50-68f7-456d-aa7a-f3b6de25bfe2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "144b90eb-c518-4c21-9da8-854fc35ec914",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b980b33-8395-439d-a6a3-fd16389398e3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "07ee3d85-56b3-4bf5-9ead-f03fe97937f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b559ce9a-4bf3-41fc-a303-1e3b60c86d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee64ad86-979c-4215-bc83-8964b8e61f11"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7d9cf9f-208b-4abc-b4a9-41cba6e0b2c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af9b9c52-350e-4343-bb58-119c4995de03"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "36be549a-33ec-4841-95b6-6c4d7790f011",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4244ed12-f23c-4bcd-bbfa-afcc4a52a70f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f52b60c7-12af-4a08-a49b-d6d8e4ab7342",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "423ec10e-fb8a-490a-9e1b-5515480a059f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "67e35e1f-0be7-4060-ae1b-f3de7d12f62b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2822a9c4-5eb3-4bfe-baad-a84531b34355"
            }
          }
        ]
      },
      {
        "id": "3b8ead02-fe93-4575-bde6-846bf45a8386",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "e8b30067-b4c0-4875-b0cb-19d0d89f8a11",
            "name": "Negative Testing",
            "item": [
              {
                "id": "746db245-cec2-4563-a29d-7e03251739fb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7c4a97e3-8235-4a9a-899d-59080529031e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e1c0620-8229-478d-a7c0-6ccb25ed0fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb10b4ab-ff00-47fa-addb-0a3c696ea75c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c8209f-89b4-4388-9ca2-a4b28575a5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "07989069-f43f-4e72-9a9d-b51357a5db0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3fc1396-627e-4c5b-bb3b-3dedb2de947d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5943b5e-036f-428f-8588-fb0540984e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "852489eb-34fa-4a59-b126-e0ae8068d45f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3383692a-1a48-4c51-80a0-fe44f02f5977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5d21438-4704-4112-bbc3-2eaddfbe73e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01ee8e5d-5c33-4637-8436-58d28b52c759",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b702f811-24aa-44cc-91c1-803fe0ed0b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7bf48c7-c012-44f3-a1cb-d87699c823d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0664b18-aecd-48f6-93cd-1dac460d0df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7313f3c-f96e-4094-804a-6c07b4e7c404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdcf8133-68ff-456c-8ec0-e7da750140b0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0025e275-b55d-4dce-ac23-e38f79945181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30cce747-e3ae-49e7-b22c-ab5833a44b46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "798ef11b-9c0b-4dbb-9cc8-81f1e2cc23a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "86da9028-6dc7-42d8-8f17-111435331958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ccd5b66-7b33-4e16-8cd4-e16f90f86f2e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5132c332-f659-47d8-92cf-ada275432747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fc00ca8-b8fd-4d0b-9237-98063ed11f53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee0b6645-a479-48d7-af6c-5505059969f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a18ec8d7-ab23-4ea7-abb5-740093025610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b11ea057-212e-4e97-a95c-1b2408e7eab0",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a43015bd-66b4-4d1e-b739-8d68e14c4f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60ee91f0-baab-487d-b3b7-1f64cee97119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f107299-ee87-4f9c-9223-11afda20288b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "40c3fb64-22c1-4a43-9e24-924e9a65d16a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a715e1-ec4a-4681-92c1-e2077ceb3fb5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e27c5c4c-a6c7-411b-ad23-fedd19c4604a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2a3cea4-5d9d-49ca-a88d-1f9da4d1311f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebbb06de-7e00-43a3-b087-2bfc1bd73b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "396365f1-7c0e-4959-853f-5a3eb40a6eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d9774a-2308-45e8-a370-0128f35ceb23",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "060161d0-28aa-4dd7-b259-5a60eaa77457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38294b59-6050-4759-82a2-d1c1bdba6228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f682c6f-0ffd-4867-9c17-3e4a82f2f69f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d95dd590-7023-459a-b7ce-36b0e6a7f016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "313fb5c8-c5a9-469f-9049-04a517e668ed",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72606224-d500-45c6-b531-dc96e8f6f080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80b89eaa-513d-4f3b-9b7d-e7af5d125789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c36ecbf-3364-471f-9534-0279c6952a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5256e66a-d7ff-4b77-81f9-e4180ed25e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39cd90ed-fd98-461c-b438-da2971c147a6",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e5818b4-0b15-488e-8339-1dce52474fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d5d9231-c731-43c3-b447-fe7926c6bad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a21f51-251a-4e54-a027-f17215bd51d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6935ecb-54f9-4be2-b4d9-d442dfd058f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "541142cb-17bb-4f9e-82b8-65e0d0610796",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00406156-fe56-4b0d-a29a-b61d07cc15c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "023c8994-1c13-4fb2-8eb2-fc6e9b943a26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "439a93d2-6472-425c-9f41-f6583f69e4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1677ea42-500f-4b76-bca5-31e56ee4738a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ea0965d-ad4c-45de-be16-23ff213eb161",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b4da80-7a1c-40e4-88b9-2ec64081a595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58c5328c-edda-4767-ae6a-e426b9c665dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe69621-377b-418f-8d9d-40efa5b98dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "36f08a86-0558-41f1-b61b-2c541e1187a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb8a8a3b-505f-4591-83e6-380284ffe4e6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "672e4d85-612a-4b92-bd29-8d43109a639b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fb35a24-b4f1-40ef-83a8-8ccfb675c416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a8413ec-638c-4129-b92b-bf37545c62ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "405a534b-9b61-4afb-9868-3817b5dd94bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6775500-fea9-4d85-85ce-f128e2f76b7b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f2b7b1-e6f1-4ef0-94be-c94b1e3dfcf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3622e51-704e-45f2-8d88-8759af4cfd30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47dc3092-3446-4829-b40d-8e3c6a800916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bd93d88-cfc9-46b5-b5d7-14cbb2ab2aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "defb741a-5e29-4acb-b3e6-f6605079c234",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "466db3e0-da0c-4f8f-8f96-38294948da59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bac1bbd2-d607-490e-8097-32098a40cdb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4d3471e-ae8b-4e44-8c47-57ab4151bb72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff2fc39d-8cb5-4813-a3a7-485f28c95821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f15543-3b40-4432-8df7-e4f6b0636150",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b598657b-d1a3-4b6e-b012-85f010351ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "142f3913-ae9e-4e1b-b78f-5da796b0ad55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d248ed-1af5-4b76-9e85-5e44cb6958f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "31885888-2f62-4a9f-8251-d8b7e4c53a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c914c29a-5c0c-44b9-9297-8b70a57e21a7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb8caf4b-4cba-4760-8abb-df8a49ec137e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b83770d-0203-4c9f-81b1-60217014f0fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18620c32-193e-498a-8cd4-ff8a13baf036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad5ce444-1d78-43d9-a459-bd5a7f59b248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cba55c4-bc60-4517-87bf-b6ee2aac5e32",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c3143a-192c-4fbe-9201-730dfbd393a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04d619d3-c7bf-47a3-927c-209d011df33e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25a29dd4-5aa0-42d6-abdd-1356aed59035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "73f4089a-f8b8-4e40-9c1f-393cfec98d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87a3e8bc-f9d6-43ab-9a5c-b7f86ebf7f3f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc723dd9-39a0-4355-9516-a6cc86249a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80559e3b-f39b-481c-8380-4d30afa54228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2128c213-f516-4f03-9d63-aebc6d70a21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ee7206c-d252-4623-9afa-c56a385dce44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5835754d-0b6c-4d53-a0be-8856c4d445d4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dbe688a-ff04-42e5-9b26-e61d53e3f7e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8ef4d3b-d5cb-4ee6-a3b6-440515e0b908"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21951dff-3a8d-42f5-829b-a4c4a2168c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dea1e23-aef8-4a4b-884b-228015ff7117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5c0451b-ace0-4c76-8cf6-ccad9a7cde52",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "742e8abc-0976-4949-836c-6389be30f3ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e6e3aa6-8df7-4a8f-9d60-965d18056108"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0670040-5a6f-4519-a267-30e7cac469f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7291c8ad-4363-4ce0-bafc-f02e2139ecff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86eff9b0-5ddd-489e-864e-f550e1e5a272",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f668b94-95fa-4230-a743-22689cc755df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a625eb6-337a-4fde-bafd-64e29931a6c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4fabcc5-c3fd-4651-a517-c60f85896679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fc72f77-445f-48cc-a1b4-5c6726ac0b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0ff0aa-cf99-46eb-a37d-6fe904b033de",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65de35e3-7f7d-451e-9008-dd570f362c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "818fdf9f-d58f-428f-92b0-9f9774a8006f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c0fca80-e91b-4f72-ad66-2a16c805259d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df77334b-7dbf-4343-a42b-1083ab1b3e1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3235a846-8073-4be0-8aa9-727b2b2e7de7",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f2d08dd-3bc4-42ff-bd17-dc7a34ebaa63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37edd0ab-0a50-464f-a70a-2f4ac6f62fd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a201a5-6b65-4d69-ad50-7d94e52051b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60cc41e4-8060-47ff-88a2-654bf501b24b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbebccf2-f229-43b8-a660-0cbeaddcc4b3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79c7eb3-c09a-41b8-8bdd-9ec5dccba36f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "002edc6c-17dd-4a06-9f02-f6058db33a30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "031e2c6c-f0a5-49b2-9e8e-533b16426978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c14be7ea-d995-4f40-925a-2351c117dafe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb259524-174e-4dee-a9f2-4aa8a0c8e070",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dbd4e51-f486-49fb-a1be-bd5b67f88316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d11888e3-190f-434f-9112-7b59844c2ded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2228ada6-10af-4211-b725-ac52726d7176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98f3c89c-fc42-4c81-bf2d-c71afa6936dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "836b2921-d1a8-45a4-b897-1f7d9fe6ec05",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31eb0920-0341-45c9-be09-07ba68c3c77b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb235747-953c-47f8-9656-5ba58f333abc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55bbbd7a-d45f-45cc-9caa-cee9c44506a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65352b60-2865-431e-817e-338c470c85af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c74b54c0-0270-4858-a53b-f6bf2d50cb73",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a93acc-0cc0-4f9d-aa4b-7c02586ee4ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5382e3fb-1eb5-4f9d-b909-6fbf13e47984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e829a2-2686-4eac-b1d3-e890fd8b15cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d741677-8b3d-4430-ade2-44c9fabd2b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "468dd7c1-b04a-44f2-864d-ee2afe89e011",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ea6c92-bd99-423b-ab77-4843d22a333c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6f733e2-bb6c-49d8-af35-3644cb16e42e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eb71ab1-5ad5-46b6-ac0d-2a2372208058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed8de29e-4016-4884-96ac-daeb53d80cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5552f16f-0b18-4194-bb51-a1ebe94db77a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9fc06f1-117e-45b1-be8b-b6f350c0f715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c49fc8e3-dc0d-4bef-94e5-5f9102cddfb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "166a31fc-e714-42f3-8203-b75d09c054ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a2e77e3-e5a8-43a1-83a1-0d5d4363e256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdbcebad-e0d3-46ac-aaf7-0ebde620cb5e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0dc8c31-127d-454f-bbf1-8635b35dda69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e11da4bf-f2be-494c-9c20-57f2189a5ff2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c27d72f2-b613-4c8d-8217-c47ac2646878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d627c67a-1a11-4d8c-ba38-76f958306481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91dca6c4-423e-4f74-8047-9f1c8f91d450",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "363c0185-c7cd-40e5-b838-3d67f063ab1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5002a304-39a2-4c3f-b01b-8af7daecce91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a03705f5-537c-4749-b217-7e06e7026043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39a91554-f612-4890-9b18-6cb5d881acfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b76968-72ce-4d60-9385-f8b8c11cfbdd",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9017f420-ac06-46a5-88eb-97a5d6c5d5fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f40e316-6ef3-4edb-b8d9-2efb78703f34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0183b048-a10e-43fb-aedb-560cb2219a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ddec07d-748f-4ef2-97e7-550ca16474e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "062b3a7e-79f2-4929-bfd7-54b313f7f8c4",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4275669c-c085-4fde-9b35-1a2f15d03474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "466c7cb5-7996-471d-a670-94060923f82e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b2069d-cdcb-4f8b-b71c-cfcdfa59da9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f3a455a-9e6e-4ef8-85d5-a8f1b2ea7ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5798c85-1c12-4c3f-8a2b-b8dff98ef970",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ddbd0f6-561c-4471-8ef7-be8f8fd3a7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "290ffe39-3b88-4594-bb37-560ea508f2fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c726fe25-9316-4fca-86e2-563ef4ce074b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9244dd6c-d4ff-42f4-b5cb-6fa3fddc5838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9540b1c4-94f1-4673-abac-76f5f191ea9c",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b83c97-248f-4c3d-b4a2-d7e59bba3d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8b841a1-8a9a-4634-8225-1b50520e26c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0409f702-d037-46d0-8390-bb5f688ac2b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bc2f943-ba23-45ff-acc0-0c44b813361a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5164657-3c2c-4f75-b30c-eb01881960e6",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf372fc-a1b1-4658-b63b-4ba32063a8e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29316d2f-73cd-44f9-974d-a0613f824ff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baac3354-c75e-4f06-b6cd-8364234a67d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b94b1a9-a4b5-4480-8c66-f44b3711d6a8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "36162bf2-0cdf-4399-abcd-6e2c18a1c399",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d062cd07-168a-4c92-928d-0272b2cbf428",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "324ddec0-f16c-4cab-86ef-ccf2e6006fae",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "222eabb2-4f1c-4394-9b66-21d3b7f0ef06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ce0794e-f53b-4edd-abbe-18ca2bc975bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b40e4715-203f-45ea-9727-4b5b2b5b6356"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c391c0b3-e744-49a6-acda-40b490205b60",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b1c245e-60cc-487e-8db2-2faa34afc917"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f60f6b1-862f-41b7-a277-7edc1a6a3d6a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "df6f5ab5-324e-4fed-91bd-2457c18dac52"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f3f11aea-0029-4a8f-ac04-225e969d61b6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6ce4f49c-9b2c-49df-972d-840c98b88943"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "afd20006-1b58-4ce1-9a55-a94824b3a2a5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "47b88037-1979-41d9-8129-02d31f2fa805"
            }
          }
        ]
      },
      {
        "id": "d7ff3c29-508f-47fb-8d91-8c66a41ad191",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "cc19d513-a2df-47c0-8a65-55df83924e37",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cbeea1f2-3d8a-4c03-8669-57e4c64db7e5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e4af96f9-3a6e-43b9-8ec4-361c6e7a25b9",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4285c833-1c85-4111-b4e2-4fa77607ebc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c31e6d2d-67ca-40cc-8662-683cc9b10c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ee36dba-d0bf-43c3-a977-9f509edaf035",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd00867-8669-4cc0-babf-966999ffa83c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6294cdf5-cadd-4a60-844c-742a65c9393f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7987ba6-99a8-42d6-b2d5-98eee23a07e7",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f78f2c-4fb6-460b-a1ab-19bc9ab6bb53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b58adbf-2614-4f13-a8da-dc704cbc2d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97cee33c-9fa1-4e93-b34c-06a51a3e2195",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a176d24-c15d-41e2-a7ca-f146b906e654",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd4d4d12-2242-492c-9a52-f6a7a89c148d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44192258-86cb-4587-ab65-c02787a93d7c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd3cd14-974e-4cd6-9f81-aa36d2a8b90a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd9a4c56-cc85-4f82-a14d-d822569f3104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d5943c6-1c25-43f6-850c-c313c31ccf08",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d38be7b0-0f8e-424d-a6be-b53bf8b02519",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83f95a8b-13c8-46b9-9cd7-7fa05c166862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c432ec6-703c-4ef2-b8af-982df4c5b61a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbb6156a-37e6-4a53-8a91-81e31cf7c603",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47ba5b15-8cfc-4a1a-aa59-0fad9004587c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "277cb30b-8389-49f7-9ccc-31ba11697522",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b650963f-1874-48e9-9d25-1da64236df94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364a353f-bc67-4516-ab35-47e577a3f273",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba7dabd-d7db-42a7-afe2-9aed76dd3f4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f2607a2-c20a-4249-90bb-e741fd3f0518"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf8c459-39ea-40d6-9e24-c158513f013c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c93e118-cc2e-4873-92fe-24f245a9fc70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ccdb6d-af61-44e1-be23-be54581d04ac",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf7db824-b09e-4227-98b1-277be3829c97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f2e46d6-7c61-4fcd-9a97-02fc1c04abe4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4782be34-670a-449c-9db0-15dadc09dd5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d59eb55-4c35-4cc0-965e-48ce4feb831c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30ba8639-a14e-45a7-8e95-6aab62e9b306",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69b7d5e-994e-4a2f-a9ce-16782ae61c16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "367263fc-91c1-472c-b462-74cb5664467a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f76efc8-7760-49e5-afb3-92fd4f528538",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c0de17b-7566-4d06-a9a2-24ff140819f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df54cfb-12b6-4ae0-9c1b-c9e25ee07817",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1acf75f8-1d0c-4f10-8413-dfd9fd19dbea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86939cf8-187d-4791-87f0-acd9d93274e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c936575-fd74-4e3e-a896-af4effce4de2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dd52565-bdf2-4677-b100-6679c9056acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a0c35e9-8140-4476-9135-31f18c4e7619",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67dd97b0-60ed-4715-80e8-d649042cabbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "064039f6-1a18-4a97-8522-4989744c4cd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8952fdc-a887-45f5-9d5a-d52aea0c0ba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a3dc970-dbe7-4903-820e-e1641c66fbee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31248f73-bf9a-47e8-b4ff-9a481365d0d6",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72da95e3-97c7-47d1-bda7-fd3c39cec0e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8195cca-fb70-467c-b783-99946b80780c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4ab689-36c8-4775-b13c-59f678ffa45d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "242b142f-85e6-4f04-a974-e90efe9ac25a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5bbd327-8d08-4cc6-a588-7c99ee565b20",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c3f7f2c-3fa0-4c48-8983-aa0df1a984df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1973414b-363b-4900-9aaa-99b1b557c1bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e62d43e9-8e66-4d78-90da-3fb0462c23e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "225ef179-bf50-443c-8677-cedaaa180cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36eb265f-355b-471b-819a-a952f5da35b9",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a73cad-d7e8-4264-b5cd-9d6796051277",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5b037c3-1fd7-401d-86e7-7ee8af4cb746"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "342c59ce-3b3a-43cc-8b9b-fe17de90978e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c05a26ce-9a8d-47de-ae0d-b6defbb6775d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d8cbdb-db7d-4653-8c40-35a4c418df27",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea1ea27-0487-4de9-a085-dcc06fc3aba5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b021cb9c-dc1a-412c-8e67-cb2e08356ec4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac067106-2904-45e6-a07b-4ca0c2c25d88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e33a383c-b3f8-4332-9289-75a1212128c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd2bdca-d538-4524-b85c-4b4d14988bb0",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72597d9c-a37a-4272-8196-ca01db57d7ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaba12bd-c990-447b-bef0-dd8e96dbdcb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d32514f-8d61-4a2a-9910-125f4813093a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc172889-1bc5-486e-838e-b021e452c4e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b64751-d42b-40e7-a1c5-95ae818853fe",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fef1127-4bcc-4936-9a29-40d0b9fa370b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a555df4-343a-4e21-868e-bd6fb4f1c1de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c352ba5-f8f5-43c3-910d-6cb29d88ae52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96413ff2-6d51-4f76-b415-6ecd33cb694e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e02ddb-55da-4a4a-b6bc-8983cb52e726",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8a386c0-ad4c-4e2f-9193-f8eb5847df24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14a4783a-40b8-4548-a81e-362cbce08090"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f2c599-ce90-4db4-a500-c1be67b5253b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfe15a23-3d64-4544-b91b-b9201662a601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b60fa050-6219-4ed3-8997-c0c47b5956e3",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fb17a49-39dd-4d54-a07d-cb6624669a3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6a43463-5514-4bf3-b852-f3f5f9b323fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6480606f-a802-4207-8f35-ac68170ae19e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55402470-bdd1-4642-bc31-698b176c27b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32370d93-ec3b-4db7-8511-b541c5774664",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb2e677-ade0-42f8-bc3a-7cd3569e7206",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b151d8e3-570b-4768-8dfe-ec980aaae92c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c332596c-ae19-4958-9b8b-c87c435bb753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad9fb445-54d0-4d23-bb64-7fd013f6aca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c347f7b-91b5-49f6-ab5d-be8501811e91",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a376b1-36e4-4665-886b-0344c070caed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02a3762b-2fd3-4864-a8a3-f220c91140d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6451b4b-1208-440f-b977-bb9095733bf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52c9ae18-b3f0-443a-9951-4348f54dec4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a502e86c-4dcf-40ae-81ad-0f0c2e42a3f3",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d86f6484-bf77-4f9d-9c6b-dd706443a37c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8e07cff-3b39-4758-ae3b-0bb3721c624f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e07b2c-92bb-449f-99c2-a23a8af9e004",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9a06bcc-2578-4fc6-a74c-15b902ffc43e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ce7d9b-d0b4-4704-9e05-39e9caaed503",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b8b87c-a640-4e61-aa3b-dfaf95c714c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99a6799a-6781-4322-8c44-e9c044acd5d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "569fac30-f6e4-4080-9ac4-f3c4fb81d335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ace869c5-b903-4ca8-828a-b5ba5a5ed94e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "249c2ab4-5781-4d6d-92e7-6ed67f516453",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a631f0-d5f7-4f83-a080-f75ad903e3d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ef4483b-8a83-400a-81f6-295a3ba64a39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94895725-2016-4e4f-943c-0fc118b04ec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "063c3705-e826-4ccf-9aed-6b1848b606c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6689a694-c0d6-48bb-b3ee-e82e4b3bf439",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eec7db6-246b-4a08-b620-22614f735b28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fa8dc96-da52-423a-83b0-fc466475dc46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc0f915-990e-4b24-b962-389481bd305b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1b0287e-84a5-4213-9b83-46fc4e790fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4526ce2-3f64-4a42-acba-945a7482a19b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba6af80-8d05-467c-b9f0-82038616f53f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d86f2845-2443-430e-930e-03170b9d28cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "952f484d-d174-425c-aad6-2c80abc1c1d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da82673e-80d9-4e8b-a3d1-85cb60c94059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf7a6abe-5abf-4123-ab27-f447e3fbee42",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b91b9d1-8b69-46a7-b507-e5f46bc1fad5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfe61826-e054-42a7-b61f-c609361b05f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29bf223d-6a09-4f03-95ad-eb7742a0e5d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f77e76b8-03b4-40b6-a48d-e804a884fbe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae4a184-1d6c-4905-b086-12216aaba080",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a16c3d4-cc59-4fd3-9dd2-84ccf14d938f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7ab04eb-6066-46d8-a802-d60bd4405707"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1338a0ba-8e1a-4371-9617-a1a7c390a04a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d381b6e6-1407-4bd4-a768-dc3af9e24f81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30317e58-8588-4287-9cd3-7db735e1485f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee2f8d2-7c1d-404b-9689-550026852f52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15d30224-03cd-453c-9dba-af6da2731e1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1272f5a6-b008-43db-8b4c-f7c277b91e03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee76b86d-9e78-4700-b076-0d3fefd8d623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a106a0-a8f5-403e-b459-f4fe49df34a2",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f27745-f6bf-4dd4-8476-ac3fb9d6ee28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06dc4081-0995-426e-af76-51c5403c64d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c74e1e51-fec1-4527-9bfe-fdf65625ce3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a775003-3b41-445e-9301-e5b1285f1fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82200577-cce2-4816-a989-be5bafb4bdca",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d5f24bc-d445-437a-be8a-8ea87dc6c8c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e34b639a-066a-4ad6-8ea7-618c7352986f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d06b0669-4f98-4db3-a56d-efd5ee8c710d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef07af7c-9c80-4ab1-92ba-37f65db516bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e48840-27f8-4570-b8d1-a9302ac3597d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be7bd85-b347-40c1-be03-5210743f28d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eba358c1-c9d1-4d32-8b46-e2324e472be1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0f94e1-12c8-4709-b4d3-ac838f8337b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d02ebb54-6db0-451b-a16b-3e417d679495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fed1373-a6bb-4cfc-aa4e-7e92d82da22c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feba6b16-cfd8-4d6f-aaa2-4776c00985cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cc99b5c-0148-42ae-84af-f21ee3e0c601"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "591402a5-57f6-4686-8042-6002e9a44e39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "809f793f-39eb-4474-8ba0-4f0a13ae5cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c99faeb-dfb5-4da1-b9fe-908ec7d87512",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ef2cf1-2a4e-4708-95a5-1aa12c01eeff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b1986a5-043c-492d-b8d6-785e043a1db0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a962eb-2c17-4b8c-a936-c616db05d6e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "055a1284-aeeb-49fb-95eb-b68a1c808e05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c89c5508-2376-42f8-a73e-b273c9807e30",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c6baaa-95a2-4000-bb24-fa9358fa2362",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fed009e3-150d-4f01-8db6-b2fa2fd7e9e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a3f4260-c749-4100-a631-4a77e8efb31a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5e3163d-9699-475f-9454-6bc8eb1473dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "729adc38-cd98-4023-9529-3e0e48b10f97",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "600f4059-1d02-462f-b002-04300422957b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0523974d-fcf7-4638-85af-46059bd12278"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de37c4fd-8489-4123-bda6-c5f0554d5d4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "397767d2-f4c0-4367-8c0b-30226ee26e1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4140d16-874d-4d8e-8f6e-b816a19cff29",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c280c20-65dd-4dff-a620-a360db604cb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7451d19b-28dc-4b32-a805-efcc68b3a50e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "add53321-7256-4d7a-9cf9-69c8ed5bb2eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "852a56a5-bc8e-4e0d-ab47-ea37eeeb7837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c5aec7-c0fb-49ce-be73-8b942dabebae",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0957a39e-fe9e-4587-a1e9-e91718109a5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a75e9144-805f-4990-971b-be94e18aba69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f27382-180c-409f-a894-2450872b22e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "086cb8c0-5c79-444c-adcb-b50d665e15b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c8c8f9-30fd-4888-8000-57647d8e38b5",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa6fa73-b211-4543-9de9-354c12baa3b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e103484-9c77-4f4d-9e7e-0f2383bd7f2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36590219-b5c4-40d2-a839-2ec47feebac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4d513aa-8336-4bdc-b9de-af4277312b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d38e312-4324-4bf7-a0af-a64205dfd489",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a4fb629-5e48-46e7-bd45-5420d0656e7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5218ffe2-8b53-42ed-8d7f-5a887dbd2d07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7300f4bc-4105-4be9-9aa0-31edf5fe2e19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd2baed4-754e-4d14-ae74-c79d6ade1bd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0def4271-f38c-4c0e-ab3d-0daccaae2034",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10576b3b-7be8-4a98-8ade-aaa4c13f931b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17736d11-90a6-42f0-b22a-808267eaf36e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec0ec327-96fb-4cab-8d96-449151ae69f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3892235-3828-45e2-9814-c7a3e0e31162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c86b96-1e40-4ad1-a393-5b58b42b8582",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e37575-af0b-4f91-a4d5-fd93b0534162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9df0c140-a1b6-46cb-aa17-9b2878231f26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c97f54-a051-4250-91b5-4564e0be51ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5115d9cc-d171-4596-b135-1f4b19cda16d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "920237f4-2fbc-4a84-80f9-e36bbf75d164",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6393c405-18a1-4a34-afee-d68e14a6c669",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bccfa19-19d2-4975-94ac-35e0ce8958a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b3c23ec-74e5-43e2-b6a3-dba3139510a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efbf7452-13af-407e-b026-f78801957049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51329204-56ea-4c44-bc59-81a847d9c3bb",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "862bcc52-d256-4ac1-8244-26ca6fe96bf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d69f721a-6ac5-44ff-86cf-67d45beb387a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd28a17a-a930-430d-9746-966104112d0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1056dd3-648d-4349-bb16-c7032a519629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa0a9447-7d76-4163-991d-5a21353c1635",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd4c78b5-7221-4ef4-852c-f5cacdd43bb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0988cd88-06a1-4d73-9181-411aa82fd7b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80923c28-0dab-4d5b-ba51-b821058073bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "018e2396-46cf-49f7-8a5d-4d8b075113d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb7fe2e-08ed-4fca-9513-095542d3787a",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f89660a4-6cd4-4204-bf54-7e1635432479",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5b2e808-6435-4332-b18b-2d9c97c42ac9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8dcf74a-cf9c-42fb-aa01-529ed1c01ecc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05c28c93-b230-473c-bc86-7579a174ca6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e8a084-5fde-48b9-bebd-64b0f652fc43",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "803c68ae-a612-4749-9365-ce9a649c60b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba275ac2-a82a-4456-92e5-e1602d85b083"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34653aa3-7611-4fb3-9079-7f5a0a03abd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dd1fe6d-2a1c-4641-80b6-c154083ff1b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6197f4e3-35e4-420d-b8bc-9953bc274238",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f0bd770-1c5f-497c-925d-e8c23260275a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6f999f0-9c26-4aa6-8a1c-2a133cca88fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9346ba72-d611-443e-9133-26f372fb1294",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df674ba7-1a30-4c64-accf-0d28c868c3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46957427-9f81-42ae-bf1d-a41fb2714fc2",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae3c4598-79b3-48a3-9d95-6e8fd8723934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58fd2245-f5a8-4e40-9652-9ed20595789b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f576c2bc-78fa-4d5c-84ac-7e05d23e4ef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab072954-cd73-4c9c-8a40-a2ddbfed51c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8960c82-eb84-4b26-a0d3-5278efd37077",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df3932b3-9151-4bbb-8bf8-7d668757dd47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9a2c840-729c-41af-8768-73a23307df51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f707c11-e1bd-4471-9717-927186a83165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea7e1401-eec8-4d77-be5a-03668f28c48e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83a3d56a-5751-47d8-9c05-c1281ab44163",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ff0bbb-92b2-4c6f-a0d0-cfe1971c3da3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b26a2770-8eaa-4dbd-b123-3aae51ef84f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "950b3fee-eb62-4b71-b8cf-5d6343724e70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "317e23d6-39bf-480d-a2c1-1c395d00c4b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b307bac-60fc-4ced-85c8-11e53a63a6e9",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f77f23-e6aa-40b7-a2e8-47780c092985",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8062f8d3-3971-4d33-93a3-57c942bcbb67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9319c04-c64f-4adf-a731-798857434fa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0692029-3583-44b8-be06-a80ded7958cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19308821-443e-44fe-bf43-f393767458b3",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c7e9a7e-1aa8-4277-810c-e2f32dd103fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6686937-fff0-4236-8424-c0d2d754b697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a64d86-5797-4faf-ad58-7c91887d48d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "702b4908-826c-4842-a922-1b9c610bc2b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32007324-a4ec-402b-8b8d-c41e32b0bf1f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af930d49-f81b-448f-a0ed-aefada01f9d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36294afb-d4be-4eba-b0cb-6436ddcddf9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29dc0a8a-7ee8-49ec-80e5-27636e1d78ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aee82fc5-8209-4e07-b645-e120ca23af03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da01c76-d4c2-49cb-ab0b-ed836cffd315",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4f1f0d-40dd-49d5-a0a2-5bc1766124a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2676cb5-aa33-43e7-ac7b-ee2064ed5f35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b069fba8-2024-4e88-ac13-54c434542373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1104ff41-a146-4ce8-b75f-a47e534b34f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aeec5b8-8681-4579-a0e8-9d3ff5dca888",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ed85f7-a870-4e8f-b391-c15a230bf0da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc2354ea-dffc-4d5a-bfa7-ff40803e8b63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ca931d-4824-4efc-a9f3-4e42331d5c58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3380f96a-8f51-440b-b792-9c807fc51078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52686414-3b06-4ea6-bd0d-de0f5cfcc40c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec8d8b1-9e6f-450d-a863-8fbb5132c3c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7db7567b-ba1a-446b-bae9-d182beb08abc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a176e805-972c-46a0-b0d2-440c95df195e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19f85465-7b05-41f0-bc52-cbea09115796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ad1d5e-644e-415d-803e-62f306ed2334",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0493f81a-2dff-4f10-8ee4-745d1f2ef944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10e71499-025e-4e58-b570-a95068098198"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58735b61-5125-4d1f-a653-9a6b0b5c4c10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4275dd6-03cb-4758-ba37-4db3255e1552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63baa63c-cc51-470e-927a-ce99900f0b0b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "873683c0-c72b-4c12-b769-1e92c4a39145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e948834e-6d5b-4017-8bbb-1e3be63cbc85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89a80cc2-1f2a-4266-9644-4c637ba0dc54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "353c021e-518d-4436-b8d9-cbb0054a6888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de895477-0633-4ed6-8aa9-0acfa280a2e4",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4be7dce9-6b57-4b97-95e1-5ce55fc2dfe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ec0ef69-2717-4778-82b6-9e9d95ce57f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b495b06c-75f1-45ed-a60d-ed07a6292910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38d8da68-8553-4519-8173-67699a19a388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00334355-28b3-4cdf-bc45-86e3e8cec7c9",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc7c3ada-42b0-4b4f-b4fa-4482a43260f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3eb5f85-ad99-4368-b45c-76b7dfad8b66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9833ca7e-0b2c-44ac-8518-d9dd42abaf1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c2ffd00-2457-44ac-a72e-16379d58c826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "095cc359-5c96-49b7-b829-e16e7ea1f1fa",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "448acf03-7d6f-4f94-9014-7e6132925ed2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66892349-eb8a-495c-9fba-59226f1fdca5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73321785-6e75-4234-bf68-54fa1b1ce27e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec4116de-7185-415c-bcaf-3ef03c6a1793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc07057-c700-46a9-b449-9cf7872f06e4",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f6d75d9-3d27-44d2-a50b-83e23a57a7a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a140c156-6cdd-4b0c-924e-9feef4877d51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87000e7c-239e-4f25-a14e-dfbc06a0dd1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e445df6e-2964-4623-9115-a8a4a33afb17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1abdb8a-6fb6-4159-b710-5b5f3bb40d32",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba1c0375-91fe-4466-a1b9-c22d0d6cc95f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f2f1ebc-0a0f-494f-ba17-0153f8987c34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88001dd4-374f-47a6-983b-3a15cf561e09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80d7334f-0784-42b7-9ec0-05f6d0344077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc0fb2e-3230-4bf8-a0b6-aae7067c63ea",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f8949a-1762-42d5-86a6-b372e9146ab5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2c30cf8-169f-4939-ac7c-3e2c7cd8a24c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d271b57c-2d2b-490f-9304-7cb23613970e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6e10e88-6365-4b46-b894-a86d4a69ab0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e76c28-f68b-4b67-b1a3-36d2186bf758",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "530f3331-eff6-4747-8716-c52b2dae0a8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1896f5bd-61b1-4d8f-8152-286b0f65bdcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fe55173-9010-4930-a542-8a406a302d64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac1eabca-5f20-4528-9d0e-85208af95873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f80c1e5-2deb-4710-9868-4ceb881af8e5",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49690004-d916-4887-a1a0-54f5ed6dc6ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "527c6d50-64fc-4d31-9ef6-ded0c84c6aea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6181160a-8db3-4929-af9d-1bd151cab363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eab0aefb-2260-4382-9e92-35bba2ce5e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f5b9c5-017b-42e3-b589-f4975b6558a4",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51dbd769-1689-45db-a2e5-b43cb5d1bb05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb562dd2-f3c6-4c6b-bbb2-d4b5de704cb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac710f7-6b33-45c0-87e8-0da4d5a34a15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef807aa2-c996-425e-92b7-5cdcbd33af13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "956827a2-7c9f-489c-b8de-d9e7489ec258",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a1e1860-f4ab-4ed9-9122-4b6fa871af11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2dfd8f0f-20fc-418e-b5e3-7319d2e33242"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d042883-0168-4da6-8ff0-133e621fda06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "303131ac-6951-41fe-bfeb-64654231da7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d7c920-c86a-43bc-851f-14a9fc4e15ae",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c060b0e7-31d3-48fd-a3f7-0cb6e896c502",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f0b5413-1a67-4815-b513-198ad2b877db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6898279-6304-480e-a59f-1d698e946e82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e141f855-e6cd-4675-a01f-543a0dd72e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c35331-7cda-4e21-9e08-664ebc271274",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b309e3f-2540-4191-8486-1a8f35744655",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63008152-1ee4-475a-8f0b-a5b7b80625b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06580d7a-7d6d-4768-9741-6c23d7a3aff3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edec2db1-17d1-474a-a994-111a37afcac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "566cb294-7f90-4445-8606-548f5081c75b",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54135f48-60f6-4789-8450-c745144bbe73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "231e7601-96fb-4ae3-bd03-0cdde9b58567"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e02eab8-b197-4bc2-9b0a-f49708343bd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95b97cb8-c589-4333-ad7e-a893c9788e2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beeb2aeb-f9b7-499d-b7a5-11189581dc3f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19dbdd83-a90a-413d-90a9-9c46f3f17bf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a833ed5-9837-45d6-9597-cab7886a9fd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f3a1e5-cb50-4278-b039-c4f497ce2b9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abecf595-8912-4187-9254-ccfcb6305da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "429b0d26-973d-4f00-b3b6-22ec7fd532c2",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd12317-b8f4-4744-9d4d-7142fe472479",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0b88523-2341-49b1-b8d4-96307516ec3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a90f367b-ea24-4890-8e5b-effcd9ae4156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8633195c-b27b-43d9-9f1d-b0fd0d169192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2edbfc39-95c8-4a81-b83d-455e9f91a74b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b282fc69-62e5-4261-86d0-8cf0312917fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36d3a359-24f2-424a-a02f-0de747435801"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39025062-eecd-49b4-9028-8e8f71ef73f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a873538-b9dc-480e-b278-1e6d0b806175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "345c6593-2ea5-4e11-be3e-a7982d62853c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5594b7ff-0af8-4a46-b80c-df4bd88e37bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8582316-d96a-43d5-ae4d-f207414e4850"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1aff28-46c0-4709-b7c4-ec93544a82c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "585ac6f2-6cfa-42cb-bbee-41aa04126171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f819da-a7e5-43f5-9970-04325818839f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8831388f-cbb3-40f6-8e3e-4fb12751553c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c68bf034-e5f0-441d-9578-aa6a8a9d949b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d267881-8a43-4271-88da-88c86e81c953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6f126e9-3cbf-42a4-be3d-169af73cfe34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54c59dad-aa30-4f82-a31e-bd2839262e39",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd12368f-13eb-4438-ab65-b8ab3eedd038",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cffe48c3-a518-498b-85b4-f2c95b035de2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac825559-d3ee-411b-aecf-d79486b12cef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa6cb815-767b-430d-8e07-87937cd250dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee86fa2e-3407-4f7a-90ed-abf2fd47793b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce01249-7922-4be7-a023-714b0224c0bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3678975e-ab0b-4976-bcd4-d1cf069fda9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d1e83b0-b02e-4272-98d3-47c8e17961a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10dffe5f-8bf3-4398-b276-e9fcd2bc9d52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb7551c4-e33b-41e3-b2c3-b025e54b2c3f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede88c01-c9ae-4faa-a722-2bfb8d5793b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "690eeb41-8ea6-4915-873e-06050575510a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffee196a-d02d-46f6-8050-d11e8e4737cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fe922a6-4160-42d8-b940-641c6133a102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "562685c0-72c0-49e4-bd90-c292ae6cf063",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5317ed0a-16e0-4627-b46f-995254ed85ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "124411ef-585c-4af5-9bb9-810d916b21d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06ffd3a5-471b-4d62-ba26-a13b2ee4706d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a1402ac-c42f-48b7-af8d-5fb7987599cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbdeca33-3b7d-4fdd-9fd1-bf744e17e07b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb08d23d-b827-4fa3-932c-119a55181a35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8093a27-24c1-429d-aea6-5f12388f835c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "525d4286-e04c-407d-bb44-fc4672c860b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b8f9caa-717f-49ed-ba7d-486d9c6f1192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f368497-ff5d-4957-bc3a-17c7d0b81947",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be02117a-fdb1-4954-8dde-0331ced6111e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ec5627d-ce15-48df-9a4a-5fa230bfa7e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea249f60-fa1d-4fdd-a4d8-92466ae0c03a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb5ad117-76b7-4d63-b51f-4e41807482ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "645b43ab-78df-423e-af45-19df30a5ed97",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53f538f0-49e1-4b10-a3e2-04493c2aa17c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39702056-d6da-455e-9904-305412ecff4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b693db3-737d-4c22-94df-bf9db93a20d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02b74b09-3655-4909-9772-507fc60d90cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d40a4c8a-81b3-4d68-aa67-b74fbf5fe01a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "030c9202-0ac9-4db8-b1b5-149249df8b20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc95df7d-b329-4300-892c-c3b5e1455dad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd4bbb0-de34-4f83-8ab0-8688acdd27bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09a99ac9-3058-4d2e-bb6d-1b78cc86e9c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ff76bb-9de6-466f-8008-211edc551169",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87289e93-09a5-4618-a6db-e7c493db4ead",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06f34f0a-23f4-4bf9-aa46-81b26bb2c2a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51098708-ff7c-4a2d-8242-06e73f492ec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3213662-622e-43d4-baf5-677411021cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccff7133-7309-41c0-b4f7-441cda518d71",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e756727-cbfe-4d1d-838c-6274ebe48996",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18af53f0-200c-4246-a5c7-8277557e24cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e0ae99e-fd1d-441c-abae-3cbc2b021e1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9123c2e2-cf4e-4925-85f1-b31b69d0e523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08041ad0-fccf-4cca-b3b3-769c8d76f936",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da1233d-07c8-47c4-8868-0622aa06f0f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47c9b068-d6c2-46bc-b715-20e4f46717ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f4ca9d-7bf3-4392-9139-5922361f979a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7673257d-3d11-46c7-82d4-26221af43b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0641696-64bd-4949-9a6e-9906b969835b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3901403-b822-414d-9363-53e1458dcdde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5030360-8bc9-447d-aa35-21ee70b0a4b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b26191b2-3508-4b03-a390-56d1a8730690",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e40319e-c594-4ad4-8ac0-0878c03791dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8540150c-5f22-4aed-91e3-a18f59240737",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eeac1b4-2ce8-4244-aa8c-07d488a4234c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb61a3b5-14af-47aa-992d-dca674c6afa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca07c3e-4288-4b7c-ac1b-2f44a6fffdee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d70e661f-4bda-4a81-889f-41be0a0e1726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b20dd3-815c-4df2-a795-a865b4140e24",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c409745-910c-4764-8e0e-b08365a9cf28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df22a282-6c30-401a-9d46-250365460aee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b365ef1-2a97-4da8-8391-dab87284717b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96d323f4-aade-4da0-a944-2db763a68091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d51d6c-eff4-4af8-afb8-fe659a681bf1",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb80bcba-749a-41b2-b5d1-171ab1a18c90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0be70f0-c920-4f42-94c0-e7334e252715"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d4feb3e-7f34-446d-85fb-0485d9faa3b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94b040b6-f26a-4ad2-b66d-506d840700d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b5d3ae-a8f6-4c58-8d01-a02785463e2d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3262f653-8189-46ee-b104-cbe5d8e9db14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31f8f178-7726-4bb6-98f8-dead5cd94edd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8fd656f-9e9e-42bc-98c6-90cd3cae03ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adca4901-f2da-4c90-84e7-88b6ed3d294a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad4eb0e-39e6-4721-ac5a-118cc54e602d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234b2396-46c3-4e28-9da0-617391495da2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4367dd43-4f06-40f5-968a-87a804c2968e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb918aa8-98e4-4335-9a6d-724cf5a1c598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cc05ef3-299e-482e-ab6d-135e1668a53c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae92ac8e-6138-4d96-9070-ec1e8592afce",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc5744b-13f1-453d-acc9-8207cbb3d3e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e55ef0a-8d7d-466c-a5f7-5a7100a9b211"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3850ab03-8085-46b0-98e9-6e6021e2cbfa",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4753f43f-51ed-4c14-9011-296b37bd76d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "147361ec-cc51-4811-9d17-6937f5e5f660",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f4ead3-1f82-4a27-ac1f-97515852c90a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb8fc330-dbc2-4226-8dfe-df32bd18f622"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1b6fa0-aaf7-4c58-ae09-38330d03b5c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b06332e5-5488-4a58-a69a-6b7a6f7dcfc5"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f274b3b0-84df-43ba-a396-6a2248992e4e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c60b020b-2b69-41aa-8755-806f71fccc4d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "78f935d8-d337-44fe-8e3c-bf39b71d2758",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c237f7a6-4355-4cd1-9a27-67b12167bf09"
                    }
                  }
                ]
              },
              {
                "id": "227c4b83-e036-47f7-a8d9-fd367cf51468",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ccc5b170-eb61-4ab2-94bc-b22add61a26a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5afa13b-80ab-4183-bd36-ab22a91e894e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8da5fe92-a8a3-44b6-a549-48cc5e0a3d1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a32db82-0eb1-4b7e-8392-49035ab9afec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee1bfa7f-2803-4b34-b3df-434cd856c468"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5138e45b-f2c2-4def-87e2-6b2d52d030bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4de6210e-524f-4be9-8d53-d3cc6de289af"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab870c62-ea80-4d07-876c-63fb4381682b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c40afe30-5fa6-422f-81a7-d756706b7e48"
                    }
                  }
                ]
              },
              {
                "id": "493006e2-fae1-4ed8-b3fa-e21b38ebaaa3",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b6269ae9-83ea-4bf5-befb-037284bff65a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d31e2b41-bb86-489d-a55f-4ae8a5f7af62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ed82ec42-ced9-4a2c-855e-2e38e29a11aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fbe0440-a22a-4887-b196-3bb1097f7af2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f32d523-e4ac-4468-a4aa-64183dd9bfb5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a7e96954-0c7c-462c-aed9-69d6e6bf8e19",
            "name": "Positive Testing",
            "item": [
              {
                "id": "102e2e29-74db-46cc-a850-df2c38b0bd28",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "41ffb36f-b87f-4817-9341-87a87d9116b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6ed6c063-56b2-48bf-8249-879301266e9e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0a8a228-0daa-4364-b6c7-fe6b7bbf4d21",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b0ed5d19-e7be-4041-8c2c-10b8dba9def5"
                    }
                  }
                ]
              },
              {
                "id": "9d26a5a6-73f8-4139-a2ff-b112ab223395",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "de934bdc-2991-418c-a887-8e8ad55ab186",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "af6ac20b-0bba-41ba-b343-5e1f03da4915"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0528af4-2ff4-45ca-ba76-ec29061ea0dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c5a79efd-73c9-4809-bc98-af46ef5a5e2d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c3eb0d65-54db-4afd-9b64-a5949a1c13f0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "721a20d3-009f-40b6-be39-23b28714ce72"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "48cbc132-6906-464e-8cce-6cab93d5e807",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "707a3995-fba0-4bb6-94d2-d0ef2cfe57dd"
            }
          }
        ]
      },
      {
        "id": "52dd7f66-2090-4101-98df-860ed44337c9",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "7c0f5bc6-3289-431f-a347-2de02aab2aea",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0e8ebe0b-f712-42a4-bb88-f85c015b7132",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "65a10eb4-72df-46d5-8d53-01d1df6572bf",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb2b9cf-f659-4332-b406-1c126dc26ff2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "01b44322-3dbb-4f46-bbab-7b89c895338e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e8cc64f-343b-491c-abdc-025f0c20c72d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f0e13680-49d9-4717-8a99-5528fd417010"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0e24911-faeb-4590-9658-be08f03dda9f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84d27d7f-e7c9-4c96-b517-0e9fae2cb7f0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c5be0ef-4b35-4218-9af0-e5f7d3be515c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d7e7dbb-7dfc-4427-9ce1-e909bba55d58"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4edbe649-3085-4df2-8482-03c8515cc7a7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b9ee4827-41d1-4446-912b-aec671b4265e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "74e41bc4-0a32-4dab-b427-2ba2ce981113",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6e83538a-af28-4780-8131-073c59cf8353"
            }
          }
        ]
      },
      {
        "id": "0caa8c78-79db-40e5-b850-43d0bf8444ad",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c94effe6-d7a6-4f3c-9873-7d5cd07a37b7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "40fa08a2-dd81-482f-85cb-0aff7f7ec0cf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "67e1e21f-f2b0-40ce-bde2-bcda29e5ecdd",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e04e80ec-5f7b-4d24-9572-5a3761744640",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1962391b-8c63-4ae4-9404-0ac4eccb009b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf3bbb0-1eba-48d0-89ea-63b7b3a5b860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3c36ba4c-01c5-415c-b396-3295a954438d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da5a8526-45a6-41ff-a490-60b0845a1a26",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8a9b71a-d377-4caa-89b6-cdd0958ad2bf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1c4a6a0-80b1-42d5-a8f6-25496b006eef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c3bf700d-0551-4f54-a91c-167a9cbdbbab"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "df9132d4-8993-46f9-a41c-db848961948e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "23919e2b-8a4e-4474-9363-04a7b19bddd2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5605c52e-6e7c-4211-9384-03436327170a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "63db8029-e1f5-4631-8a4a-3a45242aa9a7"
            }
          }
        ]
      },
      {
        "id": "3b1ec7ec-3813-415b-a50d-f583e2af1f05",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "67cb117c-a7ae-4bfe-af83-c0df702a05c8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "86f0a6fd-a5b1-482b-a8b7-eee322eca29a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "407e9dce-fdce-4cfb-a0ed-0435dcbf5e0e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31cccd22-e15b-4ac1-ba9a-f83c164f12fc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a061a2c7-cc33-4cc3-8424-c7de5d1033a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8413adc-4b43-473b-a7eb-196ab8c9f773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e6eb5a40-102b-47d3-a0f9-abc1eb1e22b9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "442848fa-ea6b-4dc2-87fe-050e3a8b7bd3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7378a95b-729b-435e-ae86-242aead57988"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "12341cba-9fe3-4c64-9111-977bc0ca18d2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93b944c9-e58d-4923-ab2c-9ba2db1bb879"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a24171a5-d24d-4945-bcc8-b77b2e7f3524",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e65bda3c-7e05-406e-953c-939b88b5b222"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ee68967d-3409-421f-bfac-fe02ab92f5b0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "41168be7-831d-44a4-8af9-389d7e580551"
            }
          }
        ]
      },
      {
        "id": "92d7f471-7f09-489f-a9ca-92a259a2affa",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "92ea9e6b-2572-42d9-bee3-e490a4101c6b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ff26fbfb-9e6c-41ed-9605-5f0129e21402",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "0bc2234b-f4d9-4282-9859-163e903c0ff4",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bb240d50-bc51-47a9-8fb4-fce0ff1f7e96",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ed1290c3-1a8b-4395-bf77-433290a7e117",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 340.7781690140845,
      "responseMin": 8,
      "responseMax": 6893,
      "responseSd": 830.5366732298735,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1691800243852,
      "completed": 1691800357435
    },
    "executions": [
      {
        "id": "e8b896b1-e36a-432e-ba99-47296d1aeb7e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9e4fdf5c-0628-40c0-9b57-27a8b8467ba9",
          "httpRequestId": "2d3dc42c-0de6-4e82-9caf-484231d74a07"
        },
        "item": {
          "id": "e8b896b1-e36a-432e-ba99-47296d1aeb7e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "7fff76e3-0a7e-4d01-b175-7651c66cc005",
          "status": "OK",
          "code": 200,
          "responseTime": 72,
          "responseSize": 0
        }
      },
      {
        "id": "b8ac4856-cf73-46a2-8ee5-9a9d14067503",
        "cursor": {
          "ref": "1e09e262-11b2-4a0f-bf11-a882ac42e8d8",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "386f484b-3547-48bd-b30f-dbd2d3ba9422"
        },
        "item": {
          "id": "b8ac4856-cf73-46a2-8ee5-9a9d14067503",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ea7178e5-4cd2-4066-98f2-667ef1d15095",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "3dbe1324-9ac5-4270-9f37-f2a854ba92ce",
        "cursor": {
          "ref": "66ad5e68-2150-48ad-9b17-2257f16437d9",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "729eb65a-7fbe-49f0-998e-b2efce731fce"
        },
        "item": {
          "id": "3dbe1324-9ac5-4270-9f37-f2a854ba92ce",
          "name": "did_json"
        },
        "response": {
          "id": "ae09b03a-3d91-4206-ac2f-6687d4d9d27c",
          "status": "OK",
          "code": 200,
          "responseTime": 1517,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f39637a-45c9-44c9-a077-52ceceb75321",
        "cursor": {
          "ref": "8031b3a7-7383-4e0f-83b7-e9818c3070af",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6b5ed20d-62ba-4160-b80a-300e2d5f676c"
        },
        "item": {
          "id": "2f39637a-45c9-44c9-a077-52ceceb75321",
          "name": "did:invalid"
        },
        "response": {
          "id": "c2cff720-fbcc-4088-a626-93f4cf9ebe64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 733,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f39637a-45c9-44c9-a077-52ceceb75321",
        "cursor": {
          "ref": "8031b3a7-7383-4e0f-83b7-e9818c3070af",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6b5ed20d-62ba-4160-b80a-300e2d5f676c"
        },
        "item": {
          "id": "2f39637a-45c9-44c9-a077-52ceceb75321",
          "name": "did:invalid"
        },
        "response": {
          "id": "c2cff720-fbcc-4088-a626-93f4cf9ebe64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 733,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d4850c-73db-49ed-b34c-af5094f3584c",
        "cursor": {
          "ref": "aca801ae-2c0c-472c-9724-d5362d529581",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5b80c0f3-1710-4694-b49f-ce23da57f7a9"
        },
        "item": {
          "id": "b6d4850c-73db-49ed-b34c-af5094f3584c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "3e061bd5-1aaa-4e4f-bfd3-a39c5919bf35",
          "status": "Not Found",
          "code": 404,
          "responseTime": 877,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ed7077-c7eb-4533-aed3-e8cac4f16ef3",
        "cursor": {
          "ref": "3c9b0d75-6861-4386-855c-829c4481438f",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "9282a75c-1c53-4d7f-b2c7-ba97bed26a23"
        },
        "item": {
          "id": "04ed7077-c7eb-4533-aed3-e8cac4f16ef3",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "36a67a87-a07a-42e4-b749-b46d400340f3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 281,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23cdfa58-0fce-4484-a727-7b09f2517683",
        "cursor": {
          "ref": "0896f8ab-ee24-4d0a-92a8-abf81dc4a03a",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8518268d-2858-4330-a833-bdecc92e3e63"
        },
        "item": {
          "id": "23cdfa58-0fce-4484-a727-7b09f2517683",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e316446a-0c7a-446b-a01f-603b1ea78feb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 90,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd2c24e-6b1c-407b-8124-add449d8e053",
        "cursor": {
          "ref": "d2810a04-71ff-4ab5-8cfe-974357ea4e43",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "cb0ed37f-f597-4c22-b63d-2ee5a61afdd2"
        },
        "item": {
          "id": "1bd2c24e-6b1c-407b-8124-add449d8e053",
          "name": "identifiers"
        },
        "response": {
          "id": "98f4fbff-2236-42df-a44f-3c18ace08102",
          "status": "OK",
          "code": 200,
          "responseTime": 1216,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb2b60a-d686-4bbf-8799-4b42612f017f",
        "cursor": {
          "ref": "0c1a4deb-8d99-488d-ae96-0e4d55c5c91f",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "de39ee24-007d-4385-b0bd-ae2802b3da61"
        },
        "item": {
          "id": "cfb2b60a-d686-4bbf-8799-4b42612f017f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d7c7d049-4dbf-4933-aade-ddb000549f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d31556-270a-4f3f-95e2-d1ec62520362",
        "cursor": {
          "ref": "deca66ee-804f-4f40-9f17-3f7c52aedcb3",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9508927d-5d20-4142-b91b-f5232c1341c3"
        },
        "item": {
          "id": "43d31556-270a-4f3f-95e2-d1ec62520362",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "3b2baee0-e071-472a-956c-e03777857318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36c49abc-1de7-44cd-a7f4-f40987cfff81",
        "cursor": {
          "ref": "78763516-78c8-480d-9950-52efbc3942c4",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d645d5f8-68df-4a35-9411-e75265571fbf"
        },
        "item": {
          "id": "36c49abc-1de7-44cd-a7f4-f40987cfff81",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "be6c5c1e-9cce-49ad-bfaa-5d2d717f57de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d109dec5-facb-44ec-8f74-3127e6aed8cb",
        "cursor": {
          "ref": "08d061e2-e5d2-49cb-8573-f114272b61fa",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "91d315c8-d33a-47e0-babe-249ade6acf0b"
        },
        "item": {
          "id": "d109dec5-facb-44ec-8f74-3127e6aed8cb",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "3fd3eea3-49b1-4047-8c12-a3c23874236e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a3a02f9-af4d-4b6f-8712-da489db1a6bc",
        "cursor": {
          "ref": "c54d4cbd-e477-4585-861e-0673fa53e213",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "c7820ec9-e584-40d4-8f5d-69aa05ef5115"
        },
        "item": {
          "id": "0a3a02f9-af4d-4b6f-8712-da489db1a6bc",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "fb33e74a-d021-4d85-a62a-5d3a1a81113d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02aeefcd-9502-49f1-9528-9fe144d01127",
        "cursor": {
          "ref": "9e63b5ca-661a-4bed-bdc2-f6c8be2ad121",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "be8ea934-15c7-4f11-ad83-fd71f086d5fb"
        },
        "item": {
          "id": "02aeefcd-9502-49f1-9528-9fe144d01127",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "0ba4ad05-a19e-4984-8136-0f2389e52c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0986f6-4b9e-4b6f-ada1-eea4dc9d3338",
        "cursor": {
          "ref": "565fb328-91f3-42ef-b32d-859077e707e5",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "782e2b28-e1c3-454d-a2d7-dc61f974f82b"
        },
        "item": {
          "id": "6e0986f6-4b9e-4b6f-ada1-eea4dc9d3338",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "3aaa30f1-ab28-493f-bbd6-bf3d7def8468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b29a982-7cca-4683-ae58-0f9f1129cd29",
        "cursor": {
          "ref": "96dba1a6-3e4c-4d25-8f77-a43e96e00302",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "17c3ea41-22d6-4c77-bf32-3fc3e7f59639"
        },
        "item": {
          "id": "8b29a982-7cca-4683-ae58-0f9f1129cd29",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3185ab50-5edf-4563-97ef-cb5e5dbe804f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e943d2-392c-43f6-bc8f-421c8f268451",
        "cursor": {
          "ref": "34551902-9fb2-4cfd-aaa5-da20735f7fd9",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e09cbb5b-cd7a-46a0-abac-e9db0baa1f4a"
        },
        "item": {
          "id": "33e943d2-392c-43f6-bc8f-421c8f268451",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "45b920a8-10db-4394-85ff-e738ae30f94f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13957cdb-af8d-43aa-8736-a91ac887c0da",
        "cursor": {
          "ref": "e735441e-be48-44f6-817a-79c241f0c311",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "0608b8ee-ad45-47ba-a6d7-ca479f86ecc0"
        },
        "item": {
          "id": "13957cdb-af8d-43aa-8736-a91ac887c0da",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e4fcfb40-f981-43e8-92b6-c3a14d182e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "081a2083-3295-4946-8bd9-c09b77f48688",
        "cursor": {
          "ref": "3d3d0b4a-20a7-4829-b3f3-6e154a8e3fc4",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d2e3dfa4-cf3b-4caa-ba0e-feaf48bb0e95"
        },
        "item": {
          "id": "081a2083-3295-4946-8bd9-c09b77f48688",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "939b2776-f4f9-4e84-804a-9a8d3f037ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0590bca5-fc2b-427c-b849-46ee7bec03a6",
        "cursor": {
          "ref": "9a962212-5b3b-4d10-b1b4-a9cf2fa09f61",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "770f8d5e-fd0e-492e-9c85-73b2b6d2f658"
        },
        "item": {
          "id": "0590bca5-fc2b-427c-b849-46ee7bec03a6",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "92359813-e05a-4971-9763-a6ef3ea79e14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e24215c7-1b61-4bce-8690-d6101d3e522e",
        "cursor": {
          "ref": "9de81e5a-af86-4c46-b840-fd9bc1a74278",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4b5f6c34-30bc-489d-8a26-426068e6a4c3"
        },
        "item": {
          "id": "e24215c7-1b61-4bce-8690-d6101d3e522e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "52197f5e-3cca-49f2-ac3f-3b5a98f707b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56eff113-9e53-44ed-972c-769ce0f95c36",
        "cursor": {
          "ref": "90c540b3-4d09-46cf-b84e-edbec44a5172",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "fb52fd1c-5133-4b43-979e-ede9fb102f18"
        },
        "item": {
          "id": "56eff113-9e53-44ed-972c-769ce0f95c36",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "75d1c8e8-7d67-4f91-bc40-2f512a50509a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea1072df-d3dc-4101-8d0c-1b565dd81c22",
        "cursor": {
          "ref": "88cd01d8-8d76-4ca8-a45b-fa7e66fa5092",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b5ea3a2e-6474-4b8e-a10b-4a8fe3b69f8d"
        },
        "item": {
          "id": "ea1072df-d3dc-4101-8d0c-1b565dd81c22",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "9fa6ddd6-23b5-4461-9ca3-100cbdd23095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d50f8e-f096-4373-8bfd-ef86d615c4ce",
        "cursor": {
          "ref": "90563d01-9959-4c16-bf5e-ca748851737f",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "5cc35c40-f51f-40d6-bbfc-d5d151105bfc"
        },
        "item": {
          "id": "37d50f8e-f096-4373-8bfd-ef86d615c4ce",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "3f944d5e-a08a-4bf3-810c-7c325c624add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c76fdcd-594e-4d88-ba90-129428a5a765",
        "cursor": {
          "ref": "ba0b6c56-cd31-4925-b164-cce2905a44a4",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b3a12c01-3129-4467-9407-7f17651f04fd"
        },
        "item": {
          "id": "4c76fdcd-594e-4d88-ba90-129428a5a765",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8e58bef4-3391-479b-ab2d-423161219889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf879e3-d5f9-4268-a476-68de0c739b8a",
        "cursor": {
          "ref": "eb7d4628-b24d-41f4-94ee-a1be5ca0b0cd",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "7c0c6927-972f-484e-bda0-1bcfcd9a70c3"
        },
        "item": {
          "id": "1bf879e3-d5f9-4268-a476-68de0c739b8a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "5424684f-ab1d-4ba0-b0a3-244c2c33329d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "571f59c2-d9de-411a-b491-476810d9d353",
        "cursor": {
          "ref": "12d5e5e3-50f7-47b0-90ef-0602ea15172e",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "2fc83dcb-e2cd-4215-89b6-d51f4957f8c0"
        },
        "item": {
          "id": "571f59c2-d9de-411a-b491-476810d9d353",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "2e56b7da-5725-411a-a9ea-59104e78c520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12cf3557-179c-4bc8-a6a9-195d4cc10043",
        "cursor": {
          "ref": "0472aa0a-1d24-4544-a6e3-0a57d9fee6c1",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "3f1a88ed-d627-44b3-b89e-e84524bf482d"
        },
        "item": {
          "id": "12cf3557-179c-4bc8-a6a9-195d4cc10043",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "7a782e39-429a-4f8b-854f-8132aacf3537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc6b09ca-0818-4d18-bbc5-44b5284cd435",
        "cursor": {
          "ref": "0b739d91-1f5a-44bc-b37a-f9988b2818c8",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "6c0135dc-2305-4c9f-92e1-612c2fb83ac0"
        },
        "item": {
          "id": "bc6b09ca-0818-4d18-bbc5-44b5284cd435",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "9f49790d-4aa1-4507-9102-e64bee736ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd41e4a2-c7d3-4fd5-a33d-05469b27834b",
        "cursor": {
          "ref": "40d8536c-6a5c-49dd-8155-d2404578dc39",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "94600a2a-ccd5-491d-9a32-64553f94c6b8"
        },
        "item": {
          "id": "cd41e4a2-c7d3-4fd5-a33d-05469b27834b",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "43d1b31d-aee5-46af-8e25-76564e23a04c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d473ec5-ddb9-493e-84c5-e45239fc659a",
        "cursor": {
          "ref": "ea2a87e9-dd13-4623-888b-9a0263a76009",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "cea73b82-ef78-430b-b58d-fe33651b067c"
        },
        "item": {
          "id": "4d473ec5-ddb9-493e-84c5-e45239fc659a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0f6955d7-df72-49f0-bf8a-121601cc678e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a8f036-2a12-4808-826c-3ebdbed7b6bb",
        "cursor": {
          "ref": "e027df83-1183-48a4-80ae-8ba3b9f7801e",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "210be220-b201-4fc0-af41-262555941abb"
        },
        "item": {
          "id": "45a8f036-2a12-4808-826c-3ebdbed7b6bb",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f3e2d4c0-ea50-47d7-a698-f9b0e6b4797e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96253958-32f2-4aa8-95f9-35e0bd6c6e8f",
        "cursor": {
          "ref": "e4f47841-d1f2-4c4a-bf76-59b19edfab70",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e7af0985-0272-499d-aa74-122340f2d4a3"
        },
        "item": {
          "id": "96253958-32f2-4aa8-95f9-35e0bd6c6e8f",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5e53525a-1655-42b0-84c1-00e245890bad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f30d21-b6c3-44f6-854b-5dccc06cd702",
        "cursor": {
          "ref": "8295ed73-df55-458e-8b7c-6985bd717671",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "94863f11-9c74-4429-ac81-65c76a10cd2a"
        },
        "item": {
          "id": "c7f30d21-b6c3-44f6-854b-5dccc06cd702",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "4a09aa1e-e8ef-4865-82ce-427042218949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6aa82f2-6608-4b9d-8987-2b51c6e5bcef",
        "cursor": {
          "ref": "d871c92e-8c6e-4d96-9417-5409de3023e3",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4a5905a6-81a1-4f22-85dc-a88af1d8c6e3"
        },
        "item": {
          "id": "c6aa82f2-6608-4b9d-8987-2b51c6e5bcef",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0dcd181f-7b7f-48da-b14e-5b2d9a64c584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b8279f4-a50c-4d91-94c9-f70b7ee5f297",
        "cursor": {
          "ref": "6b7b7f04-4461-4e40-ae49-c50a0bade83a",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ca2ade41-4cb2-4681-8058-1ee645cef89f"
        },
        "item": {
          "id": "8b8279f4-a50c-4d91-94c9-f70b7ee5f297",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "2134b184-090f-4268-b401-8ee67561b8ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "307b924f-4e2a-4da2-8218-92f32c003c71",
        "cursor": {
          "ref": "e9f6a43a-565a-489b-b261-30e6b54e36ab",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "3b11942a-0191-48b9-bc3f-fa8af6209a35"
        },
        "item": {
          "id": "307b924f-4e2a-4da2-8218-92f32c003c71",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "2154530d-25c1-4118-a4f0-02ab8f8dd71b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4547531b-8a94-4a61-932b-ae781923f71f",
        "cursor": {
          "ref": "b3a5df7e-85b9-45c3-acf3-52787e0a1ba1",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ad92bb73-0d44-476f-bb89-c098dcb54d71"
        },
        "item": {
          "id": "4547531b-8a94-4a61-932b-ae781923f71f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ebc84645-04d7-4a97-a68c-684bae86f332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc234f0-897a-4236-8544-ebc14bc81b7f",
        "cursor": {
          "ref": "964ca10a-c74b-4937-8f84-48dcca986a8a",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c60b1ad8-21fe-4469-b9a1-2a4c2c977456"
        },
        "item": {
          "id": "bfc234f0-897a-4236-8544-ebc14bc81b7f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5b4a44ba-db9d-41d3-ae32-789c49749f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfdf24d4-d6f5-474e-8d66-2751f17f206e",
        "cursor": {
          "ref": "c2081446-9473-4b64-a955-02b096adda90",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e7d7aeb5-ae7b-440c-a35a-a706658e0a5f"
        },
        "item": {
          "id": "bfdf24d4-d6f5-474e-8d66-2751f17f206e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a91d72af-aa30-4ee8-a9ce-fb1b3dea0558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd53910-50e3-47c6-95bc-38eed2646f42",
        "cursor": {
          "ref": "f6359f72-973a-4ddf-acf9-bbf31b7b1cf4",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "587638b2-1ebc-4cc9-9999-f98c350c9717"
        },
        "item": {
          "id": "2fd53910-50e3-47c6-95bc-38eed2646f42",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "98cdcb1c-ad20-45a0-b6d9-49de70d09417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a24dfb-5276-41c6-a003-a2852d179077",
        "cursor": {
          "ref": "c42cb2ac-d233-4302-9475-97910c98dbc6",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3bc2d47d-efe7-488a-9281-9da4c5b691c4"
        },
        "item": {
          "id": "38a24dfb-5276-41c6-a003-a2852d179077",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3371650a-2b01-4e54-b39b-21d39bd58ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11d4f91-82c4-4588-8cc8-8a119687b6e2",
        "cursor": {
          "ref": "d69e60c1-1089-4134-a499-e2aa16db9fda",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "66f5acd4-90de-4a3f-90e4-55ec36022118"
        },
        "item": {
          "id": "e11d4f91-82c4-4588-8cc8-8a119687b6e2",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "21c59fd0-d989-46c5-b5aa-0593b05bb267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05346d79-12e1-4475-8a6a-44e29b8042c4",
        "cursor": {
          "ref": "8e48eff4-a50d-4134-a77d-29b869c4bf18",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ba6ce598-081e-4cb7-a3b7-54a6b522a1e1"
        },
        "item": {
          "id": "05346d79-12e1-4475-8a6a-44e29b8042c4",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "98e740fe-0324-4a52-a577-a88a86c55dd1",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 631,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c3d25ab-6a49-43e5-bfe1-9ca003087381",
        "cursor": {
          "ref": "5248c4ad-afd6-4efb-bcee-636047c888ef",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0e974422-7aff-464f-92a1-be8d279684f0"
        },
        "item": {
          "id": "4c3d25ab-6a49-43e5-bfe1-9ca003087381",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "37fa5307-66c6-46ef-b844-69794c32f754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24831c2a-2717-4269-a973-8b6713c7d0ca",
        "cursor": {
          "ref": "cea2dc62-e277-491a-a052-4725275a6ef3",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "76c9308e-7013-4344-b35c-3644e3d72430"
        },
        "item": {
          "id": "24831c2a-2717-4269-a973-8b6713c7d0ca",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "501c1332-3bcd-4496-aee4-268d47a225ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b48bd40c-9108-4827-a850-9239a915174a",
        "cursor": {
          "ref": "72ed9a31-4d65-4272-8c34-4e58feb36ea9",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "8993ef97-9b78-494a-93b1-c46f70ac9375"
        },
        "item": {
          "id": "b48bd40c-9108-4827-a850-9239a915174a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "23027478-c2be-4271-8280-3498f851fe20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee0ce96-1bb3-477a-a6c6-11cc8bef3042",
        "cursor": {
          "ref": "281a24f9-0fd6-49aa-af67-1d44d3bf9860",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "3e91009c-8c13-454d-ae84-9fc18e27a935"
        },
        "item": {
          "id": "4ee0ce96-1bb3-477a-a6c6-11cc8bef3042",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "5e74f9ef-96c8-426c-8d56-4cd11a6666a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f8e6a6-7b29-40eb-89ac-506ed42204ce",
        "cursor": {
          "ref": "3ac1289e-b66d-4b7e-ae89-1e7df28dd431",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e8d60492-73d5-4120-a41b-6e32dd2c1964"
        },
        "item": {
          "id": "a8f8e6a6-7b29-40eb-89ac-506ed42204ce",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ab7b882e-ecd7-4592-a324-e9a28c5dd1e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb4cd440-4a52-4fa1-b6e2-86b3e4e195d5",
        "cursor": {
          "ref": "f4e5c0f3-795c-4e52-9115-54f9519f0bed",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d2613151-1e62-4175-95ef-d16eabc68fbc"
        },
        "item": {
          "id": "bb4cd440-4a52-4fa1-b6e2-86b3e4e195d5",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "467a6a01-229a-4569-9b55-da280df3ee3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "666dfbf2-12f4-4d87-b109-e155cc4836fe",
        "cursor": {
          "ref": "44f5e756-397a-4830-aada-9537893fa0ee",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "63aa6cef-f063-4161-a2ca-8b02f19f0018"
        },
        "item": {
          "id": "666dfbf2-12f4-4d87-b109-e155cc4836fe",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "497cef78-9d8a-4549-9adb-4117561e55eb",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 599,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f9c9c4-ee99-4310-ba67-0a8518e6f603",
        "cursor": {
          "ref": "dabcf61e-1411-445f-ac00-b8241a1e412e",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "80a01f78-1aec-4f9e-873f-fad61d98ff2d"
        },
        "item": {
          "id": "f6f9c9c4-ee99-4310-ba67-0a8518e6f603",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "4f6c1de6-233d-4d55-b089-280fc1e4b164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9923ce26-fb67-44d8-be92-00775ce56e92",
        "cursor": {
          "ref": "65dc3e86-fe6b-435e-bf69-a67f0073d589",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "4ec03d9d-dc68-49ed-b8c6-4c623815a136"
        },
        "item": {
          "id": "9923ce26-fb67-44d8-be92-00775ce56e92",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "8e980901-75a9-42d2-b92a-0389ed85a248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a300a0a4-f310-4637-8889-61cf9df00adc",
        "cursor": {
          "ref": "f724aa84-e7e6-402b-8cea-867a1d1e3f40",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "738f768b-0990-4460-8d05-30250944b426"
        },
        "item": {
          "id": "a300a0a4-f310-4637-8889-61cf9df00adc",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b1811beb-b53d-4085-bcd6-1d507dece7f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ced79c-7a99-4377-80be-a839e5b9aebd",
        "cursor": {
          "ref": "98fafec3-745f-4c54-90ad-2abd091c8f06",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ccfc6c37-dfab-4e00-9905-e4af89ceef10"
        },
        "item": {
          "id": "a3ced79c-7a99-4377-80be-a839e5b9aebd",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "5d88b66b-6df6-450b-99aa-fac8f8798d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f3d6ac3-1cbe-4810-a473-ddefe06fa3ba",
        "cursor": {
          "ref": "89c6ed1e-0f25-41c6-9f1b-b00b3127c81f",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "556e7265-d87c-4388-b84f-351a8dc2db7b"
        },
        "item": {
          "id": "3f3d6ac3-1cbe-4810-a473-ddefe06fa3ba",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "9784e2d7-873b-4feb-ab59-15c050dbe91e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfce773d-4f8c-4a04-ac4e-a59be58cc190",
        "cursor": {
          "ref": "2a54cd96-85bb-40bf-838b-08fd7ebc66b0",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "915a211e-4f32-4a4c-a754-024c2dfe2fd4"
        },
        "item": {
          "id": "cfce773d-4f8c-4a04-ac4e-a59be58cc190",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c9c93797-758d-4bf5-bb2f-7c2cb104cf56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4169be01-1747-47fb-b731-00df50e6ae88",
        "cursor": {
          "ref": "57a09c8f-e120-4fbb-ac8c-71b131d3543b",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "24ed41a6-c77b-4fe7-b2da-50d4bd9e3fb2"
        },
        "item": {
          "id": "4169be01-1747-47fb-b731-00df50e6ae88",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "76c07a42-8294-40a7-b118-a842c3ad1c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50e96c0b-344d-4557-a948-9468d7a8c4ef",
        "cursor": {
          "ref": "f80941ba-6b86-43a5-b6e5-9be7ab439eb3",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "87e26372-4772-4f0f-8534-95e96b50732e"
        },
        "item": {
          "id": "50e96c0b-344d-4557-a948-9468d7a8c4ef",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "0cc36314-e492-49af-9e82-6d91814dd839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a9d9c70-7547-4888-831e-bfd592ffa607",
        "cursor": {
          "ref": "3551d79d-83c4-48de-baf5-7ea31f937f34",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "86064d1a-5bf0-428f-a430-75f7f9130c86"
        },
        "item": {
          "id": "5a9d9c70-7547-4888-831e-bfd592ffa607",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "5d223b81-bafb-4f33-af23-3dc93c0c2503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee54694-e3db-421f-8e36-0d132ca359b7",
        "cursor": {
          "ref": "d1759cd5-a9ec-4e3b-b72a-1203d420fcb5",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "aef4abfb-997e-4cec-bd29-29439ec2b0e8"
        },
        "item": {
          "id": "3ee54694-e3db-421f-8e36-0d132ca359b7",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "71780967-072b-421d-a293-cca0f3093e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df62b8b-c012-465a-8c5a-2c37ad65b338",
        "cursor": {
          "ref": "de4f8abe-b955-4301-aeac-2beebf658bc5",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a8534a26-2f27-4150-b8c3-9cc1ce2c05b2"
        },
        "item": {
          "id": "0df62b8b-c012-465a-8c5a-2c37ad65b338",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "209cedd1-f8d5-4428-b04d-2bab5887f06f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f214f5bb-6780-452b-ae12-bf3f63494754",
        "cursor": {
          "ref": "46d96a41-6c57-49f0-ad7e-4bbc7c9d9321",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "64a37974-4d01-4d8d-a2fa-ce638297be22"
        },
        "item": {
          "id": "f214f5bb-6780-452b-ae12-bf3f63494754",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e7cb4c57-5ea2-408f-af4b-18926f02bca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d99782d-31de-4fc1-a177-016d41cafa61",
        "cursor": {
          "ref": "e6446f17-163c-4a64-b776-a373ea6b4baa",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8d9b5856-cb98-4614-b03e-77f6c97b48d4"
        },
        "item": {
          "id": "1d99782d-31de-4fc1-a177-016d41cafa61",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "57b88aaa-67da-469d-8d67-e43232385cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34dcb3fc-01a6-4177-8dd2-686516ad5d3a",
        "cursor": {
          "ref": "ce88579e-e9a7-4b66-9ff6-c35a41494ae3",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "8b105238-2515-4d5b-a327-a5ae7a67e126"
        },
        "item": {
          "id": "34dcb3fc-01a6-4177-8dd2-686516ad5d3a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2350f42d-208b-47f5-a3df-e14c47c5ee6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "710005b4-b200-4653-91a2-028b33325a52",
        "cursor": {
          "ref": "51a43df7-097d-4915-a3c9-080322e93170",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "75cda0ac-84b1-4763-a460-dda519845d82"
        },
        "item": {
          "id": "710005b4-b200-4653-91a2-028b33325a52",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "1c98147e-c319-4992-8d91-af085c4184d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "464424a9-34bd-4bcb-9a37-ef923065159e",
        "cursor": {
          "ref": "de3e9023-2901-4793-a1f0-799e9bb3309e",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "3ce22396-0811-4947-a491-2a77a9b7de0a"
        },
        "item": {
          "id": "464424a9-34bd-4bcb-9a37-ef923065159e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3743f4cc-af8d-4ec5-ba70-2d1487046401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70656548-6760-4958-aad3-9d7c8c32489a",
        "cursor": {
          "ref": "56d3a2a9-89ec-4c19-a946-de7287826a2b",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "71c13f08-4f88-4f92-851f-458b870dfeb6"
        },
        "item": {
          "id": "70656548-6760-4958-aad3-9d7c8c32489a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "9289cbfb-f277-46bb-b841-eecba5f591b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff8d5e5-b97d-41fd-b5ee-c0568ad4dda1",
        "cursor": {
          "ref": "5c0b72eb-f63b-414b-97de-f5b60b4a2965",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "45572dc1-8db8-4ec8-b68a-009413ab53da"
        },
        "item": {
          "id": "fff8d5e5-b97d-41fd-b5ee-c0568ad4dda1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "358afc97-ea4a-4e35-9765-99a80a8da287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12aa29d5-1514-472d-844f-4fd272f098cc",
        "cursor": {
          "ref": "39ca5fe2-ef18-4619-9818-40d99e978657",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c3d9f7c3-ee28-4902-9b0c-15dac7f0c1a6"
        },
        "item": {
          "id": "12aa29d5-1514-472d-844f-4fd272f098cc",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b8946c01-80fb-4032-a069-0d7d3c943907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a4383d-a496-44ab-a5b0-795dc77848ae",
        "cursor": {
          "ref": "ede9c1ae-6e3b-41c7-845b-5fcd640be7b0",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "06e88aac-5563-458a-94d0-0db986eb910c"
        },
        "item": {
          "id": "21a4383d-a496-44ab-a5b0-795dc77848ae",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "37aa6ad9-2cdf-4174-b81b-e45fc73f3f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9182f78b-cfe4-4f4c-9c19-079811625a5a",
        "cursor": {
          "ref": "3d250148-5113-4d81-a611-66dceb6db89e",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1d6e6d96-0639-4427-889d-23cb81b0d499"
        },
        "item": {
          "id": "9182f78b-cfe4-4f4c-9c19-079811625a5a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "903fdd95-16b2-4bb6-b966-76340bc7c858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0469170d-36b3-4f03-a49a-01c0da613e5b",
        "cursor": {
          "ref": "64fbef12-a44e-4a40-a240-681b20c95e37",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "3c1e0727-a80e-47bb-8ab0-d759bef9db26"
        },
        "item": {
          "id": "0469170d-36b3-4f03-a49a-01c0da613e5b",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b4de665f-98cb-426c-9053-db686d2f6bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89320cf-9103-47b1-a2c3-ab50ab7f876c",
        "cursor": {
          "ref": "198d3209-2169-46ab-91b0-460991b61330",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e577ebbb-f6e0-42f3-a683-d75429efd6bf"
        },
        "item": {
          "id": "b89320cf-9103-47b1-a2c3-ab50ab7f876c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "c83ab96c-098d-4e76-a370-c22019c9a7bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a42a434a-51c0-4a97-ad8d-b318ce3fb10d",
        "cursor": {
          "ref": "83d03e6b-e6f2-4262-b2a3-71165a0d4f4a",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8df4086b-dd55-4e40-b32e-a41bf5ca59db"
        },
        "item": {
          "id": "a42a434a-51c0-4a97-ad8d-b318ce3fb10d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f2379058-d037-44ef-bdd9-63fd9ba6e002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab44da12-a7f9-4a0b-bbaa-45f2fee928f4",
        "cursor": {
          "ref": "fb1b660b-b97a-4b54-99c9-482203785ac1",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "379f4b37-c9b2-4ccb-8b38-a88582866958"
        },
        "item": {
          "id": "ab44da12-a7f9-4a0b-bbaa-45f2fee928f4",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "bbde1bca-6e35-4d5d-a516-ed43aaa74216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a1360ef-4b67-4036-8f18-8ab30833ddb5",
        "cursor": {
          "ref": "e1bcbb0c-5871-44b9-ac31-cbc7aa882751",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "0ecb9471-9e88-4537-9f06-7e8a83dd16dd"
        },
        "item": {
          "id": "4a1360ef-4b67-4036-8f18-8ab30833ddb5",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "1b4b20ae-308f-472a-bb46-2eb15bb3036b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "914d811d-df80-47a3-a5f0-27b482f6e18b",
        "cursor": {
          "ref": "66c802b3-3273-495b-82c2-04139bc861f6",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "db5349f2-74b2-4f55-ab88-24624a0ff000"
        },
        "item": {
          "id": "914d811d-df80-47a3-a5f0-27b482f6e18b",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f0afabbd-e6e4-44c0-b12a-c696b33198e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b7b29b-bc60-4873-a05b-52303e5d9eca",
        "cursor": {
          "ref": "46f2a834-b01c-4325-9c56-e9bc3fdffefe",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "8aa61d02-4488-4ba5-b557-9e5208b99f66"
        },
        "item": {
          "id": "34b7b29b-bc60-4873-a05b-52303e5d9eca",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9d06608a-d861-4b81-b757-bcae4018ea77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97fedea5-e654-429f-93ef-30ddf3b0f24a",
        "cursor": {
          "ref": "36d7e447-8448-4847-aa1a-87de36faf9f7",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "442ea264-76fc-4720-85b8-55e2cd4ea6b8"
        },
        "item": {
          "id": "97fedea5-e654-429f-93ef-30ddf3b0f24a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "96fd0243-06a0-4589-a213-913ff9426f21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a86d21-bf0e-42f9-b31f-9040e66f4f1c",
        "cursor": {
          "ref": "05118dca-c72b-41c7-887c-112f6a5fe381",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "09cc1b83-bee5-45a3-90e1-ad86228f3d7f"
        },
        "item": {
          "id": "b8a86d21-bf0e-42f9-b31f-9040e66f4f1c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a6e80cb8-bf72-49bc-91b1-44ac75159379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e41f1cc-b214-4dbc-a69b-809ac48afa4c",
        "cursor": {
          "ref": "592cbec9-1b1f-42b8-9437-a30995cbaad8",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f42d73ab-dee4-49c5-96af-ed9376196b69"
        },
        "item": {
          "id": "8e41f1cc-b214-4dbc-a69b-809ac48afa4c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c224f0b7-1633-4991-8cca-8344ddc1572a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c15536-9932-453b-829b-a7338999e452",
        "cursor": {
          "ref": "6a9213c0-cb4b-40d1-8fbc-cf4bc9cfdad2",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d50eea54-7498-44f0-b8bc-8a27572294fa"
        },
        "item": {
          "id": "04c15536-9932-453b-829b-a7338999e452",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "50c15a8f-cb12-4855-b9a5-fb8dc0a6fd1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9403a135-d823-4f9c-8f97-20b55dc4f1de",
        "cursor": {
          "ref": "d7290738-b3c8-46aa-910e-22aeb2e4dd11",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "79bc6788-d59f-440c-b93e-601e44ffa4fa"
        },
        "item": {
          "id": "9403a135-d823-4f9c-8f97-20b55dc4f1de",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "16d26299-b82a-4d5f-8dff-aa4199da1c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b222d7-f60a-4c37-9eb3-1409f4272bb0",
        "cursor": {
          "ref": "56efb0db-ce51-43b8-b0fd-2f209cdae62c",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "da56f966-a2e0-4b2e-b9b0-cddd76016658"
        },
        "item": {
          "id": "56b222d7-f60a-4c37-9eb3-1409f4272bb0",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "ab878fc1-9b3b-43f3-ace4-5a3a193e4227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f40a690-b1d4-4c35-8355-32c7f615f58b",
        "cursor": {
          "ref": "4a9519b9-6c6b-47b5-aed2-aa7e7d851212",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4ba696b1-851c-4999-a124-8decdad8d919"
        },
        "item": {
          "id": "1f40a690-b1d4-4c35-8355-32c7f615f58b",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2edbb17a-1d82-4a85-9246-2c758b7bd65d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a16fa56f-8d17-4747-9f35-12fc123832e1",
        "cursor": {
          "ref": "1fd70dfa-bc4e-4117-a9ca-45a964ca7957",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c1541e3c-a127-4993-8f82-0b2662d345c2"
        },
        "item": {
          "id": "a16fa56f-8d17-4747-9f35-12fc123832e1",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d59ed53e-f317-468e-a4d0-09cfbd062b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "585a5f01-cb17-4e44-b974-a6f46e6bfbc0",
        "cursor": {
          "ref": "46c26d08-b5e3-4715-af26-5cbe8e060cf4",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c5df7cff-7b2d-48af-868e-069e0f873714"
        },
        "item": {
          "id": "585a5f01-cb17-4e44-b974-a6f46e6bfbc0",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "69ba9e7a-9065-40e3-bead-14991b742325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5f922e-ca99-4a00-9bfc-cbd350420d95",
        "cursor": {
          "ref": "f318eb2d-88d6-40db-bbd7-e78d312bd7a9",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "608d1261-4236-4898-8387-a2b03ab44455"
        },
        "item": {
          "id": "0a5f922e-ca99-4a00-9bfc-cbd350420d95",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d7b08d0e-c7f5-4b6c-9e08-ad9580d7737e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404eeed5-cad3-42fc-ab68-22aef7d2fef1",
        "cursor": {
          "ref": "d616d49e-82a8-4738-8a0a-effb51cd290f",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d8a54f96-0b79-406c-bcec-7e6ad5134719"
        },
        "item": {
          "id": "404eeed5-cad3-42fc-ab68-22aef7d2fef1",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c9d6f6ce-d28f-4bea-837b-14dc4df090d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f2a8e1d-4dc1-4c6f-9a99-072447f61c05",
        "cursor": {
          "ref": "cce63719-794b-41c6-af13-aaa16ecb184e",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "04cad7ca-9519-42d7-8c89-71ce1564ea5f"
        },
        "item": {
          "id": "7f2a8e1d-4dc1-4c6f-9a99-072447f61c05",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "1fcbae35-d51b-4b7f-a095-546b0db8f546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629b08f5-3ed2-49b1-93db-b8c5fec39218",
        "cursor": {
          "ref": "d681a789-1cc9-4c37-bf64-27b527ff805b",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d205f228-0902-4767-9824-a88619f45d7b"
        },
        "item": {
          "id": "629b08f5-3ed2-49b1-93db-b8c5fec39218",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "733e7c56-191f-4d9d-bd93-d5e679ae8fa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2baf739-0767-4025-9965-adfca6817563",
        "cursor": {
          "ref": "89797192-333a-4f40-8151-0ee6307a09be",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "846ef476-8972-4013-bde3-7e1443d1a51a"
        },
        "item": {
          "id": "c2baf739-0767-4025-9965-adfca6817563",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ce5115e1-5e72-4f3d-8ef8-58c7a56e0775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb26107-3096-4c9e-8dcb-9c032b09736e",
        "cursor": {
          "ref": "0d6fd512-34ba-470c-b0ec-7dc3e10c074c",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "547635d2-fd60-4d59-b700-b68d45f3ad50"
        },
        "item": {
          "id": "eeb26107-3096-4c9e-8dcb-9c032b09736e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "98d87ec4-7b8e-4b0d-a4cc-b304410d3a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e861ee75-679a-4ca3-a223-543734456c28",
        "cursor": {
          "ref": "b07cb3c3-a5c5-4273-b22c-e4e4b06dd99a",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2c7bd358-cdbb-4645-bd4d-90f239ab25df"
        },
        "item": {
          "id": "e861ee75-679a-4ca3-a223-543734456c28",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "59b80c31-47f2-49a4-91e0-54395c36ca23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c99c83c-6f96-4e97-8ea4-35a3f5a671e3",
        "cursor": {
          "ref": "bdb13682-7753-4638-a698-8b4e4208ccac",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "085d808b-9c4e-46ac-8021-7910c7a19fbe"
        },
        "item": {
          "id": "9c99c83c-6f96-4e97-8ea4-35a3f5a671e3",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f8931e6b-b368-4a71-9309-60c0764079ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "112a13a1-22ad-43da-8d4b-2d11baa12778",
        "cursor": {
          "ref": "f6abe03f-3fb5-4686-85e4-3da678bcedbf",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "bdbf3681-5e15-474d-9a67-b24e6c65b0c4"
        },
        "item": {
          "id": "112a13a1-22ad-43da-8d4b-2d11baa12778",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1073f907-716c-4beb-b2d3-342c981e6985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebbcd0a7-6c48-4a19-84c1-ed50ffda961b",
        "cursor": {
          "ref": "c627f87b-7b5a-4390-a1ae-f6e494938c3e",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "181b4f9c-459a-4840-b837-c6e8de7ede26"
        },
        "item": {
          "id": "ebbcd0a7-6c48-4a19-84c1-ed50ffda961b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f91511f6-6291-420f-979b-f6d108e55ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e51d06-546c-422b-9830-87b5fb5b37f7",
        "cursor": {
          "ref": "3587fd79-1c24-43b0-8957-3c0b2d345b62",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "dd586d87-c062-4840-ade7-01a14d5dd8fe"
        },
        "item": {
          "id": "68e51d06-546c-422b-9830-87b5fb5b37f7",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d8af78b2-2f8b-428d-b192-84b6ce1b1d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c682d453-5de0-44c5-97d6-8be5aa5b7d58",
        "cursor": {
          "ref": "e2e1dbf5-8aae-4c59-9309-da547c1e72b8",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "5eebea62-2b24-41d9-b032-9ce34e6ea4a2"
        },
        "item": {
          "id": "c682d453-5de0-44c5-97d6-8be5aa5b7d58",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "18f675ae-2e0b-47f1-a468-10bbc4f56415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2047e195-a82f-4bec-98d4-f1c82ff71e01",
        "cursor": {
          "ref": "bb60e909-0c6a-421b-9af3-46fffcb50f64",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6a9e6af4-cebc-4c12-913b-52c3ea66a01c"
        },
        "item": {
          "id": "2047e195-a82f-4bec-98d4-f1c82ff71e01",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5e592d3e-a9d6-4b89-8706-b15880f95c29",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 84,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d148e48-5465-498a-83a7-a042e5eb0a9f",
        "cursor": {
          "ref": "0cc710f7-bf9f-4ada-a8b8-604886e15ee7",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "51dc7aff-a4b4-40c6-8636-b6fc7ceb4188"
        },
        "item": {
          "id": "7d148e48-5465-498a-83a7-a042e5eb0a9f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ce1541d0-f19d-4be2-ace2-870bcc6eee2a",
          "status": "Created",
          "code": 201,
          "responseTime": 6405,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b8435b-0a20-4103-8fbc-b33b2982fa79",
        "cursor": {
          "ref": "9a9f5eb8-4ffd-4d41-a5c9-52d0e278da6f",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "ef52906b-a2c0-403d-9722-dc6cd4a33b8c"
        },
        "item": {
          "id": "09b8435b-0a20-4103-8fbc-b33b2982fa79",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "9100ea75-1003-41b5-895b-9698947b4d42",
          "status": "Created",
          "code": 201,
          "responseTime": 6011,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb6d0336-73ba-4871-ac42-f2613360fbfb",
        "cursor": {
          "ref": "78a01853-4c76-4b80-96d6-e021a7f0505b",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "3a6e2fb8-b6c6-4788-83d1-b79026936917"
        },
        "item": {
          "id": "fb6d0336-73ba-4871-ac42-f2613360fbfb",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "fded9357-6a93-4274-8c8d-3eaffdd22557",
          "status": "Created",
          "code": 201,
          "responseTime": 6893,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a66841a-b9e7-43ca-ae65-5b5789a9ef6f",
        "cursor": {
          "ref": "9c9b3471-2f75-4bf7-8dd3-6260ff844d72",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8e5ee44d-df36-4a95-884a-1d571747e875"
        },
        "item": {
          "id": "0a66841a-b9e7-43ca-ae65-5b5789a9ef6f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "3b460279-9db0-4948-8c34-a4fd37a7775b",
          "status": "Created",
          "code": 201,
          "responseTime": 6297,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a69fce-48c4-42bb-bce9-a4cf41dd9272",
        "cursor": {
          "ref": "67cfc3fe-d5e5-4137-925b-317033c06055",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "5075fbe8-868d-4157-babf-289bdec7ad11"
        },
        "item": {
          "id": "15a69fce-48c4-42bb-bce9-a4cf41dd9272",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "a6248144-c3fe-4b06-a216-a31d4d504933",
          "status": "Created",
          "code": 201,
          "responseTime": 6236,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "389ca5e2-c1e3-462b-aa8a-b8fb06904d14",
        "cursor": {
          "ref": "7ec34700-c5b6-4917-ba95-26fa402c889c",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "feecf568-ce71-47c8-a5e9-46f7856c01bb"
        },
        "item": {
          "id": "389ca5e2-c1e3-462b-aa8a-b8fb06904d14",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "3383b911-7724-47c3-93a4-b740719de152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "2c1bebb6-63f4-42a4-b45b-f160fa83d28c",
        "cursor": {
          "ref": "2ff24ccb-d09a-428b-8213-9391d2313f79",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "4ea2136f-6f5a-4a30-bc0c-5091512c9e78"
        },
        "item": {
          "id": "2c1bebb6-63f4-42a4-b45b-f160fa83d28c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "628e0ca3-aa21-4a77-96d9-ecca94569416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b79739-53db-400a-a876-b64b2a2bf304",
        "cursor": {
          "ref": "dd5a4f11-839d-4012-906d-ebb54bfc3b8c",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "94f8dd18-4ee6-4d66-b712-4b01a5688722"
        },
        "item": {
          "id": "94b79739-53db-400a-a876-b64b2a2bf304",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "bb31a503-bddb-4e31-8fa6-a4c9ae56de24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d03e30ff-d27a-4cbc-838f-5dace624e749",
        "cursor": {
          "ref": "94f9d9c3-3343-499f-92d7-4836abfa3860",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "cc833acc-2aeb-4f0a-b1e0-63897064a6d7"
        },
        "item": {
          "id": "d03e30ff-d27a-4cbc-838f-5dace624e749",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b5d9ceeb-a663-4733-95d8-0fc70782a418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e4fcd73-5f4a-47b7-93fe-d27d9002c93e",
        "cursor": {
          "ref": "b1f4c8b3-e322-4f56-9812-1f29e693722b",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a9523271-3657-4ea6-869a-78d80dd34838"
        },
        "item": {
          "id": "2e4fcd73-5f4a-47b7-93fe-d27d9002c93e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1d8dc2e1-d1a0-4b05-8738-2fac941bc716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598835c9-dc5f-43cd-a299-7c993a650382",
        "cursor": {
          "ref": "429d2e9d-fe4f-46b8-bc8d-d131e3509aa2",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "2dcaf1f7-b976-4948-98af-3d8a2c7f7049"
        },
        "item": {
          "id": "598835c9-dc5f-43cd-a299-7c993a650382",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "21ef4a46-ffcb-4647-aa0a-12d3c6560513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8d7d1a-318f-44dd-a213-b81ebec0214a",
        "cursor": {
          "ref": "41df35e2-f782-42d6-b7d3-1dbb331086e9",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b313ae0c-aebc-4bbe-a0b4-f76ea3649f8f"
        },
        "item": {
          "id": "1f8d7d1a-318f-44dd-a213-b81ebec0214a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d9e52f7d-7808-4840-b671-9a5ff7330a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9559661a-ff5e-463e-9d9d-c6b17ad32db1",
        "cursor": {
          "ref": "68780254-4a43-48e3-9034-72853ba5e2a8",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d88adae9-3b58-44b4-8ca8-79e743f46c3e"
        },
        "item": {
          "id": "9559661a-ff5e-463e-9d9d-c6b17ad32db1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d3aeeb42-ccb4-4eed-870a-ae382ff1a65a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f57380-3dc5-4fa2-a65d-0032c850709b",
        "cursor": {
          "ref": "f1572e65-4c07-426c-afcc-718bdd70c0bd",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "6c78d659-c2c2-4d9f-a262-f729023a398a"
        },
        "item": {
          "id": "f5f57380-3dc5-4fa2-a65d-0032c850709b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1695a5fd-f65e-4356-804a-b026bdf43d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4476d4a1-df73-4cb3-8133-fca848202515",
        "cursor": {
          "ref": "6c7a73c8-5f9d-4bf8-a9d9-b8226709a197",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "dcf60030-3aa7-4777-b980-efc1fd1bcd83"
        },
        "item": {
          "id": "4476d4a1-df73-4cb3-8133-fca848202515",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "72d3c87a-6ab2-40ee-bb07-68c4dc271ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16077de0-ad60-43c7-bbb8-107ea0fa74a4",
        "cursor": {
          "ref": "7dd3120a-a1bf-497d-86e2-361533553425",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ad540e16-5153-41a5-9cd7-403fc6867671"
        },
        "item": {
          "id": "16077de0-ad60-43c7-bbb8-107ea0fa74a4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c8d8ac11-7678-414b-b867-6fa4649e5f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "777bf5c4-a28c-4fbe-99c0-0e6cb09948aa",
        "cursor": {
          "ref": "21f7ff93-dc3b-4794-b2a5-75b1275dc44a",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b085507d-1445-426d-966a-f28188a85f22"
        },
        "item": {
          "id": "777bf5c4-a28c-4fbe-99c0-0e6cb09948aa",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e21b47c4-1ed8-45ff-a5c2-95bdb5d89b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c46bf282-e875-43e6-8922-7cdfb5b64d8b",
        "cursor": {
          "ref": "30a4e1e1-99d6-47af-81e5-3c8983e78a37",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "c170e0f5-1355-48fc-a496-ac2c9ffcea03"
        },
        "item": {
          "id": "c46bf282-e875-43e6-8922-7cdfb5b64d8b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ebf486fd-a72f-4e35-9214-c3481efe0443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce4edbb-06d8-40ad-a7db-df9494001528",
        "cursor": {
          "ref": "a464902d-e8e7-4dc7-be1d-ad7eaf6ffaaa",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "2cd8c625-1683-4ba8-96d6-12b43f5276d4"
        },
        "item": {
          "id": "6ce4edbb-06d8-40ad-a7db-df9494001528",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "bff223b1-9aee-46c9-bdff-d5ccc1cb0a10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b916c757-75b6-425b-8786-239ef02f374a",
        "cursor": {
          "ref": "50077d3a-c345-48a5-9154-680e98724aee",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "5d250ba9-e489-47b4-bd01-8fae5a96bd7a"
        },
        "item": {
          "id": "b916c757-75b6-425b-8786-239ef02f374a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ce478721-80d3-4319-9144-83ec0fdab238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae3b74e-b3c9-4a88-a1f0-bd86748d790f",
        "cursor": {
          "ref": "ffae948c-d9c3-4545-9892-f9ecf1f39906",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "7a216279-5341-4b92-852d-4bbc5dc5c8bf"
        },
        "item": {
          "id": "7ae3b74e-b3c9-4a88-a1f0-bd86748d790f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0f8e687b-2ee4-4d86-8b90-20476ddd98dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "634e9481-c703-4ae0-89cc-fde7c67a2f63",
        "cursor": {
          "ref": "a5911652-9998-4e26-bb71-9de5f2046ab3",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "cd8ab1a5-59e6-49bf-9502-43804f502cc2"
        },
        "item": {
          "id": "634e9481-c703-4ae0-89cc-fde7c67a2f63",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ad3b4d48-4b51-4b8b-a4bd-c590f5242b0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce74e85-7443-4f4c-8978-9ddcd4bc46a9",
        "cursor": {
          "ref": "8a789bbe-4158-4bf2-bc9e-7d9c662ac500",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c988695a-2af6-46e8-9c17-39d8f4d67717"
        },
        "item": {
          "id": "fce74e85-7443-4f4c-8978-9ddcd4bc46a9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c10fb93e-6b21-4543-a20f-df99084a1004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e179d94-a707-4730-9736-e521ed5a4fbc",
        "cursor": {
          "ref": "09ad910b-5c93-4c54-af3e-cdab90fcabf2",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d0a57962-a8b0-4b3d-8359-5371d348243a"
        },
        "item": {
          "id": "0e179d94-a707-4730-9736-e521ed5a4fbc",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "80cbd16d-bcdd-4a5c-9138-165dbd05e2cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c71e8ce-522d-4808-a7a7-1af386410f56",
        "cursor": {
          "ref": "61f2312c-2b4b-4e8d-b741-2e3d9586648b",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "6dbce92d-c478-4ecd-9a34-1e7d411ef6e6"
        },
        "item": {
          "id": "7c71e8ce-522d-4808-a7a7-1af386410f56",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "31370fdd-0eba-470f-a5e5-3af8f94140d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af499d0f-0cb6-460c-b2cb-8d9a7fc33c7d",
        "cursor": {
          "ref": "57ba0a20-9bca-47bb-8aa4-d05411130fdd",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f06bb7bf-3f69-4145-a8cd-ba84d0574e03"
        },
        "item": {
          "id": "af499d0f-0cb6-460c-b2cb-8d9a7fc33c7d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "de6a54fe-3979-4a12-99db-91705723c3b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be5a94a5-50f8-4c4a-ae4b-fafe95ac4311",
        "cursor": {
          "ref": "6ca6f6de-69f9-465d-b806-f3aa8cf92b17",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "3951aba6-82a5-4bf8-97be-4fa73c126c0a"
        },
        "item": {
          "id": "be5a94a5-50f8-4c4a-ae4b-fafe95ac4311",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "494ceecd-54bd-47ec-ada6-954282f37e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "936b1af4-b328-4944-87c7-741d6069500d",
        "cursor": {
          "ref": "459785e1-f4ba-4e7d-bf1d-bc3be1b8d310",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "023d78f4-9865-4338-9022-a6f3c2fb533d"
        },
        "item": {
          "id": "936b1af4-b328-4944-87c7-741d6069500d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "211ad839-7b32-44f0-85f9-fca0fb198bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd787f7-817c-4171-af8e-08d91b59ae49",
        "cursor": {
          "ref": "66ac5ed8-b789-43a6-8f77-d3d60082e769",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f7078979-7d8b-40a1-b73c-f4a4a381c10c"
        },
        "item": {
          "id": "1bd787f7-817c-4171-af8e-08d91b59ae49",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d903881f-a0c0-4748-b0b0-0d5fbddbded7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f5d1c02-4697-42a5-be6b-5f3f4796ccbc",
        "cursor": {
          "ref": "d473ffed-c4b8-4b4c-8fbe-b8a5f95ba51d",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4ac9b63d-8b76-400d-bd1f-598b4c1161ae"
        },
        "item": {
          "id": "8f5d1c02-4697-42a5-be6b-5f3f4796ccbc",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "72b5d5a6-9c5b-44ca-be4a-905982f4db41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0929c6-dc3b-4b49-aef5-803cb6eaf08c",
        "cursor": {
          "ref": "e83d9b7b-0512-4dd9-a07c-da88eb690635",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "35b2f12a-d4aa-4e7f-9129-9c6dac0c9b8b"
        },
        "item": {
          "id": "1f0929c6-dc3b-4b49-aef5-803cb6eaf08c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "88ca559b-aac4-4c29-bea8-68c11f8001df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ffba4d3-4dae-4ab5-8fda-a54bd08d9d6b",
        "cursor": {
          "ref": "de241501-cb83-4227-92ac-4424fddce778",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "4be171d5-67f0-4ebd-bab5-df2feec0f23d"
        },
        "item": {
          "id": "3ffba4d3-4dae-4ab5-8fda-a54bd08d9d6b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "bf8ae637-35ba-44dd-8926-8a6161822860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ffbeb9-d910-4b05-b228-bb31068d0efd",
        "cursor": {
          "ref": "960cb8eb-60a9-4537-95bf-dc9adc0426ce",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "21cba916-cd36-4756-9a44-1f3b402d6eac"
        },
        "item": {
          "id": "42ffbeb9-d910-4b05-b228-bb31068d0efd",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "33599899-f618-4c50-96b2-7fe6e6578a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a2bce69-1bd1-4ef4-9074-59364fe2f267",
        "cursor": {
          "ref": "6628b2f0-c95b-45ea-805e-1c0fe3d0648e",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "4c1bf357-fa4e-4792-b491-136b8ad9cb98"
        },
        "item": {
          "id": "5a2bce69-1bd1-4ef4-9074-59364fe2f267",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "08af8dd9-f376-41ce-8810-e2cbe5ad6a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa9a9a5-f04a-4a38-b401-74e055813763",
        "cursor": {
          "ref": "25dfcf56-e35f-49a0-8a5f-7c8da97b73e0",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "5f35d789-b8ef-41dc-9bfc-cdc89a52bc8f"
        },
        "item": {
          "id": "8fa9a9a5-f04a-4a38-b401-74e055813763",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5ee01312-fae6-46a2-bf05-483b3f94109e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60db6ce4-411b-4076-9996-a62acd3dab89",
        "cursor": {
          "ref": "f29598c9-1ad0-47df-a826-3430b6b527f4",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7bac8472-ec38-40dc-be99-ef7c62840595"
        },
        "item": {
          "id": "60db6ce4-411b-4076-9996-a62acd3dab89",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "00bec168-2d96-49de-96c3-297fc83d8e3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6430133a-e950-4adf-908e-510d27302718",
        "cursor": {
          "ref": "2867faa2-4f41-4cef-8bd5-c95f838b68ef",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "5ac70aa8-0187-401c-9a11-19b888f1df4d"
        },
        "item": {
          "id": "6430133a-e950-4adf-908e-510d27302718",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d6f79940-fa55-45bf-b0ca-fec5a40b6b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adeecb57-9c6b-4f2c-afe7-98e98b73afdb",
        "cursor": {
          "ref": "4e4fbeee-8914-4c22-9a0e-c6b7c32fcf1b",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "33985179-1a42-4bdb-9004-4d5ffe3f63dd"
        },
        "item": {
          "id": "adeecb57-9c6b-4f2c-afe7-98e98b73afdb",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "e942008f-5ab7-459b-b496-0203a93fb3f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "144b90eb-c518-4c21-9da8-854fc35ec914",
        "cursor": {
          "ref": "47e8238d-c161-4858-8907-b08b62069073",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "15761118-5ded-455b-b134-b7bf3f606046"
        },
        "item": {
          "id": "144b90eb-c518-4c21-9da8-854fc35ec914",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "68a1b554-ede2-4c6b-9668-5144adf3d834",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4a97e3-8235-4a9a-899d-59080529031e",
        "cursor": {
          "ref": "ec936d72-2772-485e-b951-094795c7b03d",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "87f6a083-5777-4947-b5bc-708a0be7be6a"
        },
        "item": {
          "id": "7c4a97e3-8235-4a9a-899d-59080529031e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "727c3813-ad89-42eb-a575-75dbe9c2b216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3fc1396-627e-4c5b-bb3b-3dedb2de947d",
        "cursor": {
          "ref": "c425e0cf-7d95-402c-9cd2-3a0b8b97d3e6",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5593fe2a-b343-4ff4-858d-9b995211b5fa"
        },
        "item": {
          "id": "f3fc1396-627e-4c5b-bb3b-3dedb2de947d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5de9ce9a-7cb9-4d25-a1ae-b0e3ee830976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01ee8e5d-5c33-4637-8436-58d28b52c759",
        "cursor": {
          "ref": "d8f766f7-0074-4193-8f00-3c1a1bb960db",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3a29affd-fe11-4cd5-a9bd-5be173ba4006"
        },
        "item": {
          "id": "01ee8e5d-5c33-4637-8436-58d28b52c759",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0a61d111-8c62-4a08-99c6-23cd6057e897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdcf8133-68ff-456c-8ec0-e7da750140b0",
        "cursor": {
          "ref": "5adf5ed6-79e8-49f7-85c5-83169628e847",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "17cb5e16-494c-4766-a645-211407bb0af0"
        },
        "item": {
          "id": "cdcf8133-68ff-456c-8ec0-e7da750140b0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e5b2ebfe-163e-4678-a73d-27b68394d8b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ccd5b66-7b33-4e16-8cd4-e16f90f86f2e",
        "cursor": {
          "ref": "c692fcf8-f886-4fab-90b8-f716ec998c13",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b098f7b7-c249-4342-bb4d-355cca5e322b"
        },
        "item": {
          "id": "5ccd5b66-7b33-4e16-8cd4-e16f90f86f2e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d689c9cf-2688-463e-9b43-c65c40c88325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b11ea057-212e-4e97-a95c-1b2408e7eab0",
        "cursor": {
          "ref": "29cfeea3-cc2d-40a1-b28c-867e84a9242a",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "4b7e1c58-3312-4ee6-b687-ba1a95f79dbc"
        },
        "item": {
          "id": "b11ea057-212e-4e97-a95c-1b2408e7eab0",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "14c22731-9dfd-40be-9b57-6bfc33eb957f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a715e1-ec4a-4681-92c1-e2077ceb3fb5",
        "cursor": {
          "ref": "8fc30914-38d1-44b5-a2ca-bedc82738330",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4e6f4588-6074-4662-90fe-aab73aa63243"
        },
        "item": {
          "id": "14a715e1-ec4a-4681-92c1-e2077ceb3fb5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "041e86ef-18d7-4677-b210-0f1e72ca7280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d9774a-2308-45e8-a370-0128f35ceb23",
        "cursor": {
          "ref": "316f460e-b566-411f-ad6c-4b7d325c54b7",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "032320da-9d3f-4f6a-b655-b1d33f69131b"
        },
        "item": {
          "id": "c6d9774a-2308-45e8-a370-0128f35ceb23",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "bcbb15b5-372f-4d86-8440-a6902c93718e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "313fb5c8-c5a9-469f-9049-04a517e668ed",
        "cursor": {
          "ref": "4d5ea01e-4438-4779-884d-71a3870d576e",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "26216476-c1ff-4f5a-88d5-6e47b9d3e01e"
        },
        "item": {
          "id": "313fb5c8-c5a9-469f-9049-04a517e668ed",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "db1febe8-25f4-4340-8738-2d0c89ce0a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39cd90ed-fd98-461c-b438-da2971c147a6",
        "cursor": {
          "ref": "b047a945-a8ff-4fc6-8e6d-f38d2d7a2f49",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ac8f7c32-7a17-4d1f-88fe-025ccfee7d3b"
        },
        "item": {
          "id": "39cd90ed-fd98-461c-b438-da2971c147a6",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "bd5a9076-5035-4a08-bca0-259b1a7e2f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "541142cb-17bb-4f9e-82b8-65e0d0610796",
        "cursor": {
          "ref": "33fda680-cbcd-429a-a9dd-5af72810c9a7",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f947ee72-01d0-4727-ac6d-fbb1aa76e303"
        },
        "item": {
          "id": "541142cb-17bb-4f9e-82b8-65e0d0610796",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6f75a109-6780-45b0-9b13-5a6a330d6dd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea0965d-ad4c-45de-be16-23ff213eb161",
        "cursor": {
          "ref": "22efd5d5-1b74-4dc3-b511-e0201d36db71",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "17730a04-01f4-4a79-b2d4-366dd8daa4f0"
        },
        "item": {
          "id": "2ea0965d-ad4c-45de-be16-23ff213eb161",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7a76859d-9f90-4410-ba28-bbff4bfc5b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb8a8a3b-505f-4591-83e6-380284ffe4e6",
        "cursor": {
          "ref": "4f639825-e525-4b4a-aba2-4f32ab3f51df",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "4d726c06-295a-4021-bdbd-4231af622099"
        },
        "item": {
          "id": "cb8a8a3b-505f-4591-83e6-380284ffe4e6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3d5ee320-e535-41c8-acc2-8cd5253a907d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6775500-fea9-4d85-85ce-f128e2f76b7b",
        "cursor": {
          "ref": "ec7f4d66-3a98-4a1a-bc20-115771726af2",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "0f76271b-be04-4b16-bca6-f875edf9d332"
        },
        "item": {
          "id": "d6775500-fea9-4d85-85ce-f128e2f76b7b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "de983512-af6c-44a5-94d4-1da0a2160358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "defb741a-5e29-4acb-b3e6-f6605079c234",
        "cursor": {
          "ref": "0fb491d2-d43a-46eb-81bc-178da00b8fa8",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "662a0eb4-0d8c-4850-828f-5c1da0ab76c4"
        },
        "item": {
          "id": "defb741a-5e29-4acb-b3e6-f6605079c234",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "cec9b007-6630-4f95-a14f-b9fa9e9654af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f15543-3b40-4432-8df7-e4f6b0636150",
        "cursor": {
          "ref": "c5e3a502-d2a4-43b8-b6d4-685d6e748c11",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "4b9dad47-4605-4ae7-a5ef-7755cc772fd1"
        },
        "item": {
          "id": "c5f15543-3b40-4432-8df7-e4f6b0636150",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d6ee01ef-4961-41cc-8926-092d537f9fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c914c29a-5c0c-44b9-9297-8b70a57e21a7",
        "cursor": {
          "ref": "c2fe9e8a-e2b2-46ff-bb73-5470de896831",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "aac158e1-60fd-4dca-ad31-ac4115ca3029"
        },
        "item": {
          "id": "c914c29a-5c0c-44b9-9297-8b70a57e21a7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0b855fec-552c-47cb-92f3-43f140b47bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cba55c4-bc60-4517-87bf-b6ee2aac5e32",
        "cursor": {
          "ref": "862d59d2-26d9-471a-a593-8bfe323e99d1",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "4d8280a1-5381-4e70-ad3b-06fbd6752369"
        },
        "item": {
          "id": "5cba55c4-bc60-4517-87bf-b6ee2aac5e32",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8dae2055-b1b4-4369-853b-f7d7b5808bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87a3e8bc-f9d6-43ab-9a5c-b7f86ebf7f3f",
        "cursor": {
          "ref": "4d38f365-cee6-47e2-8d60-62f6fe9255cc",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b04567d5-5b19-448e-a99e-fcb0fc08824f"
        },
        "item": {
          "id": "87a3e8bc-f9d6-43ab-9a5c-b7f86ebf7f3f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "fbf1d602-d149-4dc5-9f93-3eadf90710fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5835754d-0b6c-4d53-a0be-8856c4d445d4",
        "cursor": {
          "ref": "42b79a5d-9dd1-4e85-bda1-a9dbffa56ba5",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "bf009bc9-5764-4c43-bb2a-30cc57bf8609"
        },
        "item": {
          "id": "5835754d-0b6c-4d53-a0be-8856c4d445d4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "25abf2c7-e189-433a-9b65-45851da009f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c0451b-ace0-4c76-8cf6-ccad9a7cde52",
        "cursor": {
          "ref": "e4f902ac-4f44-4a74-94f5-61e4c4a7c995",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "df19981a-ee01-4a89-a665-6617453e216d"
        },
        "item": {
          "id": "b5c0451b-ace0-4c76-8cf6-ccad9a7cde52",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "09a9b883-3847-41b3-bc8a-21efa827d3cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86eff9b0-5ddd-489e-864e-f550e1e5a272",
        "cursor": {
          "ref": "e967baec-de37-4a3c-b5a2-9c629bd0163a",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "6be34073-2364-479b-9d60-43e105a7791c"
        },
        "item": {
          "id": "86eff9b0-5ddd-489e-864e-f550e1e5a272",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d6de5f41-1b64-4ca6-9c50-051bb05d7672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0ff0aa-cf99-46eb-a37d-6fe904b033de",
        "cursor": {
          "ref": "77378236-8dc8-4f9e-9e25-c188b989d93c",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d47068a1-169f-46be-b26b-d59d59380b1a"
        },
        "item": {
          "id": "6e0ff0aa-cf99-46eb-a37d-6fe904b033de",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "352d7552-7a83-4dba-a7a4-949fb615e1e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3235a846-8073-4be0-8aa9-727b2b2e7de7",
        "cursor": {
          "ref": "d31f2f10-8904-48d6-a401-85aaf556f98c",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "09e46d09-e86e-432f-a179-e3c4b2d92ac6"
        },
        "item": {
          "id": "3235a846-8073-4be0-8aa9-727b2b2e7de7",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0b618ecc-de71-4d2f-99b6-8dbe156ef4be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbebccf2-f229-43b8-a660-0cbeaddcc4b3",
        "cursor": {
          "ref": "bd72bc4e-fa1c-4e68-b0be-96716ed78323",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ae82d4d8-eb99-471d-9daa-47116510802e"
        },
        "item": {
          "id": "bbebccf2-f229-43b8-a660-0cbeaddcc4b3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "94cdf761-1eea-4263-92ad-4a14fc74163c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb259524-174e-4dee-a9f2-4aa8a0c8e070",
        "cursor": {
          "ref": "aef5c475-b18d-4237-b7a4-30196d99c98c",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e0421c02-42e8-49e6-be62-fde7ddf188ee"
        },
        "item": {
          "id": "cb259524-174e-4dee-a9f2-4aa8a0c8e070",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "41ecc251-0c1f-4bc8-9fd9-c14b8a2073f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "836b2921-d1a8-45a4-b897-1f7d9fe6ec05",
        "cursor": {
          "ref": "ab38a3dc-a4fb-4a9e-8326-386c84b4b6f4",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a3b28979-7863-4db5-b2e4-b04f56635b07"
        },
        "item": {
          "id": "836b2921-d1a8-45a4-b897-1f7d9fe6ec05",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7bc521ce-cbd5-47f5-9246-14c8de476cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c74b54c0-0270-4858-a53b-f6bf2d50cb73",
        "cursor": {
          "ref": "83e152c5-2e82-4090-bbe9-b6b803da602f",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "9527783f-c0ff-4b7a-83f0-b075d72d3602"
        },
        "item": {
          "id": "c74b54c0-0270-4858-a53b-f6bf2d50cb73",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4cb83fe1-fb6a-4a4b-ac81-888516593075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "468dd7c1-b04a-44f2-864d-ee2afe89e011",
        "cursor": {
          "ref": "021cab0f-3e18-4f1a-9216-884ec3c3f5f6",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "149f514d-36fc-4faf-b601-c75c6dc5eee1"
        },
        "item": {
          "id": "468dd7c1-b04a-44f2-864d-ee2afe89e011",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5d0588ba-109e-4118-8d18-2d46a5bbab7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5552f16f-0b18-4194-bb51-a1ebe94db77a",
        "cursor": {
          "ref": "2ef198cb-c0eb-4aac-a706-9b9d3b526417",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "555ee3f9-7be3-4267-8176-54ba31a0cd52"
        },
        "item": {
          "id": "5552f16f-0b18-4194-bb51-a1ebe94db77a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8ab831fb-7162-4589-a711-9ddd67fcbf0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdbcebad-e0d3-46ac-aaf7-0ebde620cb5e",
        "cursor": {
          "ref": "047cad82-2533-4aa5-947a-5b42d7e655ed",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "be683b4b-1390-4e98-bcea-8a71f6044633"
        },
        "item": {
          "id": "fdbcebad-e0d3-46ac-aaf7-0ebde620cb5e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1e407246-47e3-4418-91d3-2e7d4d179265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91dca6c4-423e-4f74-8047-9f1c8f91d450",
        "cursor": {
          "ref": "918a3134-7abf-4568-8231-5a0e794efd0b",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "273c1860-87e7-460c-be6a-c24e93180614"
        },
        "item": {
          "id": "91dca6c4-423e-4f74-8047-9f1c8f91d450",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "9172372d-0a43-479c-b55d-df994100a934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b76968-72ce-4d60-9385-f8b8c11cfbdd",
        "cursor": {
          "ref": "db3895a9-7d22-4842-b507-fe557a684559",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b7a959ee-9dfc-4eae-9945-02fcfd055740"
        },
        "item": {
          "id": "62b76968-72ce-4d60-9385-f8b8c11cfbdd",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d89c4c0d-ae60-4f2b-a08b-965cf39425ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "062b3a7e-79f2-4929-bfd7-54b313f7f8c4",
        "cursor": {
          "ref": "0caa2a17-b2c0-4033-b26a-35a2c6e6def9",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "aee3f1e5-fa35-446a-9150-fddbef64ac71"
        },
        "item": {
          "id": "062b3a7e-79f2-4929-bfd7-54b313f7f8c4",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "6a677f51-01c9-46f8-b731-706e2a368708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5798c85-1c12-4c3f-8a2b-b8dff98ef970",
        "cursor": {
          "ref": "e274bfb5-8fdd-4dfe-9d3d-b4df23cc71f5",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "aa89b2c1-29b5-40b8-974b-20b357be77a6"
        },
        "item": {
          "id": "e5798c85-1c12-4c3f-8a2b-b8dff98ef970",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "cbe581a9-1b1f-4412-abd4-f690fd50b5a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9540b1c4-94f1-4673-abac-76f5f191ea9c",
        "cursor": {
          "ref": "842db165-69ae-492b-b01f-2b1a2ad5ae04",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "17f966e6-3862-4b18-a85b-2f1370bfc784"
        },
        "item": {
          "id": "9540b1c4-94f1-4673-abac-76f5f191ea9c",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "7bdb799e-71a5-4ac5-8f2d-2d15a185dbe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5164657-3c2c-4f75-b30c-eb01881960e6",
        "cursor": {
          "ref": "8b32b986-01ab-4c06-82ed-5fde9f662fc4",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "df1986a8-000d-4432-8d7c-69f7aedd3861"
        },
        "item": {
          "id": "b5164657-3c2c-4f75-b30c-eb01881960e6",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "c9a6da9b-4317-4032-abde-9d0d273b2166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d062cd07-168a-4c92-928d-0272b2cbf428",
        "cursor": {
          "ref": "5f2b195f-eb05-476c-aff7-eae3b2315f14",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b33498cb-fec1-4325-91b1-ea0015bf280d"
        },
        "item": {
          "id": "d062cd07-168a-4c92-928d-0272b2cbf428",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "430a0304-acd7-4c48-acf6-2b7671786d47",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4af96f9-3a6e-43b9-8ec4-361c6e7a25b9",
        "cursor": {
          "ref": "0bc2f9a2-a5e2-4a55-8a4b-6342fd991293",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8eb7b911-9dd0-4396-85f6-654fb7540f74"
        },
        "item": {
          "id": "e4af96f9-3a6e-43b9-8ec4-361c6e7a25b9",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "73069476-9990-4079-927b-968523f88016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ee36dba-d0bf-43c3-a977-9f509edaf035",
        "cursor": {
          "ref": "0d892903-b009-4410-baa2-5f94559ab35c",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f8e63d07-abee-4887-a5ff-134d01cb34b5"
        },
        "item": {
          "id": "0ee36dba-d0bf-43c3-a977-9f509edaf035",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "23fa5e51-db6a-4a6f-b822-0ecf8de0b541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7987ba6-99a8-42d6-b2d5-98eee23a07e7",
        "cursor": {
          "ref": "1899f3e8-32b9-40c7-a238-3b46ee11db35",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "85051342-826d-4c5a-99fa-2dff15abba31"
        },
        "item": {
          "id": "c7987ba6-99a8-42d6-b2d5-98eee23a07e7",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "aae9352f-786a-4551-9bc1-f056cfe7ca5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97cee33c-9fa1-4e93-b34c-06a51a3e2195",
        "cursor": {
          "ref": "f9b3876d-481b-4c45-8404-c2faff3637a6",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "00053622-7be9-4b44-88f7-d17ddaef5b09"
        },
        "item": {
          "id": "97cee33c-9fa1-4e93-b34c-06a51a3e2195",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a8b2e376-97af-4841-8f4b-330dcdb19e52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44192258-86cb-4587-ab65-c02787a93d7c",
        "cursor": {
          "ref": "1ad0c845-b4fc-4ae0-b255-d5fa7ed89dba",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f42d05e7-af4c-441b-9473-ad761bb31610"
        },
        "item": {
          "id": "44192258-86cb-4587-ab65-c02787a93d7c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "082af981-c599-41c6-964c-24056dc898f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d5943c6-1c25-43f6-850c-c313c31ccf08",
        "cursor": {
          "ref": "0ac3864b-73c5-466f-a0fc-debb01ad9eef",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2a08856f-9600-4c3a-89b3-b14e7766fb6b"
        },
        "item": {
          "id": "8d5943c6-1c25-43f6-850c-c313c31ccf08",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "59447262-cea4-4753-91c0-d06c34e6bb55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c432ec6-703c-4ef2-b8af-982df4c5b61a",
        "cursor": {
          "ref": "b25a21f5-ad1d-4ad9-a6fe-baa5ded20982",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b8339241-730b-43ed-b7f1-322c5e820cb3"
        },
        "item": {
          "id": "1c432ec6-703c-4ef2-b8af-982df4c5b61a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "3b5af50f-2c7d-42c9-b465-62d2f8b22941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364a353f-bc67-4516-ab35-47e577a3f273",
        "cursor": {
          "ref": "db2fb81b-bb9e-4881-9352-db705b475e3b",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "8a6374c0-0777-4c8c-91e4-610eb2933454"
        },
        "item": {
          "id": "364a353f-bc67-4516-ab35-47e577a3f273",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "0964ed10-b6fb-4fb0-bdb6-87c4cd4dd5f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ccdb6d-af61-44e1-be23-be54581d04ac",
        "cursor": {
          "ref": "0fd2c288-f8a9-432d-a2ea-55fca9adfbe0",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "56596b06-c9ad-458d-9375-cfd2c2b2acf4"
        },
        "item": {
          "id": "06ccdb6d-af61-44e1-be23-be54581d04ac",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "2575a920-117f-4d49-8084-157243bd3349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30ba8639-a14e-45a7-8e95-6aab62e9b306",
        "cursor": {
          "ref": "2ccc519e-abb3-41cd-9b9f-542c6de66948",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "69c1ddaa-217d-4aa0-9b23-5ec2a1339000"
        },
        "item": {
          "id": "30ba8639-a14e-45a7-8e95-6aab62e9b306",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7d8031be-0f24-449d-89ff-d730519fa1c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df54cfb-12b6-4ae0-9c1b-c9e25ee07817",
        "cursor": {
          "ref": "56d6e97e-3af4-45a5-9ca3-a9188db9fcf5",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ef6fc826-bd9e-4236-9a17-cc323eddb314"
        },
        "item": {
          "id": "9df54cfb-12b6-4ae0-9c1b-c9e25ee07817",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "058a60c9-a1b8-418f-9e14-3dea324db46d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a0c35e9-8140-4476-9135-31f18c4e7619",
        "cursor": {
          "ref": "6059b505-8816-4039-92f8-84bcc492d229",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d70a6d14-5441-47c2-839e-b66fbdc7aece"
        },
        "item": {
          "id": "4a0c35e9-8140-4476-9135-31f18c4e7619",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "fb67c60f-ca8b-4c49-b232-016e2b6dd513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31248f73-bf9a-47e8-b4ff-9a481365d0d6",
        "cursor": {
          "ref": "237dbfa7-980e-40aa-a2ef-306a32c0d132",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "3eeccd76-1c9a-4aa5-80ce-5f17b4063ad0"
        },
        "item": {
          "id": "31248f73-bf9a-47e8-b4ff-9a481365d0d6",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "7b35c51e-0624-451b-8ece-7904758e3836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5bbd327-8d08-4cc6-a588-7c99ee565b20",
        "cursor": {
          "ref": "ebee2031-48a2-4a44-a7d2-f93bc39e7afd",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "f3043762-e6f6-4f43-b3f9-2e09f2c2a57c"
        },
        "item": {
          "id": "e5bbd327-8d08-4cc6-a588-7c99ee565b20",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "86bc049f-3521-4d91-814d-e933f74cd9ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36eb265f-355b-471b-819a-a952f5da35b9",
        "cursor": {
          "ref": "91a8b0a1-8c4e-4cff-b66d-756fc3e18006",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "822cbe4b-9122-456c-935c-9445edca7962"
        },
        "item": {
          "id": "36eb265f-355b-471b-819a-a952f5da35b9",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7d96ec80-c008-435d-914b-c91565ce10ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d8cbdb-db7d-4653-8c40-35a4c418df27",
        "cursor": {
          "ref": "55d5b763-26a9-4342-b433-842e5f2dfa75",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "69161abc-b4bd-4bd1-aecf-ae2e4f33b917"
        },
        "item": {
          "id": "43d8cbdb-db7d-4653-8c40-35a4c418df27",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "dd51de35-2ff4-4b54-9780-b4b8814427ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd2bdca-d538-4524-b85c-4b4d14988bb0",
        "cursor": {
          "ref": "bbab2618-27fa-43c5-84a8-f7a5b61c1a89",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "635ab1fd-2f41-499c-a730-58d24b581f4a"
        },
        "item": {
          "id": "6cd2bdca-d538-4524-b85c-4b4d14988bb0",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "dc71b53e-c360-4f79-aa45-224403d53f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b64751-d42b-40e7-a1c5-95ae818853fe",
        "cursor": {
          "ref": "6fcab1c6-48af-4ce9-bddb-ee4d578e9db8",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "a8e22ea3-22ed-45ce-b2fc-fe1f5b698c3f"
        },
        "item": {
          "id": "03b64751-d42b-40e7-a1c5-95ae818853fe",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "440d2cc7-00c7-4af5-995a-4c5e1918db1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e02ddb-55da-4a4a-b6bc-8983cb52e726",
        "cursor": {
          "ref": "bcf36a27-0159-480d-91b7-890ba20332f5",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "1c57d6cb-b8a7-480c-9b36-42c47399bd7e"
        },
        "item": {
          "id": "c7e02ddb-55da-4a4a-b6bc-8983cb52e726",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "8147e9e7-dbf5-4885-ac27-ef0d839c3601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b60fa050-6219-4ed3-8997-c0c47b5956e3",
        "cursor": {
          "ref": "8d3e906d-77fc-49f0-877f-9ee6231b7a08",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "56f6fa08-d994-4710-9fec-bb3f1cb83e6a"
        },
        "item": {
          "id": "b60fa050-6219-4ed3-8997-c0c47b5956e3",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "33f0b567-f7b9-4f5c-b9c3-382caed6b5d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32370d93-ec3b-4db7-8511-b541c5774664",
        "cursor": {
          "ref": "6d54b11f-9b1d-4aae-8eba-b5dcd5a9db03",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "708c36b4-7a68-4089-9ed4-7639ecf8aa60"
        },
        "item": {
          "id": "32370d93-ec3b-4db7-8511-b541c5774664",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b29be16e-55ef-4877-bec6-c1181a885597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c347f7b-91b5-49f6-ab5d-be8501811e91",
        "cursor": {
          "ref": "9b3151f1-632f-4d1d-a3e4-bc3bcca52956",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a5d5397f-2979-4c4d-9183-120ac8ebe4d8"
        },
        "item": {
          "id": "3c347f7b-91b5-49f6-ab5d-be8501811e91",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "cc401ae3-e8d5-47e2-a854-3913a7726d80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a502e86c-4dcf-40ae-81ad-0f0c2e42a3f3",
        "cursor": {
          "ref": "bccc1ffe-da1c-4967-bb9e-f3ddefec9d03",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "7f10b587-8e4d-42ef-ab46-e1f21059f5d9"
        },
        "item": {
          "id": "a502e86c-4dcf-40ae-81ad-0f0c2e42a3f3",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0886bdd1-e22d-4613-9a55-94be03f2abc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ce7d9b-d0b4-4704-9e05-39e9caaed503",
        "cursor": {
          "ref": "2a0b0a9f-ddeb-4e02-9d4e-00d45f200f83",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "158e24c3-b638-4ce3-9c96-98ef00f14a5c"
        },
        "item": {
          "id": "75ce7d9b-d0b4-4704-9e05-39e9caaed503",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "6e89760e-701e-4299-9ca0-b593c26e17da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "249c2ab4-5781-4d6d-92e7-6ed67f516453",
        "cursor": {
          "ref": "4502f533-8b7f-4a64-bc04-e4febbe66482",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "149f6904-35d4-4992-ae86-4c1e7e157d07"
        },
        "item": {
          "id": "249c2ab4-5781-4d6d-92e7-6ed67f516453",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "be68f344-36a3-4d65-bdb9-d305e454705a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6689a694-c0d6-48bb-b3ee-e82e4b3bf439",
        "cursor": {
          "ref": "bed08f94-0522-4d86-9946-aa17dd176fde",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6259a51b-0d31-4f60-a646-e1b6b9466065"
        },
        "item": {
          "id": "6689a694-c0d6-48bb-b3ee-e82e4b3bf439",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "636e2b59-3428-4086-aa3c-c12a30ff7902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4526ce2-3f64-4a42-acba-945a7482a19b",
        "cursor": {
          "ref": "f9b09a2c-ae6b-400b-87d2-5df8866da41a",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b260c9ba-e008-4aa8-a850-0fd59a519651"
        },
        "item": {
          "id": "a4526ce2-3f64-4a42-acba-945a7482a19b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "be2e4b9e-4af8-40cb-9a16-5189a7194962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf7a6abe-5abf-4123-ab27-f447e3fbee42",
        "cursor": {
          "ref": "50c1c021-7983-41a7-a085-2026f2b8942f",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7e705b29-d3e9-430c-99af-b0a7e3a9acab"
        },
        "item": {
          "id": "bf7a6abe-5abf-4123-ab27-f447e3fbee42",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "503725fc-975d-492b-9f29-627fb786eb6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae4a184-1d6c-4905-b086-12216aaba080",
        "cursor": {
          "ref": "f8a4536e-b761-42f2-9b4e-bcc86ac7b79f",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "257f0cf8-2a6d-414e-a0dc-f6f5f196a786"
        },
        "item": {
          "id": "6ae4a184-1d6c-4905-b086-12216aaba080",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "304da7f7-b200-4abd-a00e-943ed31205b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30317e58-8588-4287-9cd3-7db735e1485f",
        "cursor": {
          "ref": "e2fc0668-e190-4447-b878-4c4d038fbb17",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "696def14-7af5-4760-8cd9-4ae8a5b27da5"
        },
        "item": {
          "id": "30317e58-8588-4287-9cd3-7db735e1485f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1a4ee7e3-9317-4d4e-b23e-133213819e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a106a0-a8f5-403e-b459-f4fe49df34a2",
        "cursor": {
          "ref": "525e099f-e758-4787-96c8-78f5a3c81efb",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "168a3ec6-1349-4f7b-859f-3d1b232d5c70"
        },
        "item": {
          "id": "34a106a0-a8f5-403e-b459-f4fe49df34a2",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ccbfdef8-8fc8-4fe3-a36a-3dc79267f013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82200577-cce2-4816-a989-be5bafb4bdca",
        "cursor": {
          "ref": "e6dd5e6c-923a-459c-a5cf-efe6e22e6806",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "18341ba3-ae3d-4001-84d3-e6e4c6ad9da0"
        },
        "item": {
          "id": "82200577-cce2-4816-a989-be5bafb4bdca",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "eb57ba3a-ae20-4cbe-8a9c-576c18186b2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e48840-27f8-4570-b8d1-a9302ac3597d",
        "cursor": {
          "ref": "51d68297-e9d8-499e-b36a-d978d57bbfd7",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8c60fff5-e70b-4372-9bc3-3c22b10c4a21"
        },
        "item": {
          "id": "b0e48840-27f8-4570-b8d1-a9302ac3597d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "9ba6de67-f705-46f3-af76-5b2aef58a33c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fed1373-a6bb-4cfc-aa4e-7e92d82da22c",
        "cursor": {
          "ref": "35f32916-cf5b-4da2-8596-8eeb59219625",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "577cffe7-3d44-45b9-a1b1-2541b39e2ccd"
        },
        "item": {
          "id": "8fed1373-a6bb-4cfc-aa4e-7e92d82da22c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "4c1200ce-3504-4155-ae53-00d24a21a034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c99faeb-dfb5-4da1-b9fe-908ec7d87512",
        "cursor": {
          "ref": "33d380ce-2798-4884-b16a-94e96eebd869",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "4365a643-2d67-40f3-87b7-04148c877f90"
        },
        "item": {
          "id": "2c99faeb-dfb5-4da1-b9fe-908ec7d87512",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "7ed94c9c-a524-46eb-a014-36f4df9e99d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89c5508-2376-42f8-a73e-b273c9807e30",
        "cursor": {
          "ref": "ecc154ec-c66a-4163-8a47-f80f91b44229",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "cc3f6950-c6a8-4c68-8c33-091fa63f1a30"
        },
        "item": {
          "id": "c89c5508-2376-42f8-a73e-b273c9807e30",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "7f0a46c2-6d01-44ef-af69-c3fa1316fc3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "729adc38-cd98-4023-9529-3e0e48b10f97",
        "cursor": {
          "ref": "16d81d4c-8868-4181-81eb-ba6356b8e218",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "4cdd070a-7492-4422-9d64-daf2f027b084"
        },
        "item": {
          "id": "729adc38-cd98-4023-9529-3e0e48b10f97",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "01c30766-0247-47ad-a4d9-df256aeb94fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4140d16-874d-4d8e-8f6e-b816a19cff29",
        "cursor": {
          "ref": "f64578bd-8f31-4d4f-b05f-c3be91661caf",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "172dab3d-f7cb-4f9e-99c3-59ff258869a8"
        },
        "item": {
          "id": "b4140d16-874d-4d8e-8f6e-b816a19cff29",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "6b235ea6-27b0-4390-91d1-8f5bedec33a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c5aec7-c0fb-49ce-be73-8b942dabebae",
        "cursor": {
          "ref": "feac07c8-3c21-4d21-850f-50ea5b8d5081",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2758214f-7255-40aa-959d-0802f4aee298"
        },
        "item": {
          "id": "f6c5aec7-c0fb-49ce-be73-8b942dabebae",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6b825149-d516-4222-a441-ceb497ffb03d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c8c8f9-30fd-4888-8000-57647d8e38b5",
        "cursor": {
          "ref": "2c131690-33c0-4aca-b482-d6104b184ee1",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e6c9ff87-ec33-4277-b06b-ed31d9421276"
        },
        "item": {
          "id": "46c8c8f9-30fd-4888-8000-57647d8e38b5",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "9ed63534-da30-477b-abee-b8e4090e5c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d38e312-4324-4bf7-a0af-a64205dfd489",
        "cursor": {
          "ref": "d8af2dbe-9740-4e9f-b864-5d28dc87a40f",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "96560107-a03e-4c04-a8f4-1935a6f93cc1"
        },
        "item": {
          "id": "1d38e312-4324-4bf7-a0af-a64205dfd489",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "f58bcb27-ee0a-4328-b1cf-7c1bf56397d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0def4271-f38c-4c0e-ab3d-0daccaae2034",
        "cursor": {
          "ref": "d77a3665-c9fd-44b6-8821-68767ce925f7",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "33f67fa1-f0ab-4b64-acc2-8cd437e47a15"
        },
        "item": {
          "id": "0def4271-f38c-4c0e-ab3d-0daccaae2034",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "03e403d2-c1cf-47d7-a85e-f7b89029a42f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c86b96-1e40-4ad1-a393-5b58b42b8582",
        "cursor": {
          "ref": "30c0f29d-f5c9-455e-ac97-579097de4d66",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "96ac513a-38c5-4da5-830b-f3b07190f8bf"
        },
        "item": {
          "id": "c0c86b96-1e40-4ad1-a393-5b58b42b8582",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c0f12807-538a-4242-9f73-2825e48d9ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "920237f4-2fbc-4a84-80f9-e36bbf75d164",
        "cursor": {
          "ref": "cc77cbb8-a460-44db-9a7e-942fdef84a0e",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "cfdc8e4e-8f6c-4b81-8124-804add920b15"
        },
        "item": {
          "id": "920237f4-2fbc-4a84-80f9-e36bbf75d164",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "01c8bdab-51d2-442a-80df-8a49a3239250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51329204-56ea-4c44-bc59-81a847d9c3bb",
        "cursor": {
          "ref": "a7d6fe51-32e6-4bd9-9234-e5d72f05194c",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "aa0dcc52-5642-4651-8242-2681ab53b55d"
        },
        "item": {
          "id": "51329204-56ea-4c44-bc59-81a847d9c3bb",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "062dbf9a-4885-4a43-8fbd-dd3500fac44a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa0a9447-7d76-4163-991d-5a21353c1635",
        "cursor": {
          "ref": "d0fe46d1-31ac-4291-8cc0-09c6cd4e489d",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b0e7556d-f438-49f6-8902-137d2970bbef"
        },
        "item": {
          "id": "aa0a9447-7d76-4163-991d-5a21353c1635",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3833c959-7770-42d7-a9ec-0207f36e74ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb7fe2e-08ed-4fca-9513-095542d3787a",
        "cursor": {
          "ref": "8e250079-74b3-4a48-8286-2bc55fcc970d",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a6557d41-03b4-49cc-83ad-d0be93fcbff3"
        },
        "item": {
          "id": "6cb7fe2e-08ed-4fca-9513-095542d3787a",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "5d0d13ee-65f6-4e0c-b75f-4157f78f7748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e8a084-5fde-48b9-bebd-64b0f652fc43",
        "cursor": {
          "ref": "926ecef8-faac-4a46-a02e-bae5ae4e18d7",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "1b65e56b-3b0a-4cb4-afc9-e9cef73f98de"
        },
        "item": {
          "id": "53e8a084-5fde-48b9-bebd-64b0f652fc43",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b5b83dae-8b7c-4b4e-a54f-11301e2d3001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6197f4e3-35e4-420d-b8bc-9953bc274238",
        "cursor": {
          "ref": "2b9abe91-e526-41af-a622-70ce9dbb2fa3",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "68055e05-a330-46e1-a3b4-8a2a70f17ba8"
        },
        "item": {
          "id": "6197f4e3-35e4-420d-b8bc-9953bc274238",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e2d138be-1552-40d8-bd9b-ef13ed15acfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46957427-9f81-42ae-bf1d-a41fb2714fc2",
        "cursor": {
          "ref": "819b5fab-15b7-4bc3-972f-6db3c0239ed9",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "fa88eabf-c4ef-46d8-ba1b-aa5a2759b7e9"
        },
        "item": {
          "id": "46957427-9f81-42ae-bf1d-a41fb2714fc2",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "85fde327-385a-4066-a3a1-8ecc44f4b69d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8960c82-eb84-4b26-a0d3-5278efd37077",
        "cursor": {
          "ref": "4600a765-3502-41b6-92f6-ad36603861ee",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "bda7eaa6-1b39-4b50-a76f-fd3caba65d80"
        },
        "item": {
          "id": "f8960c82-eb84-4b26-a0d3-5278efd37077",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a38db98f-047f-404a-88f2-0712e3a850ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83a3d56a-5751-47d8-9c05-c1281ab44163",
        "cursor": {
          "ref": "cc191ac8-9037-48d0-b196-709933238e4e",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "fc52ac04-a816-4e43-b312-875a879ef5e3"
        },
        "item": {
          "id": "83a3d56a-5751-47d8-9c05-c1281ab44163",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "9b832283-bd6b-41eb-836c-d37c267f8655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b307bac-60fc-4ced-85c8-11e53a63a6e9",
        "cursor": {
          "ref": "371ff422-f586-4cdd-b1ea-d1f0e350954e",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "dd0540c2-ac33-4f84-badb-af4083dc9d63"
        },
        "item": {
          "id": "8b307bac-60fc-4ced-85c8-11e53a63a6e9",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "95b21cfe-a2f4-4379-8844-1dfc0f73fcf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19308821-443e-44fe-bf43-f393767458b3",
        "cursor": {
          "ref": "db151522-e184-4790-8bdf-22ce392454af",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "072cfc96-ce9e-492c-8724-82071ff470d7"
        },
        "item": {
          "id": "19308821-443e-44fe-bf43-f393767458b3",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "970c640e-66c6-4b79-b348-3e790bece481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32007324-a4ec-402b-8b8d-c41e32b0bf1f",
        "cursor": {
          "ref": "bb41e146-2367-4e98-b75f-06073405a4cf",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f9b3c858-265b-4b0e-b006-c5c1667a3318"
        },
        "item": {
          "id": "32007324-a4ec-402b-8b8d-c41e32b0bf1f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "1c2eb724-3446-47ec-b075-dd4a8c486bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da01c76-d4c2-49cb-ab0b-ed836cffd315",
        "cursor": {
          "ref": "cb1c910d-a822-474e-96ef-8eb5c565bfb0",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "593b57db-92e8-4c24-9201-3c94306da51a"
        },
        "item": {
          "id": "0da01c76-d4c2-49cb-ab0b-ed836cffd315",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ec7ec0d8-8ac1-4264-9e59-1977f9421f93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aeec5b8-8681-4579-a0e8-9d3ff5dca888",
        "cursor": {
          "ref": "c53f153d-bfd5-4fbf-ae3c-11a7f2ae7ff2",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "28e12fd0-57fd-4662-a2cd-ae24453a739a"
        },
        "item": {
          "id": "4aeec5b8-8681-4579-a0e8-9d3ff5dca888",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a534ef37-33c7-4958-ab15-0c375a8dfe48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52686414-3b06-4ea6-bd0d-de0f5cfcc40c",
        "cursor": {
          "ref": "ad1a4ee3-293e-40e7-b0f8-8462b1e6b13c",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c8e2ab5c-f9ba-42a4-9f5d-87a99ef944fb"
        },
        "item": {
          "id": "52686414-3b06-4ea6-bd0d-de0f5cfcc40c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "93a3d109-6983-4836-9f4f-7e2ab27bd6d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ad1d5e-644e-415d-803e-62f306ed2334",
        "cursor": {
          "ref": "908e6b8d-078a-4707-816d-c41118cd3a89",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "3cda2ad2-909a-4415-8f3a-9f9fc8674642"
        },
        "item": {
          "id": "26ad1d5e-644e-415d-803e-62f306ed2334",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f7b76566-fd2b-4708-8a02-66a8cae62c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63baa63c-cc51-470e-927a-ce99900f0b0b",
        "cursor": {
          "ref": "68574997-248b-4ef8-9152-49b54750f339",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "2e55644b-9f8e-4d02-ad72-0b39dfe825d5"
        },
        "item": {
          "id": "63baa63c-cc51-470e-927a-ce99900f0b0b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "75361190-abd5-45a0-853d-c7add2bcda53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de895477-0633-4ed6-8aa9-0acfa280a2e4",
        "cursor": {
          "ref": "7420737a-8969-4bb1-8f6b-692712b7a5c9",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c494fdb0-1766-4cbc-99cb-6b61aebdb810"
        },
        "item": {
          "id": "de895477-0633-4ed6-8aa9-0acfa280a2e4",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "11a68df2-1666-4613-beb6-0b64548aa9e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00334355-28b3-4cdf-bc45-86e3e8cec7c9",
        "cursor": {
          "ref": "592ce2e9-f99f-42dd-ac11-624da63650cb",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d737839f-9776-4ada-99fc-d83e6558bc72"
        },
        "item": {
          "id": "00334355-28b3-4cdf-bc45-86e3e8cec7c9",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "1f34bb3e-9f43-4d6a-ba7e-a0da7fad17d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "095cc359-5c96-49b7-b829-e16e7ea1f1fa",
        "cursor": {
          "ref": "b02db27d-d745-48f7-99f8-98726fdcf0c9",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1224321d-0658-4f77-b3c7-6fce3b074006"
        },
        "item": {
          "id": "095cc359-5c96-49b7-b829-e16e7ea1f1fa",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2eb0c265-fdb4-4d07-ab6f-d9cc474a2c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc07057-c700-46a9-b449-9cf7872f06e4",
        "cursor": {
          "ref": "566ee7de-8a2f-4969-b340-22f4a01a9e3f",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d8bcd396-9987-4159-9e83-e69aa6a71f66"
        },
        "item": {
          "id": "7bc07057-c700-46a9-b449-9cf7872f06e4",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "ae831627-85bf-462c-b804-72f5125f9d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1abdb8a-6fb6-4159-b710-5b5f3bb40d32",
        "cursor": {
          "ref": "cdb2b0d2-4375-4917-a5d5-eeaebd275cc9",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "5994fdb3-72ec-43b9-a600-0bd6aef66a0a"
        },
        "item": {
          "id": "d1abdb8a-6fb6-4159-b710-5b5f3bb40d32",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "65faecb7-19f8-4b01-9b15-95d81f645637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc0fb2e-3230-4bf8-a0b6-aae7067c63ea",
        "cursor": {
          "ref": "9fbbdc7d-7f03-48c8-b8f4-68e8c02ddffd",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "05b36a52-544a-4720-b0c4-3ed3d5c8bc75"
        },
        "item": {
          "id": "8dc0fb2e-3230-4bf8-a0b6-aae7067c63ea",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "25104f14-3f01-4092-bb0d-c5fa5e1e55af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e76c28-f68b-4b67-b1a3-36d2186bf758",
        "cursor": {
          "ref": "7af41ec2-93f6-4a48-8cc3-009ccd97fe5e",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "27ea87fd-d47e-4dba-a01b-e253e79a8038"
        },
        "item": {
          "id": "08e76c28-f68b-4b67-b1a3-36d2186bf758",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "2c8e4426-ea60-4158-a553-7290abdf03ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f80c1e5-2deb-4710-9868-4ceb881af8e5",
        "cursor": {
          "ref": "26663dff-9bac-4245-b5f2-37c07dfccd52",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "bb799798-54dc-4725-aadc-dce2edf427b5"
        },
        "item": {
          "id": "0f80c1e5-2deb-4710-9868-4ceb881af8e5",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c0141450-94fa-4491-8482-ccc61f8f024a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f5b9c5-017b-42e3-b589-f4975b6558a4",
        "cursor": {
          "ref": "b73f3683-9c91-4a8f-ab9f-8b739d9e59f8",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "47c1b9d5-3a75-43f1-af0a-65308de48445"
        },
        "item": {
          "id": "f6f5b9c5-017b-42e3-b589-f4975b6558a4",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f0268a75-bd48-4161-bbc5-a7f2537a719b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "956827a2-7c9f-489c-b8de-d9e7489ec258",
        "cursor": {
          "ref": "e208d168-e0e5-485d-b15d-aebf8bf3094a",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5c7ef1a1-4b27-492d-8865-6d2252a92b54"
        },
        "item": {
          "id": "956827a2-7c9f-489c-b8de-d9e7489ec258",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "798f9e19-b4d5-47a1-9d31-0c1122976012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d7c920-c86a-43bc-851f-14a9fc4e15ae",
        "cursor": {
          "ref": "eb174f19-ef73-408a-b5a7-96691dfea0a9",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7b1dd45f-10c3-4289-8a50-18cd3799eb35"
        },
        "item": {
          "id": "a3d7c920-c86a-43bc-851f-14a9fc4e15ae",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f20d0885-fc12-4136-9d0f-b211357e162f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c35331-7cda-4e21-9e08-664ebc271274",
        "cursor": {
          "ref": "4af36c92-616c-41c2-8af2-f5c24b2a95fb",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "abc23980-1448-4f52-8898-681f945732ee"
        },
        "item": {
          "id": "60c35331-7cda-4e21-9e08-664ebc271274",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ae3e0639-d8ef-44c8-abfc-751b6ec5b1e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "566cb294-7f90-4445-8606-548f5081c75b",
        "cursor": {
          "ref": "c5de3104-0117-4b48-a281-6940328095bc",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "e04b2142-3ab9-41a6-8566-9803e44923db"
        },
        "item": {
          "id": "566cb294-7f90-4445-8606-548f5081c75b",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "0e33b196-62a7-4d6e-a3e2-24e53a734667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beeb2aeb-f9b7-499d-b7a5-11189581dc3f",
        "cursor": {
          "ref": "e1c10b1b-cf20-47d4-8dfe-848aebf65601",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "7048b449-d1de-4d90-a36d-21327e03eda4"
        },
        "item": {
          "id": "beeb2aeb-f9b7-499d-b7a5-11189581dc3f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e13e2ef9-80a7-4986-9c93-b6b5e9032bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "429b0d26-973d-4f00-b3b6-22ec7fd532c2",
        "cursor": {
          "ref": "3a3da6b2-2e32-4345-bf5a-dfdee4195822",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "f986d200-981a-41ee-a833-7e296c77b04e"
        },
        "item": {
          "id": "429b0d26-973d-4f00-b3b6-22ec7fd532c2",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ba8782a2-f446-473c-8f1c-639f326c5d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2edbfc39-95c8-4a81-b83d-455e9f91a74b",
        "cursor": {
          "ref": "f0f055b3-d960-48a9-86c4-01c9a8487847",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "e06cfb3b-821d-4be9-8174-633cfe1dd33d"
        },
        "item": {
          "id": "2edbfc39-95c8-4a81-b83d-455e9f91a74b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "cf5ca090-c2ad-475e-bd96-45ef6f3915a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "345c6593-2ea5-4e11-be3e-a7982d62853c",
        "cursor": {
          "ref": "54baf565-e90b-4b28-8db3-87daf5e24043",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "895b940b-593f-4e78-b1ed-8c72f14e7ba8"
        },
        "item": {
          "id": "345c6593-2ea5-4e11-be3e-a7982d62853c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "3028685b-4bae-4659-8dce-8528d928ea7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f819da-a7e5-43f5-9970-04325818839f",
        "cursor": {
          "ref": "73c4503d-df7d-4a37-88e3-5180027ccf6f",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "1f9a2fb0-87cd-4202-b638-4ebece1e70ea"
        },
        "item": {
          "id": "72f819da-a7e5-43f5-9970-04325818839f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "93630c45-3ef9-4454-ac1c-a6797de6e155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c59dad-aa30-4f82-a31e-bd2839262e39",
        "cursor": {
          "ref": "8f48252e-df40-429b-b7fc-4c27c3720e3d",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "8f7d6b24-2119-432e-915d-95f3e62c5c7d"
        },
        "item": {
          "id": "54c59dad-aa30-4f82-a31e-bd2839262e39",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "0c72f323-e7f0-4fef-850a-d14d095da6ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee86fa2e-3407-4f7a-90ed-abf2fd47793b",
        "cursor": {
          "ref": "2b638a16-9c82-463c-ac5e-458bd845cabd",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "2b9b9286-813b-4440-b016-9d252680ddca"
        },
        "item": {
          "id": "ee86fa2e-3407-4f7a-90ed-abf2fd47793b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "1f5211f2-cbf2-4cc6-95f2-a4f3cfe219bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb7551c4-e33b-41e3-b2c3-b025e54b2c3f",
        "cursor": {
          "ref": "eac59966-a873-4a8a-89a1-73cf9fe85804",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "aa4bec8c-959f-4efb-baf4-0fa36c125d90"
        },
        "item": {
          "id": "fb7551c4-e33b-41e3-b2c3-b025e54b2c3f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "8c80f397-2422-40ad-ba66-f1b0328bd6c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "562685c0-72c0-49e4-bd90-c292ae6cf063",
        "cursor": {
          "ref": "83546656-7c7d-471b-9337-bfabcd5daac3",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "d04a6bdb-1f68-47fd-bd04-5379f0b3af38"
        },
        "item": {
          "id": "562685c0-72c0-49e4-bd90-c292ae6cf063",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "abe4daef-582b-451c-a65f-2fdbaefc585d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbdeca33-3b7d-4fdd-9fd1-bf744e17e07b",
        "cursor": {
          "ref": "f319126d-b6a0-422c-aef1-85b855022ed8",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "184b4faf-abba-4fed-8d51-d8ad0ede8d82"
        },
        "item": {
          "id": "dbdeca33-3b7d-4fdd-9fd1-bf744e17e07b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "0798e91c-462e-4235-8ed6-410046cc5d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f368497-ff5d-4957-bc3a-17c7d0b81947",
        "cursor": {
          "ref": "f40a13f2-c13f-4e84-b698-1f994b9d002e",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "c52ed676-30b7-4af5-a549-ed87aa9d767b"
        },
        "item": {
          "id": "9f368497-ff5d-4957-bc3a-17c7d0b81947",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f7c24bd7-b1f5-400d-8a23-5c857529329f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "645b43ab-78df-423e-af45-19df30a5ed97",
        "cursor": {
          "ref": "4edc58ce-9786-456e-81fe-646ffe3d51b6",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "016e2044-1311-4375-8610-bf0b1c75ff81"
        },
        "item": {
          "id": "645b43ab-78df-423e-af45-19df30a5ed97",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "70dc3c4f-c418-437c-ae00-c162f6a99753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d40a4c8a-81b3-4d68-aa67-b74fbf5fe01a",
        "cursor": {
          "ref": "6f2454fb-8608-4d1d-8575-4c4e7cfa37cf",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "d14e4179-a5c8-4f7f-aeec-2e9f32a95682"
        },
        "item": {
          "id": "d40a4c8a-81b3-4d68-aa67-b74fbf5fe01a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "99088ee8-b39a-4311-b5db-06d68d2f1de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ff76bb-9de6-466f-8008-211edc551169",
        "cursor": {
          "ref": "74ebdc5e-99b8-49ac-ab7a-b3a1f7fb1d9f",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "988693ba-8c55-4e02-9d06-c3e1f39a2c1d"
        },
        "item": {
          "id": "a6ff76bb-9de6-466f-8008-211edc551169",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "15c45e55-5b2b-4a2b-882f-516be9a3b0fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccff7133-7309-41c0-b4f7-441cda518d71",
        "cursor": {
          "ref": "3c6a9146-103c-4be6-b839-405ab0f2781a",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "4bd5fea8-0c24-4237-a813-7382d8cad002"
        },
        "item": {
          "id": "ccff7133-7309-41c0-b4f7-441cda518d71",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "c78f6f61-302c-44f7-ae15-e87b135c6aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08041ad0-fccf-4cca-b3b3-769c8d76f936",
        "cursor": {
          "ref": "1a63ac01-a5a6-4649-b7b9-76b7f05caa7a",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "e37cf497-27c0-4a5b-bbb9-b56206215048"
        },
        "item": {
          "id": "08041ad0-fccf-4cca-b3b3-769c8d76f936",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "494bc6e9-e0dd-49cf-bbee-1664a88c876a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0641696-64bd-4949-9a6e-9906b969835b",
        "cursor": {
          "ref": "7c68eb52-9dcc-4cf1-9489-b8b53c8a016a",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "9d49b7be-f32a-4c74-bd96-2608730b82e7"
        },
        "item": {
          "id": "d0641696-64bd-4949-9a6e-9906b969835b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "61faf569-856a-4660-846b-e6056663a967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8540150c-5f22-4aed-91e3-a18f59240737",
        "cursor": {
          "ref": "034818f1-87d6-4ca2-9bde-6969889a4057",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "b8961433-32b5-41b0-a9f9-16eeb912486a"
        },
        "item": {
          "id": "8540150c-5f22-4aed-91e3-a18f59240737",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a4ecb7a4-8c54-4da4-9a63-ace5f6076dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b20dd3-815c-4df2-a795-a865b4140e24",
        "cursor": {
          "ref": "f7409ef6-1a4f-49a7-beb1-06178afb18f8",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "9a3b400f-7ab4-4bca-a79d-a4d6221ff677"
        },
        "item": {
          "id": "51b20dd3-815c-4df2-a795-a865b4140e24",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "1f315ca2-0177-4ca1-bf26-3d34eb4f8049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d51d6c-eff4-4af8-afb8-fe659a681bf1",
        "cursor": {
          "ref": "922e61d7-876e-4702-aadd-41bc78454eee",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "281ff612-b634-4788-aac3-62fde48fe652"
        },
        "item": {
          "id": "e0d51d6c-eff4-4af8-afb8-fe659a681bf1",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "665cd982-a12a-4d27-b85d-61927062e675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b5d3ae-a8f6-4c58-8d01-a02785463e2d",
        "cursor": {
          "ref": "6e0dc803-9530-483a-a530-7af64ad6c4e2",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "c907835f-6a8b-46e0-8015-e5660c934f83"
        },
        "item": {
          "id": "e2b5d3ae-a8f6-4c58-8d01-a02785463e2d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "39b023c5-f5fb-4478-9ae3-2dc5101949c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad4eb0e-39e6-4721-ac5a-118cc54e602d",
        "cursor": {
          "ref": "2786ffe1-5cfb-4bf6-94f0-614a3ff9d8f6",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "7a7a023e-7063-44a4-a9b7-3338908aac83"
        },
        "item": {
          "id": "5ad4eb0e-39e6-4721-ac5a-118cc54e602d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f6b3a5aa-3b04-4c0e-b9b3-2fe48ce08cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae92ac8e-6138-4d96-9070-ec1e8592afce",
        "cursor": {
          "ref": "c31bf64e-54a0-41ee-a1c6-82ce700ac31b",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "ba09cbd6-68af-4368-a7d0-570438c05404"
        },
        "item": {
          "id": "ae92ac8e-6138-4d96-9070-ec1e8592afce",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "228722df-80f0-4a8b-9bc7-5ac16b7c26e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "147361ec-cc51-4811-9d17-6937f5e5f660",
        "cursor": {
          "ref": "326fa513-d7e6-4737-8d21-1a7850d8f85f",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "a1a588f1-4bcc-4deb-a434-340aae5051cf"
        },
        "item": {
          "id": "147361ec-cc51-4811-9d17-6937f5e5f660",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "2175fb92-5ea3-44c6-8915-bf82d9f1b50c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc5b170-eb61-4ab2-94bc-b22add61a26a",
        "cursor": {
          "ref": "ce459a57-24ec-42f7-bd70-16deaa1c9ef0",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "7699508a-8866-457f-b2d1-2ba654c73f7a"
        },
        "item": {
          "id": "ccc5b170-eb61-4ab2-94bc-b22add61a26a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "be5f82ab-4178-49e5-8fd2-5d692893a056",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 85,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6269ae9-83ea-4bf5-befb-037284bff65a",
        "cursor": {
          "ref": "48642016-2a72-42b7-b3d7-3f09f28fbf63",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "8411a1ed-6213-4c3b-8440-3aa7e374391f"
        },
        "item": {
          "id": "b6269ae9-83ea-4bf5-befb-037284bff65a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "0d4f1419-6317-4d9f-9998-c50dcc668505",
          "status": "OK",
          "code": 200,
          "responseTime": 170,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "102e2e29-74db-46cc-a850-df2c38b0bd28",
        "cursor": {
          "ref": "7410c0b4-17e0-40d5-b987-fbac3f6486db",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "216a8fd6-257a-4368-9403-9b9eb85bfa2f"
        },
        "item": {
          "id": "102e2e29-74db-46cc-a850-df2c38b0bd28",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a0678398-e119-4f07-9b08-66c4d1490328",
          "status": "OK",
          "code": 200,
          "responseTime": 1528,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d26a5a6-73f8-4139-a2ff-b112ab223395",
        "cursor": {
          "ref": "5a227e2a-85a5-4f5d-940c-2a933e09b7df",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "931b5661-91ea-4d19-87c9-fa6d77df123a"
        },
        "item": {
          "id": "9d26a5a6-73f8-4139-a2ff-b112ab223395",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "1538d2b0-62e8-44e9-9ee9-877e18a3a4f3",
          "status": "OK",
          "code": 200,
          "responseTime": 1532,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a10eb4-72df-46d5-8d53-01d1df6572bf",
        "cursor": {
          "ref": "16fc4acb-524f-462e-913f-b6fc629bb1f4",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "67e0f8c7-745e-4510-a685-4677ef11b90f"
        },
        "item": {
          "id": "65a10eb4-72df-46d5-8d53-01d1df6572bf",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7c280311-91d2-40cb-9140-825af922f18f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 82,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a10eb4-72df-46d5-8d53-01d1df6572bf",
        "cursor": {
          "ref": "16fc4acb-524f-462e-913f-b6fc629bb1f4",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "67e0f8c7-745e-4510-a685-4677ef11b90f"
        },
        "item": {
          "id": "65a10eb4-72df-46d5-8d53-01d1df6572bf",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7c280311-91d2-40cb-9140-825af922f18f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 82,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e1e21f-f2b0-40ce-bde2-bcda29e5ecdd",
        "cursor": {
          "ref": "8d659a49-118e-4d84-89da-acf898a7058d",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "fc2af725-3b4b-42b0-8771-299ec55e490c"
        },
        "item": {
          "id": "67e1e21f-f2b0-40ce-bde2-bcda29e5ecdd",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0bd7c36a-aa69-48b4-a625-b73002821375",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407e9dce-fdce-4cfb-a0ed-0435dcbf5e0e",
        "cursor": {
          "ref": "4477369f-f0f6-4bc0-900f-97ce54b258d3",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "de5f7b40-6977-4375-8ca2-768af52de164"
        },
        "item": {
          "id": "407e9dce-fdce-4cfb-a0ed-0435dcbf5e0e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "508a0335-9f92-4adb-a32b-ffd3681e0073",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}