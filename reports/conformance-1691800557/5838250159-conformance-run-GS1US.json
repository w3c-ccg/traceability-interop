{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "007724e9-52fb-4ce0-8f1a-b7de2373a988",
        "name": "Clear Cache",
        "item": [
          {
            "id": "7113fa76-66e1-4b1c-a53b-08b443f5bea7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "584bf678-f39c-45cc-8e93-d8f74a554f8c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f83600fe-a53a-4e2d-8379-c05e62d1bf66"
                }
              }
            ]
          },
          {
            "id": "decdaa8b-4d5b-436b-b653-7a0cad8d6225",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "733d304f-dcb0-43c8-a2fd-43fc3b103dc5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6068ceed-50f2-429c-840f-f94ab5b19f94"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "3bdca9f5-8e48-4a31-b311-0b25b1ad1077",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "cdd9129a-265e-4f83-9872-4d394226365c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1c12fa68-5a0a-439b-b719-ae7c33ccac17",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "57e9e55d-820c-45e6-82ad-45c0a348c332",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9ea85b81-665c-4011-946d-9dfbd0befb7a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d0909fd2-700b-4ad7-8d5e-18a7140ad310",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f1aa566b-9c01-4055-b0dd-b92034b25247"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0b086208-3d32-4a43-adf5-5074d80a7f4f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d4125922-4464-4b47-a888-828ff85d5e4e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e830578a-41c7-43e0-b455-fd71c20512c8",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e18a7c8a-67c1-45d5-9b95-020432f2e6a4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "da71bca7-33e5-47f5-9157-166b71484866",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2e09d721-6f1b-4170-a4ae-bec84a2bfba4"
            }
          }
        ]
      },
      {
        "id": "a0e11839-7603-4ad5-b24a-1821ec3456e9",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "1ad8ae4a-faa5-4a08-89fc-3170a7d609fb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c7562b5d-4a89-4137-8468-03d3dd75ed0a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f5cc485a-f4af-4e24-a097-9a1988c63cc1",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcfbaae2-396a-4f13-8a21-70c7b1d79f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4dcee701-6a45-4a12-b600-a64275312c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ebcea7-951a-4a82-a19f-04c6df0de3b7",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ab2636-5003-4d68-a91d-80701c8c7857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "215e4ffe-27ff-4db2-a8e7-e0bdac2d0dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d439739-c6cd-4b1a-b92e-49423373360d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d15aac-5eff-4685-940e-a0b6d5114043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "095d9611-5617-4104-827d-47f1d5045ae6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5a0a4330-2884-42e2-af85-6380580fbe49",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "841fb6c8-c939-47fb-a137-e7b2c971e5e5",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd495c5a-d8ee-4bfa-9868-9e4c60ac2c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "901d3b9a-8da6-4cbf-8641-25fba3931b0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb55f1c-2146-4357-8223-7c533dd86e94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ea6059c-7445-4f73-8d60-715c4f525a6d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4ede2044-a87c-4aea-8600-14630668542e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "77305b7b-1dbe-49fc-97d8-376def2d5822",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a54c8f8b-e748-4b53-95da-a0f7d00ceaea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "4f73f595-f8e4-4a6a-bad9-fad61dc11728"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4029100f-b8c3-4d1a-a940-ecac59fe49eb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "949fefa1-d503-4796-86a0-5e6e395ae959"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e760b664-2519-4a6d-8fa7-0d652af2963f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0ae75201-5fe6-42aa-afbc-0cc5f88e15f8"
            }
          }
        ]
      },
      {
        "id": "b5da8f4e-7e51-43b1-b744-9f9afa309f15",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a4806341-d6e2-4d23-8a36-44479292ee26",
            "name": "Negative Testing",
            "item": [
              {
                "id": "91c6692e-dc7d-48fe-ba1d-85ae85744254",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "5e79574d-645b-4180-a19e-22c10447d54c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8a8781-7296-42f4-87d1-48400b804da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f574dd9f-8956-4455-b7b7-e95957089378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdfc8ddd-a933-4896-aafa-a42136287893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c290b14-cf8e-4ef8-b848-e4c78205ff9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55db229d-5549-4a71-92b0-6e9b88e3b0b8",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b6a1374-e569-4d32-b659-8e7bd69023f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f10c1fa-2ec5-4618-8b21-1a7676117bc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "511d8cff-ef20-4a89-a11b-1b80e2a1a5da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7473da9-c3d4-4e6e-be23-7b1a80495fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04b470a8-91ce-460b-a87e-e1ede1ed37eb",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d9644f9-5b09-4099-9817-e800bdffad76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8de11bee-2418-43f1-83db-72ac01359bdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51504e40-975b-47d2-844e-7acdab300165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0786841a-d4dd-4120-8a54-5dbab5fbdd21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27ec3ea5-fab6-4a0d-a88b-5750462007e5",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b606754-47fa-4e08-ae8a-681986cbd02b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1557b4a-06b4-4168-9be6-be39677f4c5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d471fa45-e356-48fc-9554-02526d9b2158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0de7ae3c-3a55-4aec-a7a5-8a25965e0798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1abb028-c503-4cbc-aaca-fed873786f6e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda24cb5-15a1-47f4-8379-4954dd5f1c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b89cb08-dc7d-4489-81f0-40596f591b61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4c5c623-a508-4bb5-82cd-c81485419bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c6a69d2-6a74-4283-9784-9495691ac771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d8ba0bd-8b6f-446e-a4d6-7a7ecbe396a1",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d62856c-db82-413c-8a0a-d26c29ea9b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c97ec673-2648-4347-a303-6c788d5b5d07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dfdb5de-4df5-497f-bd21-d4f02e254d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d157bd2a-01ab-4063-b276-b5e7501916ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff5e9356-5076-44db-8497-0fd509094467",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "822b9ff4-61d2-47c1-960e-099927f1ab4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "677a502a-4132-492c-ae5a-ca7f842bf202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d224147d-a695-4a37-b1bf-33fca9b44b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "228b0282-7a38-4c32-9f39-133c85a93989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c10c62-6427-4a96-8b30-81f24c514312",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c934076f-a2cd-4641-8c77-70158b2bd9ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88186d3d-77b6-47c8-b423-63741b666968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a564aa-2c76-4567-a46f-773a2dfd21e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc8bb50f-d8ba-4b4e-9996-a8e129a792b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25bdd90b-2cae-4e4a-973f-c75ec31803da",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "488ac54a-a446-4438-bf7d-bbb017c7b892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbcd2045-8ff5-4970-a5af-c1f30ebd9046"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9a822c9-e93f-4389-9d90-20b1c9fb07f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78828c0f-12bb-40b4-a6e9-7da74d466c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce07484-560c-4b27-9eed-e2e698fbc3f6",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43fc968b-3dce-499c-a8d0-91cbe5bbc30c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c541d799-8db9-4e06-976f-156d40ab9290"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f5cc06-7f10-4066-9d02-717da44160a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6a4bc33-a4ae-4f4a-986d-5f6ac5295b18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b42bf58-749c-41db-8242-dbe4202d7fdb",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bad3c6f-3c7e-41f4-beb9-9d34230f758b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca8a70d2-7c0c-4935-8620-3c7c5f4bbf0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee99ed5-2120-488b-9efd-144bf0aadce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95973c77-0011-4099-b347-281e3aa2cabf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b32c63-e1f1-475b-9d97-ad7865456e95",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a97a03-6f3f-496d-8fe0-ae61fc4bf724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e7cba35-7455-4ec3-849e-e800ccef575d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41c3ea1e-f92c-4ec8-a90b-6722f01c5c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a85ed273-18f3-48fb-b8dc-3076f2ae0825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdca0f7a-2594-4ef8-a336-f7e7a0ace89b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2668f0-600c-47df-a9d3-6c4171900af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2561544-d31c-4c62-b549-6a5ee69e78b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5ad5fb-39bf-49cb-ac5d-d026e1092ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ddec3a8a-7965-4c0a-af33-7de1d0546d9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eacc558c-5e1b-4cee-8703-74bb0008c691",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f43933ed-c27f-44ef-9299-25cdda211619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "271020f2-c81c-41ae-9f4c-5b8d64f628a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8206312-e3c6-4d76-bcac-6d623a65baf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00dccfe7-3ad3-45c3-8a35-dc15abd00e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e60a4d-f16e-40a7-b829-27075cce7ba3",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33019b90-f168-499c-97f1-7bf8ec57ab52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c207e34-122a-4d8c-a7aa-227b1df03023"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bf02c40-488a-4f1c-bdab-129d1e841898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6506ad64-9cc8-447a-b96f-c828678705c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c70542f-e042-4b9f-ad05-e14cced56762",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4071802-4454-4218-8094-6cf3ded58d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "790af6e0-fee0-4173-9550-3fac2efa83ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f59f1c2f-a213-46a1-b534-91c8dfae0996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98c38d55-8678-4a86-a966-5a7c6491ac39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29afa405-e407-4c55-bb79-aec6dbc5d566",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f543263-5d23-4364-8943-723e41baa4b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa7b617c-8d48-4023-bde9-fb04bfd2f658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b5101f-9710-482b-9e7e-852a21765d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7bca7372-adca-4be5-a4e3-d50f3f262e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a9cf674-17c1-4df8-b33c-7028f24c835d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c55ed0e5-37b7-4099-8356-a4cf4da461c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5911fcab-0117-4365-a007-7e99ab960c1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5026f2ca-345d-4bad-a44d-d284f1c32272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4d671a1-42d3-493b-933f-96ea186dad7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8036ab08-ca29-44bf-8c6f-1509d8263018",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e1ba11f-8879-425f-b601-8cc63840844a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6fd2ea4-b060-427a-8177-e6199cd0e8da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd7fb7f-ad10-4e40-b279-9ff547855ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe21c940-f1c6-4d62-afc2-097f9a784518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d44110-2a0f-4113-89ce-269bb055bbc5",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0199cd1-6227-416b-bb93-2ed81b93b174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f0a628e-fbef-4432-86ef-17bde2608015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f57d61b-5bc2-4250-9f1a-d8cc5f4e4b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7cba912-8a1f-4826-b406-4f16017166f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a738d96b-6dca-40e3-bc2f-7afc0043fa2a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14322db-98ef-445a-bcdb-7c059be406cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8922d41d-52f2-4d27-a49a-da59e61bfb66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f3ab25-14c8-48fc-9e15-37313744d042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d9de160-4f9c-44ab-92ae-7ec7f6fc632e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ad64f0-5633-45bd-b12c-ee3c8700b2f1",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0846d5fc-18de-4a6d-ad7c-fd137cdec8e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04841ad7-ee96-44b6-a110-6897f10dd9d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ac196e-1324-4600-8af9-442dbf85cece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0f72009-0fe3-46c6-a288-b4e4e0a07b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6564537a-51f3-4f8e-ad66-23b671354257",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ddbf8b6-e171-408e-ad39-ad1c7f57ccea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48746b26-f706-4004-adde-7bbd408a4875"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43854561-bc7c-45ff-857c-9083ece43b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d26a8a05-db48-4f06-831d-906f94f1bb05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca057757-f159-4088-bd39-ee1088506035",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7edfc0a2-529b-444e-98c0-ee12468474cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e14dc466-cfc3-4103-aae4-5ad0356dfce9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c401c62-feed-499e-bd66-9557d9daf8e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0913b796-f328-47bd-b27a-fd1526cbf485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e626d9b-60a7-4b53-9849-4c9e9102baf5",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "996eea96-ef96-4f2b-ae85-0c97ef639f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15f38afc-9ee7-434b-ab0b-ff2b64b2dd1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b873d9dc-b784-4931-ae47-a7be028e9611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc831961-88ae-4659-a0ca-d4288d46f2ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24a0f66e-8ecf-4a90-9197-dd4806df5aa1",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7cfe8f4-2841-410c-8e01-3be42fc65a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b88f4d7-d5ef-4269-bf2a-d1673fb2fef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ce5e83-933b-4813-9966-d2ac0ece2eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "26e00f2d-b087-4a28-ab7a-5da14dde30fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cfd1a3d-0fa9-4875-a081-7b281ea13f60",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "055457ba-fdfa-4512-8212-2c15180b88d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9417194c-1ab4-4fd1-b36c-c1c945e72680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41c6dc79-1076-4a67-bc55-3ee2e6d831b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff7dd014-f644-495f-9c41-691fa622bbce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f228ba2a-1dc5-4fec-9d81-2092c8d271a0",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c02dc7d0-84b6-43d9-9de2-2beac79da590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85589b0b-a6f1-4a5b-895c-1f73c64e786f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "651d3a46-80b1-4163-8523-8c2f3cb9481f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdeaa800-bb89-412f-a6fc-abee59c3632b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a86a2215-3b3d-4412-b295-b52410be3e31",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3acea9e-605d-4264-9e57-c239f62c8cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ab100d2-1808-40fd-b426-e76a441ce088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a9cebee-c5a1-4d37-accc-dfb31ef7ba99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e6a1715-a6c7-43b7-8477-1248a3ba7644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2f6606-0e3d-4be1-8ae7-88e310e396db",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "991b869f-46a6-4c15-90b1-df6ca3733516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abbbb423-49ee-4cf8-8983-25ae79c143ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c53f2c1a-3110-4264-81b3-2ffc7a0ab0d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "31f3bf32-7a75-4fac-8e1b-454cec3e9d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47968ff7-fb27-460f-991a-e6b9543c15e5",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62384fad-bf6b-4254-bbc2-ae7665a5c4c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "898f98fd-dfc8-4c29-976f-e2dd862326fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f7da7c2-ca11-4a0b-bac6-a070ad42bacf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5f43097-e556-4dd0-831a-1681755338aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16336c91-a3cb-40e7-942d-5ff2439a3be3",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11bb89a5-0de1-422a-bc7d-77b50152d242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a76b25e8-36f8-4e0c-95aa-be177271db09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40f56f8f-1b0b-466e-8d41-a7edeee551cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "33b606ee-54c2-4118-8e41-806a1ae3c6c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35ad9626-29fc-41a2-aeae-9366bbc87151",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c170c62-d9a9-4a34-8684-5abbab69e834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c9c4d38-8688-4128-91e8-899a42013b39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94849e33-6ae3-4d72-a5a2-f3345b529913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe588d4f-2a57-4bb5-a053-28eda199a817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ffc30d5-53e2-43e5-8f94-67726239f93d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1533ccb3-1efe-4994-b05e-dead2c1030a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9dfef74-e67a-4473-9d47-386468312bfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d062d7-301b-46d3-8e2e-860ca524cd97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c027ce4-665c-4582-a172-1a83cd43a656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9891db-d06c-4a8c-96e3-8d09ef092f8e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d4f89c7-30cf-450d-a9fe-e4f4105a6f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "109ece55-7d5e-41fc-ae8c-ed1843dd4ceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e16f0b-a81c-4110-bdbc-2f642d6036a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "9eba95db-c94e-4549-95b9-73fb3525303e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b44d1d9-d603-4698-8062-fc1dd1daa0f2",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11018ffc-15d2-46e7-935b-74c6ca9f8a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a1258ff2-be17-4257-8fca-6aaeeb09c2c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a13ecbd3-021e-4d74-9cf2-c619594da6a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1d0d44b1-3807-4900-82b5-b48ed44479b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90d4485b-576d-4e12-ba47-ba9cd52ca627",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "875d91f5-8019-40ef-becc-c647f24824eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1571bf99-25e7-4075-87f6-5078a7b328fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67307fe8-770c-4328-a346-3fd3c48164f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b67b142-1997-4a2b-b0cf-38366d11139e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29860daf-6cfa-480d-bf55-1b806946c615",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32cc7285-df87-4be1-8db9-807523dffb9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8509c4df-f740-4134-bb2b-7bc44dccdd9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "229393a3-a7b1-42ea-801a-528beca35b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3acfadcc-6df4-4d21-a653-f2b18f8be748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9de15a84-10be-4300-ba4c-49ad878970d0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad02a3c-7e0f-4cb0-a397-395cd71c6215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afeab514-b503-4f06-a72d-adf44cb65a9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b39de19-48b0-47e7-a5a6-567ff25b512b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "89c80213-0f8a-4496-8cc0-59ea9883fe55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a06887f-9162-48e2-b18f-f7691b2ffe7b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b0e9c0-6c49-4786-9a96-74685ddd6e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04d649df-14ff-489c-84e2-60dab832bcd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4727750b-3aec-42d3-9354-5e0f7fd97c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6916d9be-80f3-42b7-92c0-52ec6cffa4dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ba80b1-ccd2-41d8-8404-3ae613e53aee",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa16d061-4b31-4b84-bfb6-536ab3261de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4395d5f7-5996-4cee-ba86-9b7000e3f843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4709c9c0-0c3d-405a-8670-43fb3def33ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9842ac77-6c45-4859-b9a8-ab0d737af95f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d293295c-4c28-4fb0-8c7e-81a957c3cee9",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af2152d-ca22-4948-8b82-c8720dd8aec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16c31248-ea4e-443a-9c64-036606d30d25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f29be2e2-5106-40f4-8aa9-080a8bf35ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "2c9d05c1-6695-4175-aeef-14cf4a016517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c29af753-8b27-4f50-8815-1ac9d9c0b51a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe153d01-af72-4d96-bce4-792ff8a6cd78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0106ca3-faa0-4d1a-bb50-e61182a71a57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "619a79e1-1ade-4713-a04f-0bdf595aad8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e81228d-8320-4633-af52-6c1b9844fde0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a342b84-d04c-4858-a483-7746ef21f970",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee0ae25-531a-479b-a4f1-c4f407cde261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e121a16e-3b8e-428c-a14e-634a82542833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aceb8cf2-8137-4da7-ba1f-0935b75db768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "513740b9-91a6-409f-a37e-9f41b59f5139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d9e0791-08e4-436c-8448-ee6f4dd7113c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa36a204-74e9-4777-be40-e2810230ef0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32eed1f7-d296-4775-9fa7-30ea34551217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35ddb1f9-a135-4419-bc27-a69836722ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7f4f3ff-e9f4-4d63-b455-33b728be5745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "786713e3-11fd-4a22-89dd-b4a47bab7c94",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8870b16f-0258-4044-b97f-ec49a4592b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea2a8bf1-b447-44d2-983f-80b88d4bf0f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd54949f-148c-44f7-923c-0915eeee3024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1177c88-cec0-4623-af49-60a053dfc8f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e24535b4-4267-4e1a-9a4c-595cda48c867",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "684c5683-08b7-4fa0-a7ab-e386795674ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a1533db-644e-4275-b20f-b0b5638a8fec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd42fff9-4c8d-4d8d-9ee4-d5796fef540a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "26bad57a-b27e-4524-91fc-71f882941989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3726d645-513f-4c01-9a25-f6c344bfe357",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eba6d30-cebb-480c-b011-d52ea2f21994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31bbe3a8-5014-49c7-bded-f750a5ede483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36fa9ef0-8a10-496b-a92f-fccaa1fe9630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d0a917d-5c49-4182-874c-132f6f10a0f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a17f15b-9d66-4177-9b72-555bd482c116",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e84e0529-7e03-4541-acd4-9e84bc27a1d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e0404cc-1958-4408-b512-40e52be1b6f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d8e06f-7a8d-408d-a17b-267fb673a4ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8a66d8d-4386-42d0-8023-f63d85ba656d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b6f67b0-e088-4a16-9465-ab8253e56db0",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b40d2f3-3e28-40fa-8e52-316ecc0fb315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff0beb90-8e32-44a2-ae3f-6be0652a64a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b894d83-85b6-4674-9e5d-f1fe3b1ace39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d3f86c57-7215-44e0-924b-6629cbe57c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b300be73-227b-4634-a478-5070f1e9dd62",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99baaa1b-0633-4e83-886e-a38684c54de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c446c52-ef12-49e5-84d7-914b19492428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b03e63-04c4-4290-b682-8cff38be3b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bcd5aa2-2d51-4f20-8366-7a3bd3377553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae252cd-e011-4f0d-8a05-f831ff28aafc",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4be470f-c58c-4625-8575-6ffa22c9fcd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "515bb545-c246-40ea-882b-25981ed3779a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f15c523-1b3e-4b7e-92e8-b5b9ba22c7d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f0dce7c-12de-48e0-942d-3bfbb27e2601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95263ebd-820b-4ce8-bd63-4faff7b8fbd0",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e828860-953b-4c3a-abb2-42cf78481370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6b9d7a4-ae83-4b76-9383-11a85defdde4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5269beac-6f54-4170-93fc-265ad9edfc0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "94b5fdfe-906a-42eb-8ca8-94da832cf09c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da830b27-67f9-4bbb-8cc7-be16de0f1c10",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e8298de-9bf1-4ed8-81f0-205fa7e78052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82d1de7b-1e54-4c2c-af8e-fe4cec0dce94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d11a6f32-57ed-43e4-a36e-7a57915d68ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4744b87-a3ff-4ed7-bc5a-66afa41fde38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ed247e-461d-4e02-a100-e5070b5ce948",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8701b30d-1232-4e0f-8867-5d1adc1c2fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53fdf12b-d996-4909-ac4e-8029e4bd5283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e57ed453-1f4e-41e7-abf8-0f8bec92bd73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2451b5cd-5c5f-45c1-80d2-2da91f499037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a88154c-087a-428e-962b-734649f26eed",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abed8648-5364-4d09-9e22-b4525e2bea78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "183499d4-470a-405a-b679-a223ffd4dc27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61312713-4ab3-4bba-849b-bbb560b28dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "759b908f-5a2b-43ff-9040-596fb097f12d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da6f2db4-d030-47b4-bba1-45951dd93bae",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35c3df5-e026-4a84-b147-1f4d7c148de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cf3e705-391a-4aa8-9f6e-f7732736471c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a8b50a6-ebbb-409e-a938-6db5ef18e9b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed70c286-37d5-4e28-9f27-6bff83ebbe11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d69ef54-11af-4daf-810d-cecc39e19d14",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2161bee2-dd5d-4002-93ff-4aca82bd7a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "617936d4-95ba-49b1-88f3-1831ac7b7881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36b5f519-b97b-4cb3-a793-13673225b4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f519ac0-aada-4656-a81d-c6d8ca5b3eeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe00ec08-fca5-435b-ad84-67c81e337fdf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f0aed47-9cb5-4f5f-bf64-f005d6a0f537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f26e0278-5d6b-4058-94ab-b8ddbe23307a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7128fcb2-0b51-42b4-ba13-2ed44c50124c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a013971e-85ee-48fd-8225-35fcdb3fdaa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7317dc29-b88e-4152-be32-1cff83a9ec7d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc45111f-4b3c-471c-82c7-f381d08031bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ac00efa-e580-4927-b3e8-ef216741080a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d02b8fd-9022-431e-8fc1-8071766b2314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "99a189ec-51b4-48c4-b956-a529554d5802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fae447f-0ea4-4e40-9aac-798ff625c8e7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a51d87b0-aa0c-44f0-a86a-87b84c1c0f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4372ddbd-205c-41c7-b18f-7028bc9396c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "facd495c-d48b-4788-a9a9-e85c1227b686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "224b6c8a-87fe-4533-b896-9c60b21a6391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87f1ecd8-9e9e-4c5b-84ba-1bd6cc535c78",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74fdfeb0-346a-4110-972e-08ab9365a216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0ae86b4-fcd9-468d-bc8c-5bb082a7829b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310e8e78-f86f-4362-94f3-336749a4e95f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "41b68851-6558-4d85-a17a-52e0af2fd2c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "847d9e84-2d73-4899-b909-24707277315e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de42ae1-701c-4e0f-8ad2-06da861230c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfc5eaad-36e3-4e24-bfe3-af984425144c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b2755be-e86c-490a-859c-9cb0399e3c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "75cc401c-34e1-40d3-8871-7cd3a33ec0dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36168b6a-1f74-4a61-9a0f-3e9094366bae",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02624652-deae-48dc-b1a4-6904a4139518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "add30a25-cb35-4ede-8188-0075930eb471"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24dcf082-a119-4473-8b6a-e2151d16d5f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0e35935-f4fc-4b96-af43-4b808dbca45c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd3cedd3-17e7-4373-8c1c-c3d18c6f7690",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f192e84b-0109-44a6-a493-4ed173422059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3c9c849-f806-480f-9155-61396e1f3a52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e07e4fe-7fa6-4fbd-8b36-e7bea98797ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eaebe432-9053-42c6-bfc5-346345d8a837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aad3e4c-9148-4e5a-bcf9-f8bedef705ca",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d90247c8-5118-4ae7-af73-145774c64a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96ec587d-a2dc-4640-814d-5aa2c863c88a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d98d4f-b21a-4a7a-9da7-8892cc51839b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "45cd42be-c131-445f-8341-4fda3dc080a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a0de13-1bd5-462b-98ca-48964e21e63e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef3c84dc-db84-4e8b-8414-36cb63506ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa1737b7-c6e4-463c-80d0-a9a16be1b6ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f54783f-394f-4e88-8aad-200a16d18e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "da663410-0cd1-4b2a-9ab8-26eb82efddc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a9d829-4e44-4e2f-a6d8-89525d6e9135",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab684e6e-26d0-4805-acb2-9c4a5b69a812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c47de9b-e6be-4efa-8d56-ef9eb31b604f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b8180b-74e4-48da-b4f1-8adc8c497950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "799f8495-1254-4bec-bb74-d67487469bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbff9191-f05a-4453-8b75-c59e523917d9",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b3a2f5-7333-4047-9e17-0caee79fc9c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ef02931-e1a3-41f4-a57f-6afbe63f367e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "289127c6-c2c1-4443-9efa-3b2fc503a4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "53c6465e-00f6-484b-905a-8eb60631a76b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf61cd41-ab48-4551-afc9-07e141b5f07d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76e7a71-1031-4b09-aa9c-5ffbd0b6fea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30d4af03-1987-42d3-8c8f-7f8ec7cc8cfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe98eaa-2f5d-49a0-87af-bc55be00b652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b009e377-a142-4b57-a650-21202f73160e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "860ff453-ee3c-4274-a650-60530c401a70",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a8cc89c-9968-4422-98e6-4bb0b1353445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ad9b2ba-5cda-47b2-ae65-60b7139cf6ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be6217b-7176-4443-aa10-e74eb251edee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d211d1a-8349-49b9-8313-2e0e42995426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d228a6d2-f888-4b10-a029-cb096cc1edc6",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c7d612e-e0ee-4a44-9b2b-17901a3ec918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7933604-c425-4df1-beee-d9a4b6511a64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2083c6d-aabe-4a15-88b0-79849f2c0cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "297d38a5-0fd9-4840-b030-373f9abefa4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95136ea8-e82a-4bf5-9798-abcc7cd9ac1d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "481b926f-28a3-4d9b-b8e7-d13b5aee6509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71595a18-90a9-42cd-865f-515194b3fece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef2f05c-9415-405b-a0b4-bd6dbf81a735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0fe4ab07-cb34-4732-be70-280f2dcd5b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce9018e0-ceb6-4aac-83e6-201c4b47e67c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7181e718-8693-467d-8dda-a5aff7ea156f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08099ae9-5c2a-4f7b-bb92-ac1dd8b903bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ee5cef-93a8-421b-a94e-4df65a7e207c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4c3db8e3-7c68-48d6-8290-77d63f694d67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad173ae2-677a-4607-8dca-b0d9fb264dfa",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a0a969-c221-4131-b128-6748e9c98f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "216de1ae-ea3d-4398-831c-268c58b1579b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "118fa6d6-2fbc-4cc0-bee2-727068ec201c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "08e29578-0e0e-4f2f-9df2-6f2a87c98c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0016d7cc-a6a4-41d1-a11c-872a0a59d6cd",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a577a43-e9c8-4c9e-82ab-f47b1eceb463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a267b68-e3df-4efa-89e5-5bfa61e3a42a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b0110c-0ab1-4abd-bfe4-5886963cdd3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "808ff628-9fcf-496a-800c-29e529a48e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38279a01-915c-41cf-81cd-727d09a332d7",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cfcddec-d3a0-466a-9f92-5966425124c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "586d32ae-c35c-4f53-8012-c76ba117b176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "228f1486-5299-4045-b5ce-05833e57d57a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea3f7033-e3f6-4365-851b-ba39dfc6e5ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0212671-9cfd-4915-884c-7d4b244cf9b3",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "394648c5-affb-4297-a698-f53e9659d297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3785e04-c4e3-4215-9531-c9c2efd42901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51faa166-10bd-4cd9-8e7a-450f0321cdcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ab09c38-a905-4e97-9d52-585dd5f465d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab162e3-73dc-4fb9-b800-7ab8b5a1763d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c87f330b-7628-4bcc-b5e4-e105f5ff318f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92d47882-ab2c-44a5-ad58-cf0a9f67c919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1df65007-72e3-425b-8d7a-a7c603c91ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4fb74591-1308-4fa3-ac02-636104bc7334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74336c01-4458-49c9-9578-5a8492708db4",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7761eb27-3e59-4149-8204-5af4a1b50a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41ac0c36-c1f2-404d-b3dc-19306a47bcc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d122b966-0447-424a-8f23-40249caf8389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ba78f480-c6f5-42f0-a375-40f02ac08b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfb6ae1d-5cc2-490b-85aa-73f0fe79a5b1",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f378ad20-3e69-4576-a1f4-b50b5f5c1f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8315af3c-546f-49a4-9740-e926e691c61e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7357184a-2e0d-4c87-820b-06332bb95559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "619e2420-3ab4-4541-ae7a-53c76b5e55c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16bcb62f-22d6-49e6-ae95-a1e2ee7e4de1",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7047cb9f-cfd7-4341-bc95-c5537729ba42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "480d2d1d-f6d1-4e09-975d-8f390293237e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef22792-66a7-4b1a-b108-42cbc9496cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8572591-d113-43b3-9c1f-81b48d26b680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b04a6ec-6127-4a92-9a5f-0f145cbaba4f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d9f3bee-6c74-41b7-9be8-50700abc4add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ed6faa4-30cb-4539-984c-5da6d654bfca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c30544-d8f4-4886-b1a0-4cff58d2f1ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6c155a6-df44-4d2a-998c-ccfe7d2e8a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a36a4120-17b6-4297-ac01-f0272bfbf46b",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad8bb4e-5313-45d0-8584-3cd2ca166642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8c678f8-00c8-4f4c-bf0b-69e98158c94a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c043fc4-9497-49be-9c46-bd0188c5fe70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "61488d0b-35bf-4d49-9808-f7edc2fec32a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b457da5b-2cab-480d-bcc6-df6877d231ca",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d47d3d6-bfa0-40e0-ae19-43f8ad3b9ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b226591-5365-4313-833b-294e564c51a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5440c930-3a07-45ba-923f-9dad49f441fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dbd5a099-e068-4f0d-ba52-a35bf7989966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eb4eb0d-d05a-4e9e-aa67-72efc7c764e8",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "debe3744-2597-492f-8e68-5a4971403781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc0b59ad-2caf-43f9-88fd-bb9bcaf51ff2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56617c11-8134-4c45-9264-cc10de84f938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7d66d04-37ae-414d-a78c-41c5732b84cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d04aceda-32e2-49bf-b88f-ba01cb33b0a9",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "264bf819-656b-4c04-a1b6-e0fa20bd2bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53300ed9-b868-4642-a3a3-60193eb29f35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b5d1d9-283e-49b1-b2f6-2d1bf63b99ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "137477f1-64fb-4040-ae62-f20076b29c52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6778df57-db7a-49b5-8768-ebbc1ee352de",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d267deb-90c1-4e77-8dea-592a8e0a5532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60813f18-2cb8-4910-85be-102c1f261be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4166d40a-4774-4c7b-82fe-ccc9aba711b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ffeb643d-1304-476d-82e0-90392a8d4727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec1973b-d5ae-4cd3-9e15-4614135ee31f",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9deee7dc-3ec4-457f-84a6-dd5b35eda5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a8c3bbe-f893-4de0-bc6c-1c087d4def78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab446c4a-9099-41fd-965e-d3b0957530fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "21d4aa11-9ce7-4355-bae7-d66a100a8380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf1ab5d-41fe-4f48-88ca-7fdd6fb9f091",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "639108eb-3b57-4e1d-981d-e446fa3bfef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bdf93bb-fa0d-4a16-9563-ad6cfe6f6663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8590771f-2e31-45aa-832b-61f6ec0ac993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "63ca1780-7044-483f-80b9-f425086951ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdf95375-cdbf-43a3-a097-34d299198885",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f859ebdc-1b21-452e-be6f-5abf2fb74ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac806222-b105-41b1-83d9-f74f7644c4f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d378a6fa-2bc0-4b86-86aa-fde4510aef2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9b5bc5f-3ea2-4a97-a537-db84c7c89dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6624b0e-0852-4b72-b029-48a902ce9847",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "145257a3-b31a-42b5-ba57-42347a453066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "69d5717d-d1f7-4551-bc08-6112c6de6182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31981810-25e0-4b79-a9ed-1f326e187d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "281fabec-32c9-4bbd-b29b-b97c24eac829"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "adce02c7-1062-4eed-a993-31854d16538b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e0c6a33b-48be-406b-b633-28e63b4b558b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6cf36ea-e813-4cc8-89f7-57e0322cbdb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1993265e-aba6-4ff0-a930-a0b5f716f71b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc1d6d1-868c-462c-9f47-07f6899aa9ca",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0797c4b6-f16a-4dd7-8f19-e81684540623"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27b3f557-d342-4d23-8d84-b35ebf514ff0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71675d50-9184-4021-8714-d1c9ca635ddc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4eb3b604-781d-4a9f-8e75-bfcc7db646cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef165031-20b2-4b68-b934-b4c06c70032e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ab9a5483-5cf5-4e66-beb4-4583ea31fad9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a02f191c-3dd1-4b2a-9cb7-5d4508216d7f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "920577ff-af3a-4495-95aa-392df9e5d0cf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4c96f145-d7ac-4067-bae1-00ee17632f95"
                }
              }
            ]
          },
          {
            "id": "a4190742-accb-46bc-9b18-4ece1e6d62c4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8d810e1d-0454-4a59-ad67-64d91362539c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bdce9687-8fc5-4614-a677-161398823b28",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f9bf953f-9068-443b-9aa2-48ffeb1fa311"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0957a89-ff07-4aef-9294-ac8efed8c212",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "db191f12-2132-4cbe-83b6-95fd9436d8a0"
                    }
                  }
                ]
              },
              {
                "id": "ac990cc9-046b-43bc-8bbc-826095beac8d",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0cc050e9-4f70-49f7-91e1-28d52393d090",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "514f867c-a474-4d2b-9aaf-0f58b21d7775"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23171a83-6c3f-4b0c-b95f-acde240dc6af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bf2da1df-b91c-406b-aa90-f06dd239799b"
                    }
                  }
                ]
              },
              {
                "id": "d833395b-e93e-4edb-91e5-d346d2a2e4b8",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef58d461-3515-4e2d-97fb-b7af40d341f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9dd5b531-ed66-445d-86d4-92ecf670469c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c714659b-b644-4d76-be32-9a0787178442",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "079d319e-dc9d-4a5c-877d-db5768fd0618"
                    }
                  }
                ]
              },
              {
                "id": "9e2fb749-d27f-42a2-969a-776fd50ee697",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4405f0e5-5344-4eee-ad8f-1659d360c93c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9a113ec5-841c-495b-9e84-660fdf52a1f3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7685a399-af2a-4dbc-ae65-962403d0cb39",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c854bcbb-07b9-418b-8df2-8fcd8d3d0aa0"
                    }
                  }
                ]
              },
              {
                "id": "66a30d90-1e2d-4b2b-88b8-01eef35f2d01",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e50c976d-dd84-43cd-8636-09bf6e694d1e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3272c957-35c3-4dd0-b6a0-3caa53a9dd8d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c86ee312-d147-4ac1-93df-e4c01d14931e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e5117946-f1c9-4d03-919b-85aab64d7ce5"
                    }
                  }
                ]
              },
              {
                "id": "d7d0862c-79be-4ece-a00a-d3364bfd960a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5439d21d-7231-4c75-9619-9df2fc861b52",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4b81a7c2-29fc-473a-a299-3d49251d889c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ae16ece0-6f8d-45dc-a320-dd61bb95b184",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3c8e35e3-aee5-4dd4-ae26-66757827f196"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6fdafab5-8402-47df-846c-d987ea13bf1b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8b619fc2-47e8-4c04-97b3-c10756cb2b3b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2f7f22f1-9b82-4509-a23a-af900e4c775d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dd8eb827-ddaa-4ac6-9e02-e3b52dcd2f17"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6843e35e-a758-4e87-b528-d6c5668c5938",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "041abac0-8dcd-47bf-87d2-8f25124c0352"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a01e9854-3dd9-4361-96a4-c211726cd85f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8bef4fac-e0e2-4d62-ba22-f00a0afd0215"
            }
          }
        ]
      },
      {
        "id": "f7138948-4c42-4333-8980-6c76fc667de6",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "6400e40e-f584-4a6a-b61a-7d9a867419eb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "38ed3ac4-a4fb-4946-85f0-1ad9e60cb98e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a28ad7a0-4c3a-4753-b72c-68cf0dd1fc41",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fda9111e-1ce5-43e2-b246-56e08d1dab01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "067d1c6b-54b0-42ee-87bc-35e74618275d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6847e789-5baa-4f51-b20b-e2ea62135dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "35a70b69-b3c2-4a62-92f4-874e7ca3780f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7b9b1d-b63b-4cb0-96bc-f34b1ed903b2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bdaade6-f7f2-4ca2-8948-58d35ac4f55c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "875349fb-43ab-4a41-8e44-680e600f0fd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d4e2149-a5fe-4284-b154-9be88a8e1efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ac9f072-5e88-410f-95a8-6e00c4c5fc6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e45fb2-5e79-4038-a9e2-5cc730a38677",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67bf7684-d8bf-4491-b062-7dd9b8dc10ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dc9ecfc-1ab6-45c7-85e0-dedd66da89b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fbc8e54-ac19-4641-886d-25caea1545ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cddb091-969f-43ac-898d-266fce420610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9632b94b-106f-41c7-bd83-92dc13f9b054",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5185f48d-9705-403d-abe1-da258aaf93ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7bf95c4-9d3e-40c4-8514-63de449c6685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20900f47-ac27-41ff-bbaf-fdb8151c308b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "81a58394-3cad-48d8-bbd9-d6e5ba1e7a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276fc424-8d87-4cc6-92c6-1671df2724a0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea16407b-93ec-42e7-90db-abcaa9f482bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abcbfeb8-5125-4f6c-bd5c-609b51acb55e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93cfe7c8-e206-4405-912d-3aea763aaf37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9062a694-c08f-4946-a662-6ada9df2639d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6166086f-838f-4d3e-9a74-0107e7dda0ef",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de32179-097d-455f-a53d-551035623abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "687aee34-ab1a-4a54-abe1-0d9a3557cea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f15536-080c-4c94-8751-46849d8883f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "173e115e-1811-4123-941b-4e150d26049d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a863ce69-255c-4b1a-a3ed-fe9210ee5ca5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "439e0567-90dd-4000-b005-38468484157a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a6bf951-e8c6-4540-bcb2-c5e45be81bd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f14a43f8-a39c-4d86-815d-5509faaadc02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "590a1374-3a6e-4315-9062-a660cd807527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc75248-a54c-4498-81d3-b8bd01d62526",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "687f3607-c604-4604-bbea-072d5d0c9825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94f90ba0-c7d9-4cad-887f-f3de2923d0b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b29d47c-8f0b-4f79-b161-8cf3b68221b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d83e3596-b2b3-456f-b9f2-d32c578f98f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44455932-4aa5-4050-a8ca-bc92891a874c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "980617a5-1dd2-4c89-8f81-9cf8ce7c2563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3c7b227-f4f3-47bd-a340-df7b8b11451f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd54d296-5ad0-4dbb-bd8c-59bd3e0b1f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6f504cb-c4ff-4b7f-b0f0-836cdf0bf5e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c983099-c89b-494d-8a9c-01879a6041f6",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab51af2-8ade-4c41-a802-43890edf8878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b82ca1e0-5f14-48af-98a4-7414f3cb0d55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc39aea-6ec5-4e02-8765-d2b885d6d6ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "319a3dab-d360-4627-9402-ce0f63c9d8c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54be1e39-67da-4404-be4b-e85f9d06c1bb",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec83448-5b22-4c9b-b715-f9627520d20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56b686e7-5ad7-4379-94ca-bb196d97badd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2912a960-579e-4e9b-a599-1059da22c239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "32511ba5-3598-4b85-ac1f-f43e52ee8d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ecd38cc-0a00-49b7-8cbd-d5f1ec56bf6b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0eb1fe8-b23c-46fc-a192-32854c13a7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67b4f86b-2aa3-40f6-b722-d54d7559013e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5307b2d1-c798-40e9-9d00-a3e903f41bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "30cf92b2-0b8a-4897-84e6-35b44f1bf3f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2bbec1e-eaef-4915-ac3d-184635adec00",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab3a4c03-f75b-40d2-a58d-1572f2c38464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dee11d4-18a8-4159-84ee-80a82dfd0035"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7352ec2b-929b-4339-8bb1-db4981271700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e46f03d9-f18a-4f68-9629-af36b10f00ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d002c781-fa72-4ea2-8572-b222427bcd8c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8dc8a91-7736-4f36-aef0-27cbf7de34ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c5b0ec9-fa23-4348-994b-759ab04626a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79205c8a-6eac-4ae6-a28c-c3015c021a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9217f926-7523-4138-8602-1fe91551812f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18cab6dd-79a1-4e8e-9d37-9bebe9133c9c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c152751-a438-4874-bab7-4156d74a2e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbc14398-80fe-4100-b8f0-1381f6e49fb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c28c68d-507c-4ab2-b67e-4bf5c681958d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e218f06-e99f-496c-aceb-fb1844d5f5ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe8161f-5786-49d4-8e9c-8aacfedcfda4",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9fefed0-a079-429b-9182-e253062ba5c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15a50ab5-72df-451f-94ef-eafb4885e4ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc500fa7-2522-4f17-bd6c-2638947ce496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "77051e67-f75c-4cbc-86c5-f574ba3d5049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cff7a8a-780e-4e1a-8b87-9bd43b15aded",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b8c98d-461d-4646-9aea-173335a81a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "486f0263-9233-46cb-9d20-2fc3131753e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b7215fa-9f1c-4f3a-8753-971de923ede5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "45e9ba23-afe7-4fd8-bf9c-f5dc14731614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb799afb-fc99-4e12-86d0-043cf257edff",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "957c0649-3ab8-488d-8063-3da22a8f104a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9c9bbf2-15d6-474f-a57e-a266094f722e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c11b2425-cffb-404a-98f3-9ec90b7cb019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a95062ba-c183-4fad-87a7-57e9e4e2ed7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0f5424-463c-4b7f-9d3a-7168d760ef28",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ff5a1b-de54-4094-989f-324e3fea0913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1aafc73-2ca5-42b7-8cd6-88ce52b95325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a7f2167-2d51-4ec7-8d7b-afd33dfbaffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "039227c4-7448-4f85-b6ee-c4ec51a3a2a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b74edd2-5d5d-4137-ab87-d232482a56c2",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de7860e-78b1-465f-b303-0d1765770505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04e9bab4-71ae-40c8-a64a-776dc243a506"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "523dcebc-308f-4591-8ca9-73512b3519fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5045318c-25a2-4977-a38e-f0297788fbea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "233cbfed-fccf-4f0b-8a17-f726346fe77a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "241b5430-3d95-43ba-a55c-efb898ebe66d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bddf3e5f-3b2e-473a-88e6-9242c61ee3ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e24410d-6655-4624-a6c8-bf2bc5023612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7d3c817-d662-475b-84b7-56499a965a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2d0f76-7421-43af-9a87-25ec39fba5b8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cac3910-8e31-48da-87a4-a88322e5d505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf8c96b9-eb30-4377-b043-2dfd6a6e10a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1854a813-1aa0-4397-85c3-ad479b2fd9b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07aef52d-d6da-4986-8c2d-4a2d4371b2f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e761c1d6-d0ff-4e5e-bc72-b2ac1ea7f0d3",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "677a0fc8-7229-49b2-894a-434e15d7cda7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2555abb6-37a6-48b0-91cd-cb8822299ecb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c2d24a-e3e9-4db4-abda-7568677e0e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57be4346-8db7-4e0d-bc9b-0923b8efcd69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f49e8965-dab9-4a80-8552-72d884855367",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d535d90f-6838-45a5-833e-67a4db55f86b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7e4c1bf-24b4-4fde-920a-6a6628c11a8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2917d8bd-79e7-4983-bb8b-8a9b827d9474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "641f2e60-df65-4554-8dcb-1d61ce1ba60d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "026d80f8-240e-43f7-803b-9835196745ea",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c36d1329-82fe-435d-a9b4-11cc73488b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "502e3d58-e1f8-454d-8f4b-3f1815a4f2b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "701437c3-0589-4370-bc25-a42906cdb9aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f41a869a-b985-48e4-bcc7-b15246c451f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "918cd2b2-3885-4304-a36e-56e9d0288f5c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57053445-c8a0-48f4-96f0-2ed4fa6b5f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f3ab241-6dcd-40ab-9c5c-d4e610d072e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "080b5032-6607-43e0-a07b-0083409907b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d22358d5-545d-446d-b3bd-89e1e5976e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c68de7-a04a-4846-9835-7df7b37606a0",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc97229-013d-4c5e-ae7a-135d580f3776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2571e9ec-478f-4cdf-a987-161bb665ddef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80bb71e5-34a3-4ade-910c-76677406b10a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de6c6ae1-2ec3-4b09-be51-14d16d59c194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5387dacb-bace-4f15-9d14-3b9aba0c5a9e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3bd94fd-1397-41d5-9c48-2fcf8831a88e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7695f470-e340-480f-8955-98fb299b0e9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d48e12-a2ed-4b78-b5db-382004837cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b51711d-2492-404a-a5ba-4a7bfe071c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b427a13f-9c80-43f2-83fd-72e44eb95322",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df1586c-9e55-4883-8644-7f45f387dcf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06e340c7-e648-40d9-b8b6-327612cee087"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0fd05f3-f6cf-44a0-ac7b-bb8f80e00f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9528ae63-63f9-4ba5-9a75-4c23844fc7af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67632e9d-36a4-4a3f-aabc-b40a962cea15",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad38385e-fae4-4801-bac8-4cfa5d7e4025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c05915c7-c042-4695-af35-7617aae4a73f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa682509-cf1b-48cf-ba2c-bc2830ad6fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cb6a049-6d53-4d11-936f-a29387e212c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d73eb37-6d18-4c30-8a80-9be133297a6f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8acadedd-9f30-4ba3-974d-cb935c039ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68a149c6-0536-4088-b886-d22b742620c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b886105e-48a0-4032-afa4-f23b47d18024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02efc835-8988-44e0-81f5-48dd8cb308c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f7b519f-4bde-4d99-b705-648799fafcb5",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa2c5b86-c608-45ab-a45c-0fc91c65a027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a2b3174-b63e-425a-91bc-8ebfe89aa0d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbaa67dd-353b-4792-a610-6efa703bdedd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dc840da-75a2-47c1-8b36-f8b53c960eaf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "309324cb-18f1-4051-8024-6142cbadf9f0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cfc8a89a-9e5e-41c8-97f0-7a6889ab3086",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e73de005-162d-44f9-8e6b-90585d834820",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3097d5b5-46a5-4dd0-aea0-508facd9b443"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60255816-5438-42de-ace1-73d277bb0b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "089d6272-cf54-49fa-b54d-1cf6d4465b68"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba745102-9abc-4540-9b66-b102bdf9f67b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "529a5470-fdc2-403f-8b6d-aab4818eafc1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e247f21-d584-4b4f-a65f-519d21ad1812",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04d19793-87ed-47d5-abce-06635350e47b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f9ea970d-d244-474f-b614-33de7aec1fa7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d0950153-094f-4bac-9e0c-f2f2ef2fd3fe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "74ba0645-d236-459f-a7b2-37064f42920a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "da437ab8-3529-468b-8f4d-9e7aea0d0ef4"
            }
          }
        ]
      },
      {
        "id": "4cf88601-2bc9-416f-ae30-5233d2da6306",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "712adb07-f14b-4ed1-a9c0-393955483da8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a266984c-6378-4c0d-8923-21c690f5ecaf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e1ea17d3-9005-4cd6-9886-ef98d338e3f8",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95395f0a-d667-4864-9f56-d32d2933fe40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a51a2e8c-28d8-4bcf-8dab-5006b5229c90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f44efb-70fd-4e3b-afce-a746651aa4d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b518387-5eb3-4d4d-8fd9-c928e6342ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fd8a4f9-e277-4466-8a74-3d7c4e6969f5",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c924f9-bd6b-4c9b-9d32-c3414c268f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "409fbcaf-7b59-4fac-a008-9fd7d6a7ac75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae47126-9913-4e5b-b31f-49b2690f9ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "53e6456d-7208-44cf-9110-0598bb5238da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6833f07f-66eb-4355-8bd8-c3391904f8c4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "980ab4bb-9cad-47b5-a8c3-623a1ada5135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01fb7fbe-8c2b-4a1b-ac41-4b868aafcf6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e3e9676-c7d0-4c10-92b5-b20df526b4ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bd134a0-321f-48da-a2cc-a7ad4fbedfb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15465497-664f-4865-8ce2-2f45eb702173",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d7fcfeb-6952-42e3-97f2-30417ce04f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f3432ce-afb3-4afe-8c7d-8fffebf71c8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86042488-67b2-48f0-962f-3cecf3583e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ca13b7b-fd27-4714-8b58-67b4e523b22d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1222dd15-232f-4cfb-b1c8-5391d77ddbf6",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "847d99cf-5c85-4bf0-881f-1a8a652e4b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59840dcb-300d-455d-9080-e9e2472ff42f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f25711-82c2-4df0-917d-8b3f848a255d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "88e5a961-3cba-4d71-a88b-56c5b3f31950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9caf0532-4247-4708-aa0e-1b771d715706",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f08fc72-f3f5-4b9c-a8c7-910ecd9038c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95a50031-efe2-44ba-ace7-172affbdc0f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2999de7c-175a-46c5-9b11-cc33239c095c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "166cb365-56c2-4c6a-a372-404949427cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a816c0ed-2b19-4b9d-83de-22850b3a6773",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19564e2d-92b2-48ba-9dc5-df79c9ad6295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb203232-d0ba-427c-99bf-0a47d147ad90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "951e6758-289d-4ff6-9618-ff506a3df3dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb47824c-2d4a-49b3-ba5f-b5a8d421e631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e66e90e-74d8-4eab-b63b-c8ee15eae543",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7bf89c7-b0ef-4782-b2be-d59aa05aa09f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "885cff32-6124-4851-a2bf-a0c39ca3fc4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a03ad4-1686-4c41-8d28-5157403046b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "add36a40-0317-4450-aac0-41d2d6d70e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02456d70-65b3-490a-a505-f63f0933e177",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ceaf4d-d430-472b-a6cf-cafaa848eed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36500c98-1e43-4f26-8886-13db0472befd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2991e7db-c20a-4830-ad96-6fe683aa6e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0679fe01-7ab8-4c2e-a7da-0be029e2a1ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a28fdfe5-1bbb-4aff-addb-a090e58196b8",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "011d1f11-9812-4c7c-a1ab-28ca4fcb39b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbbef13f-d71a-435c-90a3-66e44c56c4c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d25fafc-6551-4e57-b7c3-4b40d4cf3786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "81e5c78c-1f86-455b-b8b0-bd101e399c3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c08e2f-67f9-4e9a-a63f-4166f92374bb",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "341b1716-7541-4e9d-8af6-b8b5fe16272d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eefa7fa-adf5-42e3-9123-cae36a276489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3252dae0-04d5-424e-90bf-d59193d1a942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d54deb2b-6d45-4747-974e-66f98a45365c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df65d63-d29a-4104-b0a0-bf2b85cbd471",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49db533e-9ce6-41d2-9353-d0724f24aadf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1708f5e9-2e8e-4b90-973e-498ca0828ab4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f691642-6f4a-4f78-b3ce-80d5d288afe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7aae297e-c870-4058-b614-feb07a544096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34d229f2-9868-4138-b6a4-f2619cbf2c6b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1716a9-9a79-4a18-86df-a4ff18b4399d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd9eea9f-86e2-4a04-a080-93cb3279c6c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a80f5e26-5b08-47a0-9cdc-f9a056e97f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f94a8a5-cba1-407e-82d9-41853ecd8548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4255e184-8b5a-4868-9aa8-30a9223b2e85",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5546dce0-4996-45af-9963-f85b9cc88637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70abc797-e834-41c6-8332-0dabc8690d1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20437999-8b4a-4d6e-aa4e-dc7a9721ffad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "66b64373-bb9b-45ef-823c-a130b8420f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f21f39-9e0a-4ac4-aabb-5c0dfe903143",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e47a41-c240-4a76-8a01-b5d2ded29c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3d9489f-e611-4dc3-a981-123015bdbc32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4703927-961a-4166-b177-e60cb78eadcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b8fd351-3518-4146-b61e-42ac5d5c04e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeb9ad22-01a9-4c69-b98a-eaa300093cc3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d44f1f-d627-483f-9a49-e8084cfbdf4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3938478-6762-4a23-abb5-96c93ec582e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9365aee9-edc2-487a-b064-a7b2ad009a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "476ebece-01b9-4d40-99fc-66a170356f91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f72a91-ba92-4f39-995c-713dc29b7c31",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd65951-0a6a-4bdf-8240-3be59ebebfe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "209b5353-501a-4071-bff7-033b012ddf3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d09bd89-d8c1-4fe3-95c2-2adf7d402b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "313a88fa-6004-40c0-b1c0-34351d4f4852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c6b1039-eecb-4b98-a081-61b5ad3c1c92",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "304bb354-6a8f-4823-93f1-d236b7f7b718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b64ff45-6cc6-477f-b6c0-197e0fbab76d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e89f16-04b7-4323-b9de-45e328871263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4e661fe-7243-418a-b601-f4b9421d6182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f74694fa-db62-45ff-9648-3616100d59b0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d78dc30f-0b22-4e4a-a3b5-3b8e8613b55c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "133156fb-bcbc-478a-9b26-0912f9eb0f41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95106eba-f851-45f4-9b89-ba315e83b5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b712557-44f1-4a35-a39b-29d312661d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7589c66f-1f4a-4eac-a0db-ec9095184f99",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21fabdee-f9a7-4ec2-bc21-225df33b1e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb2b7d5c-ce02-45e4-93ac-57c5c5c96e9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0ae543-933a-4e72-ae87-be1ac91e5118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c616faee-ed56-43f3-8f41-26c9ba8a6320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba04495-7bc5-44c6-b84e-201ebcaf044d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e91425-cc2e-42e8-98d3-fc56d6494054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55943c2d-8bcb-45e5-bedb-22f177c53429"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec943c8-9186-4051-a5f4-dc94c2b49b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c9e3500-a1d0-4d7e-aedb-976de6f4b97d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712f1912-0546-4c3c-974b-cc0672c4d184",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b46108-83a6-4f93-bb3e-afdb33b7a76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34f92eef-72b0-454e-9f06-30c9f8263d2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31317783-2b53-45a3-b994-1a1772a02fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac0d61d6-51cf-4cbc-9dfe-bb470bc3aaff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdeaaee2-db5e-4cc3-9c6d-ea2e4343dc7f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8bf3868-5e56-4b4e-a344-b34e0c2a671b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "399d973a-cf2b-4898-b080-e285597b79fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c0b220a-c850-4913-a570-e001f63de0ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8cecefa-4d14-41ec-a398-348005ebb721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1eae061-608f-4de4-8b56-8cf568975a14",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1787977-ea98-4151-ad9a-3926a8c3c3cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b1f922e-6009-4f08-b5fb-09e8c3c5b2e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec228a65-e5d9-454a-9db3-0325c1daed2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00e252ab-fa5a-4932-9806-9d8c307239d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a45e1c29-9967-4326-8a04-226fde9522f5",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68820f3e-4d4a-4994-98e1-0f23b586a0c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62b07c7a-7d9b-490e-a879-63c9f636f154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a6641c-edc1-4b69-ace9-3e8da230293b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84ea39fe-0651-4375-86d1-3d652fd57c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1574bf80-38db-4b16-9948-1fcfcab5e0e8",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae071fdc-edca-42eb-8f15-9df5ecc40a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd7835d3-231d-42fc-bb91-b3182e85b984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aebb0c3-e796-4a39-b25b-cd2a68bf61c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29e09994-fd49-484c-81f1-67f178825019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cfa615d-bb62-4253-9a38-e1c620cc2415",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6afe442b-c674-4c18-889b-a0f7d6b4f208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5494d95e-b473-448c-ae3a-b682aac7d6d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d32a05-fce5-4c57-97fd-6618eb901105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "569fff9e-e767-469b-899a-bcb9e5a62591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31ea3be0-40fc-416b-a0b1-a23350adcb00",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b118494d-56ad-4973-bc13-131a2aae399b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebd31565-79c8-4b93-b526-58d5bc74d8c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3786e939-5146-48c5-ae39-0468f3550f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c04f8910-2e34-4563-8399-9d24beb0c9b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e7dba4-12ea-479a-934d-ab414635d225",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee05cd9-1004-437f-9c0b-b666b8aa0025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14767bd3-1c85-432d-b656-3213e844dcf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c0cbe73-b7df-4ce9-9bff-e268a439145f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05775f3a-d9ca-453b-b1e9-9c15be99d734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "282b8fa9-2e8b-4867-b80c-008bcd35d59c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b964cafd-3689-40d8-8d35-ac2f1048b206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cde81980-2920-4f1b-84db-4e85deb5036d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde7d42d-43be-449d-8d71-74a432a6bdbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "843ebeb4-84ba-4bc8-bd2a-9177cf0885d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1364ec68-6a3d-48c8-907d-096154d244f0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b420097-a932-4d36-81a7-6d1ffa0ae317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f500c72-3c6b-43d1-8d79-de25e57fc573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c24f94a-b2d4-43b5-a547-f15bd0d618b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc96e60e-4d9f-4de4-baf9-851099a251be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c320ca50-bc2b-4a16-b961-347bd2d51cf4",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48dcbcda-c409-4ffe-9336-40480a36b80a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "745f15f3-0711-42f8-b62c-d2eb0cdb0d3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd07e5c-df97-461c-9574-e3b50fc3055d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e942ebb9-15e1-44f1-b2a9-59bf2e781544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2da5b6d-c786-4d87-91b8-113a34979640",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "595eb59a-13ba-447f-835a-f0b104f9dbc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "039a82a0-ba0c-4db6-a100-fad4a5d707c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60fd34c7-9a30-4fe3-8be4-753674f1584a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37da10d3-c752-4b31-ac08-c7564daac509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e39734f-4947-4e92-a52c-77055cb4120e",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ee4699-0e02-48cc-8e5d-b9136bcb9121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fa3bd2c-3875-4055-8aa8-11461ca02d92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d82e368-83cc-4269-b1c0-564a1a14c2e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db10cf16-db14-4bef-b611-12d1edb75d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0670b26e-d8ad-40e6-9315-4cca009b19aa",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae441003-94b1-4df1-8597-7f2dcdb8c146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92522742-dfcf-480f-9f04-9d879f82d79f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "302fbcf1-82e0-41ea-bf77-74b681ff5128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "283293c0-2706-40b6-85b3-dd1618fde139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "085beb4e-6298-4a5b-9d96-f94491ea2d95",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd44438c-3691-4696-9e99-4d13fd360913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a2f5ce7-2ed0-41d8-988c-f45ad5aef044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2cd895-d624-4041-9bb2-5d9deedbe102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73b47968-481f-45c8-8012-0846bbf34f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb04f609-81ab-482f-a117-01dc8ff0ab82",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f5828f0-b8dd-4932-8ff7-46a0d8f49508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb8fef8c-013f-44b0-803e-24de5d02bb49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27721f5d-9c3a-4185-8d0c-665134bf5b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52e6523d-55ac-46ef-89fb-b6dea5ff56e9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "18a9fc58-060b-4a4f-8da4-2871608dbf57",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8181a58a-2d75-480e-b049-84db500fb7b8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d6aa2e-83c2-48a3-8d0b-8e5f2d66e5d1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b1957dbb-848c-4b83-bf81-ecaeda5f1eb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffddbcd2-2cc5-4ffd-a2d7-bc42e2f3a636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "73735fe1-fcb8-43f3-b416-a13a4bfa73f6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8689468e-f833-429b-8d17-7ea7f00f2d9b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87fad99a-5daf-4406-9cdc-faaeb1e5236a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8659f528-9510-48b8-a37b-b37c03410eb6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0cd41304-0df6-470d-b70a-9714510e44f6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "78f887a9-ae9d-4ecc-a220-8edb5d8faf5c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7b2028c2-c85b-4fdb-8c16-2defca21d191"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ffd1c3bb-2161-4165-a137-ef2895124c8a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "06b12d70-f3c0-44a7-ab48-df69f4e273a9"
            }
          }
        ]
      },
      {
        "id": "4fa8ea89-9212-4305-b996-74c3b0cfc0c4",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "514a91ab-dc95-43fe-8a50-58f8c16daaf2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2b06d03d-d049-4a9e-afb9-518fe97fb37f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f1728426-b934-43c4-8999-c1bdb29f2d02",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "482fa373-c5d1-46d0-aea4-630ace964c48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f8e84b2-20e2-4c86-ad33-f04271006ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc262f78-65aa-4f98-a75e-825100e27f04",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "060ea80d-1021-4b0a-aa96-84831f564fbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cbab993-ecf7-47f8-ae56-fcb4a2ff27ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "584c46c7-c455-486d-8049-38ddf365872d",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d00a13-54d1-4179-9e12-c48338934aab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebb5642e-5299-4480-b89d-6dd567f21fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a818f39c-a1a4-4847-b842-a3861f219397",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa60b38-cbc9-454e-8092-2d8918de93ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6008269-7dd3-4e22-adfe-151c2c38627a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73616973-ef91-40c3-907b-9d4e6b738653",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b3635e-a4e6-4adf-a4fc-d11b2ee78452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0215f038-5f65-478f-8571-481386be67b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc13695-b063-438f-9573-a122e9c465ab",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7ee699-5d30-449e-ab6f-09150b410851",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33929072-fc6e-4503-84f5-97bc6df4372e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee04f024-89d7-4eb7-96ab-6652fbe5eaf3",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af2aa08f-f922-4315-8894-e86b48cf632e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d8ad66f-b837-432b-a5a8-9d002c99600f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b743536-9d31-4461-bc13-92a540615c20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc7b3bc0-f56d-461c-80d9-c9b22bffdacf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "940acf2f-feda-4b3f-b625-d70ad9dbb683",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e9f42b-31cb-43ef-b71f-a6bb0a910689",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cae5ab35-0919-4379-842a-d6aaec1fd464"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed5e3d93-a8b3-469d-8288-4f07799d545a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa1f4e59-ea4e-4441-85a2-b745cbd3e04e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414c0c80-190b-4c30-83cb-0c57d1d16946",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da3bb7a-0bdf-4da2-b541-30aa7bfdf6c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "705e0b91-ca3b-4938-815f-373e624546a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d8c636a-ad61-4ecc-8431-57ba3f523b80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abcecb8d-0dc8-4d2b-b515-5d8893bcc67c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d1a32a8-8f9e-4403-be94-2b774703eda3",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07636584-23af-4777-98c3-433f7249dca2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07fe517d-02bd-45f2-b348-be8ef9c5a479"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6520d3d4-41ea-43b0-b449-7337bdf21e5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53ef22c0-1a28-41cb-a8e2-c6858921df8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7453b433-b01b-41ed-bf3e-74e7bbaf845a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52dee857-1b22-4316-bb23-e6b828e82594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b36aa511-4c0f-4d22-ab15-a1c26c2f31a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3613b41a-6f5b-474e-b3c3-062965587e6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efd05c64-6d7a-441b-8be3-5e467e3b8a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407a9f0f-3823-4466-961b-607fd6ea215a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1949be81-d31f-45d7-a577-f50d0aa84b5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32c76e57-b309-4620-9554-698163eb9296"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e54292-6fbc-4354-a8c2-9395ca6850ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eeafaba-91f6-4072-95f0-ac02e60d501d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd22033-7c2a-406f-bcd2-13018f3f2b24",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4067336-2edc-42b5-854b-0b219bd92b45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60ba574b-b53c-4970-80c0-29ccaa0242f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc72af73-53f5-439d-9ba4-7c8140c72e75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eee450b9-9bc0-45fe-af2a-e2993ffb7d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbbaf923-e161-457b-8b34-160ad58f439a",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "466003c8-c6c5-4889-956c-3d0450d2f870",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa4b9cbc-3bef-4342-817c-9d1a94b8707e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e790180-e997-4a06-ad0b-077412e88edc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "013c5a94-768c-4f3b-b19a-bcd8483f4e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d877b729-46a1-4d90-bb4e-c802eb8af3ba",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "927d8f1f-9952-4382-ba7f-479a52fd107c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b5df2c8-bee8-47c9-99a2-9cc15d1619f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae79a2ea-4f00-45ed-9ea5-22b3851837f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abeb1b84-8b11-40b9-82df-761305bd0478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1567e76-e56e-4de9-9760-110ef76d73ea",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e2b20f7-123d-4b64-b68b-bc8fe440385e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08e68cc8-4d40-4eb4-a474-d6671e8fd139"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d9b51e9-c792-4d6b-aff3-54b7137cde2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24981718-48e4-44db-aa6c-f421e8356704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0977a4fe-da63-453e-ace5-8a3e17eed715",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cbb9520-9e71-4d69-8d45-606ab3aafec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd9eaa64-72f5-4cb3-8655-e2b1a2c39429"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf711d5d-4e55-4cfc-a55f-ece8c1e14d0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14255a4b-3c13-492c-b524-a7a87dc7dfe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c49e73-c84e-4828-91af-6e071c80193c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e74a0cf4-6c05-4b12-a628-0d7746b32909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35ffb0f0-deb0-434b-98bc-20da6b7fb697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f2112dc-dc7f-4883-be27-65dde53d86bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "968ebfd5-e2fb-47f4-8d11-6e46c9fa9dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d3785d3-c3b7-497e-ba68-0d3045c2830e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a46f788e-a069-4475-b0f8-ed084489b41a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f50f9d5c-cf20-4783-8b83-c155b2fe7d0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04dda359-2f27-4288-acbf-16056e0917c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b9f4339-cbf9-42c6-b634-48d41ad35124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acb7bc02-c811-4d13-8eea-05afbb3e51ea",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee290394-3274-4fbb-9a70-eeaf9ccbc4d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa434984-0c3f-4c3a-860a-64675193403d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43bc14e1-ce13-45e2-8e77-04a0ce43e775",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce995a57-1459-45a5-8e42-3dc2115959e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f730248-5df7-41f4-bcc9-169aeb07c206",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03e2d7cd-fd9e-4f79-a936-a6840528cb14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5716d40-a5b9-4050-a4fc-8eefebfabde1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee2d864a-4e4b-43f2-9065-f9a72dc56c56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08098512-ef87-4b66-953d-98ba584ada6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed2aa8b-2c59-4f5a-9ba8-aa33c08766bc",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2afcb3fc-f797-4182-aa81-85a4631d9f2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7def6a26-0575-42d6-8470-48b8a141ac58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "966a35a4-d3c2-4e7f-b37a-b2e7f2cc51b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d73aff76-3eb8-418b-8266-190c1493f1c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a3a27d5-6759-45c5-934d-f24ec827de8a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f8cc288-ad6c-4996-b9b3-90a8d6965550",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f5e8223-3a27-4470-9f4e-3420f77f5a73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b58cfb-5001-4cc0-a4c9-18f183d839d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e1ce99a-8ad7-4110-8a91-73bf64882060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f2d08a-0b7f-4376-b90c-7625f4fb0036",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a9b47c9-a95a-4803-add9-468dabb5e46b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6f8ff81-609e-4f4c-8acc-aa3d14512bb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0490a0d-5e6a-4441-a6de-375fb26ed754",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3b9a878-df0c-4017-bf83-61c5de20c133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17098ce7-ea70-4d63-92fd-74ba24fff215",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04af278f-cf92-416b-af6c-6a2052850ac3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0fb93de-4450-4a39-860c-c5e373639524"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbaa5c63-8828-4b2d-9f35-49e0f41da73f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3d7f6c4-2a18-41eb-a4c0-e2f0f2dd652a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e472eb56-aacd-4eb7-bc24-7bfa4ad78ecf",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29e6a028-4be9-4c90-8816-55f8e425f0aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2882c38f-a759-4e2e-92c6-4248c537d0a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab2fc35-6c8e-4b7f-9ce2-c7b4ec4cb16a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f0d6cc5-887c-49be-a5ed-2ea9e1c4d364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ba0af8-0267-497b-863c-0832f47d5a64",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e606a3-a84a-453b-b9f6-481c37730cda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f42b61a8-dcb4-4ce9-ac47-6f8bc6e4c54a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03cdad7c-bd04-4dd5-9491-407b856d6907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa806d74-873a-4bfe-b225-bd5c8de4aa7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0236f299-855d-4b0b-ad9a-1b4e4236319c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac9eb3c4-00bb-4317-ab78-9b4cdccd0d09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "845e1637-e278-4790-b6e5-34c8e2c187c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90dd937c-86de-49e4-94d7-1d747c272fb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c77c49d1-6ba2-4591-9f23-b1f62dbfc351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a42e64b1-00ab-4244-ab90-3994df424aa2",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b4b1ac-d476-49c2-a176-583aef4881d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "712578b2-08cd-407e-bacc-7e9c26618184"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35b8a3d8-ea2b-4ea0-8bb2-0a377442f943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6032b4f7-f64c-4355-839b-ed10fa9d0409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8cf2ecd-5f5a-4ab4-8d4f-cec3ae5e0f11",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b206c0-89e1-4a93-95cc-049762887d3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23364e9e-a920-4c5e-8661-d48230042e26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dabf71eb-6c2f-4a77-bb01-5b607f0da52b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ffe1672-4ba0-43b7-8f85-beda8a414e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d5f4ba-6ef4-4a6c-85fd-42459247f8cd",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd448d11-2080-467a-b58a-b278089e62a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed31be8b-d589-4e45-a148-136e6fac7bfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe1217d-233a-4555-b28a-8f72c03cbbdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "571001b8-7519-452c-9024-57b84be7d32a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9de4513-42e4-418b-b349-1a5167c97424",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd5e1806-967f-4d3d-aec1-1bbfe9e0e12b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d42f77df-87ad-42bf-b46f-f1659e5af7bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa5153de-70a9-4315-9791-f1bc0fe538cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9202587-d600-43aa-9146-8c69f4563089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "087e5df5-d06e-4240-af64-65dc9e0ff2d4",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad3d224-05ba-41f6-9cb0-c9dab22325c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7da311bb-7b25-45e0-bfc3-4074c0e58a2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea6f0a6-1c05-451e-8cac-08c75629d471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49b664f3-7737-43aa-93ae-10006cc5b03e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d97fe59-c65b-4d3d-b35d-41c4ea5bf86b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8945279d-75a8-447c-ad88-039919b0c8f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0322abb-ca9c-41cb-8b5f-97effd19db9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "591d4db5-f571-44e5-a25e-af3642dadd6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73acdc42-b510-49a1-9bc0-3743ac86be0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf11dff4-6570-4977-982c-87ce9582ed32",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67380c02-12c3-4059-b7ac-2739c0cffca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b02fdea2-6563-48aa-a972-0bbe2834e36d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "498f7c5f-8aa9-48a4-b488-a4382ff86c28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf1275ff-8cbc-490d-839b-63f3afe17e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c84b4bd-d037-4a7a-9bda-f502ad66023f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbbafdd8-e090-4f64-8a3f-0c057912491f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e976c85-4d76-4ca6-9fa0-2e4420e149d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "340487c8-d5fb-4ae6-ac9f-b07c7faa2fd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e70567d3-a266-404e-b935-166528d78f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "106bc26d-6c93-433e-be4a-b015d6da2428",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6079f512-73f1-457e-914f-942e6ca10ee6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37b58fbf-5312-47b5-aef7-889615f7f236"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d162e354-1435-48c2-9a2d-8a22de1aeec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b689697-781a-4990-a802-9758b0affec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94458242-9415-401d-90d5-af5368968cb7",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7f9e684-5ab9-4228-87bb-0c6034f6bd8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7c4b06b-2bfb-402d-86a4-d6b17f795ac2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "177ece14-f28c-423b-87c7-569eeebad1ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8d10e44-7582-4b25-afc9-11e58be433f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74eb84a8-744d-4b8d-ae8b-74ed6a63dbf3",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "974fe30c-e43c-4393-84cd-611958902024",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d598c69-7fdb-4a26-ad6b-f989681d6af4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "630a4b00-e436-41aa-a675-2915c7c774e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1850c97f-fa14-413f-8ac9-f51f1d004411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80cdc313-053d-4398-9d95-f6c51d5a79f4",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5170c863-ae9b-489d-b16f-d4a54e22cdd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "477d9594-6cfe-4d58-a825-45013117139d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15cd8917-623a-4a42-9b2a-f86f9c078c7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad681e94-b41b-464f-bb0d-1cb57d9329db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c458c6e5-d687-48e2-ad8d-b852bdbd1063",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d67d331-93d0-4461-bc69-6d00707d5f57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0617723b-7a9b-4b43-a8ad-aa2699ffa84c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17cbc85e-4878-45ff-b735-2c3eca51c7df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e109ffc-4751-4e4d-bee1-d2e86bc54aa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4686d110-a6d4-4b79-80fe-5a97103c221d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94ca976e-cff8-41b7-a8ff-b5b2a4ed9b81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "434e7693-7668-416b-ad54-2d30d1c21093"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fed26fb-e6c5-4b70-9bf0-e37d8e16fa30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c57ecf0a-df70-49c8-abf5-803134eb09cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d1d60a1-12df-42bf-9895-292c80f28253",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb13ff60-9723-43fc-92ef-d15e14c9f4ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39363c0d-ee7d-489c-9652-386dd38bc1b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb87354-e92c-42d6-b518-830d39d18403",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40127879-0c75-4f7a-bf15-7d6e5dfb5a1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b06189ff-d109-4950-9990-097cd6bf1a8c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2808bc9a-3230-41b0-9f4b-a8c314aa7351",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "133d9f3c-d55e-4cc8-ba01-1a894facb53b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5286ab37-9a90-4696-83f6-114f22afbbf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d105a011-c950-4ffe-9966-8014e4a91526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64c123a6-d0ce-4c57-8a6e-f719fa51c125",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc0ab29f-c827-49b2-b51b-5b4cf7ea5dfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0047a5b1-ca53-415d-9c87-dc4108a976a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d111886f-2261-447b-9c8b-11152779f5c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61df7972-b709-4454-a9d5-267363391b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a068de80-325a-4bd0-9f4c-b43e45c8f301",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "507011b6-7823-42f3-84a3-43ebfbbc6968",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4921d129-6b82-4677-9f28-49aedb88b627"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba8eb7ff-4127-41d8-b6b7-2ae38912f035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8f3a3c9-c78d-47e9-a251-46d20e261075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e506475-85b7-4131-8954-e111725f5a32",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d0a7c8-863f-46b5-814c-4777c3f24183",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "623f5091-612a-4702-8e95-1ad6f6b5a015"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "504e1aee-a800-421d-b6fe-9d213d61c1b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b55ebf82-d187-4aa3-b604-3452aead9165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac778fd-c8f8-46b5-ba71-5a5c6952c88c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b726b2bb-19c9-46d1-82c6-8232ed83334d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8f275d4-aabb-4d7f-aa0d-1b0c8a25b603"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6fe74d7-89ac-41dd-9ff8-e30c8742cbce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a2f9563-4ebc-4a57-bb54-12c42a749403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb66f76c-b2a6-4df3-a6ab-6c1154dc1045",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9478b8c1-602d-40e3-8e2f-1b7cc7c1d6a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b672f99e-34d7-45dd-9081-a83b4dab351b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "533e24bb-ef33-449d-bb46-7f7f9f7ca238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53257a5a-806e-4aaf-b966-2bcba7eabf74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32bfb696-8bcd-4ef0-ab72-e3a49022e2e8",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b018c47-de42-42ce-8fda-c4d33ef58e66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e828993f-4033-45b1-a937-0076656fab6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1b656e4-d1ae-4aab-a6be-b8be15614426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4827f20d-2fae-4b97-a1e9-1837fb2728d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c4dfa37-27f4-4430-a07b-d6e77646f7b3",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa46ece-3f71-4d65-8def-8028e1f98822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "870d188d-bea4-4092-9795-9a1f9bec17ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d32548b8-85e8-4a0e-9132-4e2bba17a602",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ccb7ac2-67f2-439a-8d65-c2c75a6939dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d627b72-c9d8-4c3f-aa6e-058785f2abf1",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d07851-aa84-4f21-9263-98c1d0a3d64a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ccf5439-aba9-483b-881a-81c970619886"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa9748f-d818-4eeb-b192-52c23cf3a44a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03923708-3cc4-47d5-9b2f-b3c644840f4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d941af-255a-458f-bf16-3bdbed821e43",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d1d5088-2e63-421e-b55c-d6fb54b8152a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "671c650a-60c4-447b-82ea-f3a80e297d02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b249b847-11f2-4d23-af88-d797f9fd4b28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26bd8b10-02f1-42a9-ac1d-19ff9d77fa72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa663f8-dced-406f-bfb6-41ccdeccc08b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ccbfb0d-e161-4fa1-9851-6d5d51722477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59cf6a6e-ae82-47c6-898d-66aada7190a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4659d751-033d-468c-9316-44458e7b0d35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab5bfa99-9e46-4695-8b6d-e79b3111cb63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39b5b3f8-2ac4-480e-9dfa-6090f4283ddb",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d53f3f6f-29b7-40b0-840f-99c69f38d90b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a009b40-807b-423d-a92c-b32e32dcb7b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f963d3a2-4a99-4d2d-bf8d-ec7f3bbf118c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d976f9b5-f993-48a9-85eb-a93284889d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f54f30c-1f20-4bc4-bfc3-e3d39dcdbfe6",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e80546e8-ca99-43b2-ab0e-0511fd6be4b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02970685-9849-4924-99d5-36b01669a154"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33302ff6-b14a-4a84-a683-86b6d34b7a66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c0e0a4c-c56c-489c-8eb1-e997412d460c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01fc8d78-5def-4c71-a4c9-bb694723c77e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1de3613-ac15-4add-9715-c690b8e53c4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4491358c-2385-482e-b034-991c7e641c7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e2479d-f5d4-4d55-93f9-3419c52b9d63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f2ea453-3f3e-4cb8-8415-abd80a39a27c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec3ebe72-e3a1-4e3f-900a-d67ef0efa5a1",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee6a67da-f2f9-4335-a666-df6af477972a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b54dc636-112e-428d-8079-0d3975c3926d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc124030-89ce-4c01-8b58-1caf992fe822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "104d25c9-77ef-4b11-814a-154072c5b711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "054a9b45-a2f0-4332-b22c-5d3091a51329",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "413b08b5-cac9-42f3-8504-237ac8d813d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3302f80a-e241-4e69-a2bd-096924a28c9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc43631-7ed8-42cd-b26f-cdce65aa8fe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8498a1f9-23b2-4e3c-bf5f-90939fb56525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f6432d-d02a-4bcd-8d32-b8a80e9cabaa",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7983ba9-0a2d-4a92-95e5-e6e3fc5a762d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e20740d3-1c3c-4530-b297-68a61e2acd18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f67eb0-fd2f-4b91-9878-8e3f42f1cc01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21b1770f-9e1c-47f8-b453-809feab17423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd464e85-ff34-442e-9102-0e3a8ba61498",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e6706f-4a4a-4aaf-92d4-ffa5875ce249",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e0723da-d3fa-4215-a10e-1d03d3fd6def"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "162308ae-e859-4a53-877c-b01c757729e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cd01e0f-5343-4380-a03e-45c497399697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b6763d-5226-4b28-adca-b27dcbf4d1e5",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c221db-7056-43c4-b419-b373cd267bce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d161395-9f9d-469e-9efe-748eb9d0ef42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "775b5531-7ce3-4927-850c-1f01507e1fb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84afdd70-162f-45c0-b524-a87af0b3331d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973a052f-894d-4ad0-a9ff-d19475457ed9",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b3fe5d-3350-4cae-b9ef-b2817a598ee5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c28c49e-34cf-48af-8a01-d7dff48e490b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc868ade-dbaf-43c2-a036-7d5759ade04a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ca2fdb5-8934-4845-8f3b-8cabe0f63cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed900e39-f9e8-46ac-9bfd-917ae0dc469d",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac1bef3-9aa5-4de2-a180-58c458cf6f78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1dfd67ad-3de8-42c8-8841-94957b3a3ff7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e80d556-d119-4840-a357-b5415098ccc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b80ee03f-09c1-4799-b2dc-48fce689f0a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34bd73d4-86cf-4257-bfd9-411c3aa710f9",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8364b970-7c10-4ff0-953b-977c7a65d7ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e4e8e61-c831-4a04-9fc2-b26af2412f28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75bbe797-2089-4e0c-b9c4-f415ca9443fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6c05629-bded-4055-af7f-f1cfb9af8dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca45bb6-4d73-4ef3-8906-d77210c8058f",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b87c85f7-65a4-42fd-90f4-ad0557ef1aee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0b84bd6-2734-4897-aef5-0f92191750b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a7967d9-f3a1-4f9b-b5fc-45c7e6170618",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54eb0c4e-bfce-4928-81d1-266a88dac72a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef6c58fb-7f15-4b32-b70d-991625cc5412",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "512918d8-b477-49ee-aae8-94a894f24867",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b59e1802-f068-4357-bf1c-4f15591baf26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f0fc3b0-54e2-4617-87b5-9ed0b7704184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7125ca3f-dffc-4898-a2eb-228ecc869d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be85c3cc-3559-486b-a4bb-e790c6fbdc87",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "508fe37a-3948-4d98-a761-d320d1434dca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afeabbd0-81d3-4a39-80f3-5703a9c8ef71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14976910-fc81-40ae-a43d-8e139167a8c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc270eee-1143-4b76-8a73-0ffdce20eb29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "457b741f-00a1-4d46-8248-7cdffaa67c0d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c670ca-b776-47f4-9082-d98e92137117",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5504248f-12db-436e-a2a3-f542ef74fc89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07493560-dc14-4de3-90c0-e412eeea9991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7004e594-a0e4-4bb2-ab73-2e0b82e32bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79280755-fb33-41b2-bb3d-373f993f7b42",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc5d15f4-67b4-42b5-ac49-c46cf7e2a71b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb0cabe4-26d1-4752-826e-3b66b43cb5de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be5e6f2-c7ff-46b9-aba8-8e60774d3dd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed9f07fe-e557-417a-a3d9-351f7d487f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d252281b-ffcf-451e-b02a-dc99222a39ec",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b4fa06-5c06-4bc5-98e5-257c736f8cdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba36e5f2-4264-4121-8ec9-e65bfed3052a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0d3302-ad91-4248-a12e-f5f239c599da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91112877-2c3d-4d9a-9dc5-d83897060306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d8ed31-38b1-4ffb-8f25-6e97a4db04c4",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc32e71-b14c-4fb2-a42f-1e491e72897f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7bf6203-69e3-4122-b50f-43c3cd1ab448"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "304d19f0-85bf-413f-9ad1-adfd9f94d854",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cef3b544-9870-46f8-93c9-95f5dd1ea903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75db7d12-4f09-4022-8ab9-e5ba9f983350",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae04ed6-2c1c-41a3-9354-05ca2b60ed2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2714d375-99a4-4e74-8744-2b6f413a7105"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32167d07-604d-4563-8526-856b4c609f8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36b45c56-5992-4821-973b-b19748af6fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8251ad0f-a4a1-4126-91b0-27e75f853d72",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c514aa4c-e63f-41b9-97e6-a3c63f0a103a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4282a4c-9cb4-4a3a-8bfe-84bdc002655c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c70151af-c3b3-432c-9114-29f5fdc6b1d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e32a6ca-05fd-4c1f-b83a-0d5f35b10a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c9013a1-94da-43f1-ac88-b0cf9cd606ab",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce503349-1b13-40e6-9c77-fcfa898a999f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8260936-aaa1-495f-9363-53a2f8366837"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1861a9-0a79-4dfb-9b5b-ddead4476fb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8c7a55a-d233-4213-a71f-c540704a07c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80cee52a-2202-429e-9b89-5c5c2c2e2f1f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed50bf53-fa3d-473b-b5d0-74b5bad2e1db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c37a0839-7d3b-4ef2-97b9-9e8ba589293d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a8edad-c00e-450b-8d51-dab70f32ba3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72a11fd2-913f-487d-b765-1fb1792de272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81635591-f585-4779-8c8c-0e3bb0a575b2",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8efd614d-f8bf-4341-8593-386f70f531cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bc139f2-ec2f-4e37-9131-ee5c2f6ee854"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57af1d8d-7eec-4a6e-bee9-90435bdfa2c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a906716e-7313-4bf8-aa53-6a9ace14931a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b4069c-3a4f-43b3-8365-c0cc329275cc",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef73f3da-0590-45cb-88e0-167fd104a029",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a144f89f-3b8e-4e30-a103-6a28866bcbf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d79bf3c2-2b57-4cef-b3a4-5102e4cace73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c39893f5-714c-426b-8f7d-b71693d43912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb41913-c817-4208-b055-9ad42be76a3e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ebbc1a4-0409-4db4-b070-8de233c5e345",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b07b903-5e3f-4ebd-8e53-bf6a09f1a627"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e382d031-5b53-4f89-a59c-9e9fb3a98b9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4681b580-afb5-4d67-a036-56573ac4bf4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec07b5c3-ada9-4261-8682-00c6a504d66b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2795420-7960-4634-ba45-8ab0b6a43524",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40c356ac-fc7f-4cdf-993e-cf36d26ac88a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7097a87e-9010-4ed9-acd8-712c904ba0b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b20e1c4-54cf-4993-a446-0d305d9f53b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c294ac32-4b0f-43d2-8a50-c79153e5b9aa",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52aad650-1d66-4fdf-b1e8-9656704b0676",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9128dce-f0d5-4df6-92db-d770d11d4b1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad0f8f9a-f993-4fa7-94a3-25e3aae9ff63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62156067-8ca3-400f-a81a-e4eb873238df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bdd177f-8d3a-4260-8513-2c1d171d5e96",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0378ef7c-fbb7-4ff5-b20c-db55922b3f18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3cbc4ef-255c-4f50-80dc-939055ec3f35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc288a3f-c28f-4abe-ad68-cc01c532f1f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "045fe225-0528-4e82-b891-445e89f78a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b9edd10-7f79-429e-ad78-09eda1717eb2",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ffde5dc-3445-4751-860e-eec40c870194",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b793fc00-adce-4cb0-ad77-96acaaef8620"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31796271-1856-46aa-bc01-1cf51d19fcc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4afcf267-abf1-4a05-8c1f-016c3eb34330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f99ba921-82a2-4b4b-9b44-70a051699566",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dfc6bbb-7cfe-42a8-9509-65938941c9bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f55b259b-b72c-4ac4-a62d-698aa63d95ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9716f9e-caf7-45a4-95ae-cb4cd100a88c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87b57a26-e4e1-455c-947e-43d7b5196731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebb57d6b-c36d-416d-99db-159547d5c56a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "985e31a8-cf67-490b-b83f-23ec8ba96f60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cff4432e-fd1a-433c-a124-6bb8c8496388"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede7688a-37fb-4453-9007-6df63ac5d5ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f49bdc1a-70a2-45b2-b72c-f8660956cf50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b5466f9-a8b8-4cd6-886a-d35550180edc",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a686bc9-c630-4515-9e23-bdea50fd96ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f871b1cc-158c-4257-b6f1-5190b23ad8ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c5b8105-db95-4b3b-8039-da6b4b391c7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5235416e-2c80-461b-b490-fcb22dd16491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d62d8ad-fdc9-490a-a21e-6275ee3819a5",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f18e52-f0c2-4f90-8570-3c8c1e9817d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02f1b5fa-5f0f-46d3-aed6-4221019e02bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef82aa71-0523-485b-8d0f-15ecef7a284b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cfb42d8-083d-4e7d-b518-22282471ffaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb5a02d-8e7d-4dd8-99c6-6d26aa8d4560",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d22eac3-1312-424d-b3b4-769cd4f3b2cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2013f370-5612-4a80-8f76-901cf296f78d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "491997d2-d992-4ab4-9a89-86a78c933d17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1f7fe56-1cfd-43ba-a347-d8bdc7e70401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69693593-a385-4ee8-bebb-c2b9ad99bc5f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d50b5613-237a-41b6-966f-cf848bf434dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3117fedd-c8e6-4e46-adfa-8f8cbe181bbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adbef6ad-b627-465b-9e9a-1a24a25ce02d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f167a820-d29c-4353-ac05-f55bc270ee7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a2b25d-447e-4dd9-80df-8fc21300f335",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5583c1c-d908-4b39-bf6e-779d3e156d13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89a0d2fa-46a4-42f9-9f81-d68e839575d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f934a1-4c72-46f4-90d6-ca78af982095",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "781a2cfd-2c15-4c51-b818-a66d96efccf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8cfd780-1e86-412b-a8ef-e59d03a186db",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d480985a-64f2-480e-bae1-814d37306d09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c40bb442-7a41-4107-bea9-d69a3883870c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f0e6c63-25fd-4647-b0f6-3762de47116e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d81b39a7-647a-4934-96c7-87b66ef52a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c480c707-08d6-4955-a00a-ee57228d69dc",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed5c5770-37a6-465a-806a-f740fa596bde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7af51a8-7896-44cd-ad84-7095881cc20f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ebf15ff-81dc-4630-80cd-074c4197fcfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64dc15f6-806a-4d27-9c73-00559f5d540d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ed4f7b-90c9-42cc-b44f-b2cee723d4e0",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c0792f2-fe63-417c-b98a-62b819614db0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2017a206-8b12-44f7-bfd8-4f45ac18f761"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d67314-c623-49d9-bcd6-8ac71ccd80d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e77439a-16c1-4116-84ea-176448f05dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f1f532-cdbb-4a8f-a811-ce40ebd572c6",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db8c710-a6dc-408e-a9f0-dafb448c6db1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae332b49-d4c3-45a8-a8fc-154320285da5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b199def-472e-4be5-aa34-2b78b0efb63f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8ec6c6e-c65b-4496-9a9f-16e2e0725732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29313578-4e96-4311-9f6a-c7c298606f5c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c54b1db-630c-42e7-bdfb-aa209dc21d10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d18a32e-4f44-4984-8221-cd3bd0ff2d0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae03eff-475d-4218-a1a8-3146b431ee4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9e657f7-dec0-4d95-b558-1435cbf6bbc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65794572-bfeb-4d12-93a5-b18c5d3baa38",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b6e13c-39dc-4625-8bde-2b2eefaa6c20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36fb6ef2-6e7e-418c-84fa-9a5b50620a60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7371114f-74c1-4a26-aa36-d4679548a254",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be2f1e55-450b-4e4b-aa4f-df1fd114f44e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb32df2-46de-4d70-bc94-843ccadb69c6",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acbcd2ec-82d9-469c-8a16-8af0406509a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ffad5f4-5c56-43c2-a326-e4f7d2558270"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e0022f-7535-49c4-b22a-4b5ce871ac47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "240cf358-664a-40b4-bc93-8fcd3ab99363"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "07cf790c-b483-447c-9aad-99fd0a1a0516",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3fdc226-3901-4fcf-8e7d-511b1c9f0d24"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e75930da-1c2d-4328-b0bc-ed3a76e36df3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1c13e6a6-721d-4f75-9c6b-62989337909a"
                    }
                  }
                ]
              },
              {
                "id": "60ff785a-b292-4520-953d-76b45b3ec62d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d6379505-425d-4360-af7b-5945dbbd5801",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9253c157-45fc-4c7f-975f-b3c435f3f993",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "12c4d89a-eea4-4525-ad8f-64c001c20c6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bbeb903-822d-457c-8037-abe3b0b21130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2e2f99f6-7348-4b2b-8233-1f2554730cca"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "58c231fb-43ae-469f-9a2c-a3259d3c8925",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1bee3b1f-77d7-4968-95e5-639c0d869791"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0c038af-1630-4193-a1ff-358106073581",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "013ce9ca-fb43-4f91-adf1-4fbeaf5ade48"
                    }
                  }
                ]
              },
              {
                "id": "9b29131d-4cab-486a-88a2-dde3786facd7",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "7e790d08-2a36-46af-89d3-62f065d8a612",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f9efc57-2082-4d79-a6ab-a1ba0076db3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "19e643a4-6bb0-47d1-966d-c3100f1e0e92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e0ef30f-d1a0-4bd2-81bd-43de5ece4af7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9009e630-f984-46ca-a4c9-f808c823b73c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "44396886-2bd9-419f-82d1-e061309fb161",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f21ea047-bd6a-4775-96a0-480e733a945a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b0e7785-3900-46f5-abcc-a551582bc5fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "177f2599-88cf-49df-b8c8-1c00bb66e349"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1cb06f91-049b-4d91-9b1d-cb199937b7bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "629ebb6e-a8d8-4c9f-92a9-94fc0db8a17b"
                    }
                  }
                ]
              },
              {
                "id": "74bef2dd-d66d-478f-a472-a443063398b4",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ebb1a5bd-ca67-4142-80b0-ef9fca4f4737",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "dfa129bb-4533-4e42-9228-2c58ed76987f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "191c0d93-ec39-4ac2-833b-5546e6c228d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c20162f8-0890-4713-8bb1-e1fcc17d5283"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0dcf1569-0d8c-417f-b287-41dcb17073b7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "2400e8a4-9c12-44f0-9b4e-2589dd93287c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a2d011f1-7033-408d-a57b-dfd5e8ed0b0d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "29feb817-7770-477e-9a64-9575a6f74ebf"
            }
          }
        ]
      },
      {
        "id": "ab1beec9-f2a3-4a7c-9aa7-8eb1059d2535",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "468fd1df-878c-4605-81f2-e5c34becd9a5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "42ec3791-7635-4ebf-ab39-c50b590156be",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8013d41b-01ef-418b-a144-f74dc0e0b38d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d830a8-d8b2-4325-b19e-4857d755afd1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "23bec3d7-c116-4ed2-8526-54342923fbfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5845076-8a89-4696-b079-70bca9f74a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "40122c79-9b79-496d-8f7a-b49aedc39db1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4023096f-406d-4934-837e-da7fdb1587c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "454d9963-909d-4590-87a2-0b9d67dc5e42"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0aeab36-e9b3-4ba8-8816-d10b0bd21ec6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ccf5d1ab-478c-4e72-870d-191f0cba680a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "85913eac-b07b-484c-9509-ec30085accea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e68eea64-dba3-4d6d-8c8a-06ee9697c3b9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "333d5d24-2914-4dd4-b56e-2ad9b56051c4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4f32fa31-e018-46ca-a681-ddd0b7ed3b89"
            }
          }
        ]
      },
      {
        "id": "22b904f5-168d-4bec-b0ea-28a7216da0be",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "323ab9a1-5781-4255-bc4d-fc829084d4ca",
            "name": "Negative Testing",
            "item": [
              {
                "id": "456fd0e7-c474-4568-81f1-be91234f0c8d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a097c126-e2de-414f-ac13-09bb496a530d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a7b23d-41ca-42d8-8cfa-985aff73c38a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5017a59-b3ec-4886-8ca5-d405b338cbd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62407f64-2d99-4ae1-ab6f-866d2b8f8f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "218d7b08-e337-4f48-a124-e404f9a12f29"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "424319ed-8187-4e4b-8501-240d903379f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88bec1ed-bd5b-4869-9845-0f36e5941ff9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "822b7011-00fe-4fd3-ab24-2e91e99c42d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb6189d1-023a-4368-b2c7-105c21e31c01"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5b0c9182-b1e1-4601-a36b-358e37c2bae3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ba434c65-3333-4fb4-b3b5-51b5110ac076"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b8472ba7-077d-4ca1-84c6-0d9f78a32803",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7cc42379-2f08-4d9f-a688-41381c1bfeed"
            }
          }
        ]
      },
      {
        "id": "5df546f3-bb95-4f57-95e0-2df81db833c0",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "7d74e44b-0579-4554-8e04-ec3e0b8e5ccb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "413d78e2-4236-453a-a2fe-ca82c7b144ff",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "20fe872c-2a40-414b-8e7e-21733a4f307f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ac93bb-6c64-4cbf-9ca0-d23880fc18be",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5dcb6388-c6ec-4e02-8fdb-b9fa2a4c00ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b9fe497-a035-4f61-84a3-a381503aaf34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e8edef30-e6ba-4497-b103-fc1ae1db6a82"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ead48b4b-c528-48c3-acb7-c77893173d23",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7191aac0-8346-4899-acb9-f0c2a8dbbbe5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "13c9d6a4-a41c-433d-b931-866f69e524e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0534e783-1da4-4ed7-9fc8-514adce3c0c6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "be6ea935-7e80-4e25-aedb-5fbe823c6ded",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "35a9a120-71c0-4fca-a133-d791d3bbf6e0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4b053ab1-167a-4c3a-abc6-8a7972ed4024",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "81cc7759-df9f-4fd3-9dee-3cc64cdc56c0"
            }
          }
        ]
      },
      {
        "id": "f53480c3-6d02-4eda-87c2-3617cb3dfc64",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ff5d2a0e-b3de-4555-b4aa-54e1f6554046",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d00a49ad-6c03-4c72-b69b-22aec41763a9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e6b2cd1c-7f5a-41a0-a546-83f556f2b00b",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7d167a7b-6e4b-436f-a8e5-93a13f9c12be",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "842708a7-8fe9-4129-95aa-452cdbbe4c4b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 127.05985915492958,
      "responseMin": 11,
      "responseMax": 9345,
      "responseSd": 706.597989133757,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1691800228541,
      "completed": 1691800276322
    },
    "executions": [
      {
        "id": "7113fa76-66e1-4b1c-a53b-08b443f5bea7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "15dc5a4d-719c-4c4d-91b6-6d129c93ec08",
          "httpRequestId": "94eb9f9e-8607-42f3-aefb-a22480650c99"
        },
        "item": {
          "id": "7113fa76-66e1-4b1c-a53b-08b443f5bea7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "3238ac09-eab7-48ef-bb49-d3e81f61f771",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 0
        }
      },
      {
        "id": "decdaa8b-4d5b-436b-b653-7a0cad8d6225",
        "cursor": {
          "ref": "0b46a304-d269-4cb9-8fcc-7043b8ed2877",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "6f76e5d9-426b-47c4-b117-f5e95af57fbf"
        },
        "item": {
          "id": "decdaa8b-4d5b-436b-b653-7a0cad8d6225",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "35e182b7-c9c7-4ea5-84bd-fbf31cfe1fbd",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "1c12fa68-5a0a-439b-b719-ae7c33ccac17",
        "cursor": {
          "ref": "1f7ce89c-474c-4190-9d09-9ec26e13aed2",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "bd6641ec-d3d1-497e-ba67-c78eed0df1c6"
        },
        "item": {
          "id": "1c12fa68-5a0a-439b-b719-ae7c33ccac17",
          "name": "did_json"
        },
        "response": {
          "id": "e30e451e-1f50-448e-accb-bbfdbbde5fdd",
          "status": "OK",
          "code": 200,
          "responseTime": 528,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5cc485a-f4af-4e24-a097-9a1988c63cc1",
        "cursor": {
          "ref": "b20e0e12-cadb-49b2-9af5-941e0b74e790",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "18627359-922b-4818-a12a-8503edec159e"
        },
        "item": {
          "id": "f5cc485a-f4af-4e24-a097-9a1988c63cc1",
          "name": "did:invalid"
        },
        "response": {
          "id": "0a10d72b-2650-441e-a903-13fe3160d4bb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 901,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5cc485a-f4af-4e24-a097-9a1988c63cc1",
        "cursor": {
          "ref": "b20e0e12-cadb-49b2-9af5-941e0b74e790",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "18627359-922b-4818-a12a-8503edec159e"
        },
        "item": {
          "id": "f5cc485a-f4af-4e24-a097-9a1988c63cc1",
          "name": "did:invalid"
        },
        "response": {
          "id": "0a10d72b-2650-441e-a903-13fe3160d4bb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 901,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ebcea7-951a-4a82-a19f-04c6df0de3b7",
        "cursor": {
          "ref": "12e16dfa-bd4b-4eaa-b4b2-39d27bb700e6",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "087d5aec-c306-4294-8628-11544dde60ac"
        },
        "item": {
          "id": "17ebcea7-951a-4a82-a19f-04c6df0de3b7",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b1e6cd52-9bc0-4091-b8ab-2ceb7c60a420",
          "status": "Not Found",
          "code": 404,
          "responseTime": 35,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d439739-c6cd-4b1a-b92e-49423373360d",
        "cursor": {
          "ref": "b9047492-3dec-4701-bfbe-bec35e6e6ab5",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "6dc41bca-af28-405a-954e-b85fffe9f989"
        },
        "item": {
          "id": "2d439739-c6cd-4b1a-b92e-49423373360d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "623191bd-da91-497c-9d7a-22d3c7d0e9a1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 39,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "841fb6c8-c939-47fb-a137-e7b2c971e5e5",
        "cursor": {
          "ref": "51c41a1b-87d5-44b2-a24e-efd330941455",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8692a3ee-fada-42d7-a209-d2346b0c0d74"
        },
        "item": {
          "id": "841fb6c8-c939-47fb-a137-e7b2c971e5e5",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e5db4178-8471-4e94-a34f-dccc3419fcd5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77305b7b-1dbe-49fc-97d8-376def2d5822",
        "cursor": {
          "ref": "6da7aeae-f223-48f0-97ec-e73e78f2475e",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a4d9ec64-07a8-4996-b7b7-280d99ffe9c4"
        },
        "item": {
          "id": "77305b7b-1dbe-49fc-97d8-376def2d5822",
          "name": "identifiers"
        },
        "response": {
          "id": "abba8c9e-d718-4f8c-a318-9fd350862c2e",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e79574d-645b-4180-a19e-22c10447d54c",
        "cursor": {
          "ref": "aaba80ba-82ff-4fb7-b8af-a00a8b6ba7c2",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b7c64f37-0be6-4941-a68e-14cea6fe85ea"
        },
        "item": {
          "id": "5e79574d-645b-4180-a19e-22c10447d54c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "bd30f6a7-1655-4fee-89e5-ff76e949f772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 193,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55db229d-5549-4a71-92b0-6e9b88e3b0b8",
        "cursor": {
          "ref": "af620ca2-ddaf-4102-b47b-a419400c01f3",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "992af087-0f2e-4c0e-beb5-ebde234a009a"
        },
        "item": {
          "id": "55db229d-5549-4a71-92b0-6e9b88e3b0b8",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a7bac874-9f3d-4347-891a-7398e315d074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b470a8-91ce-460b-a87e-e1ede1ed37eb",
        "cursor": {
          "ref": "6cb732d4-2dbf-4755-bf19-8eed4b5ebe64",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "af2565b8-04ba-4a6f-b709-7f1f2330f91b"
        },
        "item": {
          "id": "04b470a8-91ce-460b-a87e-e1ede1ed37eb",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "92648c33-a90c-40f9-99ee-b9201311c80f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ec3ea5-fab6-4a0d-a88b-5750462007e5",
        "cursor": {
          "ref": "fc8c8b82-f507-4625-9b2f-e1ccf2c6b269",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "3fd950fb-cca5-4873-a593-ca82936b65f3"
        },
        "item": {
          "id": "27ec3ea5-fab6-4a0d-a88b-5750462007e5",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "86444c20-7f90-4e5f-a0be-ed3e30401752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1abb028-c503-4cbc-aaca-fed873786f6e",
        "cursor": {
          "ref": "bd010477-dea9-4630-9c9c-1ebabdf3d9c9",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "c867edcd-ba44-49ce-a6c4-8fa0fdb3b870"
        },
        "item": {
          "id": "a1abb028-c503-4cbc-aaca-fed873786f6e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "baf0701d-578d-4208-b91b-6393be9a4283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d8ba0bd-8b6f-446e-a4d6-7a7ecbe396a1",
        "cursor": {
          "ref": "d79ab2b9-546c-46fc-b61f-408e43163f7c",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "4303be55-8c76-4685-8958-dc4669cb6bda"
        },
        "item": {
          "id": "4d8ba0bd-8b6f-446e-a4d6-7a7ecbe396a1",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "acbfaa33-f5c6-4582-bcd7-668d49bff98e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff5e9356-5076-44db-8497-0fd509094467",
        "cursor": {
          "ref": "dd718a66-c075-448f-8f94-3efb328a26e1",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "6efd68b1-5518-4520-9b62-8fb41bb94b24"
        },
        "item": {
          "id": "ff5e9356-5076-44db-8497-0fd509094467",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "15b7c924-4872-4c07-8a32-8cbdcc7b8f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c10c62-6427-4a96-8b30-81f24c514312",
        "cursor": {
          "ref": "b957e4e6-1f23-4b4d-8047-03123100e97e",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "cfa6707d-4290-43ab-9946-2c97e3bd0261"
        },
        "item": {
          "id": "47c10c62-6427-4a96-8b30-81f24c514312",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "faeb0a0d-5f1c-4193-99b6-a9c3cb82beec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25bdd90b-2cae-4e4a-973f-c75ec31803da",
        "cursor": {
          "ref": "ac043a97-7bbb-4ab2-8106-23338cd2fa62",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5bfc2abd-c1d8-426e-b997-1a27d609edaa"
        },
        "item": {
          "id": "25bdd90b-2cae-4e4a-973f-c75ec31803da",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "344adc32-0566-49ea-a727-c7666dac378e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce07484-560c-4b27-9eed-e2e698fbc3f6",
        "cursor": {
          "ref": "fc942f5f-406d-488f-bef5-5b3539174ef8",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "92c7dde4-029b-4450-854c-c36b3a310592"
        },
        "item": {
          "id": "5ce07484-560c-4b27-9eed-e2e698fbc3f6",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "7cba3785-f4ad-49fe-9cab-e15d15562e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b42bf58-749c-41db-8242-dbe4202d7fdb",
        "cursor": {
          "ref": "2f60b652-5aa7-4e60-9a35-fdc6be264d98",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ef2e2d6a-58fd-4dd4-8a98-98ab10356db8"
        },
        "item": {
          "id": "8b42bf58-749c-41db-8242-dbe4202d7fdb",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "f7ec82b1-9975-4cd9-a33e-05a77090c1d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b32c63-e1f1-475b-9d97-ad7865456e95",
        "cursor": {
          "ref": "7de00be1-dab1-4b92-835a-0c4c2b892905",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f919bd9d-3731-4b34-903a-019f0556a7a6"
        },
        "item": {
          "id": "78b32c63-e1f1-475b-9d97-ad7865456e95",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a6c315ae-e110-4b52-88a9-a08b8032c00b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 189,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdca0f7a-2594-4ef8-a336-f7e7a0ace89b",
        "cursor": {
          "ref": "c361b4e4-5d88-4014-9e07-f6e5e324d335",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "7e7a6338-2d54-4550-9776-7cc7b039d94b"
        },
        "item": {
          "id": "bdca0f7a-2594-4ef8-a336-f7e7a0ace89b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "bae5fb74-a48d-451e-8574-d450c4217689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eacc558c-5e1b-4cee-8703-74bb0008c691",
        "cursor": {
          "ref": "a83c1d57-a39b-4e21-b98c-e6a9d543bcd2",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "81a6f6cd-f0c7-4ea0-a436-ef2fe6e93d61"
        },
        "item": {
          "id": "eacc558c-5e1b-4cee-8703-74bb0008c691",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c967c65f-6680-46df-8915-bbf37c6d5bb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e60a4d-f16e-40a7-b829-27075cce7ba3",
        "cursor": {
          "ref": "8eaf9d77-97a6-4b0d-8918-e048fd6b89d6",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a7a4398d-99da-4b6f-afb3-808bc383d0b4"
        },
        "item": {
          "id": "a9e60a4d-f16e-40a7-b829-27075cce7ba3",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "db082bfd-0bc8-44d1-b588-2ae24e39027c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c70542f-e042-4b9f-ad05-e14cced56762",
        "cursor": {
          "ref": "7dfc6704-5df3-426d-90fe-f9e32d757ee8",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "1501cdaa-ddeb-4311-b46c-5370e007e082"
        },
        "item": {
          "id": "5c70542f-e042-4b9f-ad05-e14cced56762",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "6df91277-153f-4cf0-a20c-b639b5d31f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29afa405-e407-4c55-bb79-aec6dbc5d566",
        "cursor": {
          "ref": "7e6bb004-20eb-417d-9bd7-da472336099c",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "9294ca50-e581-4ddb-861e-129b485f71b0"
        },
        "item": {
          "id": "29afa405-e407-4c55-bb79-aec6dbc5d566",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "6a5b40d4-621b-4996-8670-3152edc5225f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 136,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a9cf674-17c1-4df8-b33c-7028f24c835d",
        "cursor": {
          "ref": "7e80e392-2f8e-4380-a0fb-84e010f2c580",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "98aab60e-d28e-4d1e-88f5-7c334edc782a"
        },
        "item": {
          "id": "7a9cf674-17c1-4df8-b33c-7028f24c835d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "71d6d595-ace2-458e-a921-9e2aadc93f0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 138,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8036ab08-ca29-44bf-8c6f-1509d8263018",
        "cursor": {
          "ref": "ff170696-29da-4339-a674-e1ee616b1e7c",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "8571ee86-6d82-42e7-bc6e-28fea5b37eee"
        },
        "item": {
          "id": "8036ab08-ca29-44bf-8c6f-1509d8263018",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f4f9c02c-313b-4c67-ba1c-2c34414603c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d44110-2a0f-4113-89ce-269bb055bbc5",
        "cursor": {
          "ref": "da873d83-ebeb-4b1d-8a7a-ced07207250a",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "72e15c4e-dc49-4696-89c9-646ab719a4af"
        },
        "item": {
          "id": "b6d44110-2a0f-4113-89ce-269bb055bbc5",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "7bbe9165-bc65-4197-83f9-44fc14056f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a738d96b-6dca-40e3-bc2f-7afc0043fa2a",
        "cursor": {
          "ref": "883fda15-ae0e-4f20-b87a-5606b4723eaf",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "6d6f12c4-3b14-4348-9ccf-b67e84a57416"
        },
        "item": {
          "id": "a738d96b-6dca-40e3-bc2f-7afc0043fa2a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f570f5a4-7df6-4b47-8731-65391cac02c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ad64f0-5633-45bd-b12c-ee3c8700b2f1",
        "cursor": {
          "ref": "c3dcc4b7-d8b8-4487-94c0-a61167fc4c44",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "0227fa2e-5187-4f91-9af3-44d0326f91fa"
        },
        "item": {
          "id": "98ad64f0-5633-45bd-b12c-ee3c8700b2f1",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "71c00be8-8d14-4b5f-aee6-3124a3b993db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6564537a-51f3-4f8e-ad66-23b671354257",
        "cursor": {
          "ref": "d99bb76c-c6a5-48fb-a459-cee2190e64ac",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "8ceb6b12-b4a9-4774-ad5e-98ed8b60384d"
        },
        "item": {
          "id": "6564537a-51f3-4f8e-ad66-23b671354257",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9e5a10e7-85b6-4480-80e1-9085884a2ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca057757-f159-4088-bd39-ee1088506035",
        "cursor": {
          "ref": "4d0fd223-6452-43b1-b5ed-d87db76ee1cd",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d74a0214-a1de-4873-b896-2b42c9d22061"
        },
        "item": {
          "id": "ca057757-f159-4088-bd39-ee1088506035",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "8b0b6807-b90a-4176-b24c-6e7d1a7be7e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e626d9b-60a7-4b53-9849-4c9e9102baf5",
        "cursor": {
          "ref": "83ad092f-c6e5-43c1-9aa2-d82a7b2b796a",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "bdaf896c-ab1e-4cc6-a156-3568a4d6565c"
        },
        "item": {
          "id": "9e626d9b-60a7-4b53-9849-4c9e9102baf5",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "6372398e-470e-495d-8584-ea3970885b2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a0f66e-8ecf-4a90-9197-dd4806df5aa1",
        "cursor": {
          "ref": "4f2ec965-3000-4f11-893c-d3628de3f54f",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "3431f6d9-1414-423a-b688-19d405a3d8a0"
        },
        "item": {
          "id": "24a0f66e-8ecf-4a90-9197-dd4806df5aa1",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "bc31916e-72a0-4ccf-8a61-425f697910ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cfd1a3d-0fa9-4875-a081-7b281ea13f60",
        "cursor": {
          "ref": "63d81076-0b91-4f83-8a85-ccd15b67de16",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "20490815-7836-4255-83c6-f8ad6bedc9bf"
        },
        "item": {
          "id": "6cfd1a3d-0fa9-4875-a081-7b281ea13f60",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "4c2197ec-7cd4-45c2-a567-589ab7d6f7b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f228ba2a-1dc5-4fec-9d81-2092c8d271a0",
        "cursor": {
          "ref": "0ebfe67a-5d76-4a1f-947f-c662a270ea0e",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "58a46af0-34d2-4af7-bb48-7614aa9235bf"
        },
        "item": {
          "id": "f228ba2a-1dc5-4fec-9d81-2092c8d271a0",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "02e92f0f-9e89-4131-b618-ae6b3218c89e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a86a2215-3b3d-4412-b295-b52410be3e31",
        "cursor": {
          "ref": "894bbf01-7b97-4dbb-b1db-f98e034f94c9",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1c63ad45-ec3a-4319-98c5-53c3824bd126"
        },
        "item": {
          "id": "a86a2215-3b3d-4412-b295-b52410be3e31",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "62badf04-6c74-4994-a218-723003b8454f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2f6606-0e3d-4be1-8ae7-88e310e396db",
        "cursor": {
          "ref": "238e99dd-3572-42c5-af7e-c2072de7af42",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "3550c922-3c01-429f-943c-ea40692c41ad"
        },
        "item": {
          "id": "ed2f6606-0e3d-4be1-8ae7-88e310e396db",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9d3e9950-3392-4270-9ea1-7133d177e74e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47968ff7-fb27-460f-991a-e6b9543c15e5",
        "cursor": {
          "ref": "03c7e654-e782-496a-b990-bc833a24617e",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3d391d34-7626-454c-9fe7-0f95f506d2a8"
        },
        "item": {
          "id": "47968ff7-fb27-460f-991a-e6b9543c15e5",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "13ac3ebf-5f52-40a1-b3fd-16b3c40fdaea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16336c91-a3cb-40e7-942d-5ff2439a3be3",
        "cursor": {
          "ref": "5615f996-8f8a-4d2b-ad07-1f9454bfd967",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "17018c1f-57fc-43f2-8539-347e0a365dfa"
        },
        "item": {
          "id": "16336c91-a3cb-40e7-942d-5ff2439a3be3",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "9624de27-6103-4408-8aad-ceb818f9bf60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ad9626-29fc-41a2-aeae-9366bbc87151",
        "cursor": {
          "ref": "82251bc9-a22f-4300-b626-edf417d1dc84",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ee40cae7-fe26-43cb-82b9-c87078680d36"
        },
        "item": {
          "id": "35ad9626-29fc-41a2-aeae-9366bbc87151",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "4c16a606-bbdd-4934-8b21-f5a859736c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ffc30d5-53e2-43e5-8f94-67726239f93d",
        "cursor": {
          "ref": "251b1368-4138-4557-b63b-7410215b22e7",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "351c9a2a-889d-4d49-b952-feb6dad6754e"
        },
        "item": {
          "id": "8ffc30d5-53e2-43e5-8f94-67726239f93d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "fdf1f59c-e012-4970-b8a6-1e6ae2ddc33b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9891db-d06c-4a8c-96e3-8d09ef092f8e",
        "cursor": {
          "ref": "2d3a357e-296a-45a5-855f-4300b98281c6",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "07a55bf1-227f-4699-bd8c-34dc8d342001"
        },
        "item": {
          "id": "aa9891db-d06c-4a8c-96e3-8d09ef092f8e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ac5b9f51-7c6a-4dcf-af53-30b0e44fd5f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b44d1d9-d603-4698-8062-fc1dd1daa0f2",
        "cursor": {
          "ref": "606be7f8-5467-437a-84b5-9009007410db",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "222b13b6-6c48-4ed6-a31e-21ccde684846"
        },
        "item": {
          "id": "1b44d1d9-d603-4698-8062-fc1dd1daa0f2",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "3988d432-2c1e-4d40-8cd8-34c544dc1557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d4485b-576d-4e12-ba47-ba9cd52ca627",
        "cursor": {
          "ref": "4a801b88-b669-43ed-aacf-ba9b96c63a44",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "ce474b3e-a622-437d-9352-94d2de2f8262"
        },
        "item": {
          "id": "90d4485b-576d-4e12-ba47-ba9cd52ca627",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f72ef123-4594-4df0-ac7b-847d7ba568f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29860daf-6cfa-480d-bf55-1b806946c615",
        "cursor": {
          "ref": "a4c4ccd0-df74-4365-b469-824dea7014cd",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f326ae45-32a3-468b-a641-9a583b8f6407"
        },
        "item": {
          "id": "29860daf-6cfa-480d-bf55-1b806946c615",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "a384f972-3890-4cc4-a5cb-d7fbdb8955f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9de15a84-10be-4300-ba4c-49ad878970d0",
        "cursor": {
          "ref": "237cef84-8fc8-4c2b-b07e-da93d56c0404",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "4f079e3c-3aec-4cf6-90c7-24d2155729be"
        },
        "item": {
          "id": "9de15a84-10be-4300-ba4c-49ad878970d0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "aa39691b-fc41-4a13-bb9e-814c7522493a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a06887f-9162-48e2-b18f-f7691b2ffe7b",
        "cursor": {
          "ref": "71abcf0a-d756-4e05-bdb0-449996c640c1",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a114e5aa-2f2d-446a-aef8-d30a70ec0204"
        },
        "item": {
          "id": "6a06887f-9162-48e2-b18f-f7691b2ffe7b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "4edefd4d-289e-43ee-9498-465096dfafb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ba80b1-ccd2-41d8-8404-3ae613e53aee",
        "cursor": {
          "ref": "47195b26-91e7-4b95-a705-c61104714320",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "2c439e33-8da9-493a-bcf9-015e39660a01"
        },
        "item": {
          "id": "e9ba80b1-ccd2-41d8-8404-3ae613e53aee",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "06d55325-3011-4ae7-8cc1-b1dce77cf809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d293295c-4c28-4fb0-8c7e-81a957c3cee9",
        "cursor": {
          "ref": "4fede41b-4de4-4008-b883-2f31084ca0b3",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a812955d-795a-44cb-b47d-a1712b938276"
        },
        "item": {
          "id": "d293295c-4c28-4fb0-8c7e-81a957c3cee9",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d59b8bfd-bbd3-4b93-8569-0aae4fe33ea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c29af753-8b27-4f50-8815-1ac9d9c0b51a",
        "cursor": {
          "ref": "fcf27b4f-299c-42c8-b3b0-a47f39bdd31d",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8628908d-59d7-48a5-93a3-631201778dc3"
        },
        "item": {
          "id": "c29af753-8b27-4f50-8815-1ac9d9c0b51a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0c175ad7-2441-4db4-8ac2-fc377edb87c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a342b84-d04c-4858-a483-7746ef21f970",
        "cursor": {
          "ref": "67bb3bdc-4a5c-4855-9139-623421c178a3",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "30696378-0d5e-4aba-8732-8eab1899b1dc"
        },
        "item": {
          "id": "4a342b84-d04c-4858-a483-7746ef21f970",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "74861662-0d7a-481b-81a2-418f9702a0df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9e0791-08e4-436c-8448-ee6f4dd7113c",
        "cursor": {
          "ref": "37196cf0-eb8b-4e00-a5d2-916469ec61ff",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d962e56c-59ef-40be-ad91-65943f7ad9ed"
        },
        "item": {
          "id": "2d9e0791-08e4-436c-8448-ee6f4dd7113c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f400c975-893c-468a-bf54-81f4f5be7c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "786713e3-11fd-4a22-89dd-b4a47bab7c94",
        "cursor": {
          "ref": "3941a717-7d3b-4d13-80ca-b2b1a901d9b2",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "085837c9-4fcb-47a1-b643-997aaf93ec51"
        },
        "item": {
          "id": "786713e3-11fd-4a22-89dd-b4a47bab7c94",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "53959a4d-f392-416f-af35-51263b9af567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e24535b4-4267-4e1a-9a4c-595cda48c867",
        "cursor": {
          "ref": "bdd3a684-3290-4740-8dcb-208afb97a86f",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c9bd6f9f-6352-4217-8a46-0b1bb97a5d44"
        },
        "item": {
          "id": "e24535b4-4267-4e1a-9a4c-595cda48c867",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d8c8ae7a-568e-4e42-aa57-c8c8aa8a57dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3726d645-513f-4c01-9a25-f6c344bfe357",
        "cursor": {
          "ref": "12e68b97-733b-4218-8627-3482e030bd43",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e464ed84-54f4-4729-b7e5-ff8603ae198e"
        },
        "item": {
          "id": "3726d645-513f-4c01-9a25-f6c344bfe357",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "43a36b32-e6e1-4abf-826b-026876f44cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a17f15b-9d66-4177-9b72-555bd482c116",
        "cursor": {
          "ref": "31f83b03-6378-4f52-b700-31d637afe907",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "c6d9051f-6dc0-4f99-9613-d86965233c20"
        },
        "item": {
          "id": "0a17f15b-9d66-4177-9b72-555bd482c116",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "295032cb-08bd-4381-b798-d37e4fad5500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b6f67b0-e088-4a16-9465-ab8253e56db0",
        "cursor": {
          "ref": "84d0427d-daa7-4af2-b451-7b8ad6a0212e",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "79eba9d3-4830-46cd-befa-d344184522bc"
        },
        "item": {
          "id": "4b6f67b0-e088-4a16-9465-ab8253e56db0",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "5cdd2348-c0ad-4550-af47-7b3601b1d22e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b300be73-227b-4634-a478-5070f1e9dd62",
        "cursor": {
          "ref": "a05b4580-af7b-4b16-9712-77ab995ac035",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "3806f0ca-2b28-46b5-9b50-0802b42ac482"
        },
        "item": {
          "id": "b300be73-227b-4634-a478-5070f1e9dd62",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "fcb23abb-3fdc-40b3-9458-1d61f6e4911a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae252cd-e011-4f0d-8a05-f831ff28aafc",
        "cursor": {
          "ref": "bb1eb45b-74d6-4c5e-88a5-e77ef125fb17",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "5c201084-9d65-4576-924d-a8b66c975edc"
        },
        "item": {
          "id": "1ae252cd-e011-4f0d-8a05-f831ff28aafc",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "76e40eff-2d01-4bad-a9fa-b55a10087c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95263ebd-820b-4ce8-bd63-4faff7b8fbd0",
        "cursor": {
          "ref": "3c31ce03-1e7b-481d-892c-42d056293229",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3675bfba-3f2d-4af7-8aa6-1d72773525c7"
        },
        "item": {
          "id": "95263ebd-820b-4ce8-bd63-4faff7b8fbd0",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "46723e49-c240-4e56-98c0-937d29b36d80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da830b27-67f9-4bbb-8cc7-be16de0f1c10",
        "cursor": {
          "ref": "b142f5f5-39b2-499f-94fb-8de0aa856b27",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5c172958-a540-419e-8000-57ea8e22ff0e"
        },
        "item": {
          "id": "da830b27-67f9-4bbb-8cc7-be16de0f1c10",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "6d342987-f68a-40ca-b656-4ec33eb5acc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ed247e-461d-4e02-a100-e5070b5ce948",
        "cursor": {
          "ref": "edd20bf3-1bf0-47b8-a68e-bfc7749fe8f3",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "aa04ec6c-a476-428c-8b64-b63dbdf7061c"
        },
        "item": {
          "id": "86ed247e-461d-4e02-a100-e5070b5ce948",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d2d89e72-4239-43e1-b2a8-ff34c4457a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a88154c-087a-428e-962b-734649f26eed",
        "cursor": {
          "ref": "7935e3fd-d5c2-4376-90e8-4ec840629d3a",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b0f119ac-0921-4bcc-b163-1939f76ea840"
        },
        "item": {
          "id": "3a88154c-087a-428e-962b-734649f26eed",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ce1e9d29-a20b-46e1-9612-b1044b99b781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6f2db4-d030-47b4-bba1-45951dd93bae",
        "cursor": {
          "ref": "a30fb841-ce48-4416-aa0b-10f94bbfc858",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "73c8aee8-98bb-4a18-b9d1-f698caddbcdd"
        },
        "item": {
          "id": "da6f2db4-d030-47b4-bba1-45951dd93bae",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "417eaaef-5927-467e-9356-e2b84571c200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 146,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d69ef54-11af-4daf-810d-cecc39e19d14",
        "cursor": {
          "ref": "690d0c7c-b60a-4ffe-af6b-53529021a688",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "39f39f17-8294-4e15-9906-32ac2429ed87"
        },
        "item": {
          "id": "4d69ef54-11af-4daf-810d-cecc39e19d14",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ae69a192-eab2-433b-a326-171cd847c4d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe00ec08-fca5-435b-ad84-67c81e337fdf",
        "cursor": {
          "ref": "8b51bc4e-8a32-42f0-8a99-1562c7e1b4f6",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5bc73b6b-d7d5-4fe8-a8db-7fa9afde819c"
        },
        "item": {
          "id": "fe00ec08-fca5-435b-ad84-67c81e337fdf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "8211863a-df4f-41ec-a476-99ffd7c770b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7317dc29-b88e-4152-be32-1cff83a9ec7d",
        "cursor": {
          "ref": "e7bab7fb-7ba2-4487-be54-c1c9a97e252a",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "6e3b5fef-f15e-4110-95ba-6a956fa66043"
        },
        "item": {
          "id": "7317dc29-b88e-4152-be32-1cff83a9ec7d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d6060692-85d3-41b8-a2d6-c8048c5c371c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fae447f-0ea4-4e40-9aac-798ff625c8e7",
        "cursor": {
          "ref": "810fb556-73b0-42a0-a96b-621cf85241d6",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "e2c9036e-8ad8-445b-b79f-0eef772ce521"
        },
        "item": {
          "id": "1fae447f-0ea4-4e40-9aac-798ff625c8e7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "d70b7361-2cc8-4d23-aa5d-00222de4e2db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87f1ecd8-9e9e-4c5b-84ba-1bd6cc535c78",
        "cursor": {
          "ref": "af3b266e-4c95-4a84-b71f-c06892ef58e7",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "924e87a4-aca5-48aa-9578-a403b2f2f5d1"
        },
        "item": {
          "id": "87f1ecd8-9e9e-4c5b-84ba-1bd6cc535c78",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f5a85341-95e6-4c07-bcac-74029a739fc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "847d9e84-2d73-4899-b909-24707277315e",
        "cursor": {
          "ref": "d8e0d7cd-5a24-4362-91a0-1e539f811ac8",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "55f82e0f-88d6-4d50-97a9-d3efcdac862f"
        },
        "item": {
          "id": "847d9e84-2d73-4899-b909-24707277315e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b4b8e5a4-9f63-4d64-b59b-c022c9950665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36168b6a-1f74-4a61-9a0f-3e9094366bae",
        "cursor": {
          "ref": "ad9419ee-6889-4f81-b744-baddd946e84f",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "579fd877-76c2-4dd8-b3cb-6432ed6b6356"
        },
        "item": {
          "id": "36168b6a-1f74-4a61-9a0f-3e9094366bae",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "49534330-6730-4755-9a8b-475d0ab6ff37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd3cedd3-17e7-4373-8c1c-c3d18c6f7690",
        "cursor": {
          "ref": "4a62737b-3749-4d59-a008-713d19ba9a82",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "2bf4b65a-b513-427e-a2c8-71eeb845bec6"
        },
        "item": {
          "id": "cd3cedd3-17e7-4373-8c1c-c3d18c6f7690",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "5a60b8dc-a902-4aa7-9ae8-5aa4d0a609b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aad3e4c-9148-4e5a-bcf9-f8bedef705ca",
        "cursor": {
          "ref": "f8d5ddf7-2c11-4924-82d1-9092bb46ceee",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8f078099-7369-4d8a-9aeb-dd437143d91f"
        },
        "item": {
          "id": "9aad3e4c-9148-4e5a-bcf9-f8bedef705ca",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "78ed642a-1989-4126-85a3-ddb75ef6d37f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a0de13-1bd5-462b-98ca-48964e21e63e",
        "cursor": {
          "ref": "c557b51d-ce09-46e7-b5cf-a4e4b157328e",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "622ad78d-54cd-44e5-a5ee-6cd52094e73c"
        },
        "item": {
          "id": "19a0de13-1bd5-462b-98ca-48964e21e63e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "60ad6cc0-fb51-46dd-9df0-2a5be4a2e933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a9d829-4e44-4e2f-a6d8-89525d6e9135",
        "cursor": {
          "ref": "e8e3fc62-c9b5-4e21-965a-f107fa670380",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8fba7ae2-1938-4687-8b0a-88638536f62f"
        },
        "item": {
          "id": "a1a9d829-4e44-4e2f-a6d8-89525d6e9135",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d34d3bc4-f8b0-4dec-9348-cdf27822e050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbff9191-f05a-4453-8b75-c59e523917d9",
        "cursor": {
          "ref": "193e64d6-0914-426f-bc56-d9450bf7af5a",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "0d350599-934b-4821-aab6-1d630108e271"
        },
        "item": {
          "id": "cbff9191-f05a-4453-8b75-c59e523917d9",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "4d2b5dc0-c9b3-47be-85fe-84c7c6e16f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf61cd41-ab48-4551-afc9-07e141b5f07d",
        "cursor": {
          "ref": "4778e478-110c-4ff6-9233-ffdbb68accee",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "cce43e9d-5601-49b2-9e8e-b7fea9c048f8"
        },
        "item": {
          "id": "bf61cd41-ab48-4551-afc9-07e141b5f07d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ca5d5d07-a956-4d15-930c-0025925c124e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "860ff453-ee3c-4274-a650-60530c401a70",
        "cursor": {
          "ref": "91e735d8-9e72-428f-9902-42a179c1061f",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b5643edf-76d8-40e8-8322-c11e23b7806b"
        },
        "item": {
          "id": "860ff453-ee3c-4274-a650-60530c401a70",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ca448215-ffb5-4cdc-8502-fd3f2192a507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d228a6d2-f888-4b10-a029-cb096cc1edc6",
        "cursor": {
          "ref": "aaad2f51-b3e7-4964-9331-265c06af6885",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b879f1b3-5f80-476c-8150-375914b1588e"
        },
        "item": {
          "id": "d228a6d2-f888-4b10-a029-cb096cc1edc6",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "812a3f68-36d5-40b6-8e0c-7698faaa3318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95136ea8-e82a-4bf5-9798-abcc7cd9ac1d",
        "cursor": {
          "ref": "11f8ba0e-7f8b-431b-bf3a-d161774af3f4",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d3a79b8a-d977-4849-91f0-1b12f3ad06cf"
        },
        "item": {
          "id": "95136ea8-e82a-4bf5-9798-abcc7cd9ac1d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "68395a70-cd00-4998-a09d-2e1a84d2412f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce9018e0-ceb6-4aac-83e6-201c4b47e67c",
        "cursor": {
          "ref": "bb85f0ec-2626-452c-b8cc-9687ee57cc86",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f878aeda-7f87-47a8-94c2-2e0db9d4e165"
        },
        "item": {
          "id": "ce9018e0-ceb6-4aac-83e6-201c4b47e67c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "46ec3797-4ad6-4065-8c63-2b9d00e9f3a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad173ae2-677a-4607-8dca-b0d9fb264dfa",
        "cursor": {
          "ref": "06d16199-c5d3-4821-9b9f-6c3802b6dbe2",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "dda06998-b4f5-4786-b2aa-3ac1113f5299"
        },
        "item": {
          "id": "ad173ae2-677a-4607-8dca-b0d9fb264dfa",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "827c8652-7946-479f-8684-58d67a19dbef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0016d7cc-a6a4-41d1-a11c-872a0a59d6cd",
        "cursor": {
          "ref": "bf3996ad-45ae-4000-9b35-5cc24b2e5349",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0bd8414d-0ca2-4fdc-a2e4-2d3631a32134"
        },
        "item": {
          "id": "0016d7cc-a6a4-41d1-a11c-872a0a59d6cd",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "982165e2-73a9-492a-9a8c-ca6ab7e05a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38279a01-915c-41cf-81cd-727d09a332d7",
        "cursor": {
          "ref": "d5a69623-8b60-44c0-99df-55e2e1c58d2b",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ef5ad133-6233-4324-974d-1381ee474176"
        },
        "item": {
          "id": "38279a01-915c-41cf-81cd-727d09a332d7",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d8ce481e-7b7f-4bc6-92e0-fc8b9feb584b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0212671-9cfd-4915-884c-7d4b244cf9b3",
        "cursor": {
          "ref": "fbfcb409-abe8-4e62-bfae-4c4bbaa630ee",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ec85c9e1-ae37-4775-b0db-b741ad05c15f"
        },
        "item": {
          "id": "d0212671-9cfd-4915-884c-7d4b244cf9b3",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "4c599e9d-723a-40bd-987d-035219838e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab162e3-73dc-4fb9-b800-7ab8b5a1763d",
        "cursor": {
          "ref": "3501c0b0-8c90-4a2e-a67b-920e94f4c6fa",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "5a989ba8-ea40-471e-ba75-8ac3b0733f83"
        },
        "item": {
          "id": "cab162e3-73dc-4fb9-b800-7ab8b5a1763d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0062c3c5-57e8-40b3-8930-0e550e049b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74336c01-4458-49c9-9578-5a8492708db4",
        "cursor": {
          "ref": "5f19510b-d3ce-4998-aba9-6d1f1f5cc703",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f4604dab-978c-4942-8115-820d552601b2"
        },
        "item": {
          "id": "74336c01-4458-49c9-9578-5a8492708db4",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "24abaf57-d29a-4ed0-8fc4-3d219fc7a6cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb6ae1d-5cc2-490b-85aa-73f0fe79a5b1",
        "cursor": {
          "ref": "f2cb087a-9f1c-4b0f-a8fa-b49d249e9b13",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "2a6c4372-241f-4b79-87ce-3f00332ab12d"
        },
        "item": {
          "id": "dfb6ae1d-5cc2-490b-85aa-73f0fe79a5b1",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "8caa1e16-928f-4bea-892e-bf8eb4821ff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16bcb62f-22d6-49e6-ae95-a1e2ee7e4de1",
        "cursor": {
          "ref": "cda3facb-a151-4b38-83a1-4b512e5755fd",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f3fadb47-d674-45c6-8bcb-745a9e3493f1"
        },
        "item": {
          "id": "16bcb62f-22d6-49e6-ae95-a1e2ee7e4de1",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "4d03292a-6fb2-44f2-bd2e-1fb809ea0ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b04a6ec-6127-4a92-9a5f-0f145cbaba4f",
        "cursor": {
          "ref": "5379500d-c36c-4b6e-89d1-b3af71c809f1",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1cbfe56c-daf9-43dd-9bde-9e5eeac62b71"
        },
        "item": {
          "id": "2b04a6ec-6127-4a92-9a5f-0f145cbaba4f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "61794dd0-646e-48fb-b68e-719f85814549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a36a4120-17b6-4297-ac01-f0272bfbf46b",
        "cursor": {
          "ref": "0324e5e9-7173-46dd-a884-b96c0a3c9475",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d5d67e0e-6b92-4351-992a-98d55ee0c790"
        },
        "item": {
          "id": "a36a4120-17b6-4297-ac01-f0272bfbf46b",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "1ff6b490-6e78-4db6-aaba-217c807c8a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b457da5b-2cab-480d-bcc6-df6877d231ca",
        "cursor": {
          "ref": "4b5c3815-ddf5-4ac7-9f95-4ce9d251c244",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "185548c1-73cd-45b0-be1a-186c2cd2ccea"
        },
        "item": {
          "id": "b457da5b-2cab-480d-bcc6-df6877d231ca",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "dd1a8242-5165-4d07-bf8a-d40eee697c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb4eb0d-d05a-4e9e-aa67-72efc7c764e8",
        "cursor": {
          "ref": "d9fabcdf-e865-49ab-bc05-a22137d30203",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "84869f8f-46aa-4794-9fdd-debe398254b7"
        },
        "item": {
          "id": "4eb4eb0d-d05a-4e9e-aa67-72efc7c764e8",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d819a562-c897-4f5b-a115-df068abdd403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04aceda-32e2-49bf-b88f-ba01cb33b0a9",
        "cursor": {
          "ref": "1def534b-3f44-4334-874c-e08ea897b903",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "07878879-bcd3-49bf-a8ea-8a9552964b09"
        },
        "item": {
          "id": "d04aceda-32e2-49bf-b88f-ba01cb33b0a9",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c9f24a39-5496-41a1-85d2-3b515b232064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6778df57-db7a-49b5-8768-ebbc1ee352de",
        "cursor": {
          "ref": "cf8fdfa9-c241-4bf0-8d48-5d0b00c079a7",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "eb0465c3-3e64-4952-9339-a79528e3ee7d"
        },
        "item": {
          "id": "6778df57-db7a-49b5-8768-ebbc1ee352de",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "bb2dbe40-1cd3-4ff6-bb57-004ab3be129b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec1973b-d5ae-4cd3-9e15-4614135ee31f",
        "cursor": {
          "ref": "2cc50b56-a558-4443-9efe-50c45f8d0896",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ce75f830-8507-414c-bdd3-5a77b555a1a5"
        },
        "item": {
          "id": "aec1973b-d5ae-4cd3-9e15-4614135ee31f",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "74a0f9c9-f484-4301-8dd8-83c7ed093300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf1ab5d-41fe-4f48-88ca-7fdd6fb9f091",
        "cursor": {
          "ref": "322de397-6660-440c-b07b-515c252fe5b1",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a313f4ca-d5bd-43c0-a1c7-4eacfc4dd41c"
        },
        "item": {
          "id": "2bf1ab5d-41fe-4f48-88ca-7fdd6fb9f091",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9259e985-223f-4d7f-99c8-0a44f2626fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf95375-cdbf-43a3-a097-34d299198885",
        "cursor": {
          "ref": "427d3119-5af6-4ecd-9c86-4394f8dc84f5",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a2186427-4c30-484f-b44e-9002b8580676"
        },
        "item": {
          "id": "bdf95375-cdbf-43a3-a097-34d299198885",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a46180e0-f0b1-4016-b99c-cf786da34b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6624b0e-0852-4b72-b029-48a902ce9847",
        "cursor": {
          "ref": "99876903-64f7-446c-b855-edb2d7e880d6",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "735e8aca-92d4-4902-bb5a-abef14b0784b"
        },
        "item": {
          "id": "c6624b0e-0852-4b72-b029-48a902ce9847",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e1deed45-5a5f-479b-b743-b93151b0c49e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c6a33b-48be-406b-b633-28e63b4b558b",
        "cursor": {
          "ref": "111b19c2-5e9e-4d58-b7e1-cfc0d820843d",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ce452b87-12b4-494b-b109-03d7f6bb67bc"
        },
        "item": {
          "id": "e0c6a33b-48be-406b-b633-28e63b4b558b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0a82b00e-151b-45cc-a981-63af65a7d23a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d810e1d-0454-4a59-ad67-64d91362539c",
        "cursor": {
          "ref": "71e70d60-0914-4e25-9353-d8024aefe1c9",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "4d54e6eb-cf2b-4318-aa60-6f6f4f4a4cfa"
        },
        "item": {
          "id": "8d810e1d-0454-4a59-ad67-64d91362539c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "4bbd20b2-586b-4775-92c3-bec2fab351a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "ac990cc9-046b-43bc-8bbc-826095beac8d",
        "cursor": {
          "ref": "5704807c-0318-4134-bae1-872140c3a688",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c55e1bcf-e317-488f-b6b2-931c074effce"
        },
        "item": {
          "id": "ac990cc9-046b-43bc-8bbc-826095beac8d",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "108f281d-4ef1-4397-a352-d851a8c02935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "d833395b-e93e-4edb-91e5-d346d2a2e4b8",
        "cursor": {
          "ref": "6175ce4d-fed4-42bd-8414-5711db2cfc3d",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f85a1904-4a3c-44ff-bca4-66316e802196"
        },
        "item": {
          "id": "d833395b-e93e-4edb-91e5-d346d2a2e4b8",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "09040b44-735f-4c26-9efd-f848c316c4ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "9e2fb749-d27f-42a2-969a-776fd50ee697",
        "cursor": {
          "ref": "49c9a88b-d22b-4d9e-b4b3-ce71c37bd0f5",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "4940851b-4ba1-4994-8070-6553acbd6452"
        },
        "item": {
          "id": "9e2fb749-d27f-42a2-969a-776fd50ee697",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "62e019e4-9a3e-469a-b1f2-c52d37f0948f",
          "status": "Created",
          "code": 201,
          "responseTime": 9345,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a30d90-1e2d-4b2b-88b8-01eef35f2d01",
        "cursor": {
          "ref": "f8f9fc43-06a1-4996-bef2-ff6893163c7e",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "3ebab4dc-b885-44a8-b0f4-358129278df4"
        },
        "item": {
          "id": "66a30d90-1e2d-4b2b-88b8-01eef35f2d01",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "be53a6bd-c1cd-48f5-bfaa-d5269b42c5b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "d7d0862c-79be-4ece-a00a-d3364bfd960a",
        "cursor": {
          "ref": "5302c930-7bc4-430e-aa64-2eecb001519f",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "80f92b0e-5481-422e-a261-b29a9a44b811"
        },
        "item": {
          "id": "d7d0862c-79be-4ece-a00a-d3364bfd960a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "cbbc7f5f-8a94-41bc-9ba5-6df4b59af751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "a28ad7a0-4c3a-4753-b72c-68cf0dd1fc41",
        "cursor": {
          "ref": "9b3cba6f-21bc-42f7-a4b2-e9b6304e1a48",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "467fc4ac-e83d-4969-bae3-e497107d1944"
        },
        "item": {
          "id": "a28ad7a0-4c3a-4753-b72c-68cf0dd1fc41",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f491c252-ff5a-4a00-a033-8498e37c8bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 197,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7b9b1d-b63b-4cb0-96bc-f34b1ed903b2",
        "cursor": {
          "ref": "6ae3e352-8a77-4a63-9eeb-411e2d1e4fd9",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "2da3691c-27d0-4d21-863b-2b572f491ada"
        },
        "item": {
          "id": "1b7b9b1d-b63b-4cb0-96bc-f34b1ed903b2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3e9547c9-9ee5-4c65-b92b-7b6a96cdd88a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e45fb2-5e79-4038-a9e2-5cc730a38677",
        "cursor": {
          "ref": "e6317e4f-7b63-4007-9775-2022a3a8a373",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "bc176aff-97e9-4f33-bb32-07e59725bd32"
        },
        "item": {
          "id": "23e45fb2-5e79-4038-a9e2-5cc730a38677",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b82d8862-e89d-42fa-8d08-936781757b81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9632b94b-106f-41c7-bd83-92dc13f9b054",
        "cursor": {
          "ref": "cb159f13-b8ec-40df-a9f3-5f5d55de0c89",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "eed03256-6c50-456d-a6bf-6c8922ffee13"
        },
        "item": {
          "id": "9632b94b-106f-41c7-bd83-92dc13f9b054",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "55f7343a-ec1a-47b2-9f3b-ae506ba9b184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276fc424-8d87-4cc6-92c6-1671df2724a0",
        "cursor": {
          "ref": "302ef4ba-1e71-40da-8610-6ba2eb4218f5",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "329e5f41-9c0b-4095-aa08-e6e5d3781d24"
        },
        "item": {
          "id": "276fc424-8d87-4cc6-92c6-1671df2724a0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "68686f6c-cd14-4460-987d-3652de369bb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6166086f-838f-4d3e-9a74-0107e7dda0ef",
        "cursor": {
          "ref": "0b3347bf-4171-4bbe-8a60-81434ef742e7",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a49eb8f8-742b-427a-8a11-2c5520894952"
        },
        "item": {
          "id": "6166086f-838f-4d3e-9a74-0107e7dda0ef",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c5110374-dec5-43bd-b194-cb0798fe7cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a863ce69-255c-4b1a-a3ed-fe9210ee5ca5",
        "cursor": {
          "ref": "0a6e610c-51d9-4d68-b5eb-fa9eb6ed414c",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "273edcab-1c47-4a4a-b5de-c6146dee06e2"
        },
        "item": {
          "id": "a863ce69-255c-4b1a-a3ed-fe9210ee5ca5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a7584677-ffe4-4795-a7ab-1a2a8c788906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc75248-a54c-4498-81d3-b8bd01d62526",
        "cursor": {
          "ref": "fbe12897-1170-4b44-b791-9ecbab706e90",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1e82fbfa-73e1-4f7a-8744-3bb89cf3a644"
        },
        "item": {
          "id": "ffc75248-a54c-4498-81d3-b8bd01d62526",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "75d4f1cd-3d95-4aaf-bf0b-d4b304dead9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44455932-4aa5-4050-a8ca-bc92891a874c",
        "cursor": {
          "ref": "b927c0e7-b4aa-44db-8e85-6b0488273421",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "706479ee-d460-4b49-8627-d3f922ef8dd4"
        },
        "item": {
          "id": "44455932-4aa5-4050-a8ca-bc92891a874c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f5b64e9d-dc98-4c2c-9313-62fe30dffaed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c983099-c89b-494d-8a9c-01879a6041f6",
        "cursor": {
          "ref": "52b4ec72-52c5-432f-8d2c-39fa03014562",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ea3a8cf7-dccd-4cc1-a20e-af7484794ab0"
        },
        "item": {
          "id": "3c983099-c89b-494d-8a9c-01879a6041f6",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b5db7f86-efcc-4c9a-9e47-ae33d5080c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54be1e39-67da-4404-be4b-e85f9d06c1bb",
        "cursor": {
          "ref": "0e5ce040-1613-41fb-ac4c-df555800147b",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c8e4405e-d342-4c17-b736-de45171c05a2"
        },
        "item": {
          "id": "54be1e39-67da-4404-be4b-e85f9d06c1bb",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "fa65de82-989c-4bbc-8c84-cdba78779281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ecd38cc-0a00-49b7-8cbd-d5f1ec56bf6b",
        "cursor": {
          "ref": "c3425e6e-6588-4c98-a0d3-9a048face975",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "ed043a00-2417-4bed-921d-235d12bcb3ba"
        },
        "item": {
          "id": "5ecd38cc-0a00-49b7-8cbd-d5f1ec56bf6b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1edec9d5-2d37-457d-9028-23f3c74a33dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2bbec1e-eaef-4915-ac3d-184635adec00",
        "cursor": {
          "ref": "6238fd32-0010-4a1d-b8e4-33a34d575504",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "26f438a4-6793-43ba-9af8-1e106b3e286b"
        },
        "item": {
          "id": "e2bbec1e-eaef-4915-ac3d-184635adec00",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d707c043-ef33-4210-bdec-0c7d030d3f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d002c781-fa72-4ea2-8572-b222427bcd8c",
        "cursor": {
          "ref": "4916da1e-15a8-4d64-8e52-3656f24fd302",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "9310ee0d-ea91-49ef-b16c-0b609b4281b1"
        },
        "item": {
          "id": "d002c781-fa72-4ea2-8572-b222427bcd8c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4ff4a167-8443-44ca-9553-fdcf87065011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18cab6dd-79a1-4e8e-9d37-9bebe9133c9c",
        "cursor": {
          "ref": "0dbf35d7-8e21-4c41-adac-09d11856da8f",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "eeeb3d38-ab04-4f50-9c9c-600d737c0ac0"
        },
        "item": {
          "id": "18cab6dd-79a1-4e8e-9d37-9bebe9133c9c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "fae9d33f-28fd-4541-99c3-298a596134a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe8161f-5786-49d4-8e9c-8aacfedcfda4",
        "cursor": {
          "ref": "94634977-ec1a-4431-acd1-666f5128f7ca",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "0b29b95c-6290-4852-a9ce-0e08d6b8c3d5"
        },
        "item": {
          "id": "5fe8161f-5786-49d4-8e9c-8aacfedcfda4",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "df1c6942-718c-4018-a414-7fc74d426458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cff7a8a-780e-4e1a-8b87-9bd43b15aded",
        "cursor": {
          "ref": "e803c4c5-4f83-4711-8489-b13968a302ef",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "0f25d30e-5868-45d8-b733-4ced744a76ae"
        },
        "item": {
          "id": "8cff7a8a-780e-4e1a-8b87-9bd43b15aded",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "dfc88c9b-ded3-4d7b-be65-2def9014aec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb799afb-fc99-4e12-86d0-043cf257edff",
        "cursor": {
          "ref": "25461df0-07b1-4bc3-91be-9a18b1c11d68",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "cf1c2906-36af-43ee-a2c7-90bf2cf7c43e"
        },
        "item": {
          "id": "cb799afb-fc99-4e12-86d0-043cf257edff",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "df4768aa-6f2d-48a9-ae66-00561816e452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0f5424-463c-4b7f-9d3a-7168d760ef28",
        "cursor": {
          "ref": "60ad16b2-d91b-4b97-9047-00d88e6e981d",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "2edf8731-ecb1-4bb9-a2d9-b30c2d9a4f25"
        },
        "item": {
          "id": "1f0f5424-463c-4b7f-9d3a-7168d760ef28",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "103db4c1-ac1f-4472-90a7-70521c2981d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b74edd2-5d5d-4137-ab87-d232482a56c2",
        "cursor": {
          "ref": "24ac1612-48f8-4a56-87bd-686bf1f8ef91",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "523a15fc-5332-4105-92c1-5dcf773245fe"
        },
        "item": {
          "id": "1b74edd2-5d5d-4137-ab87-d232482a56c2",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5a4efee6-b500-49ec-9f0f-101dceb3bce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "233cbfed-fccf-4f0b-8a17-f726346fe77a",
        "cursor": {
          "ref": "1db8dac4-d5f7-4085-b79f-f40afe44251c",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "61fe35f8-44e2-4c8c-aa4f-f17a8aec5984"
        },
        "item": {
          "id": "233cbfed-fccf-4f0b-8a17-f726346fe77a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c6eae743-47dd-4c41-ad78-22a3d4d863f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2d0f76-7421-43af-9a87-25ec39fba5b8",
        "cursor": {
          "ref": "8abaff9b-3bcc-43da-8455-206e796d03fc",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "87d9de1a-6ef4-4926-a1c6-c89e3de97a3e"
        },
        "item": {
          "id": "7e2d0f76-7421-43af-9a87-25ec39fba5b8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2bd9413d-ccc0-4590-9c0f-cdb9ef1f3ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e761c1d6-d0ff-4e5e-bc72-b2ac1ea7f0d3",
        "cursor": {
          "ref": "0ce18239-197a-42c9-8213-1e48dfa0ecf6",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "17cf7388-bc4e-4d9c-a167-ddc9836c53f4"
        },
        "item": {
          "id": "e761c1d6-d0ff-4e5e-bc72-b2ac1ea7f0d3",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c3a7b56b-199a-4fc9-b690-b15ed050467e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f49e8965-dab9-4a80-8552-72d884855367",
        "cursor": {
          "ref": "75e09979-92fa-45e5-a089-cd8797eefab1",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "856aa429-5e94-423d-ac80-29a16af85c51"
        },
        "item": {
          "id": "f49e8965-dab9-4a80-8552-72d884855367",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8244dac4-f0e4-4ecb-ab27-444a33b4e7e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "026d80f8-240e-43f7-803b-9835196745ea",
        "cursor": {
          "ref": "067c3f66-b7e7-4dca-9601-7eb5e6524f42",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "0171726d-a04b-4b2f-8603-ea047a75de60"
        },
        "item": {
          "id": "026d80f8-240e-43f7-803b-9835196745ea",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "853ffba9-e85f-4e3c-88b2-9a4cb32be2a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "918cd2b2-3885-4304-a36e-56e9d0288f5c",
        "cursor": {
          "ref": "9642e304-c28d-40e1-8cfb-699e15cd93bb",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "057eefcf-d5a1-4ddc-a0b6-4b4d40731b3c"
        },
        "item": {
          "id": "918cd2b2-3885-4304-a36e-56e9d0288f5c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "38a7cb4f-ca6c-4eb1-9287-3072bbf1a859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c68de7-a04a-4846-9835-7df7b37606a0",
        "cursor": {
          "ref": "badac441-7618-4086-81de-d610c6c1bfa3",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "54c6562a-d59b-4bb5-a31d-e3ab8b986f83"
        },
        "item": {
          "id": "a5c68de7-a04a-4846-9835-7df7b37606a0",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4fe2c5f5-2dc2-49aa-b3cd-b4e0a5e11ddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5387dacb-bace-4f15-9d14-3b9aba0c5a9e",
        "cursor": {
          "ref": "183b211e-9c09-451f-888c-b746fd9d4c4c",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "2a46bbe3-64b3-49e5-900e-0f83f0a136f6"
        },
        "item": {
          "id": "5387dacb-bace-4f15-9d14-3b9aba0c5a9e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6634424d-4b13-43c1-887f-ec79bae7f719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b427a13f-9c80-43f2-83fd-72e44eb95322",
        "cursor": {
          "ref": "4635b0e9-cb8c-4872-9473-d699ba7bd063",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "306b9405-02eb-4b0a-a8c2-c612410fe110"
        },
        "item": {
          "id": "b427a13f-9c80-43f2-83fd-72e44eb95322",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ca950e85-3be4-4bac-8ed7-1a8c28d7b958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67632e9d-36a4-4a3f-aabc-b40a962cea15",
        "cursor": {
          "ref": "9ad6ed0b-aab2-4cdb-8f09-b4a5f958d887",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "507ef8e8-596a-4e2e-9370-5fbdd1e57443"
        },
        "item": {
          "id": "67632e9d-36a4-4a3f-aabc-b40a962cea15",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "87d1e041-760d-4e97-b3bb-b6eba39c9491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d73eb37-6d18-4c30-8a80-9be133297a6f",
        "cursor": {
          "ref": "6e05a4ca-4dd4-4cdd-ab64-2a6061319e17",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "7b629362-ad12-4e9e-b680-d643e3943f1c"
        },
        "item": {
          "id": "8d73eb37-6d18-4c30-8a80-9be133297a6f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ee9a1e95-8c6e-4af2-aa56-514a69df4c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f7b519f-4bde-4d99-b705-648799fafcb5",
        "cursor": {
          "ref": "2df2fb98-d750-4aeb-94d5-8b38e3acfa92",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "22968f88-56a7-4473-9622-152e3f342165"
        },
        "item": {
          "id": "2f7b519f-4bde-4d99-b705-648799fafcb5",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "3af04775-ccb6-4e8b-bf12-a040a36f1a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfc8a89a-9e5e-41c8-97f0-7a6889ab3086",
        "cursor": {
          "ref": "4fc41ed2-64a3-45de-aad1-31221527fb4a",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "8b06d8d9-e610-41d6-ae64-a43456076f0a"
        },
        "item": {
          "id": "cfc8a89a-9e5e-41c8-97f0-7a6889ab3086",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "cc4f5340-4389-4a6b-8192-d6e54097366b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ea17d3-9005-4cd6-9886-ef98d338e3f8",
        "cursor": {
          "ref": "d37ee779-4d18-4442-b47b-4d6a6656f484",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "474076fa-0561-41f6-819a-464f6801aa2d"
        },
        "item": {
          "id": "e1ea17d3-9005-4cd6-9886-ef98d338e3f8",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "52b9877a-659f-46b8-88df-e673009c502c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd8a4f9-e277-4466-8a74-3d7c4e6969f5",
        "cursor": {
          "ref": "f1f4a8fb-80eb-4782-9880-43530c77fdbf",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "7b5b1742-812e-43b8-afae-85642da1470d"
        },
        "item": {
          "id": "7fd8a4f9-e277-4466-8a74-3d7c4e6969f5",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "519a00cc-5c04-4609-9c1a-88e5e3ac9c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6833f07f-66eb-4355-8bd8-c3391904f8c4",
        "cursor": {
          "ref": "f30be6d4-6448-4f71-b466-0337bbeac0d8",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "bcc9406a-409a-4f7c-ac45-b5cb0133186b"
        },
        "item": {
          "id": "6833f07f-66eb-4355-8bd8-c3391904f8c4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "fefcdc8c-e9b9-4d32-a139-e59502e23df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15465497-664f-4865-8ce2-2f45eb702173",
        "cursor": {
          "ref": "205c2fa5-c200-48c8-9a79-c6f9b6a79897",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1b5ffb28-1296-4d25-ab95-92f0972f1f20"
        },
        "item": {
          "id": "15465497-664f-4865-8ce2-2f45eb702173",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a3cb4cf3-a8c8-466b-85e2-84b1a8e83057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1222dd15-232f-4cfb-b1c8-5391d77ddbf6",
        "cursor": {
          "ref": "3dccae1c-7665-4135-92ef-d274f1ae3c07",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "268305a0-f45c-40d6-b267-b0dd55b30242"
        },
        "item": {
          "id": "1222dd15-232f-4cfb-b1c8-5391d77ddbf6",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8a951b80-298e-469f-9900-9633215e9661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9caf0532-4247-4708-aa0e-1b771d715706",
        "cursor": {
          "ref": "77ca5a3e-71d3-459d-b48b-f398f97d08f1",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "2b022528-8cd5-44b4-a65c-faf389b2f5c1"
        },
        "item": {
          "id": "9caf0532-4247-4708-aa0e-1b771d715706",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "dbe81175-2bee-40a3-97fb-00cacaca2aae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a816c0ed-2b19-4b9d-83de-22850b3a6773",
        "cursor": {
          "ref": "fc2dd523-f5f2-492a-9bf2-c2edcb98afaa",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "241786a6-e2d8-4636-bff0-27aaf522749e"
        },
        "item": {
          "id": "a816c0ed-2b19-4b9d-83de-22850b3a6773",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1034387c-e750-4ab4-aada-d63478432316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e66e90e-74d8-4eab-b63b-c8ee15eae543",
        "cursor": {
          "ref": "6a838280-53c4-4d20-8ef2-98a2f980a720",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "c3b27d8e-de2b-492d-b65b-039f4c81c4f5"
        },
        "item": {
          "id": "2e66e90e-74d8-4eab-b63b-c8ee15eae543",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "fe3d59e4-c446-43f1-8d7f-452b76912492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02456d70-65b3-490a-a505-f63f0933e177",
        "cursor": {
          "ref": "3b6e8bdf-65b1-4eba-a4c1-92b913626c6f",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "c30b1b71-12da-44c7-b56b-07cf08fe41f9"
        },
        "item": {
          "id": "02456d70-65b3-490a-a505-f63f0933e177",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1080d899-0db9-4802-910f-c1141dd29c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28fdfe5-1bbb-4aff-addb-a090e58196b8",
        "cursor": {
          "ref": "3d00dfde-89f3-4e46-b32c-a5151f4f72c4",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "0885f087-a536-4fd0-9cdc-722f6796d712"
        },
        "item": {
          "id": "a28fdfe5-1bbb-4aff-addb-a090e58196b8",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "155b964c-9a58-4d5f-83f3-5c95238d5836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c08e2f-67f9-4e9a-a63f-4166f92374bb",
        "cursor": {
          "ref": "2ee4de95-501a-46ff-a5c0-f5509624ec3d",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a4b7e606-0ebe-4a09-bf9f-461e202ceb4c"
        },
        "item": {
          "id": "a0c08e2f-67f9-4e9a-a63f-4166f92374bb",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "56d81197-44ce-401e-8065-d827d2faab85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df65d63-d29a-4104-b0a0-bf2b85cbd471",
        "cursor": {
          "ref": "2c9493fc-0750-42e5-8014-a56d4792fa79",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "3e283032-b7a5-4dd5-857e-2654c8cb3dd3"
        },
        "item": {
          "id": "8df65d63-d29a-4104-b0a0-bf2b85cbd471",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "af51cd1d-075d-4439-b82d-3ed3164b5e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d229f2-9868-4138-b6a4-f2619cbf2c6b",
        "cursor": {
          "ref": "38892b4e-240c-4dfa-b3b1-d081f46e605d",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "c510a8b5-e3b0-4309-9702-47a386ac4aa1"
        },
        "item": {
          "id": "34d229f2-9868-4138-b6a4-f2619cbf2c6b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2438f95b-1700-4075-9cb1-5ace31d42be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4255e184-8b5a-4868-9aa8-30a9223b2e85",
        "cursor": {
          "ref": "86a3b125-6f1b-4f39-ba07-550d78856c31",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "f365989e-5919-4957-80c3-abbe20baf3d1"
        },
        "item": {
          "id": "4255e184-8b5a-4868-9aa8-30a9223b2e85",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "358a2934-205f-4178-8484-49c13599e7f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f21f39-9e0a-4ac4-aabb-5c0dfe903143",
        "cursor": {
          "ref": "577eaac5-da9b-47b2-825d-963ee21e9ce7",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "32c00059-e028-40fd-b99d-4c0773552967"
        },
        "item": {
          "id": "c5f21f39-9e0a-4ac4-aabb-5c0dfe903143",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "66963f0d-0ce1-4485-b3c9-7c7ac63f0098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb9ad22-01a9-4c69-b98a-eaa300093cc3",
        "cursor": {
          "ref": "e6fb3cd7-e59b-4af1-b74a-cf51b8b1f645",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "2ec9c40e-939f-4ae8-8713-73387b99e078"
        },
        "item": {
          "id": "eeb9ad22-01a9-4c69-b98a-eaa300093cc3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "71b73d4e-1cd2-4b97-97be-3176343961a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f72a91-ba92-4f39-995c-713dc29b7c31",
        "cursor": {
          "ref": "f49a49dc-ded3-449d-aaf8-ba14b4272f99",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b51b52af-1aac-4f95-b4ca-5d3992f33577"
        },
        "item": {
          "id": "d2f72a91-ba92-4f39-995c-713dc29b7c31",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7822a285-e353-4ecf-b9fd-c2b1ab141a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c6b1039-eecb-4b98-a081-61b5ad3c1c92",
        "cursor": {
          "ref": "12453f96-f4d8-4563-bb45-3efff9cffdaa",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "cd7cfee9-73d9-4936-bef9-dc1520b1e036"
        },
        "item": {
          "id": "9c6b1039-eecb-4b98-a081-61b5ad3c1c92",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7c0682d2-3088-4a55-99c1-8bef2749cb3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f74694fa-db62-45ff-9648-3616100d59b0",
        "cursor": {
          "ref": "4e845b4f-1133-4b6d-b7ca-3dd5894f9ea8",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f77f570e-f133-4dba-929c-c79ad0ff1401"
        },
        "item": {
          "id": "f74694fa-db62-45ff-9648-3616100d59b0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1a509553-5124-471f-bfee-29bdce2d026d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7589c66f-1f4a-4eac-a0db-ec9095184f99",
        "cursor": {
          "ref": "59fb2a56-34b8-4561-ab0b-264b329364f3",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "58bf497e-4554-48f1-bd64-a19a594dd25a"
        },
        "item": {
          "id": "7589c66f-1f4a-4eac-a0db-ec9095184f99",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "163e21da-75e8-4ea9-b9a8-16889798338a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba04495-7bc5-44c6-b84e-201ebcaf044d",
        "cursor": {
          "ref": "75f71942-9277-4312-9528-108afc9dcbfe",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d48f858a-ccf9-4207-a49b-7248d97d9027"
        },
        "item": {
          "id": "dba04495-7bc5-44c6-b84e-201ebcaf044d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "276c678d-c9f3-4dc4-b61e-711d7d866a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712f1912-0546-4c3c-974b-cc0672c4d184",
        "cursor": {
          "ref": "07b2c347-d4c1-4676-95f0-1dc9e02b3f37",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "3d434f31-257a-498f-8bb8-de6aab21c7d0"
        },
        "item": {
          "id": "712f1912-0546-4c3c-974b-cc0672c4d184",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9971a115-b7aa-4973-9e03-81237efb17b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdeaaee2-db5e-4cc3-9c6d-ea2e4343dc7f",
        "cursor": {
          "ref": "edda27d9-f705-4c38-a4d0-cf76d7e223ff",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "51caf403-7db1-48b7-9cb9-9b9b15828439"
        },
        "item": {
          "id": "bdeaaee2-db5e-4cc3-9c6d-ea2e4343dc7f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "02aa6ffd-aff0-4a4f-a5a1-0a7389da1c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1eae061-608f-4de4-8b56-8cf568975a14",
        "cursor": {
          "ref": "e85da826-299c-4516-89ea-0c43f0d75380",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "00f4adc4-0ccf-4f44-9c06-35d840d2e524"
        },
        "item": {
          "id": "e1eae061-608f-4de4-8b56-8cf568975a14",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "daa94fea-16b1-4fd7-8cb7-d3bbb8b63e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a45e1c29-9967-4326-8a04-226fde9522f5",
        "cursor": {
          "ref": "07849f35-c60e-486e-9b92-b85d5a7fc398",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4429eb8b-2b0f-4392-a237-0bbd7b701eea"
        },
        "item": {
          "id": "a45e1c29-9967-4326-8a04-226fde9522f5",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a33ec0e5-760f-4548-b602-13c058e5f4bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1574bf80-38db-4b16-9948-1fcfcab5e0e8",
        "cursor": {
          "ref": "52b25851-38c6-468f-8d5f-ea7ff8463034",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d0436692-1b4f-4b67-a78e-e49c5ad44eb1"
        },
        "item": {
          "id": "1574bf80-38db-4b16-9948-1fcfcab5e0e8",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1ac082eb-1fb3-460c-b6b6-bdace84af858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cfa615d-bb62-4253-9a38-e1c620cc2415",
        "cursor": {
          "ref": "a12fa3ae-66e8-4500-81dd-f5ec30b71776",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4f768179-47e0-4059-9219-dabba8bd7aa7"
        },
        "item": {
          "id": "8cfa615d-bb62-4253-9a38-e1c620cc2415",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "27713309-1a97-428d-a0a0-9ec5aab1d9f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ea3be0-40fc-416b-a0b1-a23350adcb00",
        "cursor": {
          "ref": "0ee3b43f-497b-4a74-a4d7-e2ca5d588abe",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c5cab2fa-015a-40e3-89f8-7924c674dd0a"
        },
        "item": {
          "id": "31ea3be0-40fc-416b-a0b1-a23350adcb00",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c337c2ec-44d9-4d1a-8050-674baaf723f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e7dba4-12ea-479a-934d-ab414635d225",
        "cursor": {
          "ref": "8287686f-3fe8-4acd-a4ed-912d39653d1f",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "f193881b-1cc5-43fa-8456-4e3876c73a40"
        },
        "item": {
          "id": "a8e7dba4-12ea-479a-934d-ab414635d225",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "05c6bcd1-ddef-44cf-a0dc-428034fe29d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "282b8fa9-2e8b-4867-b80c-008bcd35d59c",
        "cursor": {
          "ref": "efa56457-9413-4445-9dfc-fbf0aa520035",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "3b1204f3-e4b3-4cef-aae7-97ca6e927fe8"
        },
        "item": {
          "id": "282b8fa9-2e8b-4867-b80c-008bcd35d59c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "bf91cadb-d958-43dd-bf5a-8d9a55f0e8f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1364ec68-6a3d-48c8-907d-096154d244f0",
        "cursor": {
          "ref": "6a79ab28-096e-4c32-be6c-7d6d2caa3463",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a120a7fe-7dce-48de-ac1c-eb1b424e9c0e"
        },
        "item": {
          "id": "1364ec68-6a3d-48c8-907d-096154d244f0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3f2b3450-658d-4215-9609-6549fc459b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c320ca50-bc2b-4a16-b961-347bd2d51cf4",
        "cursor": {
          "ref": "2e5bb028-0d64-4bab-af45-2cbaf8f14ddf",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f1440940-26b6-4064-aa14-895af8d13e2b"
        },
        "item": {
          "id": "c320ca50-bc2b-4a16-b961-347bd2d51cf4",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "0660bc10-88d0-4096-8065-90fd8e34f16a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2da5b6d-c786-4d87-91b8-113a34979640",
        "cursor": {
          "ref": "a1b3c7cf-e578-435d-ab01-3a062eb3b34f",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ed9a2706-00d8-481e-82c4-6e5796c7dc20"
        },
        "item": {
          "id": "b2da5b6d-c786-4d87-91b8-113a34979640",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "7b49d751-3389-4952-b5ac-87f49903d86f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e39734f-4947-4e92-a52c-77055cb4120e",
        "cursor": {
          "ref": "876f6b8e-c605-4497-a50c-5ebd336f6ec2",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "fe7abf20-d7c1-4634-9387-5a772cc08752"
        },
        "item": {
          "id": "1e39734f-4947-4e92-a52c-77055cb4120e",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a72d7033-de11-47b1-9be3-89da37ac7d11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0670b26e-d8ad-40e6-9315-4cca009b19aa",
        "cursor": {
          "ref": "491b8bf8-fafd-4f08-8e67-43719bb4dc43",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ad591720-4601-45d6-a455-1712f4761fd2"
        },
        "item": {
          "id": "0670b26e-d8ad-40e6-9315-4cca009b19aa",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "e974bbcd-e405-485b-aa99-9621d229bc18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "085beb4e-6298-4a5b-9d96-f94491ea2d95",
        "cursor": {
          "ref": "6c6ebfcd-0e05-48ef-8018-44eb718cc69e",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "afc0fc68-1323-4fb9-b951-681d8b3bfac9"
        },
        "item": {
          "id": "085beb4e-6298-4a5b-9d96-f94491ea2d95",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "0d4bab55-f836-4ff0-99f4-e69d0836da55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb04f609-81ab-482f-a117-01dc8ff0ab82",
        "cursor": {
          "ref": "0c786c4f-b8d1-4a7c-81e5-c05660058c9e",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "93bf0e67-e5f0-43bb-b2f3-342bd9602860"
        },
        "item": {
          "id": "cb04f609-81ab-482f-a117-01dc8ff0ab82",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "04703b95-6660-4a01-bc31-84bb635c59d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 200,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8181a58a-2d75-480e-b049-84db500fb7b8",
        "cursor": {
          "ref": "1dd5b6a4-2a9f-4f9a-a9dd-4f08a5fef224",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "8b86cad6-b870-4b45-8c0e-d2d06cd6b1cf"
        },
        "item": {
          "id": "8181a58a-2d75-480e-b049-84db500fb7b8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "36885fd4-9271-4ba9-a1c0-3a66fe2c5e31",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 131,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1728426-b934-43c4-8999-c1bdb29f2d02",
        "cursor": {
          "ref": "1c725111-8ee1-4d0c-a0da-7f996e392cc8",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8b7e9d5b-a1a7-4087-a1d6-e0f4846017e5"
        },
        "item": {
          "id": "f1728426-b934-43c4-8999-c1bdb29f2d02",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d17e5c9f-a297-4dd2-b278-bd8a9246a573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc262f78-65aa-4f98-a75e-825100e27f04",
        "cursor": {
          "ref": "3c827644-3bc7-46d2-9108-5600d11e65e0",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "8af321c3-2570-4f3a-9b29-83f50d3e2868"
        },
        "item": {
          "id": "bc262f78-65aa-4f98-a75e-825100e27f04",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "0fb22a00-f76d-4958-8cd0-03d11a7c2455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "584c46c7-c455-486d-8049-38ddf365872d",
        "cursor": {
          "ref": "f1d81726-3c80-4f70-b4ce-56f0250a410a",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "9bc9172d-efd6-49ad-be0b-4b6c8d2129f7"
        },
        "item": {
          "id": "584c46c7-c455-486d-8049-38ddf365872d",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "2d0df30e-ffd2-4c5c-88fc-011ebd4bf911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a818f39c-a1a4-4847-b842-a3861f219397",
        "cursor": {
          "ref": "e103b030-00f0-41d8-9e5a-e55564f6c671",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "0faefeb1-ac36-43a9-9479-780ac3e89e71"
        },
        "item": {
          "id": "a818f39c-a1a4-4847-b842-a3861f219397",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "2af31b28-986e-4cad-8454-40311bf48c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73616973-ef91-40c3-907b-9d4e6b738653",
        "cursor": {
          "ref": "eb81b67f-8689-43f3-834e-3d503b16d49b",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "fac5431e-0f6f-4f7e-b6db-a377e3bdebc3"
        },
        "item": {
          "id": "73616973-ef91-40c3-907b-9d4e6b738653",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "799cee7a-c1c0-4644-86ac-1bc77349ed55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc13695-b063-438f-9573-a122e9c465ab",
        "cursor": {
          "ref": "0a953a5c-4291-4d19-8a9f-94ad0df6d154",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "6ae3093d-bec2-484c-b8b1-47f5dc22b102"
        },
        "item": {
          "id": "8fc13695-b063-438f-9573-a122e9c465ab",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b1cdecfd-6678-436d-b249-666cd2145feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee04f024-89d7-4eb7-96ab-6652fbe5eaf3",
        "cursor": {
          "ref": "452b7ade-b290-4e82-99d4-82067cba8449",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f9434171-4496-4608-92e8-c287e59a959b"
        },
        "item": {
          "id": "ee04f024-89d7-4eb7-96ab-6652fbe5eaf3",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f2161b0b-79b4-4f84-96aa-9e84ef7bd0db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "940acf2f-feda-4b3f-b625-d70ad9dbb683",
        "cursor": {
          "ref": "9e5c4945-d054-49bc-ad72-0ee5fdd17039",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "447481f3-0f18-47eb-866e-c77660a1138b"
        },
        "item": {
          "id": "940acf2f-feda-4b3f-b625-d70ad9dbb683",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "af30650d-95a3-4113-b068-6dcf2731c6f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414c0c80-190b-4c30-83cb-0c57d1d16946",
        "cursor": {
          "ref": "94b653d7-3d3e-4555-9225-1b2a1eea8e5b",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "9947fd27-10cf-4cb0-9834-61ce28e08b15"
        },
        "item": {
          "id": "414c0c80-190b-4c30-83cb-0c57d1d16946",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ff862dca-6364-42dc-a968-ac5a3352a162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d1a32a8-8f9e-4403-be94-2b774703eda3",
        "cursor": {
          "ref": "5698b229-a913-40da-8f1a-c7c08b530e29",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7223c3c0-61b1-4fec-a74d-845cebe0825f"
        },
        "item": {
          "id": "5d1a32a8-8f9e-4403-be94-2b774703eda3",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "5ad1fa07-efcf-4c56-ae14-5dff8206ecfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7453b433-b01b-41ed-bf3e-74e7bbaf845a",
        "cursor": {
          "ref": "068cf468-b841-4e7c-8cab-eb1bf57b6883",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "2d491a60-3c1b-42df-a1c9-99b92913bff1"
        },
        "item": {
          "id": "7453b433-b01b-41ed-bf3e-74e7bbaf845a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "da24b89a-89cd-4b77-893d-fe4b6cc69394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407a9f0f-3823-4466-961b-607fd6ea215a",
        "cursor": {
          "ref": "16f058b1-74b7-4509-893f-664822841e98",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "59ed7bb9-cd22-4e8e-86f0-d382bb7a025d"
        },
        "item": {
          "id": "407a9f0f-3823-4466-961b-607fd6ea215a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "5cb88217-fc32-4f08-80f9-c422d77164a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd22033-7c2a-406f-bcd2-13018f3f2b24",
        "cursor": {
          "ref": "e12f58c2-7af9-406c-b932-9cf9e6126572",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "18d34173-395e-411a-804e-73d34cf4051e"
        },
        "item": {
          "id": "6dd22033-7c2a-406f-bcd2-13018f3f2b24",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6e7ab94c-5da9-4521-9bdd-f84961118774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbbaf923-e161-457b-8b34-160ad58f439a",
        "cursor": {
          "ref": "e5d2decb-6714-4207-bef8-f47f2dcebaa8",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b1a68e32-1baf-4530-953f-28c789f849a3"
        },
        "item": {
          "id": "bbbaf923-e161-457b-8b34-160ad58f439a",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "2ae19d99-fc93-461f-a2a3-eac8d6f838fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d877b729-46a1-4d90-bb4e-c802eb8af3ba",
        "cursor": {
          "ref": "080dcd11-e8be-42ea-a582-767d54a22745",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "260d79e1-c8bc-4840-8e16-ce5177cb68f9"
        },
        "item": {
          "id": "d877b729-46a1-4d90-bb4e-c802eb8af3ba",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "690ae808-3dbf-4b48-911c-a85273f688b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1567e76-e56e-4de9-9760-110ef76d73ea",
        "cursor": {
          "ref": "9364f290-dcc4-432a-a160-9332c3a0d09d",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "af77eeda-c4f9-4e58-8293-bd0a7be90101"
        },
        "item": {
          "id": "e1567e76-e56e-4de9-9760-110ef76d73ea",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ead68411-be6b-415e-ae1a-0e264582ba0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0977a4fe-da63-453e-ace5-8a3e17eed715",
        "cursor": {
          "ref": "22c7a3f6-b118-4dde-be6c-f80fd8ee6a6e",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ac7efeb0-95da-4c48-a3a3-4d116d69fa04"
        },
        "item": {
          "id": "0977a4fe-da63-453e-ace5-8a3e17eed715",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "7b5b87f5-ea27-4722-81d3-a6c43da19c91",
          "status": "OK",
          "code": 200,
          "responseTime": 327,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "50c49e73-c84e-4828-91af-6e071c80193c",
        "cursor": {
          "ref": "50509a97-35dd-4410-b9f3-d07800be174c",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "76d25288-91d9-4039-8d3e-cb0a53e3dbcc"
        },
        "item": {
          "id": "50c49e73-c84e-4828-91af-6e071c80193c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "9eb3e974-23e5-4ab9-a4ff-1cf85d30b15b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d3785d3-c3b7-497e-ba68-0d3045c2830e",
        "cursor": {
          "ref": "ec9173c9-8332-44a7-bbec-6a1183ffd937",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "2ba140e4-fab8-4bbe-8b53-a66e35efc1a9"
        },
        "item": {
          "id": "9d3785d3-c3b7-497e-ba68-0d3045c2830e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "1f492b47-c241-48a0-b230-20553c3613d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb7bc02-c811-4d13-8eea-05afbb3e51ea",
        "cursor": {
          "ref": "c6a46774-4e82-49d8-9b8f-54d8621fdfd5",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "21925318-d786-4138-9284-b09f3d24d40b"
        },
        "item": {
          "id": "acb7bc02-c811-4d13-8eea-05afbb3e51ea",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8c976399-ab78-4f19-a9d5-61f9d2bb029a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f730248-5df7-41f4-bcc9-169aeb07c206",
        "cursor": {
          "ref": "662d8da5-0d53-4112-adc4-e643604850b0",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "4e070ca9-84e6-4ffc-bbb8-e1077128fcaf"
        },
        "item": {
          "id": "6f730248-5df7-41f4-bcc9-169aeb07c206",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "bdc4591a-769b-45fb-a7bb-95955676d60b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed2aa8b-2c59-4f5a-9ba8-aa33c08766bc",
        "cursor": {
          "ref": "561cae37-3a76-400c-9ef5-1ac6eeac5edd",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a2bc783b-1b09-4612-8722-33f701f64cba"
        },
        "item": {
          "id": "7ed2aa8b-2c59-4f5a-9ba8-aa33c08766bc",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4b835a91-9bd6-4ea4-a3d3-dacde3c5cff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a3a27d5-6759-45c5-934d-f24ec827de8a",
        "cursor": {
          "ref": "c65a6700-d6b2-46cb-837e-7ab3c33b9af2",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a33318c3-1258-4f64-9aaa-73b6394ecddd"
        },
        "item": {
          "id": "3a3a27d5-6759-45c5-934d-f24ec827de8a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f4745dc4-f492-4b80-bec2-a6486894c415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f2d08a-0b7f-4376-b90c-7625f4fb0036",
        "cursor": {
          "ref": "c2af1f04-ce8d-4c31-b26e-5770a8adc88c",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "21dddb46-f622-43a9-b87c-28e5c0d20893"
        },
        "item": {
          "id": "50f2d08a-0b7f-4376-b90c-7625f4fb0036",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "0ab5fe09-eb11-4d65-ae63-a375271b0bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17098ce7-ea70-4d63-92fd-74ba24fff215",
        "cursor": {
          "ref": "1e782f0d-ed75-4600-932c-77c16171aa00",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "46d903ab-5d2a-4382-b80c-c442ba939591"
        },
        "item": {
          "id": "17098ce7-ea70-4d63-92fd-74ba24fff215",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "596a0741-bc5d-4028-b542-ff11e6f0f351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e472eb56-aacd-4eb7-bc24-7bfa4ad78ecf",
        "cursor": {
          "ref": "6a43ab4c-0ef7-4844-96fa-4d1b62e0a06c",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "048dcacf-7b94-441f-959a-5786f8792e37"
        },
        "item": {
          "id": "e472eb56-aacd-4eb7-bc24-7bfa4ad78ecf",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8fff6fa1-2539-4e61-9cce-42121f695f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ba0af8-0267-497b-863c-0832f47d5a64",
        "cursor": {
          "ref": "c4b80db9-91aa-4a66-b710-6e0d0fa02bf5",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "5017c610-37af-424d-aeaa-c0ad2d21e313"
        },
        "item": {
          "id": "77ba0af8-0267-497b-863c-0832f47d5a64",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5983cc1c-52cb-4e3d-99e0-04db128c5c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0236f299-855d-4b0b-ad9a-1b4e4236319c",
        "cursor": {
          "ref": "f553e6ea-40a8-4a35-9d57-1300d357b360",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "46cd9a9a-2e0b-4a5c-b246-63217b08dd2d"
        },
        "item": {
          "id": "0236f299-855d-4b0b-ad9a-1b4e4236319c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "eea7fa93-c940-429d-ad35-218776ee25fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a42e64b1-00ab-4244-ab90-3994df424aa2",
        "cursor": {
          "ref": "64e27e96-cb28-4ac8-81ff-3f84fd24053f",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "c62ff061-4d55-4c6d-b57f-9df461e46953"
        },
        "item": {
          "id": "a42e64b1-00ab-4244-ab90-3994df424aa2",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "46a00d6a-b7a1-471b-b601-fbb3df7a5cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8cf2ecd-5f5a-4ab4-8d4f-cec3ae5e0f11",
        "cursor": {
          "ref": "8df1febd-6acd-40d6-b108-509436080b51",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "cdf26a81-a92d-4713-acb9-164aba9df305"
        },
        "item": {
          "id": "f8cf2ecd-5f5a-4ab4-8d4f-cec3ae5e0f11",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d46ae0c9-9ca4-4724-96cd-9f449aef7bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d5f4ba-6ef4-4a6c-85fd-42459247f8cd",
        "cursor": {
          "ref": "6166224f-67d0-4987-9884-e147a5337eea",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "cbe6d6f0-8e42-44a6-97f5-1b237088b445"
        },
        "item": {
          "id": "01d5f4ba-6ef4-4a6c-85fd-42459247f8cd",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "77319338-0793-47cd-b31a-975d0e05707e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9de4513-42e4-418b-b349-1a5167c97424",
        "cursor": {
          "ref": "86ea7b74-fb05-42bc-a5d2-1298e4b810c9",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "08ef5216-d80a-4929-bdec-143e57bc8143"
        },
        "item": {
          "id": "e9de4513-42e4-418b-b349-1a5167c97424",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "96230e8d-fe03-4163-95b7-346ebaddfdca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "087e5df5-d06e-4240-af64-65dc9e0ff2d4",
        "cursor": {
          "ref": "0ca54f51-9bd0-4c47-a9ab-c8e586b228c3",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "52405787-b922-4e21-bc68-503548888391"
        },
        "item": {
          "id": "087e5df5-d06e-4240-af64-65dc9e0ff2d4",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "89710f1c-8b0f-4402-9380-a2b2ab41651b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d97fe59-c65b-4d3d-b35d-41c4ea5bf86b",
        "cursor": {
          "ref": "1aa91642-206b-4d06-9863-10c7eac421c8",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "678e56fa-8021-4ebb-a13d-49149af6cfc8"
        },
        "item": {
          "id": "9d97fe59-c65b-4d3d-b35d-41c4ea5bf86b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "02987153-a1a2-4718-9e46-563a8f63abc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf11dff4-6570-4977-982c-87ce9582ed32",
        "cursor": {
          "ref": "a57d6e5d-613b-43eb-8b6d-1496e56cfe09",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c44632a1-b5ec-4008-9887-db058854cc08"
        },
        "item": {
          "id": "bf11dff4-6570-4977-982c-87ce9582ed32",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "91a4822c-f5ab-47ea-b5e8-069f95230c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c84b4bd-d037-4a7a-9bda-f502ad66023f",
        "cursor": {
          "ref": "82c160af-3ce0-4fe9-af6d-db768473baaf",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "1ab49d0f-5ec8-402a-a718-75df3e7b4e18"
        },
        "item": {
          "id": "0c84b4bd-d037-4a7a-9bda-f502ad66023f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "7840aa53-75cf-4717-8bc3-85b495178b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "106bc26d-6c93-433e-be4a-b015d6da2428",
        "cursor": {
          "ref": "46a6d431-4063-464e-aa91-9f4730672b0a",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c9b3cf67-a09d-4387-a976-f62fb6cd0536"
        },
        "item": {
          "id": "106bc26d-6c93-433e-be4a-b015d6da2428",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "da3e60a5-d2b5-4b6c-818a-d19bc33210b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94458242-9415-401d-90d5-af5368968cb7",
        "cursor": {
          "ref": "3aef1683-e6f3-4f67-b3a1-a7dec5ed0293",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "3b44e7e7-c297-4376-9b1b-6a0e802ed195"
        },
        "item": {
          "id": "94458242-9415-401d-90d5-af5368968cb7",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c4f22152-a733-4cf0-bdd7-0dd7a2627ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74eb84a8-744d-4b8d-ae8b-74ed6a63dbf3",
        "cursor": {
          "ref": "2badbfe0-702c-4015-8be1-f365cd435a81",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "7081533f-4fe4-45af-b4b5-2dab314b0c13"
        },
        "item": {
          "id": "74eb84a8-744d-4b8d-ae8b-74ed6a63dbf3",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1d099258-0379-4069-a296-d6e0be6d2516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80cdc313-053d-4398-9d95-f6c51d5a79f4",
        "cursor": {
          "ref": "80a3ef10-1fad-4f05-9bfc-3abb64bde7be",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c4d07449-18e3-46ca-8f27-46037d38be0f"
        },
        "item": {
          "id": "80cdc313-053d-4398-9d95-f6c51d5a79f4",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ea61e37e-f800-424b-aec2-665134b798b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c458c6e5-d687-48e2-ad8d-b852bdbd1063",
        "cursor": {
          "ref": "0c44a0f1-9510-43a1-9a89-6a276853b158",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e4e31dc3-11e3-41db-87df-28bb0ef9e845"
        },
        "item": {
          "id": "c458c6e5-d687-48e2-ad8d-b852bdbd1063",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "15f1d8df-3442-47bb-aacd-04abfe265983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4686d110-a6d4-4b79-80fe-5a97103c221d",
        "cursor": {
          "ref": "6bfdabb6-5ebb-4a80-a872-9edffe4d3447",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f773fd40-0010-4294-80e0-0fb88ce8e2f4"
        },
        "item": {
          "id": "4686d110-a6d4-4b79-80fe-5a97103c221d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ed34522b-6b3d-44bb-8de5-bfbc6b81971a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d1d60a1-12df-42bf-9895-292c80f28253",
        "cursor": {
          "ref": "0e21ffb5-8cb4-4097-a7f6-5f104aeb6fe3",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a9b0d07b-4a71-42bf-8732-061d17efa08c"
        },
        "item": {
          "id": "6d1d60a1-12df-42bf-9895-292c80f28253",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "01b889bd-4847-4a1e-9910-a1f5692da424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b06189ff-d109-4950-9990-097cd6bf1a8c",
        "cursor": {
          "ref": "7ca5e489-7904-4091-9bb6-e7fefaac500b",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "8812e27e-de49-47b3-9965-b5aba5b88d99"
        },
        "item": {
          "id": "b06189ff-d109-4950-9990-097cd6bf1a8c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f77815b1-5a14-40dc-8cdb-5b771ce4ef5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c123a6-d0ce-4c57-8a6e-f719fa51c125",
        "cursor": {
          "ref": "03f6db8d-85eb-43dd-9b34-072a8dbcdbec",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "7526ddab-eb4d-496f-8d93-996a3601086e"
        },
        "item": {
          "id": "64c123a6-d0ce-4c57-8a6e-f719fa51c125",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "3a6c2174-1c10-4c33-843c-1b4050d63004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a068de80-325a-4bd0-9f4c-b43e45c8f301",
        "cursor": {
          "ref": "a3aefe4a-2c2b-4c30-890f-ae112c31841b",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ac988dec-086a-4518-b830-191a320c5f3d"
        },
        "item": {
          "id": "a068de80-325a-4bd0-9f4c-b43e45c8f301",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "7cf5e262-7aba-45fe-b250-9d67290da748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e506475-85b7-4131-8954-e111725f5a32",
        "cursor": {
          "ref": "9d47195b-d324-4619-904d-7e68f1cfe49f",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "da1dbbf9-b686-4246-91c3-4c8731cd441c"
        },
        "item": {
          "id": "7e506475-85b7-4131-8954-e111725f5a32",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "fd5bd4ed-26e8-4c96-ad03-bcefd5d44c8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac778fd-c8f8-46b5-ba71-5a5c6952c88c",
        "cursor": {
          "ref": "252524db-ebfb-4227-ba98-377bf3074c89",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "1998500e-a779-4e4e-bd44-c8de7ce742b8"
        },
        "item": {
          "id": "9ac778fd-c8f8-46b5-ba71-5a5c6952c88c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "0d3f584c-82b1-437e-a786-bbd5cf3189e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb66f76c-b2a6-4df3-a6ab-6c1154dc1045",
        "cursor": {
          "ref": "2b94feec-b0a1-4dd8-a860-37d41809e7c5",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "abfb63e8-ddd2-481b-b2c9-fad08e1673f3"
        },
        "item": {
          "id": "fb66f76c-b2a6-4df3-a6ab-6c1154dc1045",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b2be04b2-7557-4572-877f-6f603b1f7c90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32bfb696-8bcd-4ef0-ab72-e3a49022e2e8",
        "cursor": {
          "ref": "2ec36992-656a-494f-9570-ad5496d6fc33",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "12083f89-e983-4487-9162-ac7814a25c4e"
        },
        "item": {
          "id": "32bfb696-8bcd-4ef0-ab72-e3a49022e2e8",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c0b0991c-9aaa-475a-808b-6fabf6420d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c4dfa37-27f4-4430-a07b-d6e77646f7b3",
        "cursor": {
          "ref": "f3cabef1-81b9-43f3-990c-ed7749202bbd",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "11cf34e5-e77e-447d-a33c-eb3ca0a9d887"
        },
        "item": {
          "id": "9c4dfa37-27f4-4430-a07b-d6e77646f7b3",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f4455187-c4f0-4061-ad61-a74f7a795840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d627b72-c9d8-4c3f-aa6e-058785f2abf1",
        "cursor": {
          "ref": "df08cd05-de07-4a74-8301-2d9024620e5a",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ebca3d51-8567-406c-9b6a-1be255887585"
        },
        "item": {
          "id": "6d627b72-c9d8-4c3f-aa6e-058785f2abf1",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "7b031dd4-4dac-479d-9789-3445395dc5f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d941af-255a-458f-bf16-3bdbed821e43",
        "cursor": {
          "ref": "0ccdc476-6790-4563-8252-58b9e06fd543",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "7b2cb7c5-8b91-4a7f-bbb8-0bb18e231319"
        },
        "item": {
          "id": "43d941af-255a-458f-bf16-3bdbed821e43",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "bbfa1a2a-7ad6-416b-ae03-83b4606f2a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa663f8-dced-406f-bfb6-41ccdeccc08b",
        "cursor": {
          "ref": "6b6b91b1-bba1-46a0-9fd7-4ef229a2ec39",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "925085e9-ebea-41e2-997a-58f28dde6277"
        },
        "item": {
          "id": "dfa663f8-dced-406f-bfb6-41ccdeccc08b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "bce4d449-f4da-4597-af8e-b59e2f0e2a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39b5b3f8-2ac4-480e-9dfa-6090f4283ddb",
        "cursor": {
          "ref": "1192f2c9-fdab-4981-9a43-3ec7ec2dfab9",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "3d3ff109-5034-4f62-bdcd-da539ede454c"
        },
        "item": {
          "id": "39b5b3f8-2ac4-480e-9dfa-6090f4283ddb",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c684c6b5-2bf7-4bd5-bb9f-61296b47ccf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f54f30c-1f20-4bc4-bfc3-e3d39dcdbfe6",
        "cursor": {
          "ref": "6c7ff4f2-cfd8-43a2-895d-9b9cb784ee5e",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "30b7b664-4327-41a2-a583-e9a6c4d5eb0e"
        },
        "item": {
          "id": "3f54f30c-1f20-4bc4-bfc3-e3d39dcdbfe6",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e08e4cd4-3954-4911-bb41-7fdcd4f43977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01fc8d78-5def-4c71-a4c9-bb694723c77e",
        "cursor": {
          "ref": "2a47c798-412a-4a6e-8429-6dfc26d27f5d",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "b661e2a8-a55d-4226-902f-2eec1c48dca9"
        },
        "item": {
          "id": "01fc8d78-5def-4c71-a4c9-bb694723c77e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b0ef2822-8d2a-45fb-a37a-f976719dfae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec3ebe72-e3a1-4e3f-900a-d67ef0efa5a1",
        "cursor": {
          "ref": "c590cfc2-6c49-420b-9b46-184009cafa33",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "6b792036-47cc-4672-9d85-27924a12a393"
        },
        "item": {
          "id": "ec3ebe72-e3a1-4e3f-900a-d67ef0efa5a1",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "9f78571d-0b90-4509-82a8-908b20b5f045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "054a9b45-a2f0-4332-b22c-5d3091a51329",
        "cursor": {
          "ref": "afd5eeb8-c2c0-4d2b-8100-803176035e01",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1bb4ddaa-37a7-416e-b728-63944f0ab7a3"
        },
        "item": {
          "id": "054a9b45-a2f0-4332-b22c-5d3091a51329",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "32bbb382-2035-40a9-966c-cf7d1c560d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f6432d-d02a-4bcd-8d32-b8a80e9cabaa",
        "cursor": {
          "ref": "18a0a627-340b-4d60-b6f8-55bf8ad3636b",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "902b036d-0b63-4557-a16d-d6fac6b2fdc0"
        },
        "item": {
          "id": "40f6432d-d02a-4bcd-8d32-b8a80e9cabaa",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "1c9fa504-d8fd-4d9e-8bf5-54426126847d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd464e85-ff34-442e-9102-0e3a8ba61498",
        "cursor": {
          "ref": "fca26089-3450-4d01-b10b-da2f768c52d5",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "1913c11a-78a4-4b24-ba1f-96993d377659"
        },
        "item": {
          "id": "bd464e85-ff34-442e-9102-0e3a8ba61498",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "9e4efa26-2e66-4809-ab29-7b76eb5e8b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b6763d-5226-4b28-adca-b27dcbf4d1e5",
        "cursor": {
          "ref": "90073222-5a0b-4e1e-8c77-1b6a4c1fe028",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4d20c1db-eea6-404d-8550-6428697d6900"
        },
        "item": {
          "id": "b8b6763d-5226-4b28-adca-b27dcbf4d1e5",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d7eee261-97a5-4403-82b2-af38645f5081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973a052f-894d-4ad0-a9ff-d19475457ed9",
        "cursor": {
          "ref": "00a7656b-ea86-4a46-a05f-7849746b316b",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c18a7787-322f-4f75-9143-42fc14cade2d"
        },
        "item": {
          "id": "973a052f-894d-4ad0-a9ff-d19475457ed9",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d1b5571f-a2f5-488a-8112-d41df326ea0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed900e39-f9e8-46ac-9bfd-917ae0dc469d",
        "cursor": {
          "ref": "1d31626c-dfb1-49c9-ab1f-15d59a78e13a",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "4f26faaf-8a66-47ca-bf70-0d8c05e17502"
        },
        "item": {
          "id": "ed900e39-f9e8-46ac-9bfd-917ae0dc469d",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d482086a-c975-4fed-9b37-69d03a36f5d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34bd73d4-86cf-4257-bfd9-411c3aa710f9",
        "cursor": {
          "ref": "b2be2d9d-c8be-44ab-a5a6-eceac7e77ebc",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "fbddbfe9-9e62-4f29-956b-c350968b6fa3"
        },
        "item": {
          "id": "34bd73d4-86cf-4257-bfd9-411c3aa710f9",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "3a951f32-9895-4178-86f1-cc6ec0b23fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca45bb6-4d73-4ef3-8906-d77210c8058f",
        "cursor": {
          "ref": "4ef76235-8150-43af-959d-9d29aba200c8",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "7dccae1d-9f71-4589-90e6-8e2a3826aff0"
        },
        "item": {
          "id": "bca45bb6-4d73-4ef3-8906-d77210c8058f",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8d99cb9a-1888-449b-bbb0-d296bf641609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6c58fb-7f15-4b32-b70d-991625cc5412",
        "cursor": {
          "ref": "6b96ee9f-b8bf-47bb-bc01-8b0c342cfc81",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "43cb3960-99f5-4d26-899c-4caca5fb345a"
        },
        "item": {
          "id": "ef6c58fb-7f15-4b32-b70d-991625cc5412",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "70d9ee6b-a01c-4f02-833d-9d548046eb3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be85c3cc-3559-486b-a4bb-e790c6fbdc87",
        "cursor": {
          "ref": "c3ccc7ea-9c8c-409a-9c91-5f8baeb9e689",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8aead697-20a8-4497-bfb0-49b3fed6dae3"
        },
        "item": {
          "id": "be85c3cc-3559-486b-a4bb-e790c6fbdc87",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8db03881-74f8-49dc-8d44-80d5025a3c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "457b741f-00a1-4d46-8248-7cdffaa67c0d",
        "cursor": {
          "ref": "4acd162c-e61e-499a-9cc5-b541035bc6a2",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "856b55c4-832b-4a16-9dc4-3701469cac01"
        },
        "item": {
          "id": "457b741f-00a1-4d46-8248-7cdffaa67c0d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2bb90edd-acec-4742-a6b8-72e5646415f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79280755-fb33-41b2-bb3d-373f993f7b42",
        "cursor": {
          "ref": "5258131a-9168-408d-8e0c-b72a2b828617",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ae784de3-e986-4a57-a577-92e9dda6b7cc"
        },
        "item": {
          "id": "79280755-fb33-41b2-bb3d-373f993f7b42",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "d8ab51f4-ba5b-4c5e-a14b-3b58951eb9a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d252281b-ffcf-451e-b02a-dc99222a39ec",
        "cursor": {
          "ref": "b90f6a48-e743-49b6-9d4b-4736a71a754d",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9aa9fee5-faa9-4d66-8093-4350c36cc868"
        },
        "item": {
          "id": "d252281b-ffcf-451e-b02a-dc99222a39ec",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b8cb5db8-0ce5-4a93-94ee-ad71b313f091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d8ed31-38b1-4ffb-8f25-6e97a4db04c4",
        "cursor": {
          "ref": "efbd601c-7c08-4b3e-bb8e-83c941b75dc0",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "cece1db0-1034-43b3-a878-8883ac739480"
        },
        "item": {
          "id": "f0d8ed31-38b1-4ffb-8f25-6e97a4db04c4",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "505db3c6-9677-46a5-82cd-58d3ac8f9ed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75db7d12-4f09-4022-8ab9-e5ba9f983350",
        "cursor": {
          "ref": "9443b3de-71cb-4950-857a-0203ac72fb8d",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "0b27c7ce-e9c2-4421-946a-d24cf914c868"
        },
        "item": {
          "id": "75db7d12-4f09-4022-8ab9-e5ba9f983350",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "4a466339-7636-4e2e-8241-faabbf092b3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8251ad0f-a4a1-4126-91b0-27e75f853d72",
        "cursor": {
          "ref": "45fafca5-08d4-4184-89af-e5b43fc16459",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "3b0891b8-194a-4141-8cc0-e2b31d3dfaa1"
        },
        "item": {
          "id": "8251ad0f-a4a1-4126-91b0-27e75f853d72",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "710c73cf-1482-4e91-b8db-6bb1b72bea99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9013a1-94da-43f1-ac88-b0cf9cd606ab",
        "cursor": {
          "ref": "90c4714a-9f8b-48e3-a87e-6d17a6ddd254",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "26b015ae-e270-4a72-ad0d-f18fb2505dbb"
        },
        "item": {
          "id": "3c9013a1-94da-43f1-ac88-b0cf9cd606ab",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "52d5aa59-7539-4040-9993-a7c09557c498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80cee52a-2202-429e-9b89-5c5c2c2e2f1f",
        "cursor": {
          "ref": "894da72c-6737-4b2b-8ead-b3d6beacb9e5",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "93f0abbd-83b8-48ca-82c3-7921f39fb85e"
        },
        "item": {
          "id": "80cee52a-2202-429e-9b89-5c5c2c2e2f1f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "13201f2d-214c-43b8-ae84-a566079310c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81635591-f585-4779-8c8c-0e3bb0a575b2",
        "cursor": {
          "ref": "036ef311-9653-43ac-97e4-3dc85be8b4d3",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "05d453fe-70d4-44e6-82ff-00e457dcfa19"
        },
        "item": {
          "id": "81635591-f585-4779-8c8c-0e3bb0a575b2",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d1ac7b38-7d08-49f7-be48-6b88f18031ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b4069c-3a4f-43b3-8365-c0cc329275cc",
        "cursor": {
          "ref": "3ae6ed63-18eb-4855-8aa4-abff705c1eee",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "f7b2c6fb-7277-4f8e-a4cd-a4302091f948"
        },
        "item": {
          "id": "91b4069c-3a4f-43b3-8365-c0cc329275cc",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b9b41fa2-3b01-4695-bb93-470c3e933ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb41913-c817-4208-b055-9ad42be76a3e",
        "cursor": {
          "ref": "90663051-df38-4730-ac28-33626e42b038",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "d1a2f1ad-4785-4e89-8c78-f291c2cb2948"
        },
        "item": {
          "id": "6fb41913-c817-4208-b055-9ad42be76a3e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "60307dea-4914-4bed-b608-e5175d8c4705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec07b5c3-ada9-4261-8682-00c6a504d66b",
        "cursor": {
          "ref": "31f5f7d1-88b7-4735-9b25-79600e60178f",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "a6517f69-3371-437b-b0de-9b2ee5d3d555"
        },
        "item": {
          "id": "ec07b5c3-ada9-4261-8682-00c6a504d66b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "b9109de1-2d64-4dec-8b4e-9b8e450cb776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c294ac32-4b0f-43d2-8a50-c79153e5b9aa",
        "cursor": {
          "ref": "deea34d8-2913-4073-b845-874edc120648",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "cb2eac88-2e02-4530-acf0-dbdc6752279f"
        },
        "item": {
          "id": "c294ac32-4b0f-43d2-8a50-c79153e5b9aa",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b941a60e-b926-4be8-8bd3-89ac518afa63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bdd177f-8d3a-4260-8513-2c1d171d5e96",
        "cursor": {
          "ref": "7681a5aa-f043-452a-826d-a5c5fc209303",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "eaba2302-2751-48be-9333-d6bc9d18cd1d"
        },
        "item": {
          "id": "6bdd177f-8d3a-4260-8513-2c1d171d5e96",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3f8f77bc-61df-4948-b342-5bfe6abd13e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b9edd10-7f79-429e-ad78-09eda1717eb2",
        "cursor": {
          "ref": "0d28d2b6-d798-4ac0-abb8-86819a27f585",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "6e7978d8-654e-46a9-ac47-c1ddf5560e57"
        },
        "item": {
          "id": "6b9edd10-7f79-429e-ad78-09eda1717eb2",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3ba6db05-877b-4cf6-bf97-ea1e0676de7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f99ba921-82a2-4b4b-9b44-70a051699566",
        "cursor": {
          "ref": "a86dc884-47c1-42f9-b332-fcaa7dd00116",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "4d5b2173-6c92-41b4-99ec-899bd02f7857"
        },
        "item": {
          "id": "f99ba921-82a2-4b4b-9b44-70a051699566",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "55495d07-8fcd-4639-93bf-1f102d172037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb57d6b-c36d-416d-99db-159547d5c56a",
        "cursor": {
          "ref": "36fe4c67-7d58-431a-bbc1-a5d579f7b90b",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "a3e15bc8-8128-4eda-884d-685672d6c10e"
        },
        "item": {
          "id": "ebb57d6b-c36d-416d-99db-159547d5c56a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "bbe7fb88-064e-4beb-a9fc-65bbbd85462a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b5466f9-a8b8-4cd6-886a-d35550180edc",
        "cursor": {
          "ref": "4d9ee1dd-4914-4c7e-a406-8fc71e4f7a49",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "5732fa1d-7421-4c04-977b-e983c6de47f8"
        },
        "item": {
          "id": "4b5466f9-a8b8-4cd6-886a-d35550180edc",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "3c9bc88e-2a50-4eea-a380-cc1fd44872a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d62d8ad-fdc9-490a-a21e-6275ee3819a5",
        "cursor": {
          "ref": "7c6642eb-1a28-43d9-8135-8aad8c7448ba",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "206b6ec5-1216-4e7c-a0f8-091dc14847d9"
        },
        "item": {
          "id": "8d62d8ad-fdc9-490a-a21e-6275ee3819a5",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "2a1c56db-8515-460c-9fc0-27a804a02cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb5a02d-8e7d-4dd8-99c6-6d26aa8d4560",
        "cursor": {
          "ref": "efa69e71-d56c-4e67-b62e-8a3aab7f6a49",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "34d32929-eee7-4cde-82b7-243ad5c3ec0c"
        },
        "item": {
          "id": "8fb5a02d-8e7d-4dd8-99c6-6d26aa8d4560",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "91aa7759-4c44-4d19-ba48-61c7f28ee31d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69693593-a385-4ee8-bebb-c2b9ad99bc5f",
        "cursor": {
          "ref": "07e38001-7ec3-44ca-b2a4-e6b2f712276c",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "2a703385-3fe0-4fe5-bfb3-4138076415c0"
        },
        "item": {
          "id": "69693593-a385-4ee8-bebb-c2b9ad99bc5f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "7fb7de5a-b5c7-4c1b-94cf-31f98acca62b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a2b25d-447e-4dd9-80df-8fc21300f335",
        "cursor": {
          "ref": "46f94ad1-d488-496b-a77b-f7495659d2d4",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "efce975e-ac38-431a-a27e-a5d79ae7c76c"
        },
        "item": {
          "id": "c4a2b25d-447e-4dd9-80df-8fc21300f335",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "44536fa9-dc19-4d29-af07-bbbdd1c7d525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8cfd780-1e86-412b-a8ef-e59d03a186db",
        "cursor": {
          "ref": "df3f249d-717a-4ffe-876d-67246537e8f4",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "5c0bc683-cb36-47d1-b69c-9c133e208ba9"
        },
        "item": {
          "id": "c8cfd780-1e86-412b-a8ef-e59d03a186db",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "940c807e-d599-4b77-99a1-a0553797e577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c480c707-08d6-4955-a00a-ee57228d69dc",
        "cursor": {
          "ref": "001eb20c-39a2-46c5-b434-67b4e98b141d",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "65611a2c-c8c4-4799-b82c-7496dd312260"
        },
        "item": {
          "id": "c480c707-08d6-4955-a00a-ee57228d69dc",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "2299466f-9d84-42d7-a1a9-67786575cc77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ed4f7b-90c9-42cc-b44f-b2cee723d4e0",
        "cursor": {
          "ref": "3c6e34d3-4243-48c1-b5d7-0b81fdaa8858",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "ffb8a36b-12f4-4cd3-b8a2-622e0655b014"
        },
        "item": {
          "id": "56ed4f7b-90c9-42cc-b44f-b2cee723d4e0",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "da2269a4-be16-43a6-b6fb-5eb2bbe36b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f1f532-cdbb-4a8f-a811-ce40ebd572c6",
        "cursor": {
          "ref": "5925a793-423e-4e77-aa44-113b7a869538",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "d9a98d6d-e83e-498b-919a-2088a748bbf1"
        },
        "item": {
          "id": "93f1f532-cdbb-4a8f-a811-ce40ebd572c6",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "10736f3a-617e-47ae-9be0-840bba5244fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29313578-4e96-4311-9f6a-c7c298606f5c",
        "cursor": {
          "ref": "eb671de0-1f57-43ce-95d6-d5e4dce0e4b1",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "85491ea0-2673-4643-99f8-58a8b58a4b75"
        },
        "item": {
          "id": "29313578-4e96-4311-9f6a-c7c298606f5c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e3373f7e-1941-47bd-855a-abebb3ba33ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65794572-bfeb-4d12-93a5-b18c5d3baa38",
        "cursor": {
          "ref": "a0a4b297-5512-4166-ba91-71e2d5959f2b",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "b44f3e0e-dd5d-48c9-96f1-9db4a2f5eb69"
        },
        "item": {
          "id": "65794572-bfeb-4d12-93a5-b18c5d3baa38",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "51a804a1-a3cc-4069-8365-0b0592614a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb32df2-46de-4d70-bc94-843ccadb69c6",
        "cursor": {
          "ref": "03a86057-897b-461d-9606-409a2ea2f69a",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "fb2ec92f-61c0-40e9-9871-993eb70eca53"
        },
        "item": {
          "id": "1eb32df2-46de-4d70-bc94-843ccadb69c6",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d88ffd79-717d-481c-978c-fbfe00cdec39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6379505-425d-4360-af7b-5945dbbd5801",
        "cursor": {
          "ref": "8d9944d3-e810-4a8a-8038-639d9ce6b8e4",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "c6d61997-c89c-470d-af6f-7460b08ae672"
        },
        "item": {
          "id": "d6379505-425d-4360-af7b-5945dbbd5801",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "3a74eeec-8ea0-4af5-9f44-99aed5a317ca",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e790d08-2a36-46af-89d3-62f065d8a612",
        "cursor": {
          "ref": "1f37d067-d6b9-457a-9d1f-133c800cb067",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "61e31f03-849c-448f-9230-7a74f71e543f"
        },
        "item": {
          "id": "7e790d08-2a36-46af-89d3-62f065d8a612",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "86d3518a-09fd-4529-98db-8d4b44e63df7",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "f21ea047-bd6a-4775-96a0-480e733a945a",
        "cursor": {
          "ref": "1d53e2e9-95ca-45d1-b544-e9031e0c9397",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "b94dfdf4-7a4b-4314-b40d-e2abe92d9325"
        },
        "item": {
          "id": "f21ea047-bd6a-4775-96a0-480e733a945a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f835693e-fd11-4804-b802-d69d4c0fef7e",
          "status": "OK",
          "code": 200,
          "responseTime": 6662,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "74bef2dd-d66d-478f-a472-a443063398b4",
        "cursor": {
          "ref": "702d22bd-e446-4021-825d-8a5371d3a861",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "6f135d7e-20e6-489c-b404-c0ebdf636f2a"
        },
        "item": {
          "id": "74bef2dd-d66d-478f-a472-a443063398b4",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d2fdd6ba-1fb5-4f16-984a-f82716dd2f37",
          "status": "OK",
          "code": 200,
          "responseTime": 2769,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8013d41b-01ef-418b-a144-f74dc0e0b38d",
        "cursor": {
          "ref": "7d580375-c6fc-4910-884a-b7bfcbd08a79",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "f229c854-ce73-4e4e-838d-6bfef8e67d48"
        },
        "item": {
          "id": "8013d41b-01ef-418b-a144-f74dc0e0b38d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "082bbfd0-62a2-4a3c-99e0-1477e43d31de",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8013d41b-01ef-418b-a144-f74dc0e0b38d",
        "cursor": {
          "ref": "7d580375-c6fc-4910-884a-b7bfcbd08a79",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "f229c854-ce73-4e4e-838d-6bfef8e67d48"
        },
        "item": {
          "id": "8013d41b-01ef-418b-a144-f74dc0e0b38d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "082bbfd0-62a2-4a3c-99e0-1477e43d31de",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a097c126-e2de-414f-ac13-09bb496a530d",
        "cursor": {
          "ref": "b03177ba-7bb8-4165-9453-743bbd285480",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "cdedfcef-e645-4931-8832-faa81518438d"
        },
        "item": {
          "id": "a097c126-e2de-414f-ac13-09bb496a530d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9f29cec3-7fa5-40c6-9480-69cdd7ac8153",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20fe872c-2a40-414b-8e7e-21733a4f307f",
        "cursor": {
          "ref": "4e7d303a-e3d4-425a-9b31-f594832ff326",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "0fc597ec-cccb-4c4c-96ef-74cc12c222d2"
        },
        "item": {
          "id": "20fe872c-2a40-414b-8e7e-21733a4f307f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e24d5224-05f3-4517-8804-63ba63e11014",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}